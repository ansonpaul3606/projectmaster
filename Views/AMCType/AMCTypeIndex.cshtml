
@{
    ViewBag.Title = "AMCType";
}


<div class="container-fluid">
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12" id="AMCType-form">

        </div>
    </div>
</div>
@section scripts{

<script type="text/javascript">
    var AMCTypeTransMode = "";
        var validationMessage = {
            'AMCName': {
                'required': 'Please Enter AMC Name',
                'stringonly': 'Invalid AMC Name Entered'
            },
            'AMCShortName': {
                'required': 'Please Enter AMC Short Name',
                'stringonly': 'Invalid AMC Short Name Entered'
            },
    }


        const $formContainer = $('#AMCType-form');

        $(document).ready(function () {
            InitailAMCTypeLoad();
        });

    function InitailAMCTypeLoad() {
        getSessionValue("k3dLJPU+YTPke9cA+/pZfQ==", function (result) {
            AMCTypeTransMode = result;

            @if (ViewBag.PagedAccessRights.UsrrlMsView)
            {
                <text>  loadAMCTypeList(this);</text>
            }
        });
            loadAMCTypeForm();
        }


        function loadAMCTypeForm() {
           // debugger;
            $formContainer.load('@Url.Action("loadAMCTypeForm", "AMCType")', function () {
                let $thisForm = $(this).find('[perfect-class="form"]');
                $thisForm.validate({ messages: validationMessage });
                $thisForm.attr('perfect-onFormSuccess', 'InitailAMCTypeLoad');
            });
        };

                     
        function loadAMCTypeList(ele) {   
            debugger;
            let $sidemenu = $sideMenuOptions.body;
            let $thisForm = $(ele).closest('.testSearchBox');
            let SearchName = $thisForm.find('input').val();
            console.log("GH",SearchName)
            $sideMenuOptions.title.find('h4').text('AMC Type List');
            let pageUrl = '@Url.Action("GetAMCTpeList", "AMCType")';
            $.ajax({
                url: pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name: SearchName, TransMode: AMCTypeTransMode },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {


                    if (ajaxOutput.Process.IsProcess) {
                        console.log('AMCType', ajaxOutput);
                        $sidemenu.find('.jq_sidemenu_title').text("AMCType");


                        $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadAMCTypeList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))

                        let $table = $sidemenu.find('table');
                        $table.dataTable({
                            "serverSide": true,
                            "processing": true,
                            "lengthMenu": [10, 15, 20, 25, 50, 100],
                            "searching": false,
                            "ordering": false,
                            "deferLoading": ajaxOutput.totalrecord,
                            "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,
                            "pageLength": ajaxOutput.pageSize,
                            "recordsFiltered": ajaxOutput.pageSize,

                            "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName, TransMode: AMCTypeTransMode }, tableOptions, $table)
                        });

                    }
                    else {
                        if (ajaxOutput.Process.Status = "NoData") {

                            $sidemenu.find('.jq_sidemenu_title').text("AMCType");

                            $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadAMCTypeList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))



                            let $table = $sidemenu.find('table');
                            $table.dataTable({
                                "serverSide": true,
                                "processing": true,
                                "lengthMenu": [],
                                "searching": false,
                                "ordering": false,
                                "deferLoading": ajaxOutput.totalrecord,
                                "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,
                                "pageLength": ajaxOutput.pageSize,
                                "recordsFiltered": ajaxOutput.pageSize,
                                "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize }, tableOptions, $table)
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }
                    }




                },
                complete: function () {

                }
            });
        }
        function returnajaxPagination(ajaxInfo, tableOptions, tableid) {
            return {
                url: ajaxInfo.apiurl,
                type: "post",
                data: function () {
                    var info = tableid.DataTable().page.info();
                    console.log('RETURN AJAX', info)
                    let input = { pageSize: info.length, pageIndex: info.page };
                    if (ajaxInfo.searchkey) {
                        input["Name"] = ajaxInfo.searchkey;
                    }
                    return input
                },
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (dtajaxOutput) {
                    let table = tableid.DataTable();
                    table.destroy();
                    pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                    tableid.dataTable({
                        "serverSide": true,
                        "processing": true,
                        "lengthMenu": [10, 15, 20, 25, 50, 100],
                        "searching": false,
                        "ordering": false,
                        "deferLoading": dtajaxOutput.totalrecord,
                        "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                        "pageLength": dtajaxOutput.pageSize,
                        "recordsFiltered": dtajaxOutput.pageSize,
                        "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                    })

                },

            }
        }


        var tableOptions = {
            dropdown: {
                buttons: [

                 @if (ViewBag.PagedAccessRights.UsrrlTyView)
                 {
                    <text> { displayName: "View", action: editAMCType },
                    </text>
                  }

                    { type: "divider" },
                @if (ViewBag.PagedAccessRights.UsrrlTyDel)
                  {
                    <text> { displayName: "Delete", action: deleteAMCType },</text>
                  }


                ],
                class: "btn btn-success light sharp"
            },
            onlyShowColumn: ["SlNo", "AMCName", "AMCShortName"],
            hideColumn: ['AMCType', 'SortOrder'],
            rowClickAction: editAMCType,
            renameHeader: { "SlNo": "Sl No.", "AMCName": "Name", "AMCShortName": "Short Name" },
            serialNo: true,
        };



        function editAMCType() {
            //debugger;
            let $thisUser = $(this).closest('tr');
            console.log($thisUser.data());
            let savedData = $thisUser.data('pData');


            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');

            let inputData = { AMCTypeID: savedData.AMCTypeID };
            $('#AMCType-form').empty();
            $.ajax({
                url: '@Url.Action("GetAMCTypeInfo", "AMCType")',
                type: "POST",
                data: JSON.stringify(inputData),
                dataType: "json",
                contentType: "application/json",
                success: function (ajaxOutput) {

                    $('#AMCType-form').load("@Url.Action("loadAMCTypeForm", "AMCType")", function () {
                        $(this).find('[perfect-class=formTitle]').text('update : ' + ajaxOutput.Data[0].AMCName)
                        console.log('Inside load');
                        let $thisForm = $(this).find('[perfect-class="form"]');

                        $thisForm.data({ 'pData': ajaxOutput.Data[0] });

                        $thisForm.find('[name=AMCName]').val(ajaxOutput.Data[0].AMCName),
                            $thisForm.find('[name=AMCShortName]').val(ajaxOutput.Data[0].AMCShortName),
                            $thisForm.find('[name=SortOrder]').val(ajaxOutput.Data[0].SortOrder)
                        //show update button
                        $thisForm.find('button[name=add]').addClass('d-none');
                        $thisForm.find('button[name=update]').removeClass('d-none');

                        $thisForm.attr('perfect-onFormSuccess', 'loadAMCTypeForm');

                        $sideMenuOptions.close();

                    });
                },


            });

        }

        function deleteAMCType() {
             debugger;
            let $row = $(this).closest('tr');

            let Saveddata = $row.data('pData');

            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');

            $.ajax({
                url: "@Url.Action("GetAMCReasonList", "AMCType")",
                type: "GET",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxReasonOutput) {
                    if (ajaxReasonOutput.Process.IsProcess) {

                        let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove " + Saveddata.AMCName + " ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                        var res = ConfirmDialog(confirmationDialogBoxOption);
                        res.then(function (ret) {
                            if (ret) {

                                let inputData = {
                                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                    AMCTypeID: Saveddata.AMCTypeID,
                                    ReasonID: ret
                                };

                                $.ajax({
                                    url: "@Url.Action("DeleteAMCtypeinfo", "AMCType")",
                                    type: "POST",
                                    data: inputData,
                                    contentType: "application/x-www-form-urlencoded; charset=utf-8",
                                    success: function (data) {

                                        if (data.Process.IsProcess) {
                                            let table = $row.closest('table').DataTable()
                                            table.row($row).remove().draw();
                                            $.each(data.Process.Message, function (key, value) {
                                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully' });
                                            });
                                            $('.dataTable tr').removeClass("SelectForDelete");
                                        }
                                        else {
                                            $.each(data.Process.Message, function (key, value) {
                                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                $('.dataTable tr').removeClass("SelectForDelete");
                                            });
                                        }
                                    }
                                });
                            }
                            else {
                                NotificationMessage({ 'message': 'No option selected' });
                            }
                        });
                    }
                }

            });

        }

   
   
</script>
}