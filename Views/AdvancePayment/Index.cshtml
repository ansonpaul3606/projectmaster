
@{
    ViewBag.Title = "Index";
}

<div class="container-fluid">

    <div class="row">
        <div class="col-lg-12" id="AdvancePayment-form">

        </div>
    </div>


</div>

@section scripts{

    <script type="text/javascript">


        const $formContainer = $('#AdvancePayment-form');


        $(document).ready(function () {
            AdvancePaymentInitialLoad();
        });


        var validationMessage = {


            'FK_AllowanceType':
            {
                'required': 'Please select Advance Type'
            },
            'TransDate': {
                'required': 'Please Enter Trans Date',
                'min': jQuery.validator.format('')
            },
            'EffectDate': {
                'required': 'Please Enter Effect Date',
                'min': jQuery.validator.format('')
            },   
            'FK_EMployee': {
                'required': 'Please select Employee'
               
            },
            'SalAdvAmount': {
                'required': 'Please enter a value'

            },
            'SalMonthlyRecAmount': {
                'required': 'Please enter a value'

            },
            'FK_Branch':
            {
                'required': 'Please select Branch'
            },
            'FK_Department':
            {
                'required': 'Please select Department'
            }
        };

        function AdvancePaymentInitialLoad()
        {
             LoadAdvancePaymentAddForm();
            @if (ViewBag.PagedAccessRights.UsrrlStView)
            {
                <text>loadAdvancePaymentList(this);</text>
            }
        }

        function LoadAdvancePaymentAddForm()
           {
             $formContainer.load('@Url.Action("LoadAdvancePayment", "AdvancePayment")?mtd=@ViewBag.mtd', function () {
                 let $thisForm = $(this).find('[perfect-class="form"]');
                 $thisForm.find('[name="TransDate"]').val(moment().format('YYYY-MM-DD'));
                 $thisForm.find('[name="EffectDate"]').val(moment().format('YYYY-MM-DD'));
                 $thisForm.validate({ messages: validationMessage });
                 var today = new Date().toISOString().split('T')[0];
                 document.getElementsByName("TransDate")[0].setAttribute('max', today);
                 //document.getElementsByName("EffectDate")[0].setAttribute('min', today);
                 $thisForm.attr('perfect-onFormSuccess', 'AdvancePaymentInitialLoad');

            });
        };


            
        function loadAdvancePaymentList(ele) {
            debugger
        let $sidemenu = $sideMenuOptions.body;
       
       // let $thisForm = $(ele).closest('.Search-Control');

        let $thisForm = $(ele).closest('.testSearchBox');
        let SearchName = $thisForm.find('input').val();
        //console.log("GH",SearchName)
           // $sideMenuOptions.title.find('h4').text('List');
             $sideMenuOptions.title.find('h4').text('@ViewBag.PageTitles'+' '+'List');
          let pageUrl = '@Url.Action("GetAdvancePaymentList", "AdvancePayment")';
            $.ajax({
                url:pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name: SearchName },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {


                          if (ajaxOutput.Process.IsProcess) {
                              //console.log('ProductType', ajaxOutput);
                              $sidemenu.find('.jq_sidemenu_title').text("AdvancePayment");

                              $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addpricetype-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadAdvancePaymentList(this)"></button></div></div></div></div>', $('<div/>', {class:"col-md-12 table_temp_class"}).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                             // $sidemenu.find('table').dataTable({ paging: true });


                              let $table = $sidemenu.find('table');
                              $table.dataTable({
                                  "serverSide": true,//no change
                                  "processing": true,//-- process text when clicked
                                  //"lengthChange": false,
                                  "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                                  "searching": false,//--no change
                                  "ordering": false,//--sorting
                                  "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                  "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                  "pageLength": ajaxOutput.pageSize,//<----page size
                                  "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                  "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName }, tableOptions, $table)
                              });

                          }
                else {
                              if (ajaxOutput.Process.Status = "NoData") {
                                 
                                  $sidemenu.find('.jq_sidemenu_title').text("AdvancePayment");

                                  $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadAdvancePaymentList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                        // $sidemenu.find('table').dataTable({ paging: true });


                        let $table = $sidemenu.find('table');
                        $table.dataTable({
                            "serverSide": true,//no change
                            "processing": true,//-- process text when clicked
                           // "lengthChange": false,
                           "lengthMenu": [],//---drop down page size
                            "searching": false,//--no change
                            "ordering": false,//--sorting
                            "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                            "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                            "pageLength": ajaxOutput.pageSize,//<----page size
                            "recordsFiltered": ajaxOutput.pageSize,//<---page size

                            "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize }, tableOptions, $table)
                        });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }




            },
            complete: function () {

            }
        });
    }
        function returnajaxPagination(ajaxInfo, tableOptions, tableid) {
            //{ apiurl, pageSize }
            return {
                url: ajaxInfo.apiurl,
                type: "post",
                data: function () {
                    var info = tableid.DataTable().page.info();
                    console.log('RETURN AJAX', info)
                    //return { <antiforgery>:<antiforgery>, length: ajaxInfo.pageSize, page: info.page }
                    let input = { pageSize: info.length, pageIndex: info.page };
                    if (ajaxInfo.searchkey) {
                        input["Name"] = ajaxInfo.searchkey;
                    }
                    return input
                },
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (dtajaxOutput) {
                    // $sideMenuOptions.body.html(pft_table_createtable(dtajaxOutput.Data, tableOptions));
                    let table = tableid.DataTable();
                    table.destroy();
                    pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                    tableid.dataTable({
                        "serverSide": true,
                        "processing": true,
                        //"lengthChange": false,
                        "lengthMenu": [10, 15, 20, 25, 50, 100],
                        "searching": false,
                        "ordering": false,
                        "deferLoading": dtajaxOutput.totalrecord,
                        "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                        "pageLength": dtajaxOutput.pageSize,
                        "recordsFiltered": dtajaxOutput.pageSize,
                        "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                    })

                },

            }
        }



            var tableOptions = {
        dropdown: {
            buttons: [
            
               @if (ViewBag.PagedAccessRights.UsrrlMsView) {
        <text> { displayName: "View", action: editAdvancePayment },</text>
    }

                    { type: "divider" },
     @if (ViewBag.PagedAccessRights.UsrrlMsDel)
             {
                 <text> { displayName: "Delete", action: deleteAdvancePayment },</text>

              }
                ],
            class: "btn btn-success light sharp"
        },

               
                onlyShowColumn: ["SlNo", "EmployeeName", "SalAdvAmount","SalMonthlyRecAmount"],
                hideColumn: [],
                rowClickAction: editAdvancePayment,
        //serialNo: true,
                renameHeader: {
                    "SalAdvAmount": "Advance Amount","SalMonthlyRecAmount":"Monthly Recovery"
                 }

        };


    
     function editAdvancePayment() {

            let $thisUser = $(this).closest('tr');
            console.log($thisUser.data());
         let savedData = $thisUser.data('pData');
         $('.dataTable tr').removeClass("SelectForDelete");
         $(this).closest('tr').addClass('SelectForDelete');

         let inputData = { FK_SalaryAdvancePayment: savedData.ID_SalaryAdvancePayment};
            //dbcall
         $('#LoadAdvancePayment').empty();
                    $.ajax({
                 url: '@Url.Action("GetAdvancePaymentInfo", "AdvancePayment")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                 // headers: { "token_key": "1234" },
                 data: JSON.stringify(inputData),//<---- Input json : data passed to controller
                dataType: "json",
                contentType: "application/json",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                        if (ajaxOutput.Process.IsProcess) {

                            //console.log('>_ Inside GetCountryInfo', ajaxOutput)

                            $sideMenuOptions.close();

                        $formContainer.load("@Url.Action("LoadAdvancePayment", "AdvancePayment")?mtd=@ViewBag.mtd", function () {


                            $(this).find('[perfect-class=formTitle]').text('update : ' + ajaxOutput.Data[0].FK_EMployee)
                            console.log('Inside load');

                            let $thisForm = $(this).find('[perfect-class="form"]');

                            $thisForm.validate({ messages: validationMessage });

                            $thisForm.data({ pData: ajaxOutput.Data[0] }); //setting the pdata value in form for update -id is taking
                            console.log('pData', ajaxOutput.Data[0]);
                            $thisForm.attr('perfect-onFormSuccess', 'AdvancePaymentInitialLoad');

                            $thisForm.find('button[name=add]').addClass('d-none');
                            $thisForm.find('button[name=update]').removeClass('d-none');
                            
                            $thisForm.find('[name=ID_SalaryAdvancePayment]').val(ajaxOutput.Data[0].ID_SalaryAdvancePayment),
                                $thisForm.find('[name="TransDate"]').val(moment(ajaxOutput.Data[0].TransDate).format('YYYY-MM-DD'));
                            $thisForm.find('[name="EffectDate"]').val(moment(ajaxOutput.Data[0].EffectDate).format('YYYY-MM-DD'));
                                $thisForm.find('[name=SalAdvAmount]').val(ajaxOutput.Data[0].SalAdvAmount),
                                $thisForm.find('[name=SalMonthlyRecAmount]').val(ajaxOutput.Data[0].SalMonthlyRecAmount),
                                    $thisForm.find('[name=FK_EMployee]').val(ajaxOutput.Data[0].FK_EMployee),
                                    $thisForm.find('[name=EmployeeName]').val(ajaxOutput.Data[0].EmployeeName),
                                    $thisForm.find('[name=FK_AllowanceType]').val(ajaxOutput.Data[0].FK_AllowanceType).selectpicker('refresh'),

                            $thisForm.find('[name="FK_Branch"]').val(ajaxOutput.Data[0].FK_Branch).selectpicker('refresh'),
                                $thisForm.find('[name="FK_Department"]').val(ajaxOutput.Data[0].FK_Department).selectpicker('refresh'),



                                //$thisForm.find('[name=Sort]').val(ajaxOutput.Data[0].Sort)

                            $sideMenuOptions.close();

                     });
                 }
                 else {
                     //console.log('>_ Inside GetCountryInfo :false')

                     $.each(ajaxOutput.Process.Message, function (key, value) {
                         NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         $('.dataTable tr').removeClass("SelectForDelete");
                     });
                 }
             },

         });

        }



           
        function deleteAdvancePayment() {
             let $row = $(this).closest('tr');
            let Saveddata = $row.data('pData');
        $('.dataTable tr').removeClass("SelectForDelete");
        $(this).closest('tr').addClass('SelectForDelete');

            console.log('Delete function', Saveddata)

     
            //get reason list-

               $.ajax({
                   url: "@Url.Action("GetAdvancePaymentReasonList", "AdvancePayment")",
                   type: "GET",
                  // data: inputReason,
                   contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                   success: function (ajaxReasonOutput) {

                       if (ajaxReasonOutput.Process.IsProcess) {

                           console.log('Inside res ajax', ajaxReasonOutput.Data)


                          // let confirmationDialogBoxOption = { body: "Do you want to remove  ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                           let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove    " + Saveddata.EmployeeName + " ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                           var confirmBoxObj = ConfirmDialog(confirmationDialogBoxOption);

                            confirmBoxObj.then(function (selectedOption) {
                                if (selectedOption) {
                                   //  console.log('customerIndex> delete function:',selectedOption)

                                    let inputData = {
                                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                        ID_SalaryAdvancePayment: Saveddata['ID_SalaryAdvancePayment'],
                                        ReasonID: selectedOption
                                    };
                                    $.ajax({
                                        url: "@Url.Action("DeleteAdvancePaymentInfo", "AdvancePayment")",
                                        type: "POST",
                                        data: inputData,
                                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                        success: function (ajaxOutput) {
                                            if (ajaxOutput.Process.IsProcess) {

                                                let table = $row.closest('table').DataTable()
                                                table.row($row).remove().draw();

                                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully' });
                                                });

                                                //removing a data
                                                $('.dataTable tr').removeClass("SelectForDelete");

                                            }
                                            else {
                                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                    $('.dataTable tr').removeClass("SelectForDelete");
                                                });
                                            }
                                        }
                                    });
                                }
                                else {
                                    NotificationMessage({ 'message': 'No option selected' });
                                }

                            });


                        }
                        else {



                        }
                   }

               });




        };






















    </script>


















































    }