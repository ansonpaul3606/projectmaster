
@{
    ViewBag.Title = "Index";
}

<div class="container-fluid">

    <div class="row">
        <div class="col-lg-12" id="AttendanceMarking-form">

        </div>
    </div>


</div>
@section scripts{

    <script type="text/javascript">


      
        const $formContainer = $('#AttendanceMarking-form');
        $(document).ready(function () {
           AttendanceMarkingInitialLoad();
        });
        var validationMessage = {


        
            'AMKDate': {
                'required': 'Please Enter Date',
                'min': jQuery.validator.format('Please Enter a Valid Date')
            },
           
            'FK_Branch': {
                'required': 'Please select Branch'

            },

            'FK_Department': {
                'required': 'Please select Department'

            }
        };

        function AttendanceMarkingInitialLoad()
    {
      
            fn_AttendanceMarkingInitialLoads();
            @if (ViewBag.PagedAccessRights.UsrrlStView)
            {
                <text>fn_AttendanceMarking_LoadList(this);</text>
            }
        }
       
        function fn_AttendanceMarkingInitialLoads()
        {
             $formContainer.load('@Url.Action("LoadFormAttendanceMarking", "AttendanceMarking")?mtd=@ViewBag.mtd', function () {
                let $thisForm = $(this).find('[perfect-class="form"]');
                 $thisForm.find('[name="AMKDate"]').val(moment().format('YYYY-MM-DD'));
                 $thisForm.validate({ messages: validationMessage });
                 var today = new Date().toISOString().split('T')[0];
                 document.getElementsByName("AMKDate")[0].setAttribute('max', today);


                 $thisForm.attr('perfect-onFormSuccess', 'AttendanceMarkingInitialLoad');
                 $("#EmployeeDetails").hide();

            });
        }

            
        function fn_AttendanceMarking_LoadList(ele) {
            debugger

        let $sidemenu = $sideMenuOptions.body;
       
      

        let $thisForm = $(ele).closest('.testSearchBox');
        let SearchName = $thisForm.find('input').val();
        //console.log("GH",SearchName)
            $sideMenuOptions.title.find('h4').text('@ViewBag.PageTitles'+" List");
          let pageUrl = '@Url.Action("GetAttendanceMarkingList", "AttendanceMarking")';
            $.ajax({
                url:pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name: SearchName },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {

                    debugger
                          if (ajaxOutput.Process.IsProcess) {
                              //console.log('ProductRateSettings', ajaxOutput);
                              $sidemenu.find('.jq_sidemenu_title').text("AttendanceMarking");

                              $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="fn_AttendanceMarking_LoadList(this)"></button></div></div></div></div>', $('<div/>', {class:"col-md-12 table_temp_class"}).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                             // $sidemenu.find('table').dataTable({ paging: true });


                              let $table = $sidemenu.find('table');
                              $table.dataTable({
                                  "serverSide": true,//no change
                                  "processing": true,//-- process text when clicked
                                  //"lengthChange": false,
                                  "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                                  "searching": false,//--no change
                                  "ordering": false,//--sorting
                                  "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                  "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                  "pageLength": ajaxOutput.pageSize,//<----page size
                                  "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                  "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName }, tableOptions, $table)
                              });

                          }
                else {
                              if (ajaxOutput.Process.Status = "NoData") {
                                 
                                  $sidemenu.find('.jq_sidemenu_title').text("AttendanceMarking");

                                  $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="fn_AttendanceMarking_LoadList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                        // $sidemenu.find('table').dataTable({ paging: true });


                        let $table = $sidemenu.find('table');
                        $table.dataTable({
                            "serverSide": true,//no change
                            "processing": true,//-- process text when clicked
                           // "lengthChange": false,
                           "lengthMenu": [0],//---drop down page size
                            "searching": false,//--no change
                            "ordering": false,//--sorting
                            "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                            "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                            "pageLength": ajaxOutput.pageSize,//<----page size
                            "recordsFiltered": ajaxOutput.pageSize,//<---page size

                            "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize }, tableOptions, $table)
                        });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }




            },
            complete: function () {

            }
        });
        }
         function returnajaxPagination(ajaxInfo, tableOptions, tableid) {
            //{ apiurl, pageSize }
            return {
                url: ajaxInfo.apiurl,
                type: "post",
                data: function () {
                    var info = tableid.DataTable().page.info();
                    console.log('RETURN AJAX', info)
                    //return { <antiforgery>:<antiforgery>, length: ajaxInfo.pageSize, page: info.page }
                    let input = { pageSize: info.length, pageIndex: info.page };
                    if (ajaxInfo.searchkey) {
                        input["Name"] = ajaxInfo.searchkey;
                    }
                    return input
                },
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (dtajaxOutput) {
                    // $sideMenuOptions.body.html(pft_table_createtable(dtajaxOutput.Data, tableOptions));
                    let table = tableid.DataTable();
                    table.destroy();
                    pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                    tableid.dataTable({
                        "serverSide": true,
                        "processing": true,
                        //"lengthChange": false,
                        "lengthMenu": [10, 15, 20, 25, 50, 100],
                        "searching": false,
                        "ordering": false,
                        "deferLoading": dtajaxOutput.totalrecord,
                        "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                        "pageLength": dtajaxOutput.pageSize,
                        "recordsFiltered": dtajaxOutput.pageSize,
                        "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                    })

                },

            }
        }


            var tableOptions = {
            dropdown: {
                buttons: [
                  @if (ViewBag.PagedAccessRights.UsrrlStView)
                   {
                     <text> { displayName: "View", action: editAttendanceMarking },</text>
                   }
                    { type: "divider" },
                   @if (ViewBag.PagedAccessRights.UsrrlStDel)
                    {
                     <text>{ displayName: "Delete", action: deleteAttendanceMarking },</text>
                    }
                ],
                class: "btn btn-success light sharp"
                }, 
                
                onlyShowColumn: ["SlNo", "AttDate", "BranchName","DepartmentName"],
        hideColumn: [],
               rowClickAction:editAttendanceMarking ,
                isDateType: ["AttDate"],
                renameHeader: {
                    "AttDate": "Date", "BranchName": "Branch","DepartmentName":"Department"}

    };
        function editAttendanceMarking()
        {          
            let $thisMenu = $(this).closest('tr');
            let savedData = $thisMenu.data('pData');
           
            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');            

            let inputData =
            {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                FK_Department: savedData.FK_Department,
                FK_Branch: savedData.FK_Branch,
                AMKDate: moment(savedData.AttDate).format('DD-MM-YYYY'),
            };

            $.ajax({
                url: '@Url.Action("GetAttendanceMarkingInfo", "AttendanceMarking")',
                type: "POST",
                data: inputData,
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                success: function (ajaxOutput) {
                    if (ajaxOutput) {
                        debugger

                        $formContainer.load('@Url.Action("LoadFormAttendanceMarking", "AttendanceMarking")', function () {
                            $(this).find('[perfect-class=formTitle]').text('update')
                            let $thisForm = $(this).find('[perfect-class="form"]');
                            $thisForm.validate({ messages: validationMessage });
                            $thisForm.find('[name=ID_EmployeeAttendanceDetails]').val(ajaxOutput.mptableInfo.Data[0].ID_EmployeeAttendanceDetails);
                            $thisForm.find('[name="AMKDate"]').val(moment(ajaxOutput.mptableInfo.Data[0].AttDate).format('YYYY-MM-DD'));
                            $thisForm.find('[name=FK_Branch]').val(ajaxOutput.mptableInfo.Data[0].FK_Branch);
                            $thisForm.find('[name=FK_Department]').val(ajaxOutput.mptableInfo.Data[0].FK_Department);
                            $TicketHtml = '';
                            if (ajaxOutput.subtable.Process.IsProcess) {
                                var $ProductHtml = '';
                                //let options = ''
                                //$.each(ajaxOutput.subtable, function (i, value) {                                   
                                //    options += '<option value=0>Please Select</option>'
                                //    options += '<option value=1>FN</option>'
                                //    options += '<option value=2>AN</option></td>';
                                //});
                                //let $dropdownservice = '<select class="form-control"name="selector"id="selector">' + options + '</select>';


                                //bindajaxout = ajaxOutput;
                                //if (ajaxOutput.subtable.Process.IsProcess) {

                                //    let subtable1 = ajaxOutput.subtable.Data;
                                //    console.log('AJAX OTHER CHG OUTTPUT>', ajaxOutput.subtable.Data);
                                //    subtablelst = [];
                                //    subtablelst = subtablest.concat(subtable1);
                                //    console.log('OTH INFOT>', subtablelst);
                                //    $thisForm.data({ prtothchgData: subtablelst });
                                //}

                                

                              
                               
                                if (ajaxOutput.subtable.Data != null) {
                                 
                                    $('#EmployeeDetailsTbody').empty();
                                    if (ajaxOutput.subtable.Data.length > 0) {                                      
                                        $.each(ajaxOutput.subtable.Data, function (i, value) {  
                                            let options = ''
                                            options += '<option value=0>Please Select</option>'
                                            options += '<option value=1' + (value.PartialStatus==1?" selected":"")+'>FN</option>'
                                            options += '<option value=2' + (value.PartialStatus == 2 ? " selected" : "") +'>AN</option></td>';
                                            let $dropdownservice = '<select class="form-control"name="selector"id="selector"' + (value.Partial ? "" : "disabled='disabled'") +'>' + options + '</select>';

                                            let rowCount = (i + 1);
                                            $ProductHtml += "<tr id=" + rowCount + ">";
                                            $ProductHtml += "<td class='jq_employee_ID_Employee' Style='Display:none'>" + value.EmployeeID + "</td>";
                                            $ProductHtml += "<td >" + value.EmployeeCode + "</td>";
                                            $ProductHtml += "<td >" + value.Employee + "</td>";
                                            $ProductHtml += "<td >" + value.Designation + "</td>";   
                                            $ProductHtml += "<td class='jq_Employeepresent_td'><input  id='chk1' type='checkbox' " + (value.Present ? "checked" : "") + " onchange='fn_checkPresentOrNot(this)'/></td>"
                                            $ProductHtml += "<td class='jq_Employeesite_td'><input  id='chk2' type='checkbox'" + (value.Site?"checked":"") + "/></td>";
                                            $ProductHtml += "<td class='jq_Employeepartial_td'><input  id='chk3' type='checkbox'" + (value.Partial ? "checked" : "") + " onchange='dropdownenable(this)'/></td>";
                                            $ProductHtml += "<td class='jq_Employeeoption_td' id='dropdown' style='width: 130px;'>" + $dropdownservice + "</td>";
                                            $ProductHtml += "</tr>";
                                        });
                                    }
                                }
                                else {
                                    $('#EmployeeDetailsTbody').empty();
                                    $ProductHtml += "<tr id='0'><td colspan='8' style'text-align:center'>No Records..</td></tr>";
                                }

                                $("#EmployeeDetails").show();
                                $('#EmployeeDetailsTbody').append($ProductHtml);

                            }

                            $("#EmployeeDetails").show();
                            $('#EmployeeDetailsTbody').append(ajaxOutput.subtable);
                            $sideMenuOptions.close();
                            $thisForm.attr('perfect-onFormSuccess', 'AttendanceMarkingInitialLoad');
                            $thisForm.find('button[name=add]').addClass('d-none');
                            $thisForm.find('button[name=update]').removeClass('d-none');

                        });
                    }
                    else {
                        $.each(ajaxOutput.Process, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            $('.dataTable tr').removeClass("SelectForDelete");
                        });
                    }

                }
                });

        }
        
        
        function deleteAttendanceMarking()
        {
            $sideMenuOptions.close();
             let $row = $(this).closest('tr');
            let Saveddata = $row.data('pData');

            console.log('saved', Saveddata)
          
            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');
            debugger
               $.ajax({
                   url: "@Url.Action("GetAttendanceDeleteReasonList", "AttendanceMarking")",
                   type: "GET",
                   contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                   success: function (ajaxReasonOutput) {
                       if (ajaxReasonOutput.Process.IsProcess) {
                           let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove this record  ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                           var confirmBoxObj = ConfirmDialog(confirmationDialogBoxOption);
                            confirmBoxObj.then(function (selectedOption) {
                                if (selectedOption) {
                                 
                                    let inputData = {
                                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                        FK_Department: Saveddata.FK_Department,
                                        FK_Branch: Saveddata.FK_Branch,
                                        AMKDate: moment(Saveddata.AMKDate).format('DD-MM-YYYY'),
                                        AttDate: moment(Saveddata.AttDate).format('DD-MM-YYYY'),
                                        ReasonID: selectedOption
                                    };
                                    console.log('io',inputData)

                                    $.ajax({
                                        url: "@Url.Action("DeleteAttendanceMarking", "AttendanceMarking")",
                                        type: "POST",
                                        data: inputData,
                                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                        success: function (ajaxOutput) {
                                            if (ajaxOutput.Process.IsProcess) {
                                                let table = $row.closest('table').DataTable()
                                                table.row($row).remove().draw();

                                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully' });
                                                });
                                                AttendanceMarkingInitialLoad();
                                                $('.dataTable tr').removeClass("SelectForDelete");
                                            }
                                            else {
                                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                    $('.dataTable tr').removeClass("SelectForDelete");
                                                });
                                            }
                                        }
                                    });
                                }
                                else {
                                    NotificationMessage({'message': 'No option selected' });
                                }
                            });
                        }
                        else {
                        }
                   }

               });
        };

    </script>
}

