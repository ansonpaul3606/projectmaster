
@{
    ViewBag.Title = "Company";
}





<div class="container-fluid">
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12" id="company-form">

        </div>
    </div>
</div>
@section scripts{


<script type="text/javascript">

         const $formContainer = $('#company-form');

        $(document).ready(function () {
            companyInitialLoad();
             @if (ViewBag.PagedAccessRights.UsrrlMsView)
              {
                 <text> loadcompanyList(this); </text>
              }

        });

        var validationMessage = {


            'Name': {
                'required': 'Please Enter Name',
                'maxlength': jQuery.validator.format('Name should be less than {0} characters'),
               // 'specialCharName': 'All Special Character Are not Allowed'
            },

            'ShortName': {
                'required': 'Please Enter a Short Name',
                'maxlength': jQuery.validator.format(' Name should be less than {0} characters'),
                'alphanumeric': 'Special characters are not allowed in short name'
            },

            'Address1': {
                'required': 'Please Enter Address ',
                'maxlength': jQuery.validator.format('Address 1 should be less than {0} characters'),
                //'specialCharName': 'All Special Character Are not Allowed'
            },


            'Code': {
                'required': 'Please Enter a Code',
                'maxlength': jQuery.validator.format(' Name should be less than {0} characters'),
                'alphanumeric': 'Special characters are not allowed in Code'
            },
            'RegisterNo': {
                'required': 'Please Enter Register Number',
                //'maxlength': jQuery.validator.format('Branch name should be less than {0} characters'),
                'specialChar': 'Special characters are not allowed in Register Number '
            },

            'ContactPerson': {
                'required': 'Please Enter a Contact Person Name',
                'maxlength': jQuery.validator.format(' Name should be less than {0} characters'),
                //'specialCharName': 'All Special Character Are not Allowed'

            },
            'ContactPMobile': {
                'required': 'Please Enter  Contact Person Mobile Number',
                'anyphonenumber': 'Invalid Mobile Number',
                'minlength': jQuery.validator.format('Mobile should be more than {0} characters'),
                'maxlength': jQuery.validator.format('Mobile should be less than {0} characters')
            },

            'ContactPEmail': {
                'required': 'Please Enter Contact Person Email',
                'emailRegex': 'Please Enter Valid Email'
            },


            'Mobile': {
                'required': 'Please Enter  Mobile Number',
                'anyphonenumber': 'Invalid Mobile Number',
                'minlength': jQuery.validator.format(' Mobile should be more than {0} characters'),
                'maxlength': jQuery.validator.format(' Mobile should be less than {0} characters')
            },

            'OrganizationID': {
                'required': 'Please Select a Organization',
                'digits': 'Invalid Organization selected'
            },
            'CompCategory': {
                'required': 'Please Select a Category',
                'digits': 'Invalid  Category selected'
            },

            'CountryID': {
                'required': 'Please Select a Country',
                'digits': 'Invalid Country selected'
            },
            'StatesID': {
                'required': 'Please Select a State',
                'digits': 'Invalid State selected'
            },
            'DistrictID': {
                'required': 'Please Select a District',
                'digits': 'Invalid District selected'
            },
            'Organization': {
                'required': 'Please Select a Organization',
              
            },
            'PlaceID': {
                'required': 'Please Select a Place',
                'digits': 'Invalid Place selected'
            },

            'PostID': {
                'required': 'Please Select a Post',
                'digits': 'Invalid Post selected'
            },

            'Email': {
                'required': 'Please Enter Email',
                'emailRegex': 'Please Enter Valid Email'
            },
            'StartDate': {
                'required': 'Please Enter Start Date',
                'date': 'Invalid Date',
                 'max': jQuery.validator.format('Please Enter a Valid Date')
            },
            'Softinstalled': {
                'required': 'Please Enter Soft ware Installed Date',
                'date': 'Invalid Date',
                'max': jQuery.validator.format('Please Enter a Valid Date')
            },
        };

         function companyInitialLoad() {
            loadcompanyList(this);
             loadcompanyAddForm();
        }


           // Fucntion to load Company ADD form
         function loadcompanyAddForm() {

            $formContainer.load('@Url.Action("LoadFormCompany", "Company")?mtd=@ViewBag.mtd', function () {

                let $thisForm = $(this).find('[perfect-class="form"]');
                // ... Custom validation message
                $thisForm.validate({ messages: validationMessage });
                // ... Custom validation message
                //Getimgcntrl(this);
       
                $thisForm.attr('perfect-onFormSuccess', 'companyInitialLoad');
            });

         };

         //side menu list showing


    function loadcompanyList(ele) {
        let $sidemenu = $sideMenuOptions.body;
       
       // let $thisForm = $(ele).closest('.Search-Control');

        let $thisForm = $(ele).closest('.testSearchBox');
        let SearchName = $thisForm.find('input').val();
        console.log("GH",SearchName)
         $sideMenuOptions.title.find('h4').text('@ViewBag.PageTitle'+' '+'List');
          let pageUrl = '@Url.Action("GetCompanyList", "Company")';
            $.ajax({
                url:pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name: SearchName },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {


                          if (ajaxOutput.Process.IsProcess) {
                              console.log('Company', ajaxOutput);
                              $sidemenu.find('.jq_sidemenu_title').text("Company");

                              $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadcompanyList(this)"></button></div></div></div></div>', $('<div/>', {class:"col-md-12 table_temp_class"}).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                             // $sidemenu.find('table').dataTable({ paging: true });


                              let $table = $sidemenu.find('table');
                              $table.dataTable({
                                  "serverSide": true,//no change
                                  "processing": true,//-- process text when clicked
                                  //"lengthChange": false,
                                  "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                                  "searching": false,//--no change
                                  "ordering": false,//--sorting
                                  "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                  "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                  "pageLength": ajaxOutput.pageSize,//<----page size
                                  "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                  "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName }, tableOptions, $table)
                              });

                          }
                else {
                              if (ajaxOutput.Process.Status = "NoData") {
                                 
                                  $sidemenu.find('.jq_sidemenu_title').text("Company");

                                  $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadcompanyList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                        // $sidemenu.find('table').dataTable({ paging: true });


                        let $table = $sidemenu.find('table');
                        $table.dataTable({
                            "serverSide": true,//no change
                            "processing": true,//-- process text when clicked
                           // "lengthChange": false,
                           "lengthMenu": [0],//---drop down page size
                            "searching": false,//--no change
                            "ordering": false,//--sorting
                            "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                            "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                            "pageLength": ajaxOutput.pageSize,//<----page size
                            "recordsFiltered": ajaxOutput.pageSize,//<---page size

                            "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize }, tableOptions, $table)
                        });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }




            },
            complete: function () {

            }
        });
    }
    function returnajaxPagination(ajaxInfo, tableOptions, tableid) {
        //{ apiurl, pageSize }
        return {
            url: ajaxInfo.apiurl,
            type: "post",
            data: function () {
                var info = tableid.DataTable().page.info();
                console.log('RETURN AJAX', info)
                //return { <antiforgery>:<antiforgery>, length: ajaxInfo.pageSize, page: info.page }
                let input = { pageSize: info.length, pageIndex: info.page };
                if (ajaxInfo.searchkey) {
                    input["Name"] = ajaxInfo.searchkey;
                }
                return input
            },
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (dtajaxOutput) {
                // $sideMenuOptions.body.html(pft_table_createtable(dtajaxOutput.Data, tableOptions));
                let table = tableid.DataTable();
                table.destroy();
                pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                tableid.dataTable({
                    "serverSide": true,
                    "processing": true,
                    //"lengthChange": false,
                    "lengthMenu": [10, 15, 20, 25, 50, 100],
                    "searching": false,
                    "ordering": false,
                    "deferLoading": dtajaxOutput.totalrecord,
                    "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                    "pageLength": dtajaxOutput.pageSize,
                    "recordsFiltered": dtajaxOutput.pageSize,
                    "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                })

            },

        }
    }
       
        
//side table view

        var tableOptions = {
            dropdown: {
                buttons: [
                   @if (ViewBag.PagedAccessRights.UsrrlMsView)
                   {
                    <text>  { displayName: "View", action: editCompany },</text>
                   }

                    { type: "divider" },
                 @if (ViewBag.PagedAccessRights.UsrrlMsDel)
                 {
                     <text> { displayName: "Delete", action: deleteCompany},</text>

                 }
                   
                ],
                class: "btn btn-success light sharp"
            },
            onlyShowColumn: ["SlNo","Name","Phone", "Email"],
            hideColumn: [],
            rowClickAction: editCompany,
            //serialNo: true,
            
            renameHeader: { "SlNo":"SL NO","CompName": "Name", "CompPhone": "Phone","CompEmail":"Email"}
        };

//edit Company

         function editCompany() {
             
             
             let $thisRow = $(this).closest('tr');
            
             let Saveddata = $thisRow.data('pData');


             $('.dataTable tr').removeClass("SelectForDelete");
             $(this).closest('tr').addClass('SelectForDelete');
           
             let inputData = {
                 __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                 CompanyID: Saveddata.CompanyID

             };

             $.ajax({
                 url: '@Url.Action("GetCompanyInfoByID", "Company")',
                 type: "POST",

                 data: inputData,
                 dataType: "json",
                 contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                 success: function (ajaxOutput) {
                    
                         $sideMenuOptions.close();

                     $formContainer.load("@Url.Action("LoadFormCompany", "Company")?mtd=@ViewBag.mtd'", function () {
                      
                             let $thisForm = $(this).find('[perfect-class="form"]');
                             $(this).find('[perfect-class=formTitle]').text('update : ' + ajaxOutput.companyInfo.Data[0].Name)
                             console.log('Inside load');

                             

                             // ... Custom validation message
                             $thisForm.validate({ messages: validationMessage });
                // ... Custom validation message
                             if (ajaxOutput.companyInfo.Process.IsProcess) {

                             $thisForm.data({ pData: ajaxOutput.companyInfo.Data[0] }); //setting the pdata value in form for update -id is taking

                             $thisForm.attr('perfect-onFormSuccess', 'companyInitialLoad');

                             $thisForm.find('button[name=add]').addClass('d-none');
                             $thisForm.find('button[name=update]').removeClass('d-none');
                                 $thisForm.find('[name="Code"]').val(ajaxOutput.companyInfo.Data[0].Code);
                                 $thisForm.find('[name="Name"]').val(ajaxOutput.companyInfo.Data[0].Name);
                                 $thisForm.find('[name="ShortName"]').val(ajaxOutput.companyInfo.Data[0].ShortName);
                                 $thisForm.find('[name="ContactPerson"]').val(ajaxOutput.companyInfo.Data[0].ContactPerson);
                                 $thisForm.find('[name="ContactPMobile"]').val(ajaxOutput.companyInfo.Data[0].ContactPMobile);
                                 $thisForm.find('[name="ContactPEmail"]').val(ajaxOutput.companyInfo.Data[0].ContactPEmail);
                                 $thisForm.find('[name="RegisterNo"]').val(ajaxOutput.companyInfo.Data[0].RegisterNo);
                                 $thisForm.find('[name="Address1"]').val(ajaxOutput.companyInfo.Data[0].Address1);
                                 $thisForm.find('[name="Address2"]').val(ajaxOutput.companyInfo.Data[0].Address2);
                                 $thisForm.find('[name="Address3"]').val(ajaxOutput.companyInfo.Data[0].Address3);
                                 $thisForm.find('[name="Email"]').val(ajaxOutput.companyInfo.Data[0].Email);
                                 $thisForm.find('[name="WebSite"]').val(ajaxOutput.companyInfo.Data[0].WebSite);
                                 $thisForm.find('[name="Mobile"]').val(ajaxOutput.companyInfo.Data[0].Mobile);
                                 $thisForm.find('[name="Phone"]').val(ajaxOutput.companyInfo.Data[0].Phone);
                                 $thisForm.find('[name="Fax"]').val(ajaxOutput.companyInfo.Data[0].Fax);
                                 $thisForm.find('[name="CompanyID"]').val(ajaxOutput.companyInfo.Data[0]['CompanyID']);
                                 $thisForm.find('[name="StartDate"]').val(moment(ajaxOutput.companyInfo.Data[0].StartDate).format('YYYY-MM-DD'));
                                 $thisForm.find('[name="Softinstalled"]').val(moment(ajaxOutput.companyInfo.Data[0].Softinstalled).format('YYYY-MM-DD'));
                                 $thisForm.find('[name="SocialMediaWebsite1"]').val(ajaxOutput.companyInfo.Data[0].SocialMediaWebsite1);
                                 $thisForm.find('[name="SocialMediaWebsite2"]').val(ajaxOutput.companyInfo.Data[0].SocialMediaWebsite2);
                                 $thisForm.find('[name="SortOrder"]').val(ajaxOutput.companyInfo.Data[0].SortOrder);
                                 $thisForm.find('[name="Organization"]').val(ajaxOutput.companyInfo.Data[0].Organization);

                                 if (ajaxOutput.companyInfo.Data[0].OrganizationID <= 0) {
                                     $thisForm.find('[name="OrganizationID"]').val('');
                                 }
                                 else {
                                     $thisForm.find('[name="OrganizationID"]').val(ajaxOutput.companyInfo.Data[0].OrganizationID);
                                 }
                                 if (ajaxOutput.companyInfo.Data[0].CountryID <= 0) {
                                     $thisForm.find('[name="CountryID"]').val('');
                                 }
                                 else {
                                     $thisForm.find('[name="CountryID"]').val(ajaxOutput.companyInfo.Data[0].CountryID);
                                 }
                                 $thisForm.find('[name="Country"]').val(ajaxOutput.companyInfo.Data[0].Country);

                                 if (ajaxOutput.companyInfo.Data[0].StatesID <= 0) {
                                     $thisForm.find('[name="States"]').val('');
                                 }
                                 else {
                                     $thisForm.find('[name="StatesID"]').val(ajaxOutput.companyInfo.Data[0].StatesID);
                                 }
                                 $thisForm.find('[name="States"]').val(ajaxOutput.companyInfo.Data[0].States);

                                 if (ajaxOutput.companyInfo.Data[0].DistrictID <= 0) {
                                     $thisForm.find('[name="DistrictID"]').val('');
                                 }
                                 else {
                                     $thisForm.find('[name="DistrictID"]').val(ajaxOutput.companyInfo.Data[0].DistrictID);
                                 }
                               
                                 $thisForm.find('[name="District"]').val(ajaxOutput.companyInfo.Data[0].District);

                                 $thisForm.find('[name="PinCode"]').val(ajaxOutput.companyInfo.Data[0].PinCode);
                                 $thisForm.find('[name="Area"]').val(ajaxOutput.companyInfo.Data[0].Area);
                                 $thisForm.find('[name="AreaID"]').val(ajaxOutput.companyInfo.Data[0].AreaID);
                                 $thisForm.find('[name="Post"]').val(ajaxOutput.companyInfo.Data[0].Post);
                                 $thisForm.find('[name="PostID"]').val(ajaxOutput.companyInfo.Data[0].PostID);
                                 $thisForm.find('[name="Place"]').val(ajaxOutput.companyInfo.Data[0].Place);
                                 $thisForm.find('[name="PlaceID"]').val(ajaxOutput.companyInfo.Data[0].PlaceID); 
                                 $thisForm.find('[name="CompCategory"]').val(ajaxOutput.companyInfo.Data[0].CompCategory).selectpicker('refresh');
                                 $thisForm.find('[name="SMSShortname"]').val(ajaxOutput.companyInfo.Data[0].SMSShortname);
                             }
                             if (ajaxOutput.subimg.Process.IsProcess) {

                       
                                   Getsubimg(ajaxOutput.subimg.Data);
                                   ImageLoad(ajaxOutput.subimg.Data);
                              
                         }
                         
                      
                         });
                 },

             });

         }

    
           // Function to delete Company

            function deleteCompany() {
            let $row = $(this).closest('tr');
            let Saveddata = $row.data('pData');
                console.log("Saved data", Saveddata);

                $('.dataTable tr').removeClass("SelectForDelete");
                $(this).closest('tr').addClass('SelectForDelete');

                $.ajax({
                    url: "@Url.Action("GetCompanyDeleteReasonList", "Company")",
                    type: "GET",
                    // data: inputReason,
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                    success: function (ajaxReasonOutput) {
                        if (ajaxReasonOutput.Process.IsProcess) {

                            console.log('Inside res ajax', ajaxReasonOutput.Data)


                            //delete code

                            let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove  " + Saveddata.Name + " ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };

                            var res = ConfirmDialog(confirmationDialogBoxOption);



                            res.then(function (ret) {
                                if (ret) {

                                    let inputData = {
                                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                        ID_Company: Saveddata.CompanyID,
                                        ReasonID: ret
                                    };


                                    $.ajax({
                                        url: "@Url.Action("DeleteCompanyInfo", "Company")",
                                        type: "POST",
                                        data: inputData,
                                        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                                        success: function (ajaxOutput) {

                                            if (ajaxOutput.Process.IsProcess) {

                                                $.each(ajaxOutput.Process.Message, function (key, value) {

                                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully' });
                                                });

                                                //removing a data
                                                let table = $row.closest('table').DataTable()
                                                table.row($row).remove().draw();
                                                $('.dataTable tr').removeClass("SelectForDelete");
                                            }
                                            else {
                                                $.each(ajaxOutput.Process.Message, function (key, value) {

                                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                    $('.dataTable tr').removeClass("SelectForDelete");
                                                });
                                            }

                                        }
                                    });


                                }
                                else {

                                    NotificationMessage({ 'message': 'No option selected' });
                                }

                            });

                            //-----delete code

                        }
                    }
                    });

        };






</script>

}



