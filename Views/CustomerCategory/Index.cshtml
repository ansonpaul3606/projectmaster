
@{
    ViewBag.Title = "Customer Category";
   // Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="container-fluid">
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12" id="customerCategory-form">

        </div>
    </div>


</div>                                                                                                                                                                        

@section scripts{
    
<script type="text/javascript">

        //--- Form
    const $formContainer = $('#customerCategory-form');
        //--- Common table settings for this page
        var tableOptions = {
            dropdown: {
                buttons: [

                
                
               @if (ViewBag.PagedAccessRights.UsrrlMsView) {
        <text> { displayName: "View", action: fn_customerCategoryIndex_loadCustomerUpdateForm },</text>
    }

                    { type: "divider" },
     @if (ViewBag.PagedAccessRights.UsrrlMsDel)
             {
                 <text> { displayName: "Delete", action: fn_customerIndex_deleteCustomerCategory },</text>

              }
                 
                ],
                class: "btn btn-success light sharp"
            },
        
            onlyShowColumn: ["SlNo","CustomerCategoryName", "CustomerCategoryShortName"],
            hideColumn: [],
            rowClickAction: fn_customerCategoryIndex_loadCustomerUpdateForm ,
            //serialNo: true,
            renameHeader: {"SlNo":"SL NO", "CustomerCategoryName": "Name", "CustomerCategoryShortName": "ShortName" }
        };


        $(document).ready(function () {
            fn_customercategoryIndex_initialLoad()

    });


    var validationMessage = {
        'CustomerCategoryName': {
            'required': 'Please Enter a Name',
            'maxlength': jQuery.validator.format(' Name should be less than {0} characters'),
            'stringonly': 'Special characters are not allowed in  Name'

        },
        'CustomerCategoryShortName': {
            'required': 'Please Enter a Short Name',
            'maxlength': jQuery.validator.format(' Name should be less than {0} characters'),
            'alphanumeric': 'Special characters are not allowed in short name'
        },


    };

        function fn_customercategoryIndex_initialLoad() {
            fn_customerCategoryIndex_loadCustomerCategoryAddForm();
             @if (ViewBag.PagedAccessRights.UsrrlMsView)
              {
                 <text> fn_customerCategoryIndex_loadCustomer(this); </text>
              }
            

        }

    // Fucntion to load CustomerList


    function fn_customerCategoryIndex_loadCustomer(ele) {
        let $sidemenu = $sideMenuOptions.body;
       
       // let $thisForm = $(ele).closest('.Search-Control');

        let $thisForm = $(ele).closest('.testSearchBox');
        let SearchName = $thisForm.find('input').val();
        console.log("GH",SearchName)
        $sideMenuOptions.title.find('h4').text('Customer Category List');
          let pageUrl = '@Url.Action("GetCustomerCategoryList", "CustomerCategory")';
            $.ajax({
                url:pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name: SearchName },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {


                          if (ajaxOutput.Process.IsProcess) {
                              console.log('CustomerCategory', ajaxOutput);
                              $sidemenu.find('.jq_sidemenu_title').text("CustomerCategory");

                              $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="fn_customerCategoryIndex_loadCustomer(this)"></button></div></div></div></div>', $('<div/>', {class:"col-md-12 table_temp_class"}).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                             // $sidemenu.find('table').dataTable({ paging: true });


                              let $table = $sidemenu.find('table');
                              $table.dataTable({
                                  "serverSide": true,//no change
                                  "processing": true,//-- process text when clicked
                                  //"lengthChange": false,
                                  "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                                  "searching": false,//--no change
                                  "ordering": false,//--sorting
                                  "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                  "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                  "pageLength": ajaxOutput.pageSize,//<----page size
                                  "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                  "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName }, tableOptions, $table)
                              });

                          }
                else {
                              if (ajaxOutput.Process.Status = "NoData") {
                                 
                                  $sidemenu.find('.jq_sidemenu_title').text("CustomerCategory");

                                  $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="fn_customerCategoryIndex_loadCustomer(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                        // $sidemenu.find('table').dataTable({ paging: true });


                        let $table = $sidemenu.find('table');
                        $table.dataTable({
                            "serverSide": true,//no change
                            "processing": true,//-- process text when clicked
                           // "lengthChange": false,
                           "lengthMenu": [],//---drop down page size
                            "searching": false,//--no change
                            "ordering": false,//--sorting
                            "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                            "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                            "pageLength": ajaxOutput.pageSize,//<----page size
                            "recordsFiltered": ajaxOutput.pageSize,//<---page size

                            "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize }, tableOptions, $table)
                        });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }




            },
            complete: function () {

            }
        });
    }
    function returnajaxPagination(ajaxInfo, tableOptions, tableid) {
        //{ apiurl, pageSize }
        return {
            url: ajaxInfo.apiurl,
            type: "post",
            data: function () {
                var info = tableid.DataTable().page.info();
                console.log('RETURN AJAX', info)
                //return { <antiforgery>:<antiforgery>, length: ajaxInfo.pageSize, page: info.page }
                let input = { pageSize: info.length, pageIndex: info.page };
                if (ajaxInfo.searchkey) {
                    input["Name"] = ajaxInfo.searchkey;
                }
                return input
            },
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (dtajaxOutput) {
                // $sideMenuOptions.body.html(pft_table_createtable(dtajaxOutput.Data, tableOptions));
                let table = tableid.DataTable();
                table.destroy();
                pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                tableid.dataTable({
                    "serverSide": true,
                    "processing": true,
                    //"lengthChange": false,
                    "lengthMenu": [10, 15, 20, 25, 50, 100],
                    "searching": false,
                    "ordering": false,
                    "deferLoading": dtajaxOutput.totalrecord,
                    "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                    "pageLength": dtajaxOutput.pageSize,
                    "recordsFiltered": dtajaxOutput.pageSize,
                    "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                })

            },

        }
    }
  

      
// Fucntion to load CustomerCategory ADD form
        function fn_customerCategoryIndex_loadCustomerCategoryAddForm() {

            $formContainer.load('@Url.Action("LoadCustomerCategoryForm", "CustomerCategory")', function () {
                let $thisForm = $(this).find('[perfect-class="form"]');

                $thisForm.validate({ messages: validationMessage });

                $thisForm.attr('perfect-onFormSuccess', 'fn_customercategoryIndex_initialLoad');

                initFunctions($thisForm);
            });

    };


  // Function to load customer Update from
    function fn_customerCategoryIndex_loadCustomerUpdateForm() {

            let $thisRow = $(this).closest('tr');
        let saveddata = $thisRow.data('pData');
        $('.dataTable tr').removeClass("SelectForDelete");
        $(this).closest('tr').addClass('SelectForDelete');

            let inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                ID_CustomerCategory: saveddata.CustomerCategoryID
        };
        console.log('view clicked',saveddata)

            $.ajax({
                url: "@Url.Action("GetCustomerCategoryInfo", "CustomerCategory")",
                type: "POST",
                // headers: { "token_key": "1234" },
                data: inputData,
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxOutput) {

                    if (ajaxOutput.Process.IsProcess) {
                        //process is success
                        $formContainer.load('@Url.Action("LoadCustomerCategoryForm", "CustomerCategory")', function () {

                            $(this).find('[perfect-class=formTitle]').text('update : ' + ajaxOutput.Data[0].CustomerCategoryName)
                            console.log('Inside load');
                            let $thisForm = $(this).find('[perfect-class="form"]');
//initFunctions($thisForm);
                            //console.log('sss', $thisForm)
                            //console.log('sss', ajaxOutput)
                            $thisForm.validate({ messages: validationMessage });
                            $thisForm.data({ pData: ajaxOutput.Data[0] });

                            // Fill fields

                            $thisForm.find('[name="CustomerCategoryName"]').val(ajaxOutput.Data[0]['CustomerCategoryName']);
                            $thisForm.find('[name="CustomerCategoryShortName"]').val(ajaxOutput.Data[0]['CustomerCategoryShortName']);
                           // $thisForm.find('[name="Individual"]').prop('checked', ajaxOutput.Data[0]['Individual']),
                           // $thisForm.find('[name="ChargeEffect"][value="Sales"]').prop('checked', ajaxOutput.Data[0].Sales),
                            $thisForm.find('[name="CustomerCategoryIndividual"]').prop('checked', ajaxOutput.Data[0]['CustomerCategoryIndividual']),
                            $thisForm.find('[name="SortOrder"]').val(ajaxOutput.Data[0]['SortOrder']);


                            // stuff to do after filling data
                            $sideMenuOptions.close();//<---  Close side menu
                            $thisForm.find('button[name=add]').addClass('d-none');//<--- hide add cunsomer button
                            $thisForm.find('button[name=update]').removeClass('d-none');//<--- show update cunsomer button

                            $thisForm.attr('perfect-onFormSuccess', 'fn_customercategoryIndex_initialLoad');

                        });
                    }
                    else {
                        //Error occured
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            $('.dataTable tr').removeClass("SelectForDelete");
                         
                        });
                    }
                }
            });
    };

     function getCustomerTypeDetails(ele) {
         let $sidemenu = $sideMenuOptions.body;
         let $thisForm = $(ele).closest('.testSearchBox');
         let SearchName = $thisForm.find('input').val();
         console.log("j", SearchName);
          let pageUrl = '@Url.Action("GetCustomerCategoryList", "CustomerCategory")';
            $.ajax({
                url:pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name:SearchName },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {


                          if (ajaxOutput.Process.IsProcess) {
                              console.log('Customercategory', ajaxOutput);
                              $sidemenu.find('.jq_sidemenu_title').text("Customer Category");

                              $sidemenu.find('.table_temp_class').html(pft_table_createtable(ajaxOutput.Data, tableOptions));
                             // $sidemenu.find('table').dataTable({ paging: true });


                              let $table = $sidemenu.find('table');
                              $table.dataTable({
                                  "serverSide": true,//no change
                                  "processing": true,//-- process text when clicked
                                  //"lengthChange": false,
                                  "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                                  "searching": false,//--no change
                                  "ordering": false,//--sorting
                                  "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                  "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                  "pageLength": ajaxOutput.pageSize,//<----page size
                                  "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                  "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName }, tableOptions, $table)
                              });

                          }
                          else {
                              
                              if (ajaxOutput.Process.Status = "NoData") {

                                 
                                      $sidemenu.find('.jq_sidemenu_title').text("Customer Category");

                                  $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getCustomerTypeDetails(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                                      // $sidemenu.find('table').dataTable({ paging: true });


                                      let $table = $sidemenu.find('table');
                                      $table.dataTable({
                                          "serverSide": true,//no change
                                          "processing": true,//-- process text when clicked
                                          //"lengthChange": false,
                                          "lengthMenu": [0],//---drop down page size
                                          "searching": false,//--no change
                                          "ordering": false,//--sorting
                                          "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                          "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                          "pageLength": ajaxOutput.pageSize,//<----page size
                                          "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                          "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize }, tableOptions, $table)
                                      });
                              }
                              else {
                                  $.each(ajaxOutput.Process.Message, function (key, value) {
                                      NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                  });
                              }
                          }




                      },
                      complete: function () {

                      }
                  });

    }

// Function to delete customer
        function fn_customerIndex_deleteCustomerCategory() {
             let $row = $(this).closest('tr');

             let Saveddata = $row.data('pData');
            console.log("Saved data", Saveddata);

            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');
                $.ajax({
                    url: "@Url.Action("GetCustomerCategoryDeleteReasonList", "CustomerCategory")",
                    type: "GET",
                    // data: inputReason,
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                    success: function (ajaxReasonOutput) {
                        if (ajaxReasonOutput.Process.IsProcess) {

                            console.log('Inside res ajax', ajaxReasonOutput.Data)


                            //delete code

                            let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove " + Saveddata.CustomerCategoryName + " ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                            var res = ConfirmDialog(confirmationDialogBoxOption);



                            res.then(function (ret) {
                                if (ret) {

                                    let inputData = {
                                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                        ID_CustomerCategory: Saveddata.CustomerCategoryID,
                                        ReasonID: ret
                                    };


                                    $.ajax({
                                        url: "@Url.Action("DeleteCustomerCategory", "CustomerCategory")",
                                        type: "POST",
                                        data: inputData,
                                        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                                        success: function (ajaxOutput) {

                                            if (ajaxOutput.Process.IsProcess) {

                                                $.each(ajaxOutput.Process.Message, function (key, value) {

                                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully'});
                                                });

                                                //removing a data
                                                let table = $row.closest('table').DataTable()
                                                table.row($row).remove().draw();
                                                $('.dataTable tr').removeClass("SelectForDelete");
                                            }
                                            else {
                                                $.each(ajaxOutput.Process.Message, function (key, value) {

                                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                    $('.dataTable tr').removeClass("SelectForDelete");
                                                });
                                            }

                                        }
                                    });


                                }
                                else {

                                    NotificationMessage({ 'message': 'No option selected' });
                                }

                            });

                            //-----delete code

                        }
                    }
                    });
        };




    //functons required:
    //load list
    //load add form
    //load update form
    //delete






</script>

}

