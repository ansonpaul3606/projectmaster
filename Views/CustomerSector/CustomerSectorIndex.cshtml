
@{
    ViewBag.Title = "Customer Sector";
}



<div class="container-fluid">
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12" id="customersector-form">

        </div>
    </div>
</div>
@section scripts{

<script type="text/javascript">

    const $formContainer = $('#customersector-form');

    $(document).ready(function () {
        customersectorInitialLoad();

    });

    var validationMessage = {
        'Name': {
            'required': 'Please Enter a Name',
            'maxlength': jQuery.validator.format(' Name should be less than {0} characters'),
            'stringonly': 'Special characters are not allowed in  Name'

        },
        'ShortName': {
            'required': 'Please Enter a Short Name',
            'maxlength': jQuery.validator.format(' Name should be less than {0} characters'),
           'alphanumeric': 'Special characters are not allowed in short name'
        },
    };

    function customersectorInitialLoad() {
         @if (ViewBag.PagedAccessRights.UsrrlMsView)
              {
                 <text> loadcustomersectorList(this); </text>
              }
        
        loadcustomersectorAddForm();
    }

    function loadcustomersectorAddForm() {

            $formContainer.load('@Url.Action("LoadFormCustomerSector", "CustomerSector")?mtd=@ViewBag.mtd', function () {

                let $thisForm = $(this).find('[perfect-class="form"]');
                $thisForm.validate({messages: validationMessage});

                $thisForm.attr('perfect-onFormSuccess', 'customersectorInitialLoad');
            });

    };


    function loadcustomersectorList(ele) {
        let $sidemenu = $sideMenuOptions.body;
       
       // let $thisForm = $(ele).closest('.Search-Control');

        let $thisForm = $(ele).closest('.testSearchBox');
        let SearchName = $thisForm.find('input').val();
        console.log("GH",SearchName)
      
         $sideMenuOptions.title.find('h4').text('@ViewBag.PageTitles'+' '+'List');

          let pageUrl = '@Url.Action("GetCustomerSectorList", "CustomerSector")';
            $.ajax({
                url:pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name: SearchName },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {


                          if (ajaxOutput.Process.IsProcess) {
                              console.log('CustomerSector', ajaxOutput);
                              $sidemenu.find('.jq_sidemenu_title').text("CustomerSector");

                              $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadcustomersectorList(this)"></button></div></div></div></div>', $('<div/>', {class:"col-md-12 table_temp_class"}).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                             // $sidemenu.find('table').dataTable({ paging: true });


                              let $table = $sidemenu.find('table');
                              $table.dataTable({
                                  "serverSide": true,//no change
                                  "processing": true,//-- process text when clicked
                                  //"lengthChange": false,
                                  "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                                  "searching": false,//--no change
                                  "ordering": false,//--sorting
                                  "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                  "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                  "pageLength": ajaxOutput.pageSize,//<----page size
                                  "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                  "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName}, tableOptions, $table)
                              });

                          }
                else {
                              if (ajaxOutput.Process.Status = "NoData") {
                                 
                        $sidemenu.find('.jq_sidemenu_title').text("Country");

                                  $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadcustomersectorList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                        // $sidemenu.find('table').dataTable({ paging: true });


                        let $table = $sidemenu.find('table');
                        $table.dataTable({
                            "serverSide": true,//no change
                            "processing": true,//-- process text when clicked
                           // "lengthChange": false,
                           "lengthMenu": [],//---drop down page size
                            "searching": false,//--no change
                            "ordering": false,//--sorting
                            "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                            "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                            "pageLength": ajaxOutput.pageSize,//<----page size
                            "recordsFiltered": ajaxOutput.pageSize,//<---page size

                            "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName }, tableOptions, $table)
                        });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }




            },
            complete: function () {

            }
        });
    }
    function returnajaxPagination(ajaxInfo, tableOptions, tableid) {
        //{ apiurl, pageSize }
        return {
            url: ajaxInfo.apiurl,
            type: "post",
            data: function () {
                var info = tableid.DataTable().page.info();
                console.log('RETURN AJAX', info)
                //return { <antiforgery>:<antiforgery>, length: ajaxInfo.pageSize, page: info.page }
                let input = { pageSize: info.length, pageIndex: info.page };
                if (ajaxInfo.searchkey) {
                    input["Name"] = ajaxInfo.searchkey;
                }
                return input
            },
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (dtajaxOutput) {
                // $sideMenuOptions.body.html(pft_table_createtable(dtajaxOutput.Data, tableOptions));
                let table = tableid.DataTable();
                table.destroy();
                pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                tableid.dataTable({
                    "serverSide": true,
                    "processing": true,
                    //"lengthChange": false,
                    "lengthMenu": [10, 15, 20, 25, 50, 100],
                    "searching": false,
                    "ordering": false,
                    "deferLoading": dtajaxOutput.totalrecord,
                    "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                    "pageLength": dtajaxOutput.pageSize,
                    "recordsFiltered": dtajaxOutput.pageSize,
                    "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                })

            },

        }
    }
   


//side table view delete

        var tableOptions = {
            dropdown: {
                buttons: [

                    
               @if (ViewBag.PagedAccessRights.UsrrlMsView) {
        <text> { displayName: "View", action: editCustomerSector },</text>
    }

                    { type: "divider" },
     @if (ViewBag.PagedAccessRights.UsrrlMsDel)
             {
                 <text> { displayName: "Delete", action: deleteCustomerSector },</text>

              }
                 
                   
                ],
                class: "btn btn-success light sharp"
            },
            hideColumn: [],


            onlyShowColumn: ["SlNo","Name", "ShortName"],
            hideColumn: [],
            rowClickAction: editCustomerSector,
            serialNo: false,

            renameHeader: { "SlNo":"Sl No", "Name": "Name", "ShortName": "ShortName"}
        };



        //update CustomerSector function

    function editCustomerSector() {
            let row = $(this).closest('tr');

        let Saveddata = row.data('pData');
        $('.dataTable tr').removeClass("SelectForDelete");
        $(this).closest('tr').addClass('SelectForDelete');

            console.log("Saved data", Saveddata);
            let inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                CustomerSectorID: Saveddata.CustomerSectorID

            };

            $.ajax({
                        url: '@Url.Action("GetCustomerSectorInfoByID", "CustomerSector")',
                        type: "POST",

                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                        success: function (ajaxOutput) {


                        console.log("Return", ajaxOutput);
                            if (ajaxOutput.Process.IsProcess)
                            {

                                console.log('>_ Inside GetCustomerSectorInfo', ajaxOutput)

                                $sideMenuOptions.close();

                                $formContainer.load("@Url.Action("LoadFormCustomerSector", "CustomerSector")?mtd=@ViewBag.mtd", function () {

                                    $(this).find('[perfect-class=formTitle]').text('update : ' + ajaxOutput.Data[0].Name)
                                    console.log('Inside load');

                                    let $thisForm = $(this).find('[perfect-class="form"]');

                                    $thisForm.validate({ messages: validationMessage });

                                    $thisForm.data({ pData: ajaxOutput.Data[0] }); //setting the pdata value in form for update -id is taking

                                    $thisForm.attr('perfect-onFormSuccess', 'customersectorInitialLoad');

                                    $thisForm.find('button[name=add]').addClass('d-none');
                                    $thisForm.find('button[name=update]').removeClass('d-none');



                                    $thisForm.find('[name="Name"]').val(ajaxOutput.Data[0].Name),
                                    $thisForm.find('[name="ShortName"]').val(ajaxOutput.Data[0].ShortName),
                                    $thisForm.find('[name="SortOrder"]').val(ajaxOutput.Data[0].SortOrder)
                                });
                            }
                            else {
                                console.log('>_ Inside GetCustomerSectorInfo :false')

                                $.each(ajaxOutput.Process.Message, function (key, value)
                                {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                    $('.dataTable tr').removeClass("SelectForDelete");
                                  

                                });
                            }
                },

            });

        }

           // Function to delete CustomerSector
            function deleteCustomerSector() {
            let $row = $(this).closest('tr');

            let Saveddata = $row.data('pData');
                console.log("Saved data", Saveddata);
                 console.log('Delete function', Saveddata)

                $('.dataTable tr').removeClass("SelectForDelete");
                $(this).closest('tr').addClass('SelectForDelete');

            //get reason list-

               $.ajax({
                   url: "@Url.Action("GetCustomerSectorReasonList", "CustomerSector")",
                   type: "GET",
                  // data: inputReason,
                   contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                   success: function (ajaxReasonOutput) {
                       if (ajaxReasonOutput.Process.IsProcess) {

                           console.log('Inside res ajax', ajaxReasonOutput.Data)

                           let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove    " + Saveddata.Name + " ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                           var confirmBoxObj = ConfirmDialog(confirmationDialogBoxOption);
                            confirmBoxObj.then(function (selectedOption) {
                                if (selectedOption) {
                let inputData = {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    CustomerSectorID: Saveddata['CustomerSectorID'],
                    ReasonID: selectedOption
            };


                    $.ajax({
                        url: "@Url.Action("DeleteCustomerSectorInfo", "CustomerSector")",
                                type: "POST",
                                data: inputData,
                                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                success: function (ajaxOutput) {
                                    if (ajaxOutput.Process.IsProcess) {

                                        let table = $row.closest('table').DataTable()
                                        table.row($row).remove().draw();

                                        $.each(ajaxOutput.Process.Message, function (key, value) {
                                            NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully' });
                                        });

                                        //removing a data
                                        $('.dataTable tr').removeClass("SelectForDelete");

                                    }
                                    else {
                                        $.each(ajaxOutput.Process.Message, function (key, value) {
                                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                            $('.dataTable tr').removeClass("SelectForDelete");
                                        });
                                    }
                                }
                            });
                        }
                        else {
                            NotificationMessage({ 'message': 'No option selected' });
                        }

                    });


                }
                else {



                }
            }

        });




    };



</script>

}
