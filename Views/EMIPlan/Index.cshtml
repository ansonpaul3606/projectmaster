
@{
    ViewBag.Title = "Project EMI Plan";
}


<div class="container-fluid">
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12" id="EMIPlan-form">

        </div>
    </div>
</div>
@section scripts{

    <script type="text/javascript">
        var  EMITransMode = '';
        var EMIPlanID;
        
        const $formContainer = $('#EMIPlan-form');

        $(document).ready(function () {
            EMIPlanInitialLoad();

        });



        function EMIPlanInitialLoad() {

            EMITransMode = '@ViewBag.TransMode';
               @if (ViewBag.PagedAccessRights.UsrrlMsView)
              {
                 <text>    loadEMIPlanList(this); </text>
              }

             loadEMIPlanAddForm();
        }

        function loadEMIPlanAddForm() {

            $formContainer.load('@Url.Action("LoadFormEMIPlan", "EMIPlan")?mtd=@ViewBag.mtd', function () {

                let $thisForm = $(this).find('[perfect-class="form"]');

                $thisForm.validate({ messages: validationMessage });

                $thisForm.find('[name=EMIDate]').val(moment().format('YYYY-MM-DD'));
                $thisForm.attr('perfect-onFormSuccess', 'EMIPlanInitialLoad');
                $("#btnProcessEMI").show();
                $("#addcountry-jq-searchButton3").removeProp("disabled");
            });

        };






        function loadEMIPlanList(ele) {
            debugger
        let $sidemenu = $sideMenuOptions.body;

       // let $thisForm = $(ele).closest('.Search-Control');

            let $thisForm = $(ele).closest('.testSearchBox');
        let SearchName = $thisForm.find('input').val();

            if (SearchName == undefined || SearchName == null) {
                SearchName = "";
            }

            $sideMenuOptions.title.find('h4').text('@ViewBag.PageTitle'+' '+'List'); 
          let pageUrl = '@Url.Action("GetProjectEMIPlanList", "EMIPlan")';
            $.ajax({
                url:pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name: SearchName, TransMode: EMITransMode },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {


                    if (ajaxOutput.Process.IsProcess) {
                             debugger
                              console.log('EMIPlan', ajaxOutput);
                        $sidemenu.find('.jq_sidemenu_title').text("Project EMI Plan");

                              $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addEMIPlan-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadEMIPlanList(this)"></button></div></div></div></div>', $('<div/>', {class:"col-md-12 table_temp_class"}).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                             // $sidemenu.find('table').dataTable({ paging: true });


                              let $table = $sidemenu.find('table');
                              $table.dataTable({
                                  "serverSide": true,//no change
                                  "processing": true,//-- process text when clicked
                                  //"lengthChange": false,
                                  "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                                  "searching": false,//--no change
                                  "ordering": false,//--sorting
                                  "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                  "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                  "pageLength": ajaxOutput.pageSize,//<----page size
                                  "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                  "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName, TransMode: EMITransMode}, tableOptions, $table)
                              });

                          }
                else {
                              if (ajaxOutput.Process.Status = "NoData") {

                                  $sidemenu.find('.jq_sidemenu_title').text("Production Stages");

                        $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addEMIPlan-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadEMIPlanList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                        // $sidemenu.find('table').dataTable({ paging: true });


                        let $table = $sidemenu.find('table');
                        $table.dataTable({
                            "serverSide": true,//no change
                            "processing": true,//-- process text when clicked
                           // "lengthChange": false,
                           "lengthMenu": [],//---drop down page size
                            "searching": false,//--no change
                            "ordering": false,//--sorting
                            "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                            "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                            "pageLength": ajaxOutput.pageSize,//<----page size
                            "recordsFiltered": ajaxOutput.pageSize,//<---page size

                            "ajax": returnajaxPagination({  apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName, TransMode: EMITransMode}, tableOptions, $table)
                        });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }




            },
            complete: function () {

            }
        });
    }
    function returnajaxPagination(ajaxInfo, tableOptions, tableid) {
        //{ apiurl, pageSize }
        return {
            url: ajaxInfo.apiurl,
            type: "post",
            data: function () {
                var info = tableid.DataTable().page.info();
                console.log('RETURN AJAX', info)
                //return { <antiforgery>:<antiforgery>, length: ajaxInfo.pageSize, page: info.page }
                let input = { pageSize: info.length, pageIndex: info.page, TransMode: ajaxInfo.TransMode };
                if (ajaxInfo.searchkey) {
                    input["Name"] = ajaxInfo.searchkey;
                }
                return input
            },
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (dtajaxOutput) {
                // $sideMenuOptions.body.html(pft_table_createtable(dtajaxOutput.Data, tableOptions));
                let table = tableid.DataTable();
                table.destroy();
                pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                tableid.dataTable({
                    "serverSide": true,
                    "processing": true,
                    //"lengthChange": false,
                    "lengthMenu": [10, 15, 20, 25, 50, 100],
                    "searching": false,
                    "ordering": false,
                    "deferLoading": dtajaxOutput.totalrecord,
                    "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                    "pageLength": dtajaxOutput.pageSize,
                    "recordsFiltered": dtajaxOutput.pageSize,
                    "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                })

            },

        }
    }



        var tableOptions = {
            dropdown: {
                buttons: [



                    @if (ViewBag.PagedAccessRights.UsrrlMsView) {
        <text> { displayName: "View", action: editEMIPlan },</text>
    }

                    { type: "divider" },
     @if (ViewBag.PagedAccessRights.UsrrlMsDel)
             {
                 <text> { displayName: "Delete", action: deleteEMIPlan },</text>

              }


                ],
                class: "btn btn-success light sharp"
            },
            onlyShowColumn: ["SlNo", "CedEMINo", 'Project', "CusNumber", "Customer", "CedInstAmount"],
            hideColumn: ["ID_CustomerWiseEMI", "TransMode", "FK_Master","FK_FinancePlanType"],
            rowClickAction: editEMIPlan,
            serialNo: false,
            renameHeader: {
                "SlNo": "Sl No.", "CedEMINo": "EMI No.", "CusNumber": "Customer No.", "CedInstAmount": "Inst.Amount"}
        };

        var validationMessage = {
            'PrStName': {
                'required': 'Please Enter  Name',
                'stringonly': 'Invalid Name'
            },

            'PrStShortName': {
                'required': 'Please Enter  Short Name',
                'stringonly': 'Invalid  Short Name',
                'alphanumeric': 'Invalid Short Name',
            },
            'CategoryID': {
                'required': 'Please Select Category',

            }

        };

        function editEMIPlan() {
           debugger;
            let row = $(this).closest('tr');

            let Saveddata = row.data('pData');
            console.log("Saved data", Saveddata);
           

            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');

            let inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                ID_CustomerWiseEMI: Saveddata.ID_CustomerWiseEMI,
                TransMode: EMITransMode

            };

            $.ajax({
                        url: '@Url.Action("GetEMIPlanInfoByID", "EMIPlan")',
                        type: "POST",

                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (Data) {


                    console.log("Return", Data);
                    if (Data != null) {



                        $formContainer.load('@Url.Action("LoadFormEMIPlan", "EMIPlan")?mtd=@ViewBag.mtd', function () {

                            let $thisForm = $(this).find('[perfect-class="form"]');

                            var EMIPlanData = Data.EMIPlans.Data[0];

                            $thisForm.find('[name="Project"]').val(EMIPlanData.Project),
                                $thisForm.find('[name="FK_Category"]').val(EMIPlanData.FK_Category);

                            let $FinancePlanTypeDropdown = $thisForm.find('[name=FK_FinancePlanType]');//<--- Will give place select html element
                            $FinancePlanTypeDropdown.empty();
                            //$FinancePlanTypeDropdown.append($('<option/>', { "value": '0' }).text('Please select')).selectpicker('refresh');
                            let inputData = {
                                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                FK_Category: $thisForm.find('[name=FK_Category]').val(),
                            };
                            $.ajax({
                                url: "@Url.Action("GetEMIPlanList","EMIPlan")",
                                type: "GET",
                                data: inputData,
                                dataType: "json",
                                contentType: "application/x-www-form-urlencoded;charset=utf-8",
                                success: function (ajaxOutput) {
                                    if (ajaxOutput.Process.IsProcess) {
                                        $FinancePlanTypeDropdown.append($('<option/>', { "value": '0' }).text('Please select'));
                                        $.each(ajaxOutput.Data, function (key, value) {
                                            $FinancePlanTypeDropdown.append($('<option/>', { "value": value.ID_FinancePlanType }).text(value.FpName)).selectpicker('refresh')
                                        });

                                        $thisForm.find('[name="FK_FinancePlanType"]').val(EMIPlanData.FK_FinancePlanType).selectpicker('refresh');
                                    }
                                    else {
                                        $.each(ajaxOutput.Process.Message, function (key, value) {

                                        });
                                    }
                                }

                            });







                            $thisForm.find('[name="ProjectID"]').val(EMIPlanData.FK_Master);

                            $thisForm.find('[name=EMIDate]').val(moment(EMIPlanData.CedFirstInstDate).format('YYYY-MM-DD'));
                            $thisForm.find('[name=FinalAmount]').val(EMIPlanData.CedTotalAmount.toFixed(2));

                            $thisForm.find('[name=DownPayment]').val(EMIPlanData.CedDownPayment.toFixed(2));
                            $thisForm.find('[name=InstlmntAmnt]').val(parseFloat(EMIPlanData.CedInstAmount).toFixed(2));
                            $thisForm.find('[name=AdditionalChrg]').val(EMIPlanData.CedAddAmount.toFixed(2));
                             
                            fillSlabTable($thisForm, 'EMIProcessedDetails', Data.EMIPlansDetails.Data, tableOptionsProcessedDetails);

                            $sideMenuOptions.close();
                            $("#btnSaveEMIPlan").hide();
                            $("#btnProcessEMI").hide();
                            $("#addcountry-jq-searchButton3").prop("disabled",true);
                            //$thisForm.find('button[name=add]').addClass('d-none');
                            //$thisForm.find('button[name=update]').removeClass('d-none');

                            $thisForm.attr('perfect-onFormSuccess', 'EMIPlanInitialLoad');

                        });
                    }
                    else {
                        console.log('>_ Inside GetEMIPlanInfo :false')

                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }

                     
                },

            });

        }


        function fn_LoadSubcategory(CategoryId, htmlEl, subCatId) {

            let $thisForm = htmlEl;
            debugger;
        let $placeDropdown = $thisForm.find('[name=SubCategotyID]');//<--- Will give place select html element
        $placeDropdown.empty();
        $placeDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');

            let CategoryID = CategoryId;



         $.ajax({
                 url: "@Url.Action("GetSubcategory", "EMIPlan")",
                type: "POST",

             data: JSON.stringify({ CategoryID: CategoryID}),
                dataType: "json",
                contentType: "application/json",
             success: function (ajaxOutput) {



                 if (ajaxOutput.Process.IsProcess) {

                             $.each(ajaxOutput.Data, function (key, value) {
                                 $placeDropdown.append($('<option/>', { "value": value.ID_SubCategory }).text(value.SubCatName)).selectpicker('refresh')
                                 });

                     $placeDropdown.val(subCatId).selectpicker('refresh')
                     }
                     else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             //NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': value });
                         });
                     }
                     }

                 });


    }
           // Function to delete EMIPlan


          //---
         // Function to delete customer
        function deleteEMIPlan() {
             let $row = $(this).closest('tr');
            let Saveddata = $row.data('pData');


            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');
            console.log('Delete function', Saveddata)

            //get reason list-

               $.ajax({
                   url: "@Url.Action("GetEMIPlanReasonList", "EMIPlan")",
                   type: "GET",
                  // data: inputReason,
                   contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                   success: function (ajaxReasonOutput) {
                       if (ajaxReasonOutput.Process.IsProcess) {

                           console.log('Inside res ajax', ajaxReasonOutput.Data)

                           let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove  " + Saveddata.CedEMINo + "  ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };

                           var confirmBoxObj = ConfirmDialog(confirmationDialogBoxOption);

                            confirmBoxObj.then(function (selectedOption) {
                                if (selectedOption) {
                                     console.log('customerIndex> delete function:',selectedOption)

                                    let inputData = {
                                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                        FK_CustomerWiseEMI: Saveddata.ID_CustomerWiseEMI,
                                        FK_Reason: selectedOption,
                                        TransMode: EMITransMode
                                    };
                                    console.log(inputData);
                                    $.ajax({
                                        url: "@Url.Action("DeleteEMIPlan", "EMIPlan")",
                                        type: "POST",
                                        data: inputData,
                                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                        success: function (ajaxOutput) {
                                            if (ajaxOutput.Process.IsProcess) {

                                                let table = $row.closest('table').DataTable()
                                                table.row($row).remove().draw();

                                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully' });
                                                });
                                                EMIPlanInitialLoad();
                                                //removing a data


                                            }
                                            else {
                                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                });
                                            }
                                        }
                                    });
                                }
                                else {
                                    NotificationMessage({ 'message': 'No option selected' });
                                }

                            });


                        }
                        else {



                        }
                   }

               });




        };







    </script>

}