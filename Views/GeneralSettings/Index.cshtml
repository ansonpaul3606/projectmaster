
@{
    ViewBag.Title = "Index";
}

<div class="container-fluid">
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12" id="genralset-form">

        </div>
    </div>
</div>

@section scripts {

<script type="text/javascript">

    const $formContainer = $('#genralset-form');

    $(document).ready(function () {

        fn_generalSettings_initialLoad();
    });

    function fn_generalSettings_initialLoad() {
        LoadAddGeneralsettings();
        LoadGeneralsettingsList();
    }
    var validationMessage = {
        'GsModule': {
            'required': 'Please enter Module'
        },
        'GsField': {
            'required': 'Please enter Parameter'
        },
        'GsData': {
            'required': 'Please enter Parameters Data'
        }

    }

    function LoadAddGeneralsettings() {

         $formContainer.load('@Url.Action("LoadGeneralsettings", "GeneralSettings")?mtd=@ViewBag.mtd', function () {
                let $thisForm = $(this).find('[perfect-class="form"]');
                $thisForm.validate({ messages: validationMessage });
                $thisForm.attr('perfect-onFormSuccess', 'fn_costcenter_initialLoad');
            });
    }


        var tableOptions = {
            dropdown: {
                buttons: [

                       @if (ViewBag.PagedAccessRights.UsrrlTyView)
                               {

                                <text>   { displayName: "View", action: fn_generalSettings_UpdateForm }, </text>
                              }

                ],

                class: "btn btn-success light sharp"
            },
             onlyShowColumn: ["SlNo", "GsModule", "GsField"],
             hideColumn: [],
             rowClickAction: fn_generalSettings_UpdateForm,
             renameHeader: { "SlNo": "SL No", "GsModule": "Module", "GsField": "Parameter"},
             isDateType: ['', ''],

        }

    function LoadGeneralsettingsList(ele) {

      let $sidemenu = $sideMenuOptions.body;
            let $thisForm = $(ele).closest('.testSearchBox');
            let SearchName = $thisForm.find('input').val();
            //console.log("GHc", SearchName)
            if (SearchName == undefined) {
                SearchName = '';
            }
          $sideMenuOptions.title.find('h4').text('@ViewBag.PageTitles'+ ' ' +'List');
            let pageUrl = "@Url.Action("GetGeneralSettingsList", "GeneralSettings")";
            $.ajax({
                url:pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name: SearchName},
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {
                    console.log(ajaxOutput)
                    if (ajaxOutput.Process.IsProcess) {
                       // debugger
                              //console.log('Sa', ajaxOutput);
                              $sidemenu.find('.jq_sidemenu_title').text("Log List");

                        $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="LoadGeneralsettingsList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))

                        //$sidemenu.append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control "id="serchname" name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value="' + SearchName +'"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="fn_Servicebill_Select(this)"></button></div></div></div></div>', $('<div/>', {class:"col-md-12 table_temp_class"}).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))

                        // $sidemenu.find('table').dataTable({ paging: true });


                              let $table = $sidemenu.find('table');
                              $table.dataTable({

                                  "serverSide": true,//no change
                                  "processing": true,//-- process text when clicked
                                  //"lengthChange": false,
                                  "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                                  "searching": false,//--no change
                                  "ordering": false,//--sorting
                                  "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                  "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                  "pageLength": ajaxOutput.pageSize,//<----page size
                                  "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                  "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName}, tableOptions, $table)
                              });

                          }
                    else {

                              if (ajaxOutput.Process.Status = "NoData") {

                                  $sidemenu.find('.jq_sidemenu_title').text("S List");

                                  $sidemenu.empty().append('<div class="d-flex justify-content-center mb-2 position-relative"><div class="col-md-8 position-absolute top-3 z-index"> <div class="input-group-append testSearchBox"></div></div></div>')

                                  $sidemenu.append('<div class="d-flex justify-content-end mb-2"><div class="col-md-5 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " id="serchname" name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  value="' + SearchName +'"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="LoadGeneralsettingsList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))

                                let $table = $sidemenu.find('table');
                                $table.dataTable({
                                    "serverSide": true,//no change
                                    "processing": true,//-- process text when clicked
                                   // "lengthChange": false,
                                     "lengthMenu": [],//---drop down page size
                                    "searching": false,//--no change
                                    "ordering": false,//--sorting
                                    "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                    "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                    "pageLength": ajaxOutput.pageSize,//<----page size
                                    "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                    "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName}, tableOptions, $table)
                                });
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                }
            },
            complete: function () {

            }
        });

    }

    function returnajaxPagination(ajaxInfo, tableOptions, tableid) {
        //{ apiurl, pageSize }
      debugger
        return {
            url: ajaxInfo.apiurl,
            type: "post",
            data: function () {
                var info = tableid.DataTable().page.info();
                console.log('RETURN AJAX', info)

                let input = { pageSize: info.length, pageIndex: info.page };
                if (ajaxInfo.searchkey) {
                    input["Name"] = ajaxInfo.searchkey;
                }
                return input
            },
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (dtajaxOutput) {

                let table = tableid.DataTable();
                table.destroy();
                pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                tableid.dataTable({
                    "serverSide": true,
                    "processing": true,

                    "lengthMenu": [10, 15, 20, 25, 50, 100],
                    "searching": false,
                    "ordering": false,
                    "deferLoading": dtajaxOutput.totalrecord,
                    "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                    "pageLength": dtajaxOutput.pageSize,
                    "recordsFiltered": dtajaxOutput.pageSize,
                    "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                })

            },

        }
    }

    function fn_generalSettings_UpdateForm() {

        let $thisUser = $(this).closest('tr');
        let savedData = $thisUser.data('pData');
        $('.dataTable tr').removeClass("SelectForDelete");
        $(this).closest('tr').addClass('SelectForDelete');
        $(this).closest('tr').addClass('SelectForDelete');
        console.log('fd', savedData);

        $formContainer.load('@Url.Action("LoadGeneralsettings", "GeneralSettings")?mtd=@ViewBag.mtd', function () {

            debugger

            let $thisForm = $(this).find('[perfect-class="form"]');
            $thisForm.validate({ messages: validationMessage });
            $thisForm.find('[name="GsModule"]').val(savedData.GsModule);
            $thisForm.find('[name="ID_GeneralSettings"]').val(savedData.ID_GeneralSettings);
            $thisForm.find('[name="GsData"]').val(savedData.GsData);
            $thisForm.find('[name="GsField"]').val(savedData.GsField);
            $thisForm.find('[name="GsValue"]').prop('checked', savedData.GsValue); 


            $thisForm.find('[name="GsModule"]').attr("disabled", true);
            $thisForm.find('[name="GsData"]').attr("disabled", true);
            $thisForm.find('[name="GsField"]').attr("disabled", true);

            

            let inputData = {
                ID_CostCenter: savedData.ID_GeneralSettings,

            };

            $.ajax({
                url: '@Url.Action("GetCostcenterInfoByID", "CostCenter")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                data: inputData,//<---- Input json : data passed to controller
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                    console.log('ajaxOutput', ajaxOutput);
                    debugger


                    $thisForm.find('button[name=add]').addClass('d-none');
                    $thisForm.find('button[name=add]').hide();
                    $thisForm.find('button[name=update]').removeClass('d-none');
                    $thisForm.attr('perfect-onFormSuccess', 'fn_generalSettings_initialLoad');

                },

            }); $sideMenuOptions.close();
        });
    }

</script>
    
}
