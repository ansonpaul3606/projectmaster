
@{
    ViewBag.Title = "Index";
}

<div class="container-fluid">
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12" id="conversionSettings-form">

        </div>
    </div>
</div>

@section scripts {


    <script type="text/javascript">
        var ICTransMode = '';
        const $formContainer = $('#conversionSettings-form');
        $(document).ready(function () {

            SettingsConversion_initLoad();
        });
        function SettingsConversion_initLoad() {
            ICTransMode = '@ViewBag.TransMode';
            LoadAddSettingsConversion();
            LoadConversionList(this);
        }
        function LoadAddSettingsConversion() {
             $formContainer.load('@Url.Action("LoadItemConversionSettings", "ItemConversionSettings")?mtd=@ViewBag.mtd' + '&TransMode=@ViewBag.TransMode', function () {
                let $thisForm = $(this).find('[perfect-class="form"]');
                 $thisForm.validate({ messages: validationMessage });
                 $thisForm.find('[name="EffectDate"]').val(moment().format('YYYY-MM-DD'));
                $thisForm.attr('perfect-onFormSuccess', 'SettingsConversion_initLoad');
            });
        }
        var validationMessage = {

            'EffectDate': {
                'required': 'Please select Effect Date'
            }
        }
           var tableOptions = {
             dropdown: {
                buttons: [

                             @if (ViewBag.PagedAccessRights.UsrrlTyView)
                               {

                                <text>   { displayName: "View", action: fn_ItemCOnversion_UpdateForm }, </text>
                               }

                       { type: "divider" },

                        @if (ViewBag.PagedAccessRights.UsrrlTyDel)
                         {
                               <text> { displayName: "Delete", action: fn_del_ItemSettings},</text>
                         }
                ],

                class: "btn btn-success light sharp"
             },
               onlyShowColumn: ["SlNo", "EffectDate","FromProdName"],
               hideColumn: [],
               rowClickAction: fn_ItemCOnversion_UpdateForm,
               renameHeader: { "SlNo": "SL No", "EffectDate": "Effect Date", "ICSGroupID": "Group ID","FromProdName":"From Item" },
               isDateType: ['EffectDate'],

          };


        function fn_ItemCOnversion_UpdateForm() {

            
         let $thisUser = $(this).closest('tr');
         let savedData = $thisUser.data('pData');
         $('.dataTable tr').removeClass("SelectForDelete");
         $(this).closest('tr').addClass('SelectForDelete');
         $(this).closest('tr').addClass('SelectForDelete');

            $formContainer.load('@Url.Action("LoadItemConversionSettings", "ItemConversionSettings")?mtd=@ViewBag.mtd' + '&TransMode=@ViewBag.TransMode', function () {

                            let $thisForm = $(this).find('[perfect-class="form"]');
                            $thisForm.validate({ messages: validationMessage });

                $thisForm.find('[name="EffectDate"]').val(moment(savedData.EffectDate).format('YYYY-MM-DD'));
                $thisForm.find('[name="ID_ItemConversionSettings"]').val(savedData.ID_ItemConversionSettings);

                let inputData = {
                    FK_ItemConversionSettings: savedData.ICSGroupID,
               TransMode: ICTransMode
           };

               $.ajax({
                 url: '@Url.Action("GetItemCSInfoByID", "ItemConversionSettings")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                 type: "POST",
                 data: inputData,//<---- Input json : data passed to controller
                 dataType: "json",
                   contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                   success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                       if (ajaxOutput != null) {

                           if (ajaxOutput.data.Process.IsProcess) {

                               fn_fillItemcs($thisForm, 'ItemConversionSettings', ajaxOutput.data.Data, tableOptionsTempOut);
                           }

                           $thisForm.find('button[name=add]').addClass('d-none');
                           $thisForm.find('button[name=update]').addClass('d-none');
                           $thisForm.attr('perfect-onFormSuccess', 'SettingsConversion_initLoad');
                           
                       }
                       else {
                           $.each(ajaxOutput.lgdata.Process.Message, function (key, value) {
                               NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                           });
                       }
                 },

               }); $sideMenuOptions.close();
         });
        }

        function fn_del_ItemSettings() {

        let $row = $(this).closest('tr');
        let Saveddata = $row.data('pData');
        console.log(Saveddata,'sa')

            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');

            $.ajax({
                url: "@Url.Action("GetItemCsReasonList", "ItemConversionSettings")",
                type: "GET",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxReasonOutput) {
                    if (ajaxReasonOutput.Process.IsProcess) {
                      

                        let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove this ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                        var res = ConfirmDialog(confirmationDialogBoxOption);
                        res.then(function (ret) {
                            if (ret) {
                                let inputData = {
                                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                    ID_ItemConversionSettings: Saveddata.ICSGroupID,
                                    ReasonID: ret,
                                    TransMode: ICTransMode
                                };

                                $.ajax({
                                    url: "@Url.Action("DeleteItemCS", "ItemConversionSettings")",
                                    type: "POST",
                                    data: inputData,
                                    contentType: "application/x-www-form-urlencoded; charset=utf-8",
                                    success: function (data) {
                                        let $thisForm = $(this).find('[perfect-class="form"]');
                                        if (data.Process.IsProcess) {
                                            let table = $row.closest('table').DataTable()
                                            table.row($row).remove().draw();
                                            $.each(data.Process.Message, function (key, value) {
                                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully' });


                                                $sideMenuOptions.close();
                                                // window.location.reload();
                                                LoadAddSettingsConversion();
                                            });

                                            $('.dataTable tr').removeClass("SelectForDelete");
                                        }
                                        else {
                                            $.each(data.Process.Message, function (key, value) {
                                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                $('.dataTable tr').removeClass("SelectForDelete");
                                            });
                                        }
                                    }
                                });
                            }
                            else {
                                NotificationMessage({ 'message': 'No option selected' });
                            }
                        });
                    }
                }

            });


        }


        function LoadConversionList(ele) {
       
            let $sidemenu = $sideMenuOptions.body;
            let $thisForm = $(ele).closest('.testSearchBox');
            let SearchName = $thisForm.find('input').val();
            //console.log("GHc", SearchName)
        if (SearchName == undefined) {
            SearchName = '';
        }

            $sideMenuOptions.title.find('h4').text('@ViewBag.PageTitles'+' '+'List');
            let pageUrl = "@Url.Action("GetConversionList", "ItemConversionSettings")";
            $.ajax({
                url:pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name: SearchName, TransMode: ICTransMode},
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {
                    console.log(ajaxOutput)
                    if (ajaxOutput.Process.IsProcess) {

                              $sidemenu.find('.jq_sidemenu_title').text("Log List");
                              $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="LoadConversionList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))

                              let $table = $sidemenu.find('table');
                              $table.dataTable({

                                  "serverSide": true,//no change
                                  "processing": true,//-- process text when clicked
                                  //"lengthChange": false,
                                  "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                                  "searching": false,//--no change
                                  "ordering": false,//--sorting
                                  "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                  "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                  "pageLength": ajaxOutput.pageSize,//<----page size
                                  "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                  "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName, TransMode: ICTransMode}, tableOptions, $table)
                              });

                          }
                    else {

                              if (ajaxOutput.Process.Status = "NoData") {

                                  $sidemenu.find('.jq_sidemenu_title').text("Sales List");

                                  $sidemenu.empty().append('<div class="d-flex justify-content-center mb-2 position-relative"><div class="col-md-8 position-absolute top-3 z-index"> <div class="input-group-append testSearchBox"></div></div></div>')

                                  $sidemenu.append('<div class="d-flex justify-content-end mb-2"><div class="col-md-5 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " id="serchname" name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  value="' + SearchName +'"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="LoadConversionList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))

                                let $table = $sidemenu.find('table');
                                $table.dataTable({
                                    "serverSide": true,//no change
                                    "processing": true,//-- process text when clicked
                                   // "lengthChange": false,
                                     "lengthMenu": [],//---drop down page size
                                    "searching": false,//--no change
                                    "ordering": false,//--sorting
                                    "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                    "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                    "pageLength": ajaxOutput.pageSize,//<----page size
                                    "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                    "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName, TransMode: ICTransMode}, tableOptions, $table)
                                });
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                }
            },
            complete: function () {

            }
        });

    }

        function returnajaxPagination(ajaxInfo, tableOptions, tableid) {
            return {
                url: ajaxInfo.apiurl,
                type: "post",
                data: function () {
                    var info = tableid.DataTable().page.info();
                    console.log('RETURN AJAX', info)

                    let input = { pageSize: info.length, pageIndex: info.page, TransMode: ajaxInfo.TransMode };
                    if (ajaxInfo.searchkey) {
                        input["Name"] = ajaxInfo.searchkey;
                    }
                    return input
                },
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (dtajaxOutput) {

                    let table = tableid.DataTable();
                    table.destroy();
                    pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                    tableid.dataTable({
                        "serverSide": true,
                        "processing": true,

                        "lengthMenu": [10, 15, 20, 25, 50, 100],
                        "searching": false,
                        "ordering": false,
                        "deferLoading": dtajaxOutput.totalrecord,
                        "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                        "pageLength": dtajaxOutput.pageSize,
                        "recordsFiltered": dtajaxOutput.pageSize,
                        "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                    })

                },

            }
        }

    </script>
}