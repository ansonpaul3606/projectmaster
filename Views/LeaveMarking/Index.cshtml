
@{
    ViewBag.Title = "Index";
}



<div class="container-fluid">

    <div class="row">
        <div class="col-lg-12" id="LeaveMarking-form">

        </div>
    </div>


</div>
@section scripts{
    <script type="text/javascript">

        const $formContainer = $('#LeaveMarking-form');


        $(document).ready(function () {
            LeaveMarkingInitialLoad();
        });


        var validationMessage = {

          
            'FK_LeaveType':
            {
                'required': 'Please select a Type'
            },
            'LMFromDate': {
                'required': 'Please Enter From Date',
                'min': jQuery.validator.format('Please Enter a Valid Date')
            },
            'LMToDate': {
                'required': 'Please Enter To Date',
                'min': jQuery.validator.format('Please Enter a Valid Date')
            },
            'FK_Employee': {
                'required': 'Please select an Employee'

            }



            //'FK_Master':
            //{
            //    'required': 'Please select a Customer type'
            //}
        };

        function LeaveMarkingInitialLoad()
        {
             LoadLeaveMarkingAddForm();
            @if (ViewBag.PagedAccessRights.UsrrlStView)
            {
                <text>loadLeaveMarkingList(this);</text>
            }
        }

        function LoadLeaveMarkingAddForm()
           {
             $formContainer.load('@Url.Action("LoadLeaveMarking", "LeaveMarking")', function () {
                 let $thisForm = $(this).find('[perfect-class="form"]');
                 $thisForm.find('[name="LMFromDate"]').val(moment().format('YYYY-MM-DD'));
                 $thisForm.find('[name="LMToDate"]').val(moment().format('YYYY-MM-DD'));
                 $thisForm.validate({ messages: validationMessage });
                 var today = new Date().toISOString().split('T')[0];
                 document.getElementsByName("LMFromDate")[0].setAttribute('min', 1900- 01- 01);
                // document.getElementsByName("LMToDate")[0].setAttribute('min', today);

                 $thisForm.attr('perfect-onFormSuccess', 'LeaveMarkingInitialLoad');

            });
        };



        function loadLeaveMarkingList(ele) {
            debugger
            let $sidemenu = $sideMenuOptions.body;
            
            let $thisForm = $(ele).closest('.testSearchBox');
            let SearchName = $thisForm.find('input').val();
     
            $sideMenuOptions.title.find('h4').text('Leave Marking List');
            let pageUrl = '@Url.Action("GetLeaveMarkingList", "LeaveMarking")';
            $.ajax({
                url: pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name: SearchName },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {


                    if (ajaxOutput.Process.IsProcess) {
                        //console.log('ProductType', ajaxOutput);
                        $sidemenu.find('.jq_sidemenu_title').text("LeaveMarking");

                        $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addpricetype-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadLeaveMarkingList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                        // $sidemenu.find('table').dataTable({ paging: true });


                        let $table = $sidemenu.find('table');
                        $table.dataTable({
                            "serverSide": true,//no change
                            "processing": true,//-- process text when clicked
                            //"lengthChange": false,
                            "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                            "searching": false,//--no change
                            "ordering": false,//--sorting
                            "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                            "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                            "pageLength": ajaxOutput.pageSize,//<----page size
                            "recordsFiltered": ajaxOutput.pageSize,//<---page size

                            "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName }, tableOptions, $table)
                        });

                    }
                    else {
                        if (ajaxOutput.Process.Status = "NoData") {

                            $sidemenu.find('.jq_sidemenu_title').text("LeaveMarking");

                            $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadLeaveMarkingList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                            // $sidemenu.find('table').dataTable({ paging: true });


                            let $table = $sidemenu.find('table');
                            $table.dataTable({
                                "serverSide": true,//no change
                                "processing": true,//-- process text when clicked
                                // "lengthChange": false,
                                "lengthMenu": [],//---drop down page size
                                "searching": false,//--no change
                                "ordering": false,//--sorting
                                "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                "pageLength": ajaxOutput.pageSize,//<----page size
                                "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize }, tableOptions, $table)
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }
                    }




                },
                complete: function () {

                }
            });

        }

        function returnajaxPagination(ajaxInfo, tableOptions, tableid) {
            //{ apiurl, pageSize }
            return {
                url: ajaxInfo.apiurl,
                type: "post",
                data: function () {
                    var info = tableid.DataTable().page.info();
                    console.log('RETURN AJAX', info)
                    //return { <antiforgery>:<antiforgery>, length: ajaxInfo.pageSize, page: info.page }
                    let input = { pageSize: info.length, pageIndex: info.page };
                    if (ajaxInfo.searchkey) {
                        input["Name"] = ajaxInfo.searchkey;
                    }
                    return input
                },
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (dtajaxOutput) {
                    // $sideMenuOptions.body.html(pft_table_createtable(dtajaxOutput.Data, tableOptions));
                    let table = tableid.DataTable();
                    table.destroy();
                    pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                    tableid.dataTable({
                        "serverSide": true,
                        "processing": true,
                        //"lengthChange": false,
                        "lengthMenu": [10, 15, 20, 25, 50, 100],
                        "searching": false,
                        "ordering": false,
                        "deferLoading": dtajaxOutput.totalrecord,
                        "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                        "pageLength": dtajaxOutput.pageSize,
                        "recordsFiltered": dtajaxOutput.pageSize,
                        "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                    })

                },

            }
        }




            
          var tableOptions = {
        dropdown: {
            buttons: [
            
               @if (ViewBag.PagedAccessRights.UsrrlMsView) {
        <text> { displayName: "View", action: editLeaveMarking },</text>
    }

                    { type: "divider" },
     @if (ViewBag.PagedAccessRights.UsrrlMsDel)
             {
                 <text> { displayName: "Delete", action: deleteLeaveMarking },</text>

              }
                ],
            class: "btn btn-success light sharp"
              },
              onlyShowColumn: ["SlNo", "EmployeeName", "Branch", "Leavetype", "LMFromDate","LMToDate"],
              hideColumn: [],
              rowClickAction: editLeaveMarking,
              isDateType: ['LMFromDate', 'LMToDate'],
        //serialNo: true,
              renameHeader: { "Leavetype":"Leave Type","LMFromDate": "From Date","LMToDate":"To Date" }

        };





        function editLeaveMarking() {
            debugger
            let $thisUser = $(this).closest('tr');
            console.log($thisUser.data());
            let savedData = $thisUser.data('pData');
            console.log('sav', savedData);
         $('.dataTable tr').removeClass("SelectForDelete");
         $(this).closest('tr').addClass('SelectForDelete');

            let inputData = { FK_LeaveMarking: savedData.ID_LeaveMarking};
            //dbcall
            $('#LoadLeaveMarking').empty();
                    $.ajax({
                 url: '@Url.Action("GetLeaveMarkingInfo", "LeaveMarking")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                 // headers: { "token_key": "1234" },
                 data: JSON.stringify(inputData),//<---- Input json : data passed to controller
                dataType: "json",
                contentType: "application/json",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                        if (ajaxOutput.Process.IsProcess) {
                            debugger
                            //console.log('>_ Inside GetCountryInfo', ajaxOutput)

                            $sideMenuOptions.close();

                        $formContainer.load("@Url.Action("LoadLeaveMarking", "LeaveMarking")", function () {


                            $(this).find('[perfect-class=formTitle]').text('update : ' + ajaxOutput.Data[0].FK_Employee)
                            console.log('Inside load');

                            let $thisForm = $(this).find('[perfect-class="form"]');

                            $thisForm.validate({ messages: validationMessage });

                            $thisForm.data({ pData: ajaxOutput.Data[0] }); //setting the pdata value in form for update -id is taking
                            console.log('pData', ajaxOutput.Data[0]);
                            $thisForm.attr('perfect-onFormSuccess', 'LeaveMarkingInitialLoad');

                            $thisForm.find('button[name=add]').addClass('d-none');
                            $thisForm.find('button[name=update]').removeClass('d-none');
                            

                            $thisForm.find('[name=ID_LeaveMarking]').val(ajaxOutput.Data[0].ID_LeaveMarking);
                            $thisForm.find('[name="LMFromDate"]').val(moment(ajaxOutput.Data[0].LMFromDate).format('YYYY-MM-DD'));
                            $thisForm.find('[name="LMToDate"]').val(moment(ajaxOutput.Data[0].LMToDate).format('YYYY-MM-DD'));

                            $thisForm.find('[name="FK_Branch"]').val(ajaxOutput.Data[0].FK_Branch).selectpicker('refresh'),
                                $thisForm.find('[name="FK_Department"]').val(ajaxOutput.Data[0].FK_Department).selectpicker('refresh'),
                                $thisForm.find('[name=FK_Employee]').val(ajaxOutput.Data[0].FK_Employee),
                                $thisForm.find('[name=EmployeeName]').val(ajaxOutput.Data[0].EmployeeName),
                                $thisForm.find('[name="FK_LeaveType"]').val(ajaxOutput.Data[0].FK_LeaveType).selectpicker('refresh');
                            $thisForm.find('[name="Leavetype"]').val(ajaxOutput.Data[0].Leavetype),



                                //$thisForm.find('[name=Sort]').val(ajaxOutput.Data[0].Sort)

                            $sideMenuOptions.close();

                     });
                 }
                 else {
                     //console.log('>_ Inside GetCountryInfo :false')

                     $.each(ajaxOutput.Process.Message, function (key, value) {
                         NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         $('.dataTable tr').removeClass("SelectForDelete");
                     });
                 }
             },

         });

        }


        
        function deleteLeaveMarking() {
             let $row = $(this).closest('tr');
            let Saveddata = $row.data('pData');
        $('.dataTable tr').removeClass("SelectForDelete");
        $(this).closest('tr').addClass('SelectForDelete');

            console.log('Delete function', Saveddata)

     
            //get reason list-

               $.ajax({
                   url: "@Url.Action("GetLeaveMarkingReasonList", "LeaveMarking")",
                   type: "GET",
                  // data: inputReason,
                   contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                   success: function (ajaxReasonOutput) {

                       if (ajaxReasonOutput.Process.IsProcess) {

                           console.log('Inside res ajax', ajaxReasonOutput.Data)


                          // let confirmationDialogBoxOption = { body: "Do you want to remove  ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                           let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove    " + Saveddata.EmployeeName + " ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                           var confirmBoxObj = ConfirmDialog(confirmationDialogBoxOption);

                            confirmBoxObj.then(function (selectedOption) {
                                if (selectedOption) {
                                   //  console.log('customerIndex> delete function:',selectedOption)

                                    let inputData = {
                                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                        ID_LeaveMarking: Saveddata['ID_LeaveMarking'],
                                        ReasonID: selectedOption
                                    };
                                    $.ajax({
                                        url: "@Url.Action("DeleteLeaveMarkingInfo", "LeaveMarking")",
                                        type: "POST",
                                        data: inputData,
                                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                        success: function (ajaxOutput) {
                                            if (ajaxOutput.Process.IsProcess) {

                                                let table = $row.closest('table').DataTable()
                                                table.row($row).remove().draw();

                                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully' });
                                                });

                                                //removing a data
                                                $('.dataTable tr').removeClass("SelectForDelete");

                                            }
                                            else {
                                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                    $('.dataTable tr').removeClass("SelectForDelete");
                                                });
                                            }
                                        }
                                    });
                                }
                                else {
                                    NotificationMessage({ 'message': 'No option selected' });
                                }

                            });


                        }
                        else {



                        }
                   }

               });




        };





























        </script>










































    }
