
@{
    ViewBag.Title = "Index";
}


<div class="container-fluid">

    <div class="row">
        <div class="col-lg-12" id="MaterialRequest_formContainer">

        </div>
    </div>


</div>
@section scripts{

<script type="text/javascript">


        const $formContainer = $('#MaterialRequest_formContainer');

        var tableOptions = {
            dropdown: {
                buttons: [
                    { displayName: "View", action: viewdetails},
                    { type: "divider" },
                    {
                        displayName: "Delete", action:deleteMaterial
                    }
                ],
                class: "btn btn-success light sharp"
            },
            onlyShowColumn: ["SlNo", "Project", "ProMatRequestDate", "TeamName","Stage"],
            hideColumn: [],
            rowClickAction: viewdetails,
            renameHeader: { "SlNo": "SL NO", "Project": "Project", "ProMatRequestDate": "Expected Date", "TeamName": "Team", "Stage":"Stage"},
            isDateType: ["ProMatRequestDate"],
        };



    var validationMessage = {
        'ProjectID': {
            'required': 'Please Select  Project',


        },
        'ProMatRequestDate': {
            'required': 'Please Enter Expected Date',

        },

        'StageID': {
            'required': 'Please Select Stage',


        },

        'TeamID': {
            'required': 'Please Select Team',


        },


    }

        $(document).ready(function () {
            debugger;


            fn_MaterialRequestIndex_initialLoad()

        });

    var MaterialRequestTransMode;
    const LastIDSessionKey = 'MaterialRequestLastID';
    var LastID_MaterialRequest;
   
        function fn_MaterialRequestIndex_initialLoad() {

            MaterialRequestTransMode = '@ViewBag.TransMode';
                loadMaterialRequest();
           MaterialRequest_loadform();

        }



        function  MaterialRequest_loadform() {

            debugger
            @*$formContainer.load('@Url.Action("MaterialRequestLoad", "Material")?mtd=@ViewBag.mtd', function () {*@
              $formContainer.load('@Url.Action("MaterialRequestLoad", "Material")?mtd=@ViewBag.mtd' + '&TransMode=@ViewBag.TransMode', function () {

                let $thisForm = $(this).find('[perfect-class="form"]');

                $thisForm.validate({

                   messages: validationMessage

                });
                $thisForm.attr('perfect-onFormSuccess', ' fn_MaterialRequestIndex_initialLoad');

                 initFunctions($thisForm);

                  $('[name="Mode"]').val('P');
                  getSessionValue(LastIDSessionKey, function (result) {
                      LastID_MaterialRequest = result;
                  });

            });

        }

    function loadMaterialRequest(ele) {
        let $sidemenu = $sideMenuOptions.body;

        let $thisForm = $(ele).closest('.testSearchBox');

        let SearchName = $thisForm.find('input').val();
        console.log("GH", SearchName)
        if (SearchName == undefined) {
            SearchName = "";
        }

        $sideMenuOptions.title.find('h4').text('Material Request');
          let pageUrl = '@Url.Action("GetMaterialRequestList", "Material")';
            $.ajax({
                url:pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name: SearchName, TransModes: '@ViewBag.TransMode'},
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {


                    if (ajaxOutput.Process.IsProcess) {

                        //setSessionValue(LastIDSessionKeyST, ajaxOutput.Data[0]["LastID"]);
                        setSessionValue(LastIDSessionKey, ajaxOutput.Data[0]["LastID"]);
                              console.log('TaxGroup', ajaxOutput);
                              $sidemenu.find('.jq_sidemenu_title').text("Material Request");

                        $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value="' + SearchName +'"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadMaterialRequest(this)"></button></div></div></div></div>', $('<div/>', {class:"col-md-12 table_temp_class"}).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                             // $sidemenu.find('table').dataTable({ paging: true });


                              let $table = $sidemenu.find('table');
                              $table.dataTable({
                                  "serverSide": true,//no change
                                  "processing": true,//-- process text when clicked
                                  //"lengthChange": false,
                                  "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                                  "searching": false,//--no change
                                  "ordering": false,//--sorting
                                  "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                  "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                  "pageLength": ajaxOutput.pageSize,//<----page size
                                  "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                  "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName, TransModes: '@ViewBag.TransMode' }, tableOptions, $table)
                              });

                          }
                    else {

                        //setSessionValue(LastIDSessionKeyST, 0);

                        setSessionValue(LastIDSessionKey, 0);
                        if (ajaxOutput.Process.Status = "NoData") {

                                  $sidemenu.find('.jq_sidemenu_title').text("Product");

                                  $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value="' + SearchName +'"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadMaterialRequest(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                        // $sidemenu.find('table').dataTable({ paging: true });


                        let $table = $sidemenu.find('table');
                        $table.dataTable({
                            "serverSide": true,//no change
                            "processing": true,//-- process text when clicked
                           // "lengthChange": false,
                           "lengthMenu": [],//---drop down page size
                            "searching": false,//--no change
                            "ordering": false,//--sorting
                            "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                            "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                            "pageLength": ajaxOutput.pageSize,//<----page size
                            "recordsFiltered": ajaxOutput.pageSize,//<---page size

                            "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, TransModes: '@ViewBag.TransMode'}, tableOptions, $table)
                        });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }




            },
            complete: function () {

            }
        });
    }
        function returnajaxPagination(ajaxInfo, tableOptions, tableid) {

        //{ apiurl, pageSize }
        return {
            url: ajaxInfo.apiurl,
            type: "post",
            data: function () {
                var info = tableid.DataTable().page.info();
                console.log('RETURN AJAX', info)
                //return { <antiforgery>:<antiforgery>, length: ajaxInfo.pageSize, page: info.page }
                let input = { pageSize: info.length, pageIndex: info.page, TransModes: ajaxInfo.TransModes};
                if (ajaxInfo.searchkey) {
                    input["Name"] = ajaxInfo.searchkey;
                }
                return input
            },
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (dtajaxOutput) {
                // $sideMenuOptions.body.html(pft_table_createtable(dtajaxOutput.Data, tableOptions));
                let table = tableid.DataTable();
                table.destroy();
                pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                tableid.dataTable({
                    "serverSide": true,
                    "processing": true,
                    //"lengthChange": false,
                    "lengthMenu": [10, 15, 20, 25, 50, 100],
                    "searching": false,
                    "ordering": false,
                    "deferLoading": dtajaxOutput.totalrecord,
                    "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                    "pageLength": dtajaxOutput.pageSize,
                    "recordsFiltered": dtajaxOutput.pageSize,
                    "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                })

            },

        }
        }

        function viewdetails() {
          debugger;
            let $thisUser = $(this).closest('tr');
             let savedData = $thisUser.data('pData');

            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');
                let inputData = {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),

                    ID_ProjectMaterialRequest: savedData.ID_ProjectMaterialRequest,
                    TransMode: '@ViewBag.TransMode'
                };
             console.log(inputData);
            //dbcall
                //$('#Servicemapping_formContainer').empty();
                    $.ajax({
                 url: '@Url.Action("GetMaterfialRequestInfo", "Material")',
                type: "POST",
                 // headers: { "token_key": "1234" },
                 data: inputData,//<---- Input json : data passed to controller
                dataType: "json",
              contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                        success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                            console.log('shjsdbf',ajaxOutput);
                         ///success
                            if (ajaxOutput.mptableInfo.Process.IsProcess) {//
                                debugger

                                $('#MaterialRequest_formContainer').load('@Url.Action("MaterialRequestLoad", "Material")?mtd=@ViewBag.mtd' + '&TransMode=@ViewBag.TransMode', function () {

                                    let $thisForm = $(this).find('[perfect-class="form"]');

                                    $thisForm.validate({ messages: validationMessage });

                                   // $thisForm.data({ 'pData': ajaxOutput.Data[0] });//setting pdata : which is used to get PostID when updating the  form in partial page


                                   //// ComDetailsTable_Fill($thisForm, 'cstatus', ajaxOutput.Data[0].Subservicemapping, tableOptionsTempOutFill)



                                    
                                    $thisForm.find('[name="ID_ProjectMaterialRequest"]').val(ajaxOutput.mptableInfo.Data[0].ID_ProjectMaterialRequest),
                                        $thisForm.find('[name="Project"]').val(ajaxOutput.mptableInfo.Data[0].Project),
                                        $thisForm.find('[name="ProjectID"]').val(ajaxOutput.mptableInfo.Data[0].FK_Project),                                        
                                        $thisForm.find('[name=ProjectID]').trigger('change'),
                                        $thisForm.find('[name=StageID]').val(ajaxOutput.mptableInfo.Data[0].FK_Stages).selectpicker('refresh'),
                                        $thisForm.find('[name=StageID]').trigger('change'),                                  
                                        $thisForm.find('[name="ProMatRequestDate"]').val(moment(ajaxOutput.mptableInfo.Data[0].ProMatRequestDate).format('YYYY-MM-DD')),    
                                        $thisForm.find('[name=TeamID]').val(ajaxOutput.mptableInfo.Data[0].FK_Team).selectpicker('refresh'),
                                       $thisForm.find('[name="TeamID"]').attr('perfect-onloadSelect', ajaxOutput.mptableInfo.Data[0].FK_Team);

                                        //$thisForm.find('[name=TeamID]').val(ajaxOutput.mptableInfo.Data[0].TeamName).selectpicker('refresh'),
                                       // $thisForm.find('[name=TeamID]').trigger('change'),
                                        $thisForm.find('[name="Employee"]').val(ajaxOutput.mptableInfo.Data[0].Employee),                                   
                                        $thisForm.find('[name=EmployeeID]').val(ajaxOutput.mptableInfo.Data[0].FK_Employee).selectpicker('refresh'),
                                        
                                        //$thisForm.find('[name=TeamID]').attr('perfect-onloadSelect', ajaxOutput.mptableInfo.Data[0].FK_Team),                                       
                                   // $thisForm.find('[name=TeamID]').val(ajaxOutput.mptableInfo.Data[0].TeamName),
                                        
                                    ComDetailsTable_Fill($thisForm, 'Opening', ajaxOutput.mptableInfo.Data[0].MaterialRequestDetailsView, tableOptionsTempOut2)

                                    $thisForm.find('button[name=add]').addClass('d-none');
                                    $thisForm.find('button[name=update]').removeClass('d-none');
                                    $thisForm.attr('perfect-onFormSuccess', 'fn_MaterialRequestIndex_initialLoad');
                                    $sideMenuOptions.close();

                                });
                            }



                },


            });

        }





    function deleteMaterial() {
             let $row = $(this).closest('tr');
            let Saveddata = $row.data('pData');


            console.log('Delete function', Saveddata)

            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');

            //get reason list-

               $.ajax({
                   url: "@Url.Action("GetMaterialReasonList", "Material")",
                   type: "GET",
                  // data: inputReason,
                   contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                   success: function (ajaxReasonOutput) {
                       if (ajaxReasonOutput.Process.IsProcess) {

                           console.log('Inside res ajax', ajaxReasonOutput.Data)


                          // let confirmationDialogBoxOption = { body: "Do you want to remove  ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                           let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove " + Saveddata.Project+ " ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                            var res = ConfirmDialog(confirmationDialogBoxOption);

                          res.then(function (selectedOption) {
                                if (selectedOption) {
                                   //  console.log('customerIndex> delete function:',selectedOption)

                                    let inputData = {
                                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(), //antiforgery token
                                        ID_ProjectMaterialRequest: Saveddata.ID_ProjectMaterialRequest,
                                        TransMode: MaterialRequestTransMode,

                                        ReasonID: selectedOption
                                    };
                                    $.ajax({
                                        url: "@Url.Action("DeleteMaterialRequest", "Material")",
                                        type: "POST",
                                        data: inputData,
                                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                        success: function (ajaxOutput) {
                                            if (ajaxOutput.Process.IsProcess) {

                                                let table = $row.closest('table').DataTable()
                                                table.row($row).remove().draw();

                                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully' });
                                                });

                                                //removing a data
                                                $('.dataTable tr').removeClass("SelectForDelete");

                                            }
                                            else {
                                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                    $('.dataTable tr').removeClass("SelectForDelete");
                                                });
                                            }
                                        }
                                    });
                                }
                                else {
                                    NotificationMessage({ 'message': 'No option selected' });
                                }

                            });


                        }
                        else {



                        }
                   }

               });




        };




</script>
}




