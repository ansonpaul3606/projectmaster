@{
    ViewBag.Title = "MenuGroup";
 
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12" id="menuGroup-form">
        </div>
    </div>
</div>
@section scripts{
    <script>
        const $formContainer = $('#menuGroup-form');
        $(document).ready(function () {
            menuGroupInitialLoad();
             @if (ViewBag.PagedAccessRights.UsrrlMsView)
             {
                <text> loadMenuGroupList(this); </text>
             }
        });

        var validationMessage = {
            'MenuGoupName': {
                'required': 'Please enter a group name',
                'maxlength': jQuery.validator.format(' Name should be less than {0} characters'),
                'stringonly': 'Special characters are not allowed in name'
            },            
            'SortNo': {
                'required': 'Please select sort number'
            },
            'ModuleName': {
                'required': 'Please select module name'
            }
        };

        function menuGroupInitialLoad() {
            loadMenuGroupAddForm();
        }

        function loadMenuGroupAddForm() {
            $formContainer.load('@Url.Action("LoadMenuGroup", "Menu")', function () {
                let $thisForm = $(this).find('[perfect-class="form"]');
                $thisForm.validate({ messages: validationMessage });
                $thisForm.attr('perfect-onFormSuccess', 'menuGroupInitialLoad');
            });
        }
        function loadMenuGroupList(ele) {
        let $sidemenu = $sideMenuOptions.body;       
        let $thisForm = $(ele).closest('.testSearchBox');
        let SearchName = $thisForm.find('input').val();
        $sideMenuOptions.title.find('h4').text('Menu Group List');
          let pageUrl = '@Url.Action("GetMenuGroupList", "Menu")';
            $.ajax({
                url:pageUrl,
                type: "POST",
                data: { pageSize: 10, pageIndex: 0, Name: SearchName },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {
                    if (ajaxOutput.Process.IsProcess)
                    {
                              $sidemenu.find('.jq_sidemenu_title').text("Menu Group List");
                        $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadMenuGroupList(this)"></button></div></div></div></div>', $('<div/>', {class:"col-md-12 table_temp_class"}).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))                            
                              let $table = $sidemenu.find('table');
                              $table.dataTable({
                                  "serverSide": true,
                                  "processing": true,                                
                                  "lengthMenu": [10, 15, 20, 25, 50, 100],
                                  "searching": false,
                                  "ordering": false,
                                  "deferLoading": ajaxOutput.totalrecord,
                                  "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,
                                  "pageLength": ajaxOutput.pageSize,
                                  "recordsFiltered": ajaxOutput.pageSize,
                                  "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName }, tableOptions, $table)
                              });
                    }
                    else
                    {
                              if (ajaxOutput.Process.Status = "NoData")
                              {                                 
                                    $sidemenu.find('.jq_sidemenu_title').text("Menu Group");
                                  $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="loadMenuGroupList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                                    let $table = $sidemenu.find('table');
                                    $table.dataTable({
                                        "serverSide": true,
                                        "processing": true,                          
                                        "lengthMenu": [],
                                        "searching": false,
                                        "ordering": false,
                                        "deferLoading": ajaxOutput.totalrecord,
                                        "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,
                                        "pageLength": ajaxOutput.pageSize,
                                        "recordsFiltered": ajaxOutput.pageSize,
                                        "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize }, tableOptions, $table)
                                    });
                              }
                              else
                              {
                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                    });
                              }
                    }
                },
                complete: function () {

                }
        });
    }
    function returnajaxPagination(ajaxInfo, tableOptions, tableid) {        
        return {
            url: ajaxInfo.apiurl,
            type: "post",
            data: function () {
                var info = tableid.DataTable().page.info();               
                let input = { pageSize: info.length, pageIndex: info.page };
                if (ajaxInfo.searchkey) {
                    input["Name"] = ajaxInfo.searchkey;
                }
                return input
            },
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (dtajaxOutput) {
              
                let table = tableid.DataTable();
                table.destroy();
                pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);
                tableid.dataTable({
                    "serverSide": true,
                    "processing": true,                  
                    "lengthMenu": [10, 15, 20, 25, 50, 100],
                    "searching": false,
                    "ordering": false,
                    "deferLoading": dtajaxOutput.totalrecord,
                    "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                    "pageLength": dtajaxOutput.pageSize,
                    "recordsFiltered": dtajaxOutput.pageSize,
                    "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                })

            },

        }
    }
   

    
    var tableOptions = {
        dropdown: {
            buttons: [
            
               @if (ViewBag.PagedAccessRights.UsrrlMsView) {
        <text> { displayName: "View", action: editMenuGroup },</text>
    }

                    { type: "divider" },
                @if (ViewBag.PagedAccessRights.UsrrlMsDel)
                {
                 <text> { displayName: "Delete", action: deleteMenuGroup },</text>
                }
                ],
            class: "btn btn-success light sharp"
        },
        hideColumn: ["ID_MenuGroup", "SubModule", "MnuGrpVisible", "SortOrder", "TotalCount","MnuGrpIcon"],
        rowClickAction: editMenuGroup,       
        renameHeader: { "SlNo": "SL NO","MnuGrpName": "Group Name"}

        };

        function editMenuGroup()
        {
            let $thisUser = $(this).closest('tr');
            let savedData = $thisUser.data('pData');

            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');

            let inputData = { ID_MenuGroup: savedData.ID_MenuGroup};
          
            $('#LoadMenuGroup').empty();
                $.ajax({
                 url: '@Url.Action("GetMenuGroupInfo", "Menu")',
                type: "POST",
                 data: JSON.stringify(inputData),
                dataType: "json",
                contentType: "application/json",
                    success: function (ajaxOutput) {
                        if (ajaxOutput.Process.IsProcess) {
                            $sideMenuOptions.close();
                            $formContainer.load("@Url.Action("LoadMenuGroup", "Menu")", function () {
                            $(this).find('[perfect-class=formTitle]').text('update : ' + ajaxOutput.Data[0].MnuGrpName)                           
                            let $thisForm = $(this).find('[perfect-class="form"]');
                            $thisForm.validate({ messages: validationMessage });
                            $thisForm.data({ pData: ajaxOutput.Data[0] }); 
                            $thisForm.attr('perfect-onFormSuccess', 'menuGroupInitialLoad');
                            $thisForm.find('button[name=add]').addClass('d-none');
                            $thisForm.find('button[name=update]').removeClass('d-none');
                            $thisForm.find('[name=ID_MenuGroup]').val(ajaxOutput.Data[0].ID_MenuGroup);
                            $thisForm.find('[name=MenuGoupName]').val(ajaxOutput.Data[0].MnuGrpName);
                            $thisForm.find('[name="ModuleName"]').val(ajaxOutput.Data[0].SubModule).selectpicker('refresh');                           
                            $thisForm.find('[name=MnuGrpVisible]').prop('checked', ajaxOutput.Data[0].MnuGrpVisible);
                            $thisForm.find('[name=SortNo]').val(ajaxOutput.Data[0].SortOrder);
                            $thisForm.find('[name=GroupIcon]').val(ajaxOutput.Data[0].MnuGrpIcon);                           
                            $sideMenuOptions.close();

                     });
                 }
                 else {                     
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                         NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         $('.dataTable tr').removeClass("SelectForDelete");
                     });
                 }
             },

         });
        }
        function deleteMenuGroup() {
            let $row = $(this).closest('tr');
            let Saveddata = $row.data('pData');  

            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');

               $.ajax({
                   url: "@Url.Action("GetMenuReasonList", "Menu")",
                   type: "GET",               
                   contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                   success: function (ajaxReasonOutput) {
                       if (ajaxReasonOutput.Process.IsProcess) {
                           let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove    " + Saveddata.MnuGrpName + " ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                           var confirmBoxObj = ConfirmDialog(confirmationDialogBoxOption);
                            confirmBoxObj.then(function (selectedOption) {
                                if (selectedOption) {                                   
                                    let inputData = {
                                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                        FK_MenuGroup: Saveddata['ID_MenuGroup'],
                                        FK_Reason: selectedOption
                                    };
                                    $.ajax({
                                        url: "@Url.Action("DeleteMenuGroup", "Menu")",
                                        type: "POST",
                                        data: inputData,
                                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                        success: function (ajaxOutput) {
                                            if (ajaxOutput.Process.IsProcess) {
                                                let table = $row.closest('table').DataTable()
                                                table.row($row).remove().draw();

                                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully' });
                                                });
                                                menuGroupInitialLoad();
                                                $('.dataTable tr').removeClass("SelectForDelete");
                                            }
                                            else {
                                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                    $('.dataTable tr').removeClass("SelectForDelete");
                                                });
                                            }
                                        }
                                    });
                                }
                                else {
                                    NotificationMessage({ 'message': 'No option selected' });
                                }

                            });


                        }
                        else {



                        }
                   }

               });

        }
    </script>
}