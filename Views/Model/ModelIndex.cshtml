@{
    ViewBag.Title = "Model";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid">

    <div class="row">
        <div class="col-lg-12" id="model-sample-form">

        </div>
    </div>


</div>
@section scripts{

    <script>


        var tableOptions = {
            dropdown: {
                buttons: [

                
               @if (ViewBag.PagedAccessRights.UsrrlMsView) {
        <text> { displayName: "View", action: editModel },</text>
    }

                    { type: "divider" },
     @if (ViewBag.PagedAccessRights.UsrrlMsDel)
             {
                 <text> { displayName: "Delete", action: deleteModel },</text>

              }
                
                   
                ],
                class: "btn btn-success light sharp"
            },
            onlyShowColumn: ["ModelName", "ShortName"],
            hideColumn: [],
            rowClickAction: editModel,
            serialNo: true,
            renameHeader: { "SlNo": "Sl No.", "ModelName": "Name"},
        };

        var validationMessage = {
            'ModelName': {
                'required': 'Please Enter Name',
                'stringonly': 'Invalid Model Name selected',

            },
            'ModelShortName': {
                'required': 'Please Enter ShortName',
                'alphanumeric': 'Invalid Model Short Name selected',

            },
            'ManufaturerID': {
                'required': 'Please select a Manufaturer',
                'stringonly': 'Invalid Manufaturer selected',

            },
            'ModeID': {
                'required': 'Please select a Mode',
                'stringonly': 'Invalid Mode selected',

            },

        }



        $(document).ready(function () {
            initialloadModelform();
        });

        function initialloadModelform() {
            loadAddModelForm();
              @if (ViewBag.PagedAccessRights.UsrrlMsView)
              {
                 <text>   loadModelList(this); </text>
              }
           

        }
         

        function loadAddModelForm() {

            $('#model-sample-form').load("@Url.Action("ModelView", "Model")", function () {
                let $thisForm = $(this).find('[perfect-class="form"]');
                $thisForm.validate({
                    // ...
                    messages: validationMessage
                    // ...
                });
                $thisForm.attr('perfect-onFormSuccess', 'initialloadModelform');
                

            });
        }

        
        function loadModelList() {
            let $sidemenu = $sideMenuOptions.body;
            $sideMenuOptions.title.find('h4').text('Model list');
        //    alert("ss")

            $.ajax({
                url: "@Url.Action("GetModelList", "Model")",
                type: "Get",
                headers: { "token_key": "1234" },
              
                dataType: "json",
                contentType: "application/json",
                success: function (ajaxOutput) {
                    console.log('Value is this', ajaxOutput.Data)
                    if (ajaxOutput.Process.IsProcess) {


                        $sideMenuOptions.body.html(pft_table_createtable(ajaxOutput.Data, tableOptions))
                        $sideMenuOptions.body.find('table').dataTable({ paging: true });

                        console.log('Load Model List', ajaxOutput);
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                        });
                    }
                    else {
                        if (ajaxOutput.Process.Status == 'NoData') { }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }
                    }

                    console.log('Model Load', ajaxOutput);
                },
                complete: function () {

                }
            });
        }

         function editModel() {

            let $thisUser = $(this).closest('tr');
             let savedData = $thisUser.data('pData');


             $('.dataTable tr').removeClass("SelectForDelete");
             $(this).closest('tr').addClass('SelectForDelete');
            
             let inputData = { ID_Model: savedData.ID_Model };
             console.log(inputData);
            //dbcall
            $('#model-sample-form').empty();
                    $.ajax({
                 url: '@Url.Action("GetModelInfo", "Model")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                 // headers: { "token_key": "1234" },
                 data: JSON.stringify(inputData),//<---- Input json : data passed to controller
                dataType: "json",
                contentType: "application/json",
                        success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                            if (ajaxOutput.Process.IsProcess) {


                                $('#model-sample-form').load("@Url.Action("ModelView", "Model")", function () {

                                    let $thisForm = $(this).find('[perfect-class="form"]');
                                    $thisForm.validate({ messages: validationMessage });
                                    $thisForm.data({ 'pData': ajaxOutput.Data[0] });//setting pdata : which is used to get PostID when updating the  form in partial page


                                    $thisForm.find('[name=ModelName]').val(ajaxOutput.Data[0].ModelName),
                                        $thisForm.find('[name=ModelShortName]').val(ajaxOutput.Data[0].ShortName),
                                        $thisForm.find('[name=ModeID]').val(ajaxOutput.Data[0].Mode).selectpicker('refresh'),
                                        $thisForm.find('[name=ManufaturerID]').val(ajaxOutput.Data[0].FK_Manufacturer).selectpicker('refresh'),
                                        $thisForm.find('[name=SortOrder]').val(ajaxOutput.Data[0].SortOrder)
                                    //show update button
                                    $thisForm.find('button[name=add]').addClass('d-none');
                                    $thisForm.find('button[name=update]').removeClass('d-none');

                                    $thisForm.attr('perfect-onFormSuccess', 'initialloadModelform');

                                    $sideMenuOptions.close();

                                });
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {

                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }

                },


            });

        }



        function deleteModel() {
            let $row = $(this).closest('tr');

            let Saveddata = $row.data('pData');


            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');

               $.ajax({
                   url: "@Url.Action("GetModelDeleteReasonList", "Model")",
                   type: "GET",
                   contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                   success: function (ajaxReasonOutput) {
                       if (ajaxReasonOutput.Process.IsProcess) {

                          //old delete section


                           let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove " + Saveddata.ModelName + " ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                            var res = ConfirmDialog(confirmationDialogBoxOption);
                            res.then(function (ret) {
                                if (ret) {

                                    let inputData = {
                                       __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(), //antiforgery token
                                        ID_Model: Saveddata.ID_Model,
                                        ReasonID: ret
                                    };

                                    $.ajax({
                                        url: "@Url.Action("DeleteModel", "Model")",
                                        type: "POST",
                                        data: inputData, //antiforgery token removed json.stringify
                                        contentType: "application/x-www-form-urlencoded; charset=utf-8",//antiforgery token changed json->x-www-form-urlencode...
                                        success: function (data) {
                                            initialloadModelform();
                                            //loadAddModelForm();
                                            if (data.Process.IsProcess) {
                                                let table = $row.closest('table').DataTable()
                                                table.row($row).remove().draw();
                                               
                                                $.each(data.Process.Message, function (key, value) {
                                                    //toastr.success(value, "Success");
                                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                                });
                                            }
                                            else {
                                                $.each(data.Process.Message, function (key, value) {
                                                    // toastr.warning(value, "Error");
                                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                });
                                            }
                                            //row.remove();
                                            //$(row).closest('table').reload()
                                            
                           
                                        }
                                    });
                                }
                                else {
                                    //toastr.warning("Clicked no in comfirmation box", "Confirmation Box in table");
                                    NotificationMessage({ 'message': 'No option selected' });
                                }
                            });

                           //old delete section

                    }
                }

            });




        };











   


    </script>


}
