@{
    ViewBag.Title = "Other Charge Type";
}


<div class="container-fluid">
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12" id="otherchargetype-form">

        </div>
    </div>
</div>
@section scripts{

<script type="text/javascript">

    const $formContainer = $('#otherchargetype-form');

    $(document).ready(function () {
        otherchargetypeInitialLoad();

    });

    var validationMessage = {
        'Names': {
            'required': 'Please Enter a Name',
            'maxlength': jQuery.validator.format(' Name should be less than {0} characters'),
            'stringonly': 'Special characters are not allowed in  Name'

        },
        'ShortName': {
            //'required': 'Please Enter a Short Name',
            'maxlength': jQuery.validator.format(' Name should be less than {0} characters'),
            'alphanumeric': 'Special characters are not allowed in short name'
        },

        'TransTypeID': {
            'required': 'Please Select a Trans Type',
            'digits': 'Invalid Trans Type selected'
        },
        'ChargeEffect': {
            'required': 'Please Select atleast one module'
        },

    };


    function otherchargetypeInitialLoad() {

           @if (ViewBag.PagedAccessRights.UsrrlTyView)
              {
                 <text>   otherchargertypeList(this); </text>
              }
       
        loadotherchargetypeAddForm();
    }


    // Fucntion to load otherchargetype ADD form

    function loadotherchargetypeAddForm() {

        $formContainer.load('@Url.Action("LoadFormOtherChargeType", "OtherChargeType")?mtd=@ViewBag.mtd', function () {

            let $thisForm = $(this).find('[perfect-class="form"]');
            $thisForm.validate({ messages: validationMessage });
            $("#OtherChargeTypeTransMode").val('@ViewBag.TransMode');
            $thisForm.attr('perfect-onFormSuccess', 'otherchargetypeInitialLoad');
        });

    };


    @*function otherchargertypeList() {
        let $sidemenu = $sideMenuOptions.body;
        $sideMenuOptions.title.find('h4').text('Other Charge List');


        $.ajax({
            url: "@Url.Action("GetOtherChargeTypeList", "OtherChargeType")",
            type: "Get",
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {

                if (ajaxOutput.Process.IsProcess) {

                    console.log('OtherChargeType', ajaxOutput);
                    $sidemenu.find('.jq_sidemenu_title').text("OtherChargeType");

                    $sidemenu.html(pft_table_createtable(ajaxOutput.Data, tableOptions))
                    $sidemenu.find('table').dataTable({ paging: true });
                }
                else {
                    if (ajaxOutput.Process.Status = "NoData") { }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }




            },
            complete: function () {

            }
        });
    }*@

    function otherchargertypeList(ele) {
        debugger

        let $sidemenu = $sideMenuOptions.body;

       // let $thisForm = $(ele).closest('.Search-Control');

        let $thisForm = $(ele).closest('.testSearchBox');
        let SearchName = $thisForm.find('input').val();
            console.log("GH", SearchName)
            if (SearchName == undefined) {
                SearchName = "";
            }
        $sideMenuOptions.title.find('h4').text('Other Charge Type List');
          let pageUrl = '@Url.Action("GetOtherChargeTypeList", "OtherChargeType")';
            $.ajax({
                url:pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name: SearchName },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {


                          if (ajaxOutput.Process.IsProcess) {
                              console.log('OtherChargeType', ajaxOutput);
                              $sidemenu.find('.jq_sidemenu_title').text("OtherChargeType");

                              $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value="' + SearchName +'"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="otherchargertypeList(this)"></button></div></div></div></div>', $('<div/>', {class:"col-md-12 table_temp_class"}).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                             // $sidemenu.find('table').dataTable({ paging: true });


                              let $table = $sidemenu.find('table');
                              $table.dataTable({
                                  "serverSide": true,//no change
                                  "processing": true,//-- process text when clicked
                                  //"lengthChange": false,
                                  "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                                  "searching": false,//--no change
                                  "ordering": false,//--sorting
                                  "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                  "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                  "pageLength": ajaxOutput.pageSize,//<----page size
                                  "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                  "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName }, tableOptions, $table)
                              });

                          }
                else {
                              if (ajaxOutput.Process.Status = "NoData") {

                                  $sidemenu.find('.jq_sidemenu_title').text("Product");

                                  $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value="' + SearchName +'"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="otherchargertypeList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))
                        // $sidemenu.find('table').dataTable({ paging: true });


                        let $table = $sidemenu.find('table');
                        $table.dataTable({
                            "serverSide": true,//no change
                            "processing": true,//-- process text when clicked
                           // "lengthChange": false,
                           "lengthMenu": [],//---drop down page size
                            "searching": false,//--no change
                            "ordering": false,//--sorting
                            "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                            "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                            "pageLength": ajaxOutput.pageSize,//<----page size
                            "recordsFiltered": ajaxOutput.pageSize,//<---page size

                            "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize }, tableOptions, $table)
                        });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }




            },
            complete: function () {

            }
        });
    }
    function returnajaxPagination(ajaxInfo, tableOptions, tableid) {
        //{ apiurl, pageSize }
        return {
            url: ajaxInfo.apiurl,
            type: "post",
            data: function () {
                var info = tableid.DataTable().page.info();
                console.log('RETURN AJAX', info)
                //return { <antiforgery>:<antiforgery>, length: ajaxInfo.pageSize, page: info.page }
                let input = { pageSize: info.length, pageIndex: info.page };
                if (ajaxInfo.searchkey) {
                    input["Name"] = ajaxInfo.searchkey;
                }
                return input
            },
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (dtajaxOutput) {
                // $sideMenuOptions.body.html(pft_table_createtable(dtajaxOutput.Data, tableOptions));
                let table = tableid.DataTable();
                table.destroy();
                pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                tableid.dataTable({
                    "serverSide": true,
                    "processing": true,
                    //"lengthChange": false,
                    "lengthMenu": [10, 15, 20, 25, 50, 100],
                    "searching": false,
                    "ordering": false,
                    "deferLoading": dtajaxOutput.totalrecord,
                    "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                    "pageLength": dtajaxOutput.pageSize,
                    "recordsFiltered": dtajaxOutput.pageSize,
                    "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                })

            },

        }
        }


    var tableOptions = {
        dropdown: {
            buttons: [

            
                 @if (ViewBag.PagedAccessRights.UsrrlTyView) {
        <text> { displayName: "View", action: editOtherChargeType },</text>
    }

                    { type: "divider" },
     @if (ViewBag.PagedAccessRights.UsrrlTyDel)
             {
                 <text> { displayName: "Delete", action: deleteOtherChargeType },</text>

              }
                
            ],
            class: "btn btn-success light sharp"
        },
        onlyShowColumn: ["SlNo","Names", "ShortName"],
        hideColumn: [],
        rowClickAction: editOtherChargeType,
       // serialNo: true,
        renameHeader: { "SlNo": "SL NO","Names": "Name", "ShortName": "ShortName" }

    };

    function editOtherChargeType() {
        let row = $(this).closest('tr');

        let Saveddata = row.data('pData');
        console.log("Saved data", Saveddata);

        $('.dataTable tr').removeClass("SelectForDelete");
        $(this).closest('tr').addClass('SelectForDelete');

        let inputData = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            OtherChargeTypeID: Saveddata.OtherChargeTypeID

        };

        $.ajax({
            url: '@Url.Action("GetOtherChargeTypeInfoByID", "OtherChargeType")',
            type: "POST",

            data: inputData,
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded;charset=utf-8',
            success: function (ajaxOutput) {


                console.log("Return", ajaxOutput);
                if (ajaxOutput.Process.IsProcess) {

                    console.log('>_ Inside GetOtherChargeTypeInfo', ajaxOutput)

                    $sideMenuOptions.close();

                    $formContainer.load("@Url.Action("LoadFormOtherChargeType", "OtherChargeType")?mtd=@ViewBag.mtd", function () {

                        $(this).find('[perfect-class=formTitle]').text('update : ' + ajaxOutput.Data[0].Names)
                        console.log('Inside load');

                        let $thisForm = $(this).find('[perfect-class="form"]');

                        $thisForm.validate({ messages: validationMessage });

                        $thisForm.data({ pData: ajaxOutput.Data[0] }); //setting the pdata value in form for update -id is taking

                        $thisForm.attr('perfect-onFormSuccess', 'otherchargetypeInitialLoad');
                        // alert(ajaxOutput.Data[0].BranchTypeID);
                        $thisForm.find('button[name=add]').addClass('d-none');
                        $thisForm.find('button[name=update]').removeClass('d-none');

                        $thisForm.find('[name="Names"]').val(ajaxOutput.Data[0].Names),
                            $thisForm.find('[name="ShortName"]').val(ajaxOutput.Data[0].ShortName),
                            $thisForm.find('[name="TransTypeID"]').val(ajaxOutput.Data[0].TransTypeID).selectpicker('refresh'),
                            $thisForm.find('[name="ChargeEffect"][value="Sales"]').prop('checked', ajaxOutput.Data[0].Sales),
                            $thisForm.find('[name="ChargeEffect"][value="SalesReturn"]').prop('checked', ajaxOutput.Data[0].SalesReturn),
                            $thisForm.find('[name="ChargeEffect"][value="Purchase"]').prop('checked', ajaxOutput.Data[0].Purchase),
                            $thisForm.find('[name="ChargeEffect"][value="PurchaseReturn"]').prop('checked', ajaxOutput.Data[0].PurchaseReturn),
                            $thisForm.find('[name="ChargeEffect"][value="Other"]').prop('checked', ajaxOutput.Data[0].Other),

                            $thisForm.find('[name="AccountHead"]').val(ajaxOutput.Data[0].AccountHead),
                            $thisForm.find('[name="AHeadName"]').val(ajaxOutput.Data[0].AHeadName),
                            $thisForm.find('[name="AccountHeadSub"]').val(ajaxOutput.Data[0].AccountHeadSub),
                            $thisForm.find('[name="ASHeadName"]').val(ajaxOutput.Data[0].ASHeadName),
                            $thisForm.find('[name="SortOrder"]').val(ajaxOutput.Data[0].SortOrder),                           
                            $thisForm.find('[name="TaxGroupID"]').val(ajaxOutput.Data[0].FK_TaxGroup).selectpicker('refresh'),
                          $("#OtherChargeTypeTransMode").val('@ViewBag.TransMode');
                    });
                }
                else {
                    console.log('>_ Inside GetOtherchargetypeInfo :false')

                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            },

        });

    }

    function deleteOtherChargeType() {
        let $row = $(this).closest('tr');


        let Saveddata = $row.data('pData');
        console.log("Saved data", Saveddata);

        $('.dataTable tr').removeClass("SelectForDelete");
        $(this).closest('tr').addClass('SelectForDelete');

        $.ajax({
            url: "@Url.Action("GetOtherChargeTypeReasonList", "OtherChargeType")",
            type: "GET",
            // data: inputReason,
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (ajaxReasonOutput) {
                if (ajaxReasonOutput.Process.IsProcess) {

                    console.log('Inside res ajax', ajaxReasonOutput.Data)


                    //delete code

                    let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove   "  + Saveddata.Name + " ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                    var res = ConfirmDialog(confirmationDialogBoxOption);



                    res.then(function (ret) {
                        if (ret) {

                            let inputData = {
                                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                ID_OtherChargeType: Saveddata.OtherChargeTypeID,
                                ReasonID: ret
                            };


                            $.ajax({
                                url: "@Url.Action("DeleteOtherChargeType", "OtherChargeType")",
                                type: "POST",
                                data: inputData,
                                contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                                success: function (ajaxOutput) {

                                    if (ajaxOutput.Process.IsProcess) {

                                        $.each(ajaxOutput.Process.Message, function (key, value) {

                                            NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully' });
                                        });

                                        //removing a data
                                        let table = $row.closest('table').DataTable()
                                        table.row($row).remove().draw();
                                    }
                                    else {
                                        $.each(ajaxOutput.Process.Message, function (key, value) {

                                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                        });
                                    }

                                }
                            });


                        }
                        else {

                            NotificationMessage({ 'message': 'No option selected' });
                        }

                    });

                    //-----delete code

                }
            }
        });

    };


</script>


    }
