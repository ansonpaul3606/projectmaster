

@{
    ViewBag.Title = "Production Status";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .JcfCompletedQty {
        text-align: right !important;
    }
    .JcfDamagedQty {
        text-align: right !important;
    }
    .JcfReturnedQty {
        text-align: right !important;
    }
 
    .Leadgen:after {
        content: ' ';
        display: block;
        border: 0.2px solid #e7e3e3e8;
    }

    .Leadgentitle span {
        position: relative;
        z-index: 1;
        padding-right: 30px;
    }

    .clsUsedQty {
        text-align: right;
        width: 20%;
    }

    #div_top_hypers {
        background-color: #eeeeee;
        display: inline;
    }

    #ul_top_hypers li {
        display: inline;
    }

    .disabledtab {
        pointer-events: none;
        cursor: default;
    }

    .tooltip-inner {
        border-radius: 0;
        background: #f4f5f9;
        color: #030304;
        font-size: 13px;
        font-weight: 300;
        padding: 0.35rem 0.7rem;
    }

    .Productbody > tr:last-child {
        font-size: 13px;
        font-weight: bold;
    }

    .tableFixHead {
        overflow: auto;
        height: 242px;
    }

        .tableFixHead thead tr {
            position: sticky;
            top: 0;
            z-index: 1;
        }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 8px 16px;
    }

    th {
        background: var(--perfect-primary);
    }

    .PrdnQty {
        text-align: right;
        width: 100%;
    }
</style>
<div class="container-fluid">
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-xl-12">
            <div class="form-group row" perfect-class="formGroup">
                <div class="col-xl-4"> </div>

                <div class="col-xl-4"> </div>
            </div>
        </div>

        <div class="col-lg-12" id="jq_ProductionStatusIndex_formContainer">

        </div>
    </div>


</div>

@section scripts{
    <script type="text/javascript">
       
    const $formContainer = $('#jq_ProductionStatusIndex_formContainer');
        var ProductionStatusTransMode = '';

        var validationMessage = {
            'FromDate': {
                'required': 'Please Select From Date',
                'max': jQuery.validator.format('Please Enter a Valid Date')
            },
        }
        $(document).ready(function () {
            fn_ProductionStatusIndex_initialLoad();
        });
        function fn_ProductionStatusIndex_initialLoad() {
             
            ProductionStatusTransMode = '@ViewBag.TransMode';
            fn_jobcrdasgnIndexAddForm();
            fn_loadJobCardFollowUpList(this);
        
        }
        function fn_jobcrdasgnIndexAddForm() {

            let ddlStages = $('select[name=FK_ProjectStages]');
            let $ID_ProjectStages = $(ddlStages).val() == "" ? "0" : $(ddlStages).val();

            $formContainer.load('@Url.Action("LoadProductionStatus", "ProductionStatus")', function () {
                let $thisForm = $(this).find('[perfect-class="form"]');
                $thisForm.find('[name="FromDate"]').val(moment().format('YYYY-MM-DD'));
                $thisForm.find('[name="ToDate"]').val(moment().format('YYYY-MM-DD'));

                $thisForm.attr('perfect-onFormSuccess', 'fn_ProductionStatusIndex_initialLoad');

                $thisForm.closest('.jq_productionstatus_body').find('.leadformSesction').addClass('d-none');
                let inputData = {            //
                    FK_Employee: $thisForm.find('[name="FK_Employee"]').val(), 
                    FromDate: $thisForm.find('[name="FromDate"]').val(),
                    ToDate: $thisForm.find('[name="ToDate"]').val(),
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val()
                };

                $.ajax({
                    url: "@Url.Action("GetJobCards", "ProductionStatus")",
                    type: "POST",
                    data: inputData,//<---- Input json : data passed to controller
                    dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {
                        $('#todobadge').html("0");
                        $('#overduebadge').html("0");
                        $('#tasksbadge').html("0");
                        if (ajaxOutput.Process.IsProcess && ajaxOutput.Data[0].MasterId > 0) {
                            if (ajaxOutput.Data.length > 0) {
                                $('#todobadge').html("" + ajaxOutput.Data[0].Value + "");
                            } if (ajaxOutput.Data.length > 1) {
                                $('#overduebadge').html("" + ajaxOutput.Data[1].Value + "");
                            }
                            if (ajaxOutput.Data.length > 2) {
                                $('#tasksbadge').html("" + ajaxOutput.Data[2].Value + "");
                            }

                        }  
                        $('#Todolist')[0].click();
                    },
                    complete: function () {

                    }
                });
            });

        };
        function fn_loadJobCardFollowUpList(ele) {


            let $sidemenu = $sideMenuOptions.body;
            console.log($sidemenu);
            let $thisForm = $(ele).closest('.testSearchBox');
            let SearchName = $thisForm.find('input').val();
            if (SearchName == undefined) {
                SearchName = "";
            }
            $sideMenuOptions.title.find('h4').text('Production Status List');
             let pageUrl = '@Url.Action("GetJobCardFollowUpList", "ProductionStatus")';
            $.ajax({
                url:pageUrl,
                type: "POST",
                data: { pageSize: 10, pageIndex: 0, Name: SearchName, TransMode: ProductionStatusTransMode },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {

                    if (ajaxOutput.Process.IsProcess) {

                        $sidemenu.find('.jq_sidemenu_title').text("Production Status List");
                        $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="fn_loadJobCardFollowUpList(this)"></button></div></div></div></div>', $('<div/>', {class:"col-md-12 table_temp_class"}).html(pft_table_createtable(ajaxOutput.Data, tableOptionList)))
                              let $table = $sidemenu.find('table');
                              $table.dataTable({
                                  "serverSide": true,
                                  "processing": true,
                                //  "lengthMenu": [10, 15, 20, 25, 50, 100],
                                  "searching": false,
                                  "ordering": false,
                                  "deferLoading": ajaxOutput.totalrecord,
                                  "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,
                                  "pageLength": ajaxOutput.pageSize,
                                  "recordsFiltered": ajaxOutput.pageSize,
                                  "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName, TransMode: ProductionStatusTransMode }, tableOptionList, $table)
                              });
                          }
                          else
                          {
                            if (ajaxOutput.Process.Status = "NoData") {
                                $sidemenu.find('.jq_sidemenu_title').text("Production Status List");

                                $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="fn_loadJobCardFollowUpList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptionList)))

                                let $table = $sidemenu.find('table');
                                $table.dataTable({
                                    "serverSide": true,
                                    "processing": true,
                                  // "lengthMenu": [0],
                                    "searching": false,
                                    "ordering": false,
                                    "deferLoading": ajaxOutput.totalrecord,
                                    "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,
                                    "pageLength": ajaxOutput.pageSize,
                                    "recordsFiltered": ajaxOutput.pageSize,
                                    "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName, TransMode: ProductionStatusTransMode }, tableOptionList, $table)
                                });
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                          }
            },
            complete: function () {

            }
        });
        }

    function returnajaxPagination(ajaxInfo, tableOptionList, tableid) {
        return {
            url: ajaxInfo.apiurl,
            type: "post",
            data: function () {
                var info = tableid.DataTable().page.info();
                let input = { pageSize: info.length, pageIndex: info.page,TransMode: ajaxInfo.TransMode};
                if (ajaxInfo.searchkey) {
                    input["Name"] = ajaxInfo.searchkey;
                }
                return input
            },
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (dtajaxOutput) {
                let table = tableid.DataTable();
                table.destroy();
                pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptionList);
                tableid.dataTable({
                    "serverSide": true,
                    "processing": true,
                   // "lengthMenu": [10, 15, 20, 25, 50, 100],
                    "searching": false,
                    "ordering": false,
                    "deferLoading": dtajaxOutput.totalrecord,
                    "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                    "pageLength": dtajaxOutput.pageSize,
                    "recordsFiltered": dtajaxOutput.pageSize,
                    "ajax": returnajaxPagination(ajaxInfo, tableOptionList, tableid)
                })

            },

        }
    }

    var tableOptionList = {
        dropdown: {
            buttons: [
                @if (ViewBag.PagedAccessRights.UsrrlMsView)
                {
                    <text> { displayName: "View", action: fn_editProductionStatus },</text>
                }
                { type: "divider" },
               @if (ViewBag.PagedAccessRights.UsrrlMsDel)
                 {
                     <text> { displayName: "Delete", action: fn_deleteProductionStatus },</text>
                 }
                ],
            class: "btn btn-success light sharp"
        },
        onlyShowColumn: ["SlNo", "ProductName", "Stage","Employee", "JcfCompletedQty", "JcfDamagedQty", "JcfReturnedQty","JobCardNo" ],
        hideColumn: [],
        rowClickAction: fn_editProductionStatus,
        renameHeader: {
            "SlNo": "Sl No", "ProductName": "Product Name", "JcfCompletedQty": "Completed Qty", "JcfDamagedQty": "Damaged Qty", "JcfReturnedQty": "Returned Qty", "JobCardNo":"JobCard No."},
        isDateType: [],
        serialNo: false,
        };
        function fn_editProductionStatus(ele) {
          $("#jq-sidemenu").removeClass("show");
             let row = $(this).closest('tr');
            let saveddata = row.data('pData');
             $('.dataTable tr').removeClass("SelectForDelete");
            $(ele).closest('tr').addClass('SelectForDelete');

        $('.divProdStatusTabs').hide();
        $('#ID_JobCardFollowUphdn').val(saveddata.ID_JobCardFollowUp);
        $('#ID_JobCardAssignhdn').val(saveddata.FK_JobCardAssign);
        $('#FK_Employeehdn').val(saveddata.FK_Employee);
          
        fn_LoadJobAssignDetails(1);
      



        }
        function fn_showFilter() {
            $formContainer.find('.jq_productionstatus_body').find('.leadformSesction').toggleClass('d-none');
        }
        function fn_deleteProductionStatus() {
             let $row = $(this).closest('tr');
            let Saveddata = $row.data('pData');
            let TransMode = ProductionStatusTransMode;
            console.log(Saveddata.ID_JobCardAssign+"hhh");
            let inputReason = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(), //antiforgery token
                ID_JobCardFollowUp: Saveddata.ID_JobCardFollowUp,
            };

            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');

            $.ajax({
                url: "@Url.Action("GetProductionStatusReasonList", "ProductionStatus")",
                type: "POST",
                data: {},
                   contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                   success: function (ajaxReasonOutput) {
                       if (ajaxReasonOutput.Process.IsProcess) {

                           let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove this Job Card :Job Card No " + Saveddata.JobCardNo + "?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                           var confirmBoxObj = ConfirmDialog(confirmationDialogBoxOption);
                            confirmBoxObj.then(function (selectedOption) {
                                if (selectedOption) {
                                    let inputData = {
                                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                        FK_Reason: selectedOption,
                                        TransMode: TransMode,
                                        ID_JobCardFollowUp: Saveddata.ID_JobCardFollowUp

                                    };
                                    $.ajax({
                                        url: "@Url.Action("DeleteProductionStatus", "ProductionStatus")",
                                        type: "POST",
                                        data: inputData,
                                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                        success: function (ajaxOutput) {
                                            if (ajaxOutput.Process.IsProcess) {

                                                let table = $row.closest('table').DataTable()
                                                table.row($row).remove().draw();

                                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully' });
                                                });
                                                fn_ProductionStatusIndex_initialLoad();
                                                $('.dataTable tr').removeClass("SelectForDelete");
                                            }
                                            else {
                                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                    $('.dataTable tr').removeClass("SelectForDelete");
                                                });
                                            }
                                        }
                                    });
                                }
                                else {
                                    NotificationMessage({'message': 'No option selected' });
                                }
                            });
                        }
                        else {
                        }
                   }

               });
        }
       
    </script>

}