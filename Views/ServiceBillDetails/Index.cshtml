
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div class="container-fluid">
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12" id="servicebill-form">

        </div>
    </div>
</div>

@section scripts{

<script type="text/javascript">

        var ServTransMode = '';

        const $formContainer = $('#servicebill-form');
        $(document).ready(function () {

            fn_Servicebill_initialLoad();
        })

        var validationMessage = {
            'BillType': {
                'required': 'Please Select Bill Type',
                'stringonly': 'Special Characters are not Allowed in  Bill Type'

            },
            'TicketNo': {
                'required': 'Please Select Ticket Number'
            },
            'TransDate': {
                'required': 'Please Select Date',
                'max': jQuery.validator.format('Please Enter a Valid Date')
            },
            'EffectDate': {
                'required': 'Please Select Date'
            },
            'Customer': {
                'required': 'Please Enter Customer Name',
                'stringonly': 'Special Characters are not Allowed in  Customer Name'
            },

        };

        function fn_Servicebill_initialLoad() {
            ServTransMode = '@ViewBag.TransMode'; 
            
            fn_Servicebill_Select(this);

            fn_Servicebill_loadAddForm();
        }


        function fn_Servicebill_loadAddForm() {

            $formContainer.load('@Url.Action("LoadServicebill", "ServiceBillDetails")', function () {

                let $thisForm = $(this).find('[perfect-class="form"]');

                $thisForm.find('[name="EffectDate"]').val(moment().format('YYYY-MM-DD'));
                $thisForm.find('[name="TransDate"]').val(moment().format('YYYY-MM-DD'));

                $thisForm.validate({ messages: validationMessage });
                $thisForm.attr('perfect-onFormSuccess', 'fn_Servicebill_initialLoad');
                initFunctions($thisForm);

            });
        };

        var tableOptions = {
            dropdown: {
                buttons: [

                       @if (ViewBag.PagedAccessRights.UsrrlTyView)
                               {

                                <text>   { displayName: "View", action: fn_ServiceIndex_UpdateForm }, </text>
                              }

                  { type: "divider" },

                     @if (ViewBag.PagedAccessRights.UsrrlTyDel)
                         {
                               <text> { displayName: "Delete", action: deleteServicebill},</text>
                        }


                ],

                class: "btn btn-success light sharp"
            },
            onlyShowColumn: ["SlNo","TicketNumber", "SerBillDate", "SerCustomerName", "SerNetAmount"],
            hideColumn: [],
            rowClickAction: fn_ServiceIndex_UpdateForm,
            //serialNo: true,
            renameHeader: { "SlNo":"SL No","TicketNumber": "Ticket No", "SerBillDate": "Date", "SerCustomerName": "Customer", "SerNetAmount": "Amount1R" },
            isDateType: ["SerBillDate"],

        };



        function fn_Servicebill_Select(ele) {
            debugger;

            let $sidemenu = $sideMenuOptions.body;
            let $thisForm = $(ele).closest('.testSearchBox');
            let SearchName = $thisForm.find('input').val();
            console.log("GHc", SearchName)
            if (SearchName == undefined) {
                SearchName = "";
            }

            //let tableOptions = servtableOptions;


            $sideMenuOptions.title.find('h4').text('Service Bill List');
            let pageUrl = "@Url.Action("GetServicebillList", "ServiceBillDetails")";
            $.ajax({
                url:pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name: SearchName, TransMode: ServTransMode},
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {

                    if (ajaxOutput.Process.IsProcess) {

                              console.log('Sa', ajaxOutput);
                              $sidemenu.find('.jq_sidemenu_title').text("Service Bill List");

                        $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="fn_Servicebill_Select(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))

                        //$sidemenu.append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control "id="serchname" name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value="' + SearchName +'"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="fn_Servicebill_Select(this)"></button></div></div></div></div>', $('<div/>', {class:"col-md-12 table_temp_class"}).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))

                        // $sidemenu.find('table').dataTable({ paging: true });


                              let $table = $sidemenu.find('table');
                              $table.dataTable({

                                  "serverSide": true,//no change
                                  "processing": true,//-- process text when clicked
                                  //"lengthChange": false,
                                  "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                                  "searching": false,//--no change
                                  "ordering": false,//--sorting
                                  "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                  "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                  "pageLength": ajaxOutput.pageSize,//<----page size
                                  "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                  "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName, TransMode: ServTransMode}, tableOptions, $table)
                              });

                          }
                    else {

                              if (ajaxOutput.Process.Status = "NoData") {

                                  $sidemenu.find('.jq_sidemenu_title').text("Sales List");

                                  $sidemenu.empty().append('<div class="d-flex justify-content-center mb-2 position-relative"><div class="col-md-8 position-absolute top-3 z-index"> <div class="input-group-append testSearchBox"></div></div></div>')

                                  $sidemenu.append('<div class="d-flex justify-content-end mb-2"><div class="col-md-5 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " id="serchname" name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  value="' + SearchName +'"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="fn_Servicebill_Select(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))

                                let $table = $sidemenu.find('table');
                                $table.dataTable({
                                    "serverSide": true,//no change
                                    "processing": true,//-- process text when clicked
                                   // "lengthChange": false,
                                     "lengthMenu": [],//---drop down page size
                                    "searching": false,//--no change
                                    "ordering": false,//--sorting
                                    "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                    "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                    "pageLength": ajaxOutput.pageSize,//<----page size
                                    "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                    "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName, TransMode: ServTransMode}, tableOptions, $table)
                                });
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                }
            },
            complete: function () {

            }
        });
    }


        function returnajaxPagination(ajaxInfo, tableOptions, tableid) {
            //{ apiurl, pageSize }
            return {
                url: ajaxInfo.apiurl,
                type: "post",
                data: function () {
                    var info = tableid.DataTable().page.info();
                    console.log('RETURN AJAX', info)

                    let input = { pageSize: info.length, pageIndex: info.page, TransMode: ajaxInfo.TransMode};
                    if (ajaxInfo.searchkey) {
                        input["Name"] = ajaxInfo.searchkey;
                    }
                    return input
                },
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (dtajaxOutput) {

                    let table = tableid.DataTable();
                    table.destroy();
                    pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                    tableid.dataTable({
                        "serverSide": true,
                        "processing": true,

                        "lengthMenu": [10, 15, 20, 25, 50, 100],
                        "searching": false,
                        "ordering": false,
                        "deferLoading": dtajaxOutput.totalrecord,
                        "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                        "pageLength": dtajaxOutput.pageSize,
                        "recordsFiltered": dtajaxOutput.pageSize,
                        "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                    })

                },

            }
        }


    function fn_ServiceIndex_UpdateForm() {
        debugger
            let $thisRow = $(this).closest('tr');
            let saveddata = $thisRow.data('pData');
            $('.dataTable tr').removeClass("SelectForDelete");
        $(this).closest('tr').addClass('SelectForDelete');

        $('#DivServiceInformation').hide();
        $('#DivProductInformation').hide();



         $formContainer.load('@Url.Action("LoadServicebill", "ServiceBillDetails")', function () {

                            let $thisForm = $(this).find('[perfect-class="form"]');
                            $thisForm.validate({ messages: validationMessage });
                            initFunctions($thisForm);
             console.log("saveddata", saveddata)
             debugger
             $thisForm.find('#addcompany-jq-addnewuser').hide();
             //$thisForm.find('button[name=viewserinv]').removeClass('d-none');
             $thisForm.find('#viewserinv').show();

             $thisForm.find('[name="ID_ServiceBill"]').val(saveddata.ID_ServiceBill);

                            $thisForm.find('[name="TransMode"]').val(saveddata.TransMode);
                            $thisForm.find('[name="BillType"]').val(saveddata.FK_ServiceBillType).selectpicker('refresh');
                            $thisForm.find('[name="TicketNo"]').val(saveddata.TicketNumber).selectpicker('refresh');
                            $thisForm.find('[name="TransDate"]').val(moment(saveddata.SerBillDate).format('YYYY-MM-DD'));
                            $thisForm.find('[name="EffectDate"]').val(moment(saveddata.SerEffectDate).format('YYYY-MM-DD'));
                            $thisForm.find('[name="Customer"]').val(saveddata.SerCustomerName);
                            $thisForm.find('[name="SalBillTotal"]').val(saveddata.SerBillTotal);
                            $thisForm.find('[name="SalProductBillTotal"]').val(saveddata.SerProductBillTotal);
                            $thisForm.find('[name="OtherCharge"]').val(saveddata.SerOtherCharge);
                            $thisForm.find('[name="SalDiscount"]').val(saveddata.SerDiscount);
                            $thisForm.find('[name="SalRoundoff"]').val(saveddata.SerRoundoff);
                             $thisForm.find('[name="SalNetAmount"]').val(saveddata.SerNetAmount);
             $thisForm.find('[name="BalCusAmount"]').val(saveddata.BalCusAmount);
             $thisForm.find('[name="SecurityAmount"]').val(saveddata.SecurityAmount);
             $thisForm.find('[name="BankID"]').val(saveddata.BankID).selectpicker('refresh');



                                    let inputdt = {
                                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                        TransMode: saveddata.TransMode,
                                        ID_ServiceBill: saveddata.ID_ServiceBill,
                                        FK_CustomerServiceRegister: saveddata.FK_CustomerServiceRegister,

                                    }
              $.ajax({
                url: '@Url.Action("GetServiceInfoByID", "ServiceBillDetails")',
                type: "POST",
                data: inputdt,
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxOut) {
                    debugger
                    // console.log("Return", ajaxOut.Data[0]);
                    if (ajaxOut !=null) {
                        debugger
                        console.log('>_ Inside GetSupplierInfo', ajaxOut)

                        $thisForm.data({ pEOthrChgData: ajaxOut.OtherCharge.Data });
                        $thisForm.data({ pPayment: ajaxOut.paymentdetail.Data });

                        //fillTableSales($thisForm, 'Purchase', ajaxOut.SaleDetails.Data, saltableOptionsTempOut)
                        if (ajaxOut.paymentdetail.Data != 0) {
                            fillTableSales($thisForm, 'Payment', ajaxOut.paymentdetail.Data, paytableOptionsTempOut)
                        }

                       ShowOtherCharges(this, 1)

                    
                        if (ajaxOut.OtherCharge.Process.IsProcess) {

                            let othechg = ajaxOut.OtherCharge.Data;
                            console.log('AJAX OTHER CHG OUTTPUT>', ajaxOut.OtherCharge.Data);
                            othrchargelst = [];
                            othrchargelst = othrchargelst.concat(othechg);
                            console.log('OTH INFOT>', othrchargelst);
                            $thisForm.data({ prtothchgData: othrchargelst });
                        }

                        if (ajaxOut.Servicelist.Process.IsProcess) {
                            $('#DivServiceInformation').show();
                            fn_AddServiceRow(this, ajaxOut.Servicelist.Data)
                        } else {
                            $('#DivServiceInformation').hide();
                        }

                        if (ajaxOut.Productlist.Process.IsProcess) {
                            fn_AddProductRow(this, ajaxOut.Productlist.Data);
                            $('#DivProductInformation').show();
                        } else {
                            $('#DivProductInformation').hide();
                        }
                       
                        if (ajaxOut.Amoutndetails.Process.IsProcess) {
                           
                            $thisForm.find('[name="SalBillTotal"]').val(ajaxOut.Amoutndetails.Data[0].ServiceCharge);
                            $thisForm.find('[name="SalProductBillTotal"]').val(ajaxOut.Amoutndetails.Data[0].ProductsCharge);
                            $thisForm.find('[name="AdvancedAmount"]').val(ajaxOut.Amoutndetails.Data[0].AdvanceAmount);
                            $thisForm.find('[name="SalDiscount"]').val(ajaxOut.Amoutndetails.Data[0].DiscountAmount);
                            $thisForm.find('[name="SecurityAmount"]').val(ajaxOut.Amoutndetails.Data[0].SecurityAmount);

                            roundof($('input[name="SalBillTotal"]'));
                        }
                     
                        $thisForm.attr('perfect-onFormSuccess', 'fn_Servicebill_initialLoad');

                    }
                    else {
                        $.each(ajaxOut.OtherCharge.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }

                },

              }); $sideMenuOptions.close();

       });
             

     }

    function deleteServicebill() {

        debugger
         let $row = $(this).closest('tr');
        let Saveddata = $row.data('pData');
        console.log(Saveddata,'sa')

            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');

            $.ajax({
                url: "@Url.Action("GetServiceReasonList", "ServiceBillDetails")",
                type: "GET",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxReasonOutput) {
                    debugger;
                    console.log('ajre', ajaxReasonOutput)
                    if (ajaxReasonOutput.Process.IsProcess) {
                        debugger;

                        let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove this ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                        var res = ConfirmDialog(confirmationDialogBoxOption);
                        res.then(function (ret) {
                            if (ret) {

                                let inputData = {
                                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                    ID_ServiceBill: Saveddata.ID_ServiceBill,
                                    ReasonID: ret,
                                    TransMode: ServTransMode
                                };

                                $.ajax({
                                    url: "@Url.Action("DeleteService", "ServiceBillDetails")",
                                    type: "POST",
                                    data: inputData,
                                    contentType: "application/x-www-form-urlencoded; charset=utf-8",
                                    success: function (data) {
                                        let $thisForm = $(this).find('[perfect-class="form"]');
                                        if (data.Process.IsProcess) {
                                            let table = $row.closest('table').DataTable()
                                            table.row($row).remove().draw();
                                            $.each(data.Process.Message, function (key, value) {
                                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully' });
                                              

                                                $sideMenuOptions.close();
                                                // window.location.reload();  
                                                fn_Servicebill_loadAddForm();
                                            });
                                            
                                            $('.dataTable tr').removeClass("SelectForDelete");
                                        }
                                        else {
                                            $.each(data.Process.Message, function (key, value) {
                                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                $('.dataTable tr').removeClass("SelectForDelete");
                                            });
                                        }
                                    }
                                });
                            }
                            else {
                                NotificationMessage({ 'message': 'No option selected' });
                            }
                        });
                    }
                }

            });


    }


</script>

}

