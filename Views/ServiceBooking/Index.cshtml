
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div class="container-fluid">
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12" id="servicebooking-form">

        </div>
    </div>
</div>

@section scripts{
<script type="text/javascript">

        var ServTransMode = '';
    var HeadNme = '';
    const LastIDSessionKey = 'ServiceBookingLastID';
    var LastID_ServiceBooking;

        const $formContainer = $('#servicebooking-form');
        $(document).ready(function () {

            fn_Servicebooking_initialLoad();

        });

        function fn_Servicebooking_initialLoad() {
            debugger;
            ServTransMode = '@ViewBag.TransMode';
            HeadNme = '@ViewBag.headlog';
            console.log(ServTransMode);
            console.log('h',HeadNme);
           
            LoadServiceBookingList(this, LoadAddServicebooking);
        }
        //var SName = '';
        //if (typeof ServTransMode !== 'undefined' && ServTransMode === 'VLSB') {
        //    debugger
        //      SName = 'Vehicle';
        //    } else if (typeof ServTransMode !== 'undefined' && ServTransMode === 'TOSB') {
        //         SName = 'Tool';
        //    }

        var validationMessage = {
            'ID_Name': {
                'required': function () {

                    if (ServTransMode == 'VLSB') {

                        return "Please Select Vehicle"
;                    }
                    else if (ServTransMode == 'TOSB') {
                        return "Please Select Tool"
                    }
                }
            },
            'SerBookingDate': {
                'required': 'Please Select Booking Date'
            },
            'FK_EquipmentServiceType': {
                'required': 'Please Select Service Type',
            },
            'SerServiceDate': {
                'required': 'Please Select Service Date'
            },
            'SerServiceCentre': {
                'required': 'Please Enter Service Center'
            },
            'SerBookingNo': {
                'required': 'Please Enter Booking No.'
            },
            'SerPickDel': {
                'required': 'Please select Pickup or Delivery'
            }

        }

        function LoadAddServicebooking() {

            $formContainer.load('@Url.Action("LoadServiceBooking", "ServiceBooking")?mtd=@ViewBag.mtd' + '&TransMode=@ViewBag.TransMode', function (){
                let $thisForm = $(this).find('[perfect-class="form"]');
                $thisForm.validate({ messages: validationMessage });
                $thisForm.find('[name="SerBookingDate"]').val(moment().format('YYYY-MM-DD'));
                $thisForm.find('[name="SerServiceDate"]').val(moment().format('YYYY-MM-DD'));
                $thisForm.attr('perfect-onFormSuccess', 'fn_Servicebooking_initialLoad');
                getSessionValue(LastIDSessionKey, function (result) {
                    LastID_ServiceBooking = result;
                });

            });

        }



        var tableOptions = {
            dropdown: {
                buttons: [

                       @if (ViewBag.PagedAccessRights.UsrrlTyView)
                               {

                                <text>   { displayName: "View", action: fn_Servicebook_UpdateForm }, </text>
                              }

                  { type: "divider" },

                    @if (ViewBag.PagedAccessRights.UsrrlTyDel)
                         {
                               <text> { displayName: "Delete", action: fn_delete_ServiceBook},</text>
                        }


                ],

                class: "btn btn-success light sharp"
            },
            onlyShowColumn: ["SlNo", "SerBookingNo", "SerBookingDate", "SerServiceDate","Service","Name"],
            hideColumn: [],
            rowClickAction: fn_Servicebook_UpdateForm,
            renameHeader: { "SlNo": "SL No", "SerBookingNo": "Booking No", "SerBookingDate": "Booking Date", "SerServiceDate": "Service Date", "SerServiceCentre": "Service Center", "Name": '@ViewBag.headlog'},
            isDateType: ['SerBookingDate', 'SerServiceDate'],

        }
        console.log('tableOptions', tableOptions);

        function LoadServiceBookingList(ele,callback) {


            let $sidemenu = $sideMenuOptions.body;
            let $thisForm = $(ele).closest('.testSearchBox');
            let SearchName = $thisForm.find('input').val();
            //console.log("GHc", SearchName)
            if (SearchName == undefined) {
                SearchName = '';
            }


            //let tableOptions = servtableOptions;


            $sideMenuOptions.title.find('h4').text('@ViewBag.PageTitles'+' '+'List');
            let pageUrl = "@Url.Action("GetServiceBookingList", "ServiceBooking")";
            $.ajax({
                url:pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name: SearchName, TransMode: ServTransMode},
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {
                    console.log(ajaxOutput)
                    if (ajaxOutput.Process.IsProcess) {
                       // debugger
                              //console.log('Sa', ajaxOutput);
                              $sidemenu.find('.jq_sidemenu_title').text("Log List");
                        setSessionValue(LastIDSessionKey, ajaxOutput.Data[0]["LastID"]);
                        $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="LoadServiceBookingList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))

                        //$sidemenu.append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control "id="serchname" name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value="' + SearchName +'"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="fn_Servicebill_Select(this)"></button></div></div></div></div>', $('<div/>', {class:"col-md-12 table_temp_class"}).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))

                        // $sidemenu.find('table').dataTable({ paging: true });


                              let $table = $sidemenu.find('table');
                              $table.dataTable({

                                  "serverSide": true,//no change
                                  "processing": true,//-- process text when clicked
                                  //"lengthChange": false,
                                  "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                                  "searching": false,//--no change
                                  "ordering": false,//--sorting
                                  "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                  "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                  "pageLength": ajaxOutput.pageSize,//<----page size
                                  "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                  "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName, TransMode: ServTransMode}, tableOptions, $table)
                              });

                          }
                    else {

                              if (ajaxOutput.Process.Status = "NoData") {
                                  setSessionValue(LastIDSessionKey, 0);
                                  $sidemenu.find('.jq_sidemenu_title').text("Sales List");

                                  $sidemenu.empty().append('<div class="d-flex justify-content-center mb-2 position-relative"><div class="col-md-8 position-absolute top-3 z-index"> <div class="input-group-append testSearchBox"></div></div></div>')

                                  $sidemenu.append('<div class="d-flex justify-content-end mb-2"><div class="col-md-5 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " id="serchname" name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  value="' + SearchName +'"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="LoadServiceBookingList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))

                                let $table = $sidemenu.find('table');
                                $table.dataTable({
                                    "serverSide": true,//no change
                                    "processing": true,//-- process text when clicked
                                   // "lengthChange": false,
                                     "lengthMenu": [],//---drop down page size
                                    "searching": false,//--no change
                                    "ordering": false,//--sorting
                                    "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                    "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,//<----starting record
                                    "pageLength": ajaxOutput.pageSize,//<----page size
                                    "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                    "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName, TransMode: ServTransMode}, tableOptions, $table)
                                });
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                }
            },
            complete: function () {
                if (callback) {


                    callback();
                }
            }
        });

    }

    function returnajaxPagination(ajaxInfo, tableOptions, tableid) {
        //{ apiurl, pageSize }
      debugger
        return {
            url: ajaxInfo.apiurl,
            type: "post",
            data: function () {
                var info = tableid.DataTable().page.info();
                console.log('RETURN AJAX', info)

                let input = { pageSize: info.length, pageIndex: info.page, TransMode: ajaxInfo.TransMode };
                if (ajaxInfo.searchkey) {
                    input["Name"] = ajaxInfo.searchkey;
                }
                return input
            },
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (dtajaxOutput) {

                let table = tableid.DataTable();
                table.destroy();
                pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                tableid.dataTable({
                    "serverSide": true,
                    "processing": true,

                    "lengthMenu": [10, 15, 20, 25, 50, 100],
                    "searching": false,
                    "ordering": false,
                    "deferLoading": dtajaxOutput.totalrecord,
                    "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                    "pageLength": dtajaxOutput.pageSize,
                    "recordsFiltered": dtajaxOutput.pageSize,
                    "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                })

            },

        }
    }

        function fn_Servicebook_UpdateForm() {

            let $thisUser = $(this).closest('tr');
            let savedData = $thisUser.data('pData');
            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');
            $(this).closest('tr').addClass('SelectForDelete');
            console.log('fd', savedData);


          $formContainer.load('@Url.Action("LoadServiceBooking", "ServiceBooking")?mtd=@ViewBag.mtd' + '&TransMode=@ViewBag.TransMode', function () {

                            debugger

            let $thisForm = $(this).find('[perfect-class="form"]');
            $thisForm.validate({ messages: validationMessage });

              $thisForm.find('[name="ID_Name"]').val(savedData.Name).selectpicker('refresh');
              $thisForm.find('[name="FK_EquipmentServiceType"]').val(savedData.FK_EquipmentServiceType).selectpicker('refresh');
              $thisForm.find('[name="SerBookingNo"]').val(savedData.SerBookingNo);
              $thisForm.find('[name="ID_FIELD"]').val(savedData.FK_Master).selectpicker('refresh');
              $thisForm.find('[name="SerBookingDate"]').val(moment(savedData.SerBookingDate).format('YYYY-MM-DD'));
              $thisForm.find('[name="SerBookingDescription"]').val(savedData.SerBookingDescription);
              $thisForm.find('[name="SerServiceDate"]').val(moment(savedData.SerServiceDate).format('YYYY-MM-DD'));
              $thisForm.find('[name="SerServiceCentre"]').val(savedData.SerServiceCentre);
              $thisForm.find('[name="SerServiceTime"]').val(savedData.SerServiceTime);
              $thisForm.find('[name="ID_ServiceBooking"]').val(savedData.ID_ServiceBooking);
              $thisForm.find('[name="SerPickDel"]').val(savedData.SerPickDel).selectpicker('refresh');

           let inputData = {
               FK_ServiceBooking: savedData.ID_ServiceBooking,
               TransMode: ServTransMode
           };

               $.ajax({
                 url: '@Url.Action("GetServiceInfoByID", "ServiceBooking")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                 type: "POST",
                 data: inputData,//<---- Input json : data passed to controller
                 dataType: "json",
                   contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                   success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       console.log('ajaxOutput', ajaxOutput);



                           $thisForm.find('button[name=add]').addClass('d-none');
                           $thisForm.find('button[name=update]').removeClass('d-none');
                           $thisForm.attr('perfect-onFormSuccess', 'fn_Servicebooking_initialLoad');



                 },

               }); $sideMenuOptions.close();
         });

        }

        function fn_delete_ServiceBook() {

        let $row = $(this).closest('tr');
        let Saveddata = $row.data('pData');
        console.log(Saveddata,'sa')

            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');

            $.ajax({
                url: "@Url.Action("GetServiceReasonList", "ServiceBooking")",
                type: "GET",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxReasonOutput) {
                    debugger;
                    console.log('ajre', ajaxReasonOutput)
                    if (ajaxReasonOutput.Process.IsProcess) {


                        let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove this ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                        var res = ConfirmDialog(confirmationDialogBoxOption);
                        res.then(function (ret) {
                            if (ret) {

                                let inputData = {
                                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                    ID_ServiceBooking: Saveddata.ID_ServiceBooking,
                                    ReasonID: ret,
                                    TransMode: ServTransMode
                                };

                                $.ajax({
                                    url: "@Url.Action("DeleteServiceBooking", "ServiceBooking")",
                                    type: "POST",
                                    data: inputData,
                                    contentType: "application/x-www-form-urlencoded; charset=utf-8",
                                    success: function (data) {
                                        let $thisForm = $(this).find('[perfect-class="form"]');
                                        if (data.Process.IsProcess) {
                                            let table = $row.closest('table').DataTable()
                                            table.row($row).remove().draw();
                                            $.each(data.Process.Message, function (key, value) {
                                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully' });


                                                $sideMenuOptions.close();
                                                // window.location.reload();
                                                LoadAddServicebooking();
                                            });

                                            $('.dataTable tr').removeClass("SelectForDelete");
                                        }
                                        else {
                                            $.each(data.Process.Message, function (key, value) {
                                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                $('.dataTable tr').removeClass("SelectForDelete");
                                            });
                                        }
                                    }
                                });
                            }
                            else {
                                NotificationMessage({ 'message': 'No option selected' });
                            }
                        });
                    }
                }

            });


        }



</script>

}