<style>
    .tableFixHead {
        overflow: auto;
        height: 400px;
        /*height:auto;*/
    }

        .tableFixHead thead tr {
            position: sticky;
            top: 0;
            z-index: 1;
        }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 8px 16px;
    }

    th {
        background: var(--perfect-primary);
    }

    .hideData {
        display: none;
    }

    .ExpWarning {
        color: red !important;
    }

        .ExpWarning:hover {
            color: red !important;
        }

    /*tr:nth-child(even) {
        background-color: #b5b5b5
    }*/
    /*tr:nth-child(even) {
        background-color: lightcyan
    }*/
    .remove-top-bottom-margin {
        margin-top: -10px;
        margin-bottom: -10px;
    }
</style>
@model PerfectWebERP.Models.ServiceListModel.ServiceListView

<style>
    /*.table-responsive-sm {
        max-width: 1200.98px
    }*/

    .form-group2 {
        margin-bottom: 0.1rem;
        margin-left: 1px;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-12" id="jq_ServiceIndex_formContainer">
            <div class="card ">





                <div class="card-header">
                    <h4 class="card-title">Ticket No :<span class="col-sm-4 col-form-label" perfect-class="formGroupLabel">@Model.TicketNo</span></h4>
                </div>

                <div class="card-body px-2">
                    <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">


                        <div class="col-md-12 jq_service_commonForm_div">

                            @Html.AntiForgeryToken()


                            <div class="col-sm-12 border p-3" style="border-color:black">
                                <div class="row">
                                    <div class="col-sm-6">
                                    </div>
                                    <div class="col-sm-6">
                                    </div>
                                </div>

                                <div id="accordion-nine" class="accordion accordion-active-header">
                                    <div class="accordion__item">
                                        <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseOne" id="ticketop">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text">Ticket Info</span>
                                            <span class="accordion__header--indicator"></span>
                                        </div>
                                        <div id="active-header_collapseOne" class="collapse accordion__body" data-parent="">
                                            <div class="accordion__body--text">
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div class="card">
                                                            <div class="row">
                                                                <div class="col-sm-4">

                                                                    <div class="profile-personal-info">

                                                                        <h4 class='text-primary mb-4'>Ticket Details</h4>

                                                                        <div class="form-group2 row" perfect-class="formGroup">
                                                                            <label class="col-sm-4 col-form-label">
                                                                                <span perfect-class="formGroupLabel" class="font-weight-bold">Ticket Number:</span>

                                                                            </label>
                                                                            <div class="col-sm-8">
                                                                                <label class="col-sm-8 col-form-label" perfect-class="formGroupControl" name="TicketNo" perfect-ctype="input" perfect-css="input">@Model.TicketNo</label>
                                                                                <input type="hidden" class="form-control" placeholder="" name="ID_CustomerServiceRegisterProductDetails" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value="@Model.ID_CustomerServiceRegisterProductDetails" />
                                                                            </div>

                                                                        </div>

                                                                        <div class="form-group2 row" perfect-class="formGroup">
                                                                            <label class="col-sm-4 col-form-label">
                                                                                <span perfect-class="formGroupLabel" class="font-weight-bold">Registered On:</span>

                                                                            </label>
                                                                            <div class="col-sm-8">
                                                                                <label class="col-sm-8 col-form-label" type="date" perfect-class="formGroupControl" name="RegisteredOn" perfect-ctype="input" perfect-css="input">@Model.RegisteredOn</label>

                                                                            </div>

                                                                        </div>
                                                                        <div class="form-group2 row" perfect-class="formGroup">
                                                                            <label class="col-sm-4 col-form-label">
                                                                                <span perfect-class="formGroupLabel" class="font-weight-bold">Visit On:</span>

                                                                            </label>
                                                                            <div class="col-sm-8">
                                                                                <label class="col-sm-8 col-form-label" perfect-class="formGroupControl" name="VisitedDate" perfect-ctype="input" perfect-css="input">@Model.VisitedDate</label>


                                                                            </div>

                                                                        </div>

                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-4">
                                                                    <div class="profile-personal-info">


                                                                        <h4 class='text-primary mb-4'>Customer Details</h4>

                                                                        <div class="form-group2 row" perfect-class="formGroup">
                                                                            <label class="col-sm-4 col-form-label">
                                                                                <span perfect-class="formGroupLabel" class="font-weight-bold">Customer Name:</span>

                                                                            </label>
                                                                            <div class="col-sm-8">

                                                                                <label class="col-sm-8 col-form-label" perfect-class="formGroupControl" name="CusName" perfect-ctype="input" perfect-css="input">@Model.CusName</label>
                                                                                <input type="hidden" id="FK_Customer" name="FK_Customer" value="@Model.FK_Customer" />
                                                                                <input type="hidden" id="FK_CustomerOthers" name="FK_CustomerOthers" value="@Model.FK_CustomerOthers" />
                                                                                <input type="hidden" id="LastID" name="LastID" value="@Model.LastID" />
                                                                            </div>

                                                                        </div>

                                                                        <div class="form-group2 row" perfect-class="formGroup">
                                                                            <label class="col-sm-4 col-form-label">
                                                                                <span perfect-class="formGroupLabel" class="font-weight-bold">Mobile:</span>

                                                                            </label>
                                                                            <div class="col-sm-8">
                                                                                <label class="col-sm-8 col-form-label" perfect-class="formGroupControl" name="Mobile" perfect-ctype="input" perfect-css="input">@Model.Mobile</label>

                                                                            </div>

                                                                        </div>

                                                                        <div class="form-group2 row" perfect-class="formGroup">
                                                                            <label class="col-sm-4 col-form-label">
                                                                                <span perfect-class="formGroupLabel" class="font-weight-bold">Address:</span>

                                                                            </label>
                                                                            <div class="col-sm-8">
                                                                                <label class="col-sm-8 col-form-label" perfect-class="formGroupControl" name="Address1" perfect-ctype="input" perfect-css="input">@Model.Address1</label>

                                                                                <label class="col-sm-8 col-form-label" perfect-class="formGroupControl" name="District" perfect-ctype="input" perfect-css="input">@Model.District</label>
                                                                                <label class="col-sm-8 col-form-label" perfect-class="formGroupControl" name="Address2" perfect-ctype="input" perfect-css="input">@Model.Address2</label>
                                                                                <label class="col-sm-8 col-form-label" perfect-class="formGroupControl" name="Address2" perfect-ctype="input" perfect-css="input">@Model.Address3</label>

                                                                            </div>

                                                                        </div>

                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-4">
                                                                    <div class="profile-personal-info">

                                                                        <div class="form-group" perfect-class="Assign" action="#" method="post" perfect-onFormSuccess="">

                                                                            <h4 class='text-primary mb-4'>Product Details</h4>


                                                                            @if (Model != null)
                                                                            {
                                                                                foreach (var item in Model.ComplaintproductDetails)
                                                                                {
                                                                                    if (ViewBag.ProductVal == "1")
                                                                                    {
                                                                                        <div class="form-group2 row" perfect-class="formGroup">
                                                                                            <label class="col-sm-4 col-form-label">
                                                                                                <span perfect-class="formGroupLabel" class="font-weight-bold"> Name:</span>

                                                                                            </label>

                                                                                            <div class="col-sm-8">

                                                                                                <label class="col-sm-8 col-form-label" perfect-class="formGroupControl" name="Product" perfect-ctype="input" perfect-css="input">  @Html.DisplayFor(model => item.Product)</label>
                                                                                                <label class="col-sm-8 col-form-label" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" style="display:none">  @Html.DisplayFor(model => item.ID_Product)</label>

                                                                                                <input type="hidden" id="ID_Product" name="ID_Product" value="@Html.DisplayFor(model => item.ID_Product)" />
                                                                                                <input type="hidden" id="FK_Category" name="FK_Category" value="@Html.DisplayFor(model => item.FK_Category)" />
                                                                                            </div>

                                                                                        </div>
                                                                                    }
                                                                                    if (ViewBag.CategoryVal == "1")
                                                                                    {
                                                                                        <div class="form-group2 row" perfect-class="formGroup">
                                                                                            <label class="col-sm-4 col-form-label">
                                                                                                <span perfect-class="formGroupLabel" class="font-weight-bold">Category:  </span>

                                                                                            </label>
                                                                                            <div class="col-sm-8">
                                                                                                <label class="col-sm-8 col-form-label" perfect-class="formGroupControl" name="Category" id="Category" perfect-ctype="input" perfect-css="input"> @Html.DisplayFor(model => item.Category)</label>

                                                                                            </div>

                                                                                        </div>
                                                                                    }
                                                                                    if (ViewBag.SubCategoryVal == "1")
                                                                                    {
                                                                                        <div class="form-group2 row" perfect-class="formGroup">
                                                                                            <label class="col-sm-4 col-form-label">
                                                                                                <span perfect-class="formGroupLabel" class="font-weight-bold">Subcategory:</span>

                                                                                            </label>
                                                                                            <div class="col-sm-8">
                                                                                                <label class="col-sm-8 col-form-label" perfect-class="formGroupControl" name="Subcategory" id="Subcategory" perfect-ctype="input" perfect-css="input"> @Html.DisplayFor(model => item.SubCategory)</label>

                                                                                            </div>

                                                                                        </div>
                                                                                    }
                                                                                    if (ViewBag.BrandVal == "1")
                                                                                    {
                                                                                        <div class="form-group2 row" perfect-class="formGroup">
                                                                                            <label class="col-sm-4 col-form-label">
                                                                                                <span perfect-class="formGroupLabel" class="font-weight-bold">Brand:</span>

                                                                                            </label>
                                                                                            <div class="col-sm-8">
                                                                                                <label class="col-sm-8 col-form-label" perfect-class="formGroupControl" name="Brand" id="Brand" perfect-ctype="input" perfect-css="input"> @Html.DisplayFor(model => item.Brand)</label>

                                                                                            </div>

                                                                                        </div>
                                                                                    }
                                                                                    if (item.ProductComplaint != null && item.ProductComplaint != "")
                                                                                    {

                                                                                        <div class="form-group2 row divproductcomplaint" perfect-class="formGroup">
                                                                                            <label class="col-sm-4 col-form-label">
                                                                                                <span perfect-class="formGroupLabel" class="font-weight-bold">Complaint:</span>

                                                                                            </label>
                                                                                            <div class="col-sm-8">

                                                                                                <label class="col-sm-8 col-form-label" id="idlabelcomplaintdetails" name="ProductComplaint" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"> @Html.DisplayFor(model => item.ProductComplaint)</label>

                                                                                            </div>

                                                                                        </div>
                                                                                    }
                                                                                    else if (item.ServiceName != null && item.ServiceName != "")
                                                                                    {


                                                                                        <div class="form-group2 row divproductservice" perfect-class="formGroup">
                                                                                            <label class="col-sm-4 col-form-label">
                                                                                                <span perfect-class="formGroupLabel" class="font-weight-bold">Service:</span>

                                                                                            </label>
                                                                                            <div class="col-sm-8">
                                                                                                <label class="col-sm-8 col-form-label" id="idlabelservicedetails" name="ServiceName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"> @Html.DisplayFor(model => item.ServiceName)</label>

                                                                                            </div>

                                                                                        </div>
                                                                                    }
                                                                                    <div class="form-group2 row" perfect-class="formGroup">
                                                                                        <label class="col-sm-4 col-form-label">
                                                                                            <span perfect-class="formGroupLabel" class="font-weight-bold">Description:</span>

                                                                                        </label>
                                                                                        <div class="col-sm-8">
                                                                                            <label class="col-sm-8 col-form-label" perfect-class="formGroupControl" name="ProductDescription" perfect-ctype="input" perfect-css="input"> @Html.DisplayFor(model => item.ProductDescription)</label>

                                                                                        </div>

                                                                                    </div>

                                                                                }
                                                                            }
                                                                        </div>
                                                                    </div>
                                                                    <input type="hidden" name="FK_Customerserviceregister" value="@Model.FK_Customerserviceregister" />
                                                                    <input type="hidden" name="ID_Product" value="@Model.ID_Product" />
                                                                    <input type="hidden" name="LastFollowUpDate" value="@Model.LastFollowUpDate" />
                                                                </div>

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                </div>





                                @*-------------------------------------------------------------------------*@

                                @*-------------------------------*@

                                <div class="col-sm-12">
                                    <div class="default-tab">

                                        <ul class="nav nav-tabs" role="tablist" id="selectorServiceFollow">

                                            <li class="nav-item">
                                                <a class="nav-link active" id="Serviceinfoid" @*data-toggle="tab"*@ @*href="#Serviceinfo"*@><i class="las la-book-reader mr-2"></i>Service Attended</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" id="replacementinfoid" @*data-toggle="tab"*@ @*href="#navpills2-1"*@><i class="las la-tty mr-2"></i>Parts  Replaced</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" id="Serviceincentiveid"><i class="las la-tools mr-2"></i>Service</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" id="attendanceinfoid" @*data-toggle="tab"*@ @*href="#navpills2-2"*@><i class="la la-calendar-plus mr-2"></i> Attendance</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" id="summaryinfoid" @*data-toggle="tab"*@ @*href="#navpills2-3"*@ onclick="bindserv()"><i class="la la-bell mr-2"></i> Action Taken</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" id="Historyid" data-toggle="tab" href="#History"><i class="las la-history mr-2"></i> Service History</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" id="Warrantyid" data-toggle="tab" href="#warranty" onclick="fn_WaranttyDetails()"><i class="las la-file-invoice mr-2"></i> Warranty/AMC Details</a>
                                            </li>
                                        </ul>



                                        <div class="tab-content">

                                            <div id="Serviceinfo" class="tab-pane active">
                                                <div class="card-body">

                                                    @if (ViewBag.ProductVal == "1")
                                                    {
                                                        <div class="row">
                                                            <div class="col-sm-3">
                                                                <div class="form-group2 row" perfect-class="formGroup">
                                                                    <label class="col-sm-4 col-form-label">
                                                                        <span perfect-class="formGroupLabel" class="font-weight-bold">Enter Serial number:</span>

                                                                    </label>
                                                                    <div class="col-sm-8">

                                                                        <input type="text" class="form-control perfectValidate_string_nm" name="Searchnumber" id="Searchnumber" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="50" onchange="checksearchvalues(this)" value="@ViewBag.SerialNumber" />
                                                                    </div>

                                                                </div>
                                                            </div>
                                                            <div class="col-sm-1">
                                                                <div class="form-group2 row" perfect-class="formGroup">
                                                                    <label class="col-sm-8 col-form-label">
                                                                        <span perfect-class="formGroupLabel" class="font-weight-bold">OR</span>
                                                                    </label>
                                                                </div>
                                                            </div>
                                                            <div class="col-sm-3">
                                                                <div class="form-group2 row" perfect-class="formGroup">
                                                                    <label class="col-sm-4 col-form-label">

                                                                        <span perfect-class="formGroupLabel" class="font-weight-bold">Customer ID:</span>

                                                                    </label>
                                                                    <div class="col-sm-8">

                                                                        <input type="text" class="form-control perfectValidate_string_nm" name="SearchID" id="SearchID" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="50" onchange="checksearchid(this)" />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-sm-2">
                                                                <div class="form-group2 row" perfect-class="formGroup">
                                                                    <button type="button" id="btnSearchproductdetails" onclick="GetProductDetails(this)" class="btn btn-primary">Search</button>


                                                                </div>
                                                            </div>

                                                        </div>

                                                        <div perfect-class="SubproductContainer" id="Subproducttable" class="table-responsive tableFixHead">
                                                            <div class="table-responsive-lg tableFixHead">
                                                                <table class="table table-hover table-striped  text-black" id="ProductDetails">
                                                                    <thead class="bg-primary text-white">
                                                                        <tr>
                                                                        <tr>
                                                                            <th>Master Product</th>
                                                                            <th style="display:none"></th>
                                                                            <th style="display:none"></th>
                                                                            <th style="display:none"></th>
                                                                            <th style="display:none"></th>
                                                                            <th>Item Name</th>
                                                                            <th>SL No/ID</th>
                                                                            <th>Warranty</th>
                                                                            <th style="width:10%; text-align:center">Service Wty Exp Date</th>
                                                                            <th style="width:10%; text-align:center">Replacement Wty Exp Date</th>
                                                                            <th></th>
                                                                            <th>Product Wise Complaint</th>
                                                                            <th>Description</th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody id="ProductSubdetailsTbody">
                                                                        <tr id="0"></tr>
                                                                    </tbody>
                                                                </table>

                                                                <input type="hidden" name="FK_Customerserviceregister" />
                                                            </div>
                                                        </div>


                                                    }

                                                    <div class="row">
                                                        @if (ViewBag.CategoryVal == "1")
                                                        {
                                                            <div class="col-sm-6">
                                                                <div class="form-group2 row" perfect-class="formGroup">
                                                                    <label class="col-sm-4 col-form-label">
                                                                        <span perfect-class="formGroupLabel" class="font-weight-bold">Category</span>
                                                                        <span class="text-danger">*</span>
                                                                    </label>
                                                                    <div class="col-sm-8">

                                                                        <select class="form-control perfectValidate_string" placeholder="Please Select" name="ID_Category" id="ID_Category" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="FillSubCatAndComplaints(this);">
                                                                            <option value="0">Please select</option>
                                                                            @if (!(Model.CategoryDetailsList is null))
                                                                            {
                                                                                foreach (var category in Model.CategoryDetailsList)
                                                                                {
                                                                                    <option value="@category.CategoryID">@category.CategoryName</option>
                                                                                }
                                                                            }
                                                                        </select>
                                                                    </div>

                                                                </div>
                                                            </div>
                                                        }
                                                        @if (ViewBag.SubCategoryVal == "1")
                                                        {
                                                            <div class="col-sm-6">
                                                                <div class="form-group2 row" perfect-class="formGroup">
                                                                    <label class="col-sm-4 col-form-label">
                                                                        <span perfect-class="formGroupLabel" class="font-weight-bold">Sub Category</span>

                                                                    </label>
                                                                    <div class="col-sm-8">

                                                                        <select class="form-control perfectValidate_string" placeholder="Please Select" name="ID_SubCategory" id="ID_SubCategory" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                                            <option value="0">Please select</option>
                                                                            @if (!(Model.SubCategoryList is null))
                                                                            {
                                                                                foreach (var category in Model.SubCategoryList)
                                                                                {
                                                                                    <option value="@category.SubCategoryID">@category.SubCategoryName</option>
                                                                                }
                                                                            }
                                                                        </select>
                                                                    </div>

                                                                </div>
                                                            </div>
                                                        }
                                                        @*</div>

                                                            <div class="row">*@
                                                        @if (ViewBag.BrandVal == "1")
                                                        {
                                                            <div class="col-sm-6">
                                                                <div class="form-group2 row" perfect-class="formGroup">
                                                                    <label class="col-sm-4 col-form-label">
                                                                        <span perfect-class="formGroupLabel" class="font-weight-bold">Brand</span>

                                                                    </label>
                                                                    <div class="col-sm-8">

                                                                        <select class="form-control perfectValidate_string" placeholder="Please Select" name="ID_Brand" id="ID_Brand" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                                            <option value="0">Please select</option>
                                                                            @if (!(Model.BrandList is null))
                                                                            {
                                                                                foreach (var Brand in Model.BrandList)
                                                                                {
                                                                                    <option value="@Brand.BrandID">@Brand.BrandName</option>
                                                                                }
                                                                            }
                                                                        </select>
                                                                    </div>

                                                                </div>
                                                            </div>
                                                        }
                                                        @if (ViewBag.ComplaintVal == "1")
                                                        {
                                                            <div class="col-sm-6">
                                                                <div class="form-group2 row" perfect-class="formGroup">
                                                                    <label class="col-sm-4 col-form-label">
                                                                        <span perfect-class="formGroupLabel" class="font-weight-bold">Complaint</span>
                                                                        <span class="text-danger">*</span>
                                                                    </label>
                                                                    <div class="col-sm-8">

                                                                        <select class="form-control perfectValidate_string" placeholder="Please Select" name="ID_Complaints" id="ID_Complaints" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                                            <option value="0">Please select</option>
                                                                            @if (!(Model.ComplaintsList is null))
                                                                            {
                                                                                foreach (var complnt in Model.ComplaintsList)
                                                                                {
                                                                                    <option value="@complnt.ID_ComplaintList">@complnt.ComplaintName</option>
                                                                                }
                                                                            }
                                                                        </select>
                                                                    </div>

                                                                </div>
                                                            </div>
                                                        }
                                                    </div>
                                                    @*<div class="modal-footer">
                                                            <br />
                                                            <div class="float-right">
                                                                <button type="button" id="btnSaveCategoryDetails" onclick="javascript: ('@ViewBag.Service' == 0)? BindProductSubdetailds(this): ServicefollowupReturnSubProduct(this)" class="btn btn-primary">Next>></button>
                                                            </div>
                                                        </div>*@
                                                    <div class="modal-footer">
                                                        <br />
                                                        <div class="float-right">
                                                            <button type="button" id="btnSaveproductsubdetails" onclick="javascript: ('@ViewBag.Service' == 0)? BindProductSubdetailds(this): ServicefollowupReturnSubProduct(this)" class="btn btn-primary">Next>></button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div id="navpills2-1" class="tab-pane">
                                                <input type="hidden" id="BranchID" name="BranchID" value="@ViewBag.BranchID" />
                                                <input type="hidden" id="DepartmentID" name="DepartmentID" value="@ViewBag.DepartmentID" />
                                                <input type="hidden" id="FK_Employee" name="FK_Employee" value="@ViewBag.FK_Employee" />
                                                <div class="card">

                                                    <div class="card-body">
                                                        <div perfect-class="ReplaceproductContainer" id="replaceproducttables" class="table-responsive tableFixHead">
                                                            <div class="table-responsive-lg tableFixHead" id="replaceproducttable">


                                                                <table class="table table-hover  table-striped  text-black" style="height:auto" id="ReplacedProductDetails">
                                                                    <thead class="bg-primary text-white">
                                                                        <tr>

                                                                            <th></th>
                                                                            <th style="display:none">ID_MasterProduct</th>
                                                                            <th>Main Product</th>
                                                                            <th style="display:none">ID_Product</th>
                                                                            <th>Component</th>
                                                                            <th>Warranty Mode</th>
                                                                            <th>Quantity</th>
                                                                            <th style="display:none">Product Amount</th>
                                                                            <th>Product Status</th>
                                                                            <th style="display:none">FK_Stock </th>

                                                                        </tr>
                                                                    </thead>
                                                                    <tbody id="ReplacedProductDetailsTbody">
                                                                        <tr id="0"></tr>
                                                                    </tbody>
                                                                </table>

                                                            </div>
                                                        </div>
                                                        <div class="modal-footer">
                                                            <br />
                                                            <div class="float-right">

                                                                <button type="button" id="btnreplacepartsProductDetails" onclick="fn_nextPrevious(1)" class="btn btn-primary"><< Previous</button>
                                                                <button type="button" id="btnreplacepartsProductDetails" onclick="BindServiceattended(this)" class="btn btn-primary">Next >></button>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                                <input type="hidden" name="FK_Customerserviceregister" />
                                            </div>
                                            <div id="Serviceincentive" class="tab-pane">

                                                <div class="card">
                                                    <div class="card-body">

                                                        <div class="table-responsive tableFixHead">
                                                            <div perfect-class="ServicedContainer" class="table-responsive tableFixHead">

                                                                <table class="table table-hover  table-striped  text-black " style="height:auto" id="ProductServices">
                                                                    <thead class="bg-primary text-white">
                                                                        <tr>
                                                                            <th style="display:none"> </th>
                                                                            <th style="display:none"></th>
                                                                            <th></th>
                                                                            <th></th>
                                                                            <th>Service</th>
                                                                            <th>Service Type</th>
                                                                            <th>Service Cost</th>
                                                                            <th>Tax Amount</th>
                                                                            <th>Net Amount</th>
                                                                            <th>Remarks</th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody id="ProductServiceTbody">
                                                                        <tr id="0"></tr>
                                                                    </tbody>
                                                                </table>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                @*</div>*@
                                                <div class="modal-footer">



                                                    <div class="modal fade bd-ProductserviceMoredetails-modal-sm" id="moreservicemodel" tabindex="-1" role="dialog" style="display: none;" aria-hidden="true">
                                                        <div class="modal-dialog modal-xl">
                                                            <div class="modal-content">
                                                                <div class="modal-header">
                                                                    <h5 class="modal-title">Service Details</h5>
                                                                    <button type="button" class="close" data-dismiss="modal">
                                                                        <span>x</span>
                                                                    </button>
                                                                </div>

                                                                <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;">
                                                                    <input type="hidden" class="form-control" placeholder="" id="Rowvalue" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                                    <div class="form-row" id="TopDetails">


                                                                    </div>
                                                                    <div class="form-row">
                                                                        <div class="col-sm-12">
                                                                            <div class="card">
                                                                                <div class="card-body">
                                                                                    <div class="table-responsive tableFixHead">
                                                                                        <table class="table table-hover  table-striped  text-black " style="height:auto" id="ProductServicesMore">
                                                                                            <thead class="bg-primary text-white">
                                                                                                <tr>

                                                                                                    <th style="display:none"> </th>
                                                                                                    <th style="display:none"></th>
                                                                                                    <th></th>
                                                                                                    <th style="display:none">Components</th>
                                                                                                    <th>Service</th>
                                                                                                    <th>Service Type</th>
                                                                                                    <th>Service Cost</th>
                                                                                                    <th>Tax Amount</th>
                                                                                                    <th>Net Amount</th>
                                                                                                    <th>Remarks</th>
                                                                                                </tr>
                                                                                            </thead>
                                                                                            <tbody id="ProductServiceTbodyMoredetails">
                                                                                                <tr id="0">
                                                                                                    @*<td colspan="4" style="text-align:center;">No Records...</td>*@
                                                                                                </tr>
                                                                                            </tbody>
                                                                                        </table>

                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <!-- /# card -->
                                                                        </div>

                                                                    </div>

                                                                    <div class="modal-footer">

                                                                        <button type="button" id="btnSaveServicesMore" onclick="BindMoredetailsServiceAmount(this)" class="btn btn-primary">Apply</button>

                                                                    </div>
                                                                    <input type="hidden" name="ID_Product" perfect-class="formGroupControl" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                @*<br />*@
                                                <div class="float-right">
                                                    <button type="button" id="btnreplacepartsProductDetails" onclick="fn_nextPrevious(2)" class="btn btn-primary"><< Previous</button>

                                                    <button type="button" id="btnSaveServices" onclick="CalculateServiceIncentiveCost(this)" class="btn btn-primary">Next>></button>
                                                </div>


                                                <input type="hidden" name="FK_Customerserviceregister" />

                                            </div>


                                            <div id="navpills2-2" class="tab-pane">
                                                <div class="card">
                                                    <div class="card-body">


                                                        <div class="table-responsive tableFixHead">
                                                            <table class="table table-hover table-responsive-sm table-striped  text-black " style="height:auto" id="AttendedProductServices">
                                                                <thead class="bg-primary text-white">

                                                                    <tr @*class="tableFixHead"*@>

                                                                        <th style="display:none"> </th>
                                                                        <th style="display:none"></th>
                                                                        <th></th>
                                                                        <th>Employee</th>
                                                                        <th>Department</th>
                                                                        <th>Role</th>

                                                                    </tr>


                                                                </thead>
                                                                <tbody id="AttendedProductServiceTbody">
                                                                    <tr id="0">
                                                                        <td colspan="4" style="text-align:center;">No Records...</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </div>

                                                    </div>

                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" id="btnreplacepartsProductDetails" onclick="fn_nextPrevious(5)" class="btn btn-primary"><< Previous</button>
                                                    <button type="button" id="btnSaveAttendedServices" onclick="javascript: ('@ViewBag.Service' == 0)? Replacedpartsnext(this): ReplacedpartsReturnNext(this)" class="btn btn-primary">Next>></button>
                                                </div>

                                                <input type="hidden" name="FK_Customerserviceregister" value="@Model.FK_Customerserviceregister" />
                                            </div>

                                            <div id="navpills2-3" class="tab-pane">
                                                @*<div class="card">*@
                                                <div class="card-body">
                                                    <div class="row">
                                                        <div perfect-class="ActiontakenContainer" id="Actiontakentables" class="col-sm-12">

                                                        </div>
                                                    </div>
                                                    <hr />
                                                    <div class="row">
                                                        <div class="col-sm-4">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-4 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Attended Date</span>
                                                                    <span class="text-danger">*</span>
                                                                </label>
                                                                <div class="col-sm-8">
                                                                    <input type="date" class="form-control perfectValidate_date" name="VisitedDateAfter" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" min="01-01-1970" onchange="datecheck(this)" />
                                                                    <div class="invalid-feedback animated fadeInUp temptableErrors"></div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-4">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-4 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Total Security Amount</span>

                                                                </label>
                                                                <div class="col-sm-8">
                                                                    <input type="text" class="form-control text-right" placeholder="" id="TotalSecurityAmount" name="TotalSecurityAmount" oninput="decimalpnt(this,'TotalSecurityAmount',3)" onchange="Calcaulatetotalamount(this)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="12" readonly />
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-4">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-4 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Component Charge</span>

                                                                </label>
                                                                <div class="col-sm-8">
                                                                    <input type="text" id="ComponentAmnt" class="form-control text-right" placeholder="" oninput="decimalpnt(this,'ComponentCharge',3)" name="ComponentCharge" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly onchange="Calcaulatetotalamount(this)" />
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-4">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-4 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Total Service Cost</span>

                                                                </label>
                                                                <div class="col-sm-8">
                                                                    <input type="text" class="form-control text-right" maxlength="12" placeholder="" oninput="decimalpnt(this,'ServiceCharge',3)" name="ServiceCharge" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="Calcaulatetotalamount(this)" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-4">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-4 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Other Charges</span>

                                                                </label>
                                                                <div class="col-sm-8">
                                                                    <div class="input-group">
                                                                        <input type="text" class="form-control text-right" name="OtherCharge" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                                        <div class="input-group-append">
                                                                            <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-credit-card" type="button" perfect-css="button" onclick="ShowOtherCharges(this,0)"></button>
                                                                        </div>
                                                                        <div class="modal fade" perfect-class="formGroupModalOtherCharge" id="formGroupModalOtherCharge">
                                                                            <div class="modal-dialog modal-dialog-centered" role="document">
                                                                                <div class="modal-content  rounded-0">
                                                                                    <div class="modal-header border-0">
                                                                                        <h5 class="modal-title">Other Charge Details</h5>
                                                                                        <button type="button" class="close" data-dismiss="modal">
                                                                                            <span>&times;</span>
                                                                                        </button>
                                                                                    </div>
                                                                                    <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">

                                                                                        <table id="zero_configOthercharge" class="table mb-0  table-striped  text-black">
                                                                                            <thead class="bg-primary text-white">
                                                                                                <tr>
                                                                                                    <th class="t-head">SlNo</th>
                                                                                                    <th class="t-head" style="display:none">ID_OtherChargeType</th>
                                                                                                    <th class="t-head">Type</th>
                                                                                                    <th class="t-head">Trans Type</th>
                                                                                                    <th class="t-head">Amount</th>

                                                                                                </tr>
                                                                                            </thead>
                                                                                            <tbody id="formGroupModalOtherChargebody"></tbody>
                                                                                            <tfoot>
                                                                                            </tfoot>
                                                                                        </table>


                                                                                        <div class="modal-footer">

                                                                                            <button type="button" class="btn btn-primary light" data-dismiss="modal" onclick="BindOtherChargeAmount(this)">Apply</button>

                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>

                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-4">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-4 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Discount Amount</span>

                                                                </label>
                                                                <div class="col-sm-8">
                                                                    <input type="text" class="form-control text-right" placeholder="" id="disamount" name="DiscountAmount" oninput="decimalpnt(this,'DiscountAmount',3)" onchange="Calcaulatetotalamount(this)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="9" />


                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-4">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-4 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Net Amount</span>

                                                                </label>
                                                                <div class="col-sm-8">
                                                                    <input type="text" class="form-control  text-right" oninput="decimalpnt(this,'NetAmount',3)" placeholder="" name="NetAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-4 DivBillType" @*style="display:none"*@>
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-4 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Bill Type</span>

                                                                </label>
                                                                <div class="col-sm-8">

                                                                    <select class="form-control " name="BillTypeID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                                        <option value="">Please Select </option>


                                                                        @if (!(Model.BillTypeListView is null))
                                                                        {
                                                                            foreach (var BillType in Model.BillTypeListView)
                                                                            {
                                                                                <option value="@BillType.BillTypeID">@BillType.BillType</option>
                                                                            }
                                                                        }
                                                                    </select>

                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-4 col-form-label">Payment Method</label>
                                                                <div class="col-sm-5">
                                                                    <div class="input-group">

                                                                        <div class="input-group-append">
                                                                            &nbsp;<button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-money" type="button" perfect-css="button" title="Add Payment Method" onclick="GetPaymentlists(this)"></button>

                                                                        </div>
                                                                    </div>

                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="modal fade" perfect-class="formGroupModalpayment" id="formGroupModalpayment">
                                                            <div class="modal-dialog  modal-dialog-centered modal-md" role="document">
                                                                <div class="modal-content">
                                                                    <div class="modal-header border-0">
                                                                        <h5 class="modal-title">Payment Method</h5>
                                                                        <button type="button" class="close" data-dismiss="modal">
                                                                            <span>&times;</span>
                                                                        </button>
                                                                    </div>
                                                                    <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                                                                        <div class="row">


                                                                            <div class="col-sm-12">
                                                                                <div class="form-group row" perfect-class="formGroup">
                                                                                    <label class="col-sm-4 col-form-label">Method <span class="text-danger">*</span></label>
                                                                                    <div class="col-sm-8">
                                                                                        <div class="input-group">
                                                                                            <select class="form-control" perfect-tempTable-Payment="PaymentMethod" name="PaymentMethod" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                                                                <option value="">Please Select </option>


                                                                                                @if (!(Model.PaymentView is null))
                                                                                                {
                                                                                                    foreach (var Module in Model.PaymentView)
                                                                                                    {
                                                                                                        <option value="@Module.PaymentmethodID">@Module.Name</option>
                                                                                                    }
                                                                                                }
                                                                                            </select>


                                                                                        </div>
                                                                                        <div class="text-danger temptableError"></div>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-12">
                                                                                <div class="form-group row" perfect-class="formGroup">
                                                                                    <label class="col-sm-4 col-form-label">
                                                                                        <span perfect-class="formGroupLabel">Ref No.</span>

                                                                                    </label>
                                                                                    <div class="col-sm-8">

                                                                                        <div class="input-group">
                                                                                            <input type="text" class="form-control " perfect-tempTable-Payment="Refno" name="Refno" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="250" />

                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-sm-12">
                                                                                <div class="form-group row" perfect-class="formGroup">
                                                                                    <label class="col-sm-4 col-form-label">
                                                                                        <span perfect-class="formGroupLabel">Amount</span>
                                                                                        <span class="text-danger">*</span>
                                                                                    </label>
                                                                                    <div class="col-sm-8">
                                                                                        <div class="input-group">
                                                                                            <input type="text" class="form-control text-right" perfect-tempTable-Payment="PAmount" id="PAmount" name="PAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'PAmount',3)" onchange="Pamount(this)" maxlength="12" />

                                                                                        </div>
                                                                                        <div class="text-danger temptableError"></div>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-sm-9">


                                                                            </div>
                                                                            <div class="col-sm-3 text-right">
                                                                                <div class="input-group">

                                                                                    <div class="input-group-append">
                                                                                        <div>
                                                                                            <button type="button" class="btn btn-primary1 " onclick="createtable(this,'Payment',['PaymentMethod'],paytableOptionsTempOut)"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                                                            <button class="btn btn-light1" type="button" onclick="productclear(this, 'Payment')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>

                                                                            </div>
                                                                            <div class="col-sm-12">
                                                                                <div class="form-group row" perfect-class="formGroup">
                                                                                    <label class="col-sm-4 col-form-label">
                                                                                        <span perfect-class="formGroupLabel" style="font-weight:500;">Bal. Amount :</span>

                                                                                    </label>
                                                                                    <div class="col-sm-8">
                                                                                        <div class="input-group">

                                                                                            <label class="col-form-label">
                                                                                                <span perfect-class="formGroupLabel" style="font-weight:500;" name="BalAmt"></span>
                                                                                            </label>
                                                                                            @*<input type="text" class="form-control" perfect-temptable-payment="BalAmt" name="BalAmt" perfect-class="" perfect-ctype="input" perfect-css="input" readonly="" style="border:white;background:white;font-weight: 500;">*@
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-sm-12">
                                                                                <div class="form-group row" perfect-class="formGroup">

                                                                                    <div class="table-responsive" perfect-tempTable-Payment="" perfect-tempTable="Payment" id="Paymentdethead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                                                                    <div class="text-danger temptableError"></div>

                                                                                </div>
                                                                            </div>


                                                                        </div>
                                                                        <div class="modal-footer">
                                                                            @*<button type="button" onclick="CreateProductCheckDescription(this);" class="btn btn-primary">Add</button>*@
                                                                            <button type="button" class="btn btn-primary light" onclick="Billttlnetchck(this)">Apply</button>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-4  divaasignedto">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-4 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Assigned To</span>
                                                                </label>
                                                                <div class="col-sm-8">


                                                                    <div class="input-group">

                                                                        @if (!(Model.EmployeeInfoList is null))
                                                                        {
                                                                            foreach (var EmployeeInfo in Model.EmployeeInfoList)
                                                                            {
                                                                                <input type="text" class="form-control perfectValidate_string_nm" value="@EmployeeInfo.EmpFName" placeholder="" name="AssignEmp" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                                                <input type="hidden" name="FK_EmployeeAssign" value="@EmployeeInfo.ID_Employee" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />

                                                                            }


                                                                        }
                                                                        <div class="input-group-append">

                                                                            <button id="addEmployee-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,69,'Employee Details',[],['Branchs','BranchTypeID','FK_Departement','Department','BranchType','SLNo'])" Function="" Criterea1="0" Criterea2="0" Criterea3="0" BindName="AssignEmp" BindVal="FK_EmployeeAssign"></button>

                                                                        </div>
                                                                    </div>
                                                                </div>

                                                            </div>
                                                        </div>




                                                    </div>
                                                    <div class="card-footer text-right" perfect-class="formFooter">
                                                        <button type="button" id="btnreplacepartsProductDetails" onclick="fn_nextPrevious(3)" class="btn btn-primary"><< Previous</button>
                                                        <button type="button" id="btnSave" onclick="fn_SaveCustomerServicefollow(this,'new')" class="btn btn-primary" name="add">Save</button>
                                                        <button id="btnupdate" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_SaveCustomerServicefollow(this,'update')"><i class="fa fa-refresh fa-spin  loaderClass"></i>Update</button>
                                                    </div>
                                                </div>
                                                <input type="hidden" name="FK_Customerserviceregister" />
                                                <input type="hidden" name="ID_Product" value="@Model.ID_Product" />
                                            </div>
                                            <div id="History" class="tab-pane">
                                                <div class="row">
                                                    <div class="card-body">
                                                        <div id="servdet" style="display:none"></div>
                                                        <div class="row col-md-12 table-responsive" id="servicehis"></div>
                                                    </div>
                                                </div>
                                                <div class="card-footer text-right" perfect-class="formFooter">
                                                    <button type="button" id="btnreplacepartsProductDetails" onclick="fn_nextPrevious(4)" class="btn btn-primary"><< Back</button>
                                                </div>
                                            </div>
                                            <div id="warranty" class="tab-pane">
                                                <div class="form-row">
                                                    <div class="col-sm-12">
                                                        <div class="card" style="height:fit-content;margin-bottom: 0rem;">
                                                            <div class="card-body">
                                                                <div id="warrntydt" style="display:none"></div>
                                                                <div class="row col-md-12 table-responsive" id="warrantyhis"></div>

                                                            </div>
                                                        </div>

                                                        <div class="card" style="height:fit-content; margin-bottom: 0rem;">

                                                            <div class="card-header" style="display:none" id="Warrantyheader">
                                                                <h4 class=""><span id="invoiceno"></span> </h4>
                                                            </div>
                                                            <div class="card-body">
                                                                <div class="table-responsive" perfect-tempTable="Warrantydet" style="display:none" id="Warrantydet">
                                                                    <table class="table table2-hover table-responsive-sm table2-striped  text-black" id="Warrantydetlst">
                                                                        <thead class="bg-primary text-white">
                                                                            <tr>
                                                                                <th>Warranty/AMC Type</th>
                                                                                <th>Repl. Warranty/AMC Due Dt</th>
                                                                                <th>Serv. Warranty/AMC Renewal Dt</th>
                                                                                <th>Doc Type</th>
                                                                                <th></th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody id="Warrantydetbdy">
                                                                            <tr id="0">
                                                                                <td colspan="7" style="text-align:center;">No Records...</td>
                                                                            </tr>
                                                                        </tbody>
                                                                    </table>

                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="card-footer text-right" perfect-class="formFooter">
                                                    <button type="button" id="btnreplacepartsProductDetails" onclick="fn_nextPrevious(4)" class="btn btn-primary"><< Back</button>
                                                </div>
                                            </div>



                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>




                    </form>



                </div>

            </div>
            <div class="modal fade show" id="imageGrid" style="display:none; padding-right: 17px" aria-modal="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content rounded-0">
                        <div class="modal-header border-0">
                            <h5 class="modal-title text-primary" id="modaltit"></h5>
                            <button type="button" class="close" data-dismiss="modal">
                                <span>×</span>
                            </button>
                        </div>
                        <div class="modal-body" style="padding: 1rem;">
                            <p>
                                <button type="button" class="btn btn-rounded btn-primary2" title="Zoom-in" onclick="zoomin()"><i class="fa fa-search-plus fa-lg"></i></button>
                                <button type="button" class="btn btn-rounded btn-primary2" title="Zoom-out" onclick="zoomout()"><i class="fa fa-search-minus fa-lg"></i></button>
                                <button type="button" class="btn btn-rounded btn-primary2" title="Image view" onclick="actual()"><i class="fa fa-search fa-lg"></i></button>
                                <button type="button" class="btn btn-rounded btn-primary2" title="Download file" onclick="download()"><i class="fa fa-download fa-lg"></i></button>
                            </p>
                            <img id="myImg" onclick="imgzoomin()">
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{

<script>
  $("#ticketop").trigger("click");

    var serviceids;
    var proddetls;
    var servdetls;
    var attendeddetls;
        var paymentdetls;
    var productdetls;
    var NxtActnPageName;

        (function () {

        //jQuery('form').validate();//<-----  Validate/initialize our form on page load
        jQuery('select').selectpicker();
    })();
    $(document).ready(function () {
        serviceids = @ViewBag.Service ;

        if ('@ViewBag.ProductVal' == "0" && '@ViewBag.CategoryVal' == "0") {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': "Add Page Settings for either Product Or Category" });
            $("#btnSaveproductsubdetails").hide();
        }


        //let $thisForm = $(this).find('[perfect-class="form"]');
        if (serviceids == 0) {
            $("#ID_Category").val('@ViewBag.FK_Category').selectpicker('refresh');
            FillSubcategory('@ViewBag.FK_Category', '@ViewBag.FK_SubCategory');
            FillComplaint('@ViewBag.FK_Category', '@ViewBag.ID_ComplaintList');
            @*$("#ID_SubCategory").val('@ViewBag.FK_SubCategory').selectpicker('refresh');*@
            $("#ID_Brand").val('@ViewBag.FK_Brand').selectpicker('refresh');
            @*$("#ID_Complaints").val('@ViewBag.ID_ComplaintList').selectpicker('refresh');*@
        }
        if ('@ViewBag.SerialNumber' != '' || '@ViewBag.SerialNumber' != "") {
            $("#Searchnumber").val('@ViewBag.SerialNumber');
            $("#btnSearchproductdetails").trigger("click");
            $('#ProductSubdetailsTbody tr').each(function (index, ele) {
                $(this).find('.Product').text();
                var row = $(this).closest("tr");
                //alert(row.find('.Product').text())
            });
            bindcomplaintlist(this);
        }
        else if ('@Model.CusNumber' != '') {
            console.log("Model.CusNumber>>>>>>>>>>", '@Model.CusNumber');
            $("#SearchID").val('@Model.CusNumber');
            $("#btnSearchproductdetails").trigger("click");
        }
        else {

        }
        var today = new Date().toISOString().split('T')[0];


        //alert(@ViewBag.Service);
        $('.divaasignedto').hide();
        $('.divfollowupdate').hide();
        $('.divactiontype').hide();
        $('.divactionlead').hide();




        $('#jq-sidemenu').hide();
        if (serviceids != 0) {
            ServicefollowupReturn(this, serviceids)

            $("#btnupdate").removeClass('d-none');
            $("#btnSave").addClass('d-none');
        }
        else {
            $("#btnSave").removeClass('d-none');
            $("#btnupdate").addClass('d-none');
            proddetls = "";
            servdetls = "";
            attendeddetls = "";
            paymentdetls = "";
            productdetls = "";
        }






        //GetProserDetails(this,@Model.FK_Customerserviceregister);
        // GetServices(this,@Model.FK_Customerserviceregister);
        GetAttendedEmployeeDetails(this,@Model.FK_Customerserviceregister);


        $("#ProductServicesMore").on('change', "input[type='checkbox']", function (e) {



            if ($("input[id='chk1']:checked").length > 0) {
                document.getElementById("btnSaveServicesMore").disabled = false;
            }
            else {
                document.getElementById("btnSaveServicesMore").disabled = true;
            }

        });

        $("#ReplacecProductDetails").on('change', "input[type='checkbox']", function (e) {

            if ($("input[id='chk2']:checked").length > 0) {
                document.getElementById("btnSaveMoreReplaceProduct").disabled = false;
            }
            else {
                document.getElementById("btnSaveMoreReplaceProduct").disabled = true;
            }

        });




        let $thisForm = $(this).find('[perfect-class="form"]');
        $thisForm.closest('.jq_Service_body').find('.ServiceformSesction').addClass('d-none');
        let $thisFormPrhistory = $(this).find('[perfect-class="ProHistory"]');
        $thisFormPrhistory.closest('.jq_ProHistory_body').find('.ProductHisformSesction').addClass('d-none');

        $thisForm.validate({ messages: validationMessage });

        let $thisForms = $(this).find('[perfect-class="form"]');


        //  $thisForms.find('[name="VisitedDateAfter"]').val(moment(visitedDateAfter).format('YYYY-MM-DD'));


        let visitedDateAfter = '@Model.VisitedDateAfter';
        console.log("visitedDateAfter", visitedDateAfter);
        if (visitedDateAfter != null || visitedDateAfter != undefined || visitedDateAfter != "") {
            if (moment(visitedDateAfter).isValid()) {
                let formattedDate = moment(visitedDateAfter).format('YYYY-MM-DD');
                console.log("visitedDateAfter", formattedDate);
                $thisForm.find('[name="VisitedDateAfter"]').val(formattedDate);
            } else {
                //console.error("Invalid date format for visitedDateAfter:");
            }
        } else
        {
            var today = new Date();
            var day = today.getDate() > 9 ? today.getDate() : "0" + today.getDate(); // format should be "DD" not "D" e.g 09
            var month = (today.getMonth() + 1) > 9 ? (today.getMonth() + 1) : "0" + (today.getMonth() + 1);
            var year = today.getFullYear();

            $thisForms.find('[name="VisitedDateAfter"]').attr('max', year + "-" + month + "-" + day);
        }



              NxtActnPageName = '@ViewBag.NxtActnPageName'==""?"":'@ViewBag.NxtActnPageName';


            $thisForms.find('[name="DiscountAmount"]').val(0);
            // GetProductDetails(this, $thisForms.find('[name="ID_Product"]').val());
            var ProducttableOptions = {

                renameHeader: { "Complaint": "Complaint/Service" },
                hideColumn: ["ID_Master", "TransMode"],
                trackInfo: { "TicketNo": "Click to more information" },
                serialNo: true,
            };

            var obj = {
                FK_Customer: isNaN(parseInt($thisForm.find('[name=FK_Customer]').val())) ? 0 : parseInt($thisForm.find('[name=FK_Customer]').val()),
                FK_CustomerOthers: isNaN(parseInt($thisForm.find('[name=FK_CustomerOthers]').val())) ? 0 : parseInt($thisForm.find('[name=FK_CustomerOthers]').val()),
                FK_Product: isNaN(parseInt($thisForm.find('[name=ID_Product]').val())) ? 0 : parseInt($thisForm.find('[name=ID_Product]').val()),
                FK_Category: isNaN(parseInt($thisForm.find('[name=FK_Category]').val())) ? 0 : parseInt($thisForm.find('[name=FK_Category]').val()),
                Mode: 2
            }

            $.ajax({
                url: "@Url.Action("getBillList", "Service")",
                type: "POST",
                data: obj,
                dataType: "json",
                contentType: "application/x-www-form-urlencoded;charset=utf-8",
                success: function (ajaxOutput) {

                    if (ajaxOutput.Process.IsProcess) {
                        let table = JSON.parse(ajaxOutput.Data);

                        $('#servicehis').html(pft_table_createtable(table.dtable, ProducttableOptions))

                    }


                }



            });



        // ... Custom validation message

                  //  $('#GridData').DataTable();
    $('#GridData').DataTable({
            "searching": false,
        "paging": false,
            "info": false,
         "bAutoWidth": false,
        "bLengthChange": false,
        "recordsFiltered":false,
        "ordering": false
        });

        var today = new Date();
        var day = today.getDate() > 9 ? today.getDate() : "0" + today.getDate(); // format should be "DD" not "D" e.g 09
        var month = (today.getMonth() + 1) > 9 ? (today.getMonth() + 1) : "0" + (today.getMonth() + 1);
        var year = today.getFullYear();

        $thisForms.find('[name="VisitedDateAfter"]').attr('max', year + "-" + month + "-" + day);

            $(document).on('change', ".chkProdSelect", function (e) {



                $("#ReplacedProductDetailsTbody tr").remove();
                $("#ProductServiceTbody tr").remove();



            });

        });


        function FillSubcategory(FK_Catgeory, selSubcategory) {
            $.ajax({
                url: "@Url.Action("GetSubcategoryList", "ServiceList")",
                type: "Get",
                data: { "FK_Category": FK_Catgeory},
                dataType: "json",
                contentType: "application/json",
                success: function (ajaxOutput) {
                    let $SubCatDropdown = $("#ID_SubCategory");//<--- Will give SubCat select html element
                    $SubCatDropdown.empty();
                    $SubCatDropdown.append($('<option/>', { value: '0' }).text('Please select')).selectpicker('refresh');
                    if (ajaxOutput != null) {
                        $.each(ajaxOutput.Data, function (key, value) {
                            $SubCatDropdown.append($('<option/>', { "value": value.SubCategoryID }).text(value.SubCategoryName)).selectpicker('refresh')
                        });
                        $SubCatDropdown.val(selSubcategory).selectpicker('refresh');
                    }
                }
            });

        }
        function FillComplaint(FK_Catgeory, selComplaint) {
            $.ajax({
                url: "@Url.Action("GetComplaintList", "ServiceList")",
                type: "Get",
                data: { "FK_Category": FK_Catgeory },
                dataType: "json",
                contentType: "application/json",
                success: function (ajaxOutput) {
                    let $ComplaintstDropdown = $("#ID_Complaints");//<--- Will give SubCat select html element
                    $ComplaintstDropdown.empty();
                    $ComplaintstDropdown.append($('<option/>', { value: '0' }).text('Please select')).selectpicker('refresh');
                    if (ajaxOutput != null) {
                        $.each(ajaxOutput.Data, function (key, value) {
                            $ComplaintstDropdown.append($('<option/>', { "value": value.ID_ComplaintList }).text(value.ComplaintName)).selectpicker('refresh')
                        }); $ComplaintstDropdown.val(selComplaint).selectpicker('refresh');
                    }
                }
            });

        }
        function FillSubCatAndComplaints(ele) {

            $("#ReplacedProductDetailsTbody tr").remove();
            $("#ProductServiceTbody tr").remove();
            $('#Paymentdethead tbody tr').remove();
            FK_Catgeory = $(ele).val();
            FillSubcategory(FK_Catgeory,0);
            FillComplaint(FK_Catgeory,0);
        }

    //Function for edit from page index list view ,bind data
    function ConvertJsonDate(Jsondate) {
        var date = "";
        if (Jsondate != "" && Jsondate != null && Jsondate != undefined) {
            var dateString = Jsondate.substr(6);
            var currentTime = new Date(parseInt(dateString));
            var month = currentTime.getMonth() + 1;
            var day = currentTime.getDate();
            var year = currentTime.getFullYear();
            date = day + "-" + month + "-" + year;
        }
        return date;
    }


    function decimalpnt(ele, id, range) {
        debugger
        let input = $('#' + id);

        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;

        $(document).on('keydown', '#' + id, function (event) {

            if (ele.value.includes('.')) {

            }
            else if (ele.value === '.' && (event.key === '.' || event.keyCode === 190)) {
                ele.value = '0.00'; // Change the value to '0.00' if only a dot is entered
                // Prevent the dot from being entered in the input field
            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.indexOf('.') < 0 && ele.value.indexOf('.') !== 9 && ele.value.length > 8) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }


    function Servicefollowup(ele, ID_ServiceFollowUp) {
        debugger
            let inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                ID_ServiceFollowUp: ID_ServiceFollowUp,
                TransMode:'@ViewBag.TransMode',

        };


            $.ajax({
                url: '@Url.Action("GetServicefollowupInfoByID", "ServiceList")',
                        type: "POST",

                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                        success: function (ajaxOutput) {


                        console.log("Return", ajaxOutput.Data[0]);
                            if (ajaxOutput.Process.IsProcess) {

                                console.log('>_ Inside GetservicefollowupinfoInfo', ajaxOutput)

                                $sideMenuOptions.close();

                                let $thisForm = $(ele).find('[perfect-class="form"]');

                                $thisForm.validate({ messages: validationMessage });
                                $thisForm.find('button[name=add]').addClass('d-none');

                                var date1 = moment(ajaxOutput.Data[0].EntrOn).format('YYYY-MM-DD');


                                var today = new Date();
                                date1 = new Date(date1);
                                date1.setHours(0, 0, 0, 0)

                                var today = new Date();
                                today.setHours(0, 0, 0, 0)

                                if (today.toDateString() != date1.toDateString()) {

                                    $thisForm.find('button[name=update]').addClass('d-none');

                                }
                                else {
                                    console.log('entron', date1);
                                    $thisForm.find('button[name=update]').removeClass('d-none');
                                }
                                debugger

                                $thisForm.data({ pData: ajaxOutput.Data[0] }); //setting the pdata value in form for update -id is taking
                                $thisForm.attr('perfect-onFormSuccess', '.jq_ServiceIndex_formContainer');
                                $thisForm.find('button[name=add]').addClass('d-none');
                                console.log('anson1', ajaxOutput.Data[0].CustomerNote);
                                console.log('anson1', ajaxOutput.Data[0].EmployeeNote);
                                $thisForm.find('[name=VisitedDateAfter]').val(moment(ajaxOutput.Data[0].VisitedDateAfter).format('YYYY-MM-DD'));
                                $thisForm.find('[name="CustomerNote"]').val(ajaxOutput.Data[0].CustomerNote),
                                    $thisForm.find('[name="EmployeeNote"]').val(ajaxOutput.Data[0].EmployeeNote),
                                    $thisForm.find('[name="ServiceAmount"]').attr("readonly", true),
                                    $thisForm.find('[name="ProductAmount"]').attr("readonly", true),
                                    $thisForm.find('[name="ReplaceAmount"]').val(ajaxOutput.Data[0].ReplaceAmount),
                                    $thisForm.find('[name="TotalAmount"]').attr("readonly", true),
                                    $thisForm.find('[name="NetAmount"]').attr("readonly", true),
                                    $thisForm.find('[name="DiscountAmount"]').val(/*ajaxOutput.Data[0].DiscountAmount*/),

                                    $thisForm.find('[name="ID_NextAction"]').val(ajaxOutput.Data[0].ID_NextAction).selectpicker('refresh'),
                                    $thisForm.find('[name="ID_NextAction"]').trigger('change');
                                $thisForm.find('[name="ID_NextActionLead"]').val(ajaxOutput.Data[0].ID_NextActionLead).selectpicker('refresh'),
                                    $thisForm.find('[name="ID_NextActionLead"]').trigger('change');
                                $thisForm.find('[name="FK_ActionType"]').val(ajaxOutput.Data[0].FK_ActionType).selectpicker('refresh'),
                                    $thisForm.find('[name="BillTypeID"]').val(ajaxOutput.Data[0].BillTypeID).selectpicker('refresh'),


                                    $thisForm.find('[name=NextActionDateLead]').val(moment(ajaxOutput.Data[0].NextActionDateLead).format('YYYY-MM-DD'));
                                // $thisForm.find('[name=AssignEmp]').val(ajaxOutput.Data[0].EmployeeName),
                                $thisForm.find('[name=FK_EmployeeAssign]').val(ajaxOutput.Data[0].FK_EmployeeAssign).selectpicker('refresh'),





                                    servdetls = ajaxOutput.Data[0].ServiceDetails;
                                console.log('servdetls', servdetls);

                                //  bindTextboxservicecost(ajaxOutput.Data[0].ServiceDetails.ID_Mode);
                                proddetls = ajaxOutput.Data[0].ProductDetails
                                console.log('servdetls', proddetls);
                                // bindTextbox(ajaxOutput.Data[0].ProductDetails.ID_Mode);
                                attendeddetls = ajaxOutput.Data[0].AttendedEmployeeDetails
                                console.log('attendeddetls', attendeddetls);

                                if (ajaxOutput.Data[0].PaymentDetail != null) {
                                    fillTablepaymentmethod($thisForm, 'Payment', ajaxOutput.Data[0].PaymentDetail, paytableOptionsTempOut)
                            }
                                if (ajaxOutput.Data[0].ReplaceAmount > 0) {
                                    $(".DivBillType").show();
                                    $thisForm.find('[name="BillTypeID"]').addClass('perfectValidate_numeric');
                                }
                                else if (ajaxOutput.Data[0].ReplaceAmount == 0 || ajaxOutput.Data[0].ReplaceAmount == "") {

                                    $(".DivBillType").hide();
                                    $thisForm.find('[name="BillTypeID"]').val('').selectpicker('refresh');
                                    $thisForm.find('[name="BillTypeID"]').removeClass('perfectValidate_numeric');
                                }


                            }
                            else {
                                console.log('>_ Inside GetServicefollowupInfo :false')

                                $.each(ajaxOutput.Process.Message, function (key, value)
                                {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });

                                });
                            }
                },

            });

        }

    function fillTablepaymentmethod(ele, tkey, data, tableOptionsTempOut) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableOptionsTempfill = tableOptionsTempOut;
        let insertData = []
        let tableKey = tkey;
        let indexname = tkey + 'index';
        tableOptionsTempfill.rowAttribute.push(indexname);
        tableOptionsTempfill.hideColumn.push(indexname);
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $.each(data, function (keyOne, valOne) {

            let pData = {};

            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])
            //---

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('tfhyrtname', nameAttr)
                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {
                        // tableOptionsTempfill.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTempfill.hideColumn.push(nameAttr);
                        //displat text of select
                        pData[nameAttr + '_d'] = $this.find('[value="' + valOne[nameAttr] + '"]').text();
                        pData[nameAttr] = valOne[nameAttr];
                        console.log('select', $this.find('options[value="' + valOne[nameAttr] + '"]').text());

                    }
                    else if ($this.is('input')) {

                        let inputType = $this.attr('type').toLocaleLowerCase();
                        console.log(inputType)


                        if (inputType == 'date') {

                            if (valOne[nameAttr] == null) {
                                pData[nameAttr] = valOne[nameAttr];
                            }
                            else {
                                pData[nameAttr] = moment(valOne[nameAttr]).format('YYYY-MM-DD');
                            }


                        }
                        else {
                            pData[nameAttr] = valOne[nameAttr];


                        }
                    }
                    else {
                        pData[nameAttr] = valOne[nameAttr];


                    }
                }



            });

            insertData.push(pData);


            //----

        });
        $tblcontainer.empty();
        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTempfill));

    }




    function datecheck(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        //invalid-feedback

        let Visitdate = $thisForm.find('[name="VisitedDateAfter"]').val();
        let Ticketdate = $thisForm.find('[name="TicketDate"]').val();
        let LastFlwupDate = $thisForm.find('[name="LastFollowUpDate"]').val();
      
        var TicketDate = moment('@Model.TicketDate', "DD-MM-YYYY HH:mm:ss").format("YYYY-MM-DD");      

        var enqDate = new Date(Visitdate);
        enqDate.setHours(0, 0, 0, 0)

        var today = new Date();
        today.setHours(0, 0, 0, 0)
        LastFlwupDate = new Date(LastFlwupDate);
        LastFlwupDate.setHours(0, 0, 0, 0)      
        debugger
        let errorClass4 = '.temptableErrors';

        if (enqDate > today) {

            $thisForm.find('[name="VisitedDateAfter"]').closest('[perfect-class="form"]').find(errorClass4).attr("style", "display:block");
            $thisForm.find('[name="VisitedDateAfter"]').closest('[perfect-class="form"]').find(errorClass4).text('Future Date Not Allowed');
            return false
        }
        else if (Visitdate < TicketDate) {
            $thisForm.find('[name="VisitedDateAfter"]').closest('[perfect-class="form"]').find(errorClass4).attr("style", "display:block");
            $thisForm.find('[name="VisitedDateAfter"]').closest('[perfect-class="form"]').find(errorClass4).text('Attended Date Should be greater than or equal to Ticket register Date');
            return false
        }
        else if (enqDate < LastFlwupDate) {
            $thisForm.find('[name="VisitedDateAfter"]').closest('[perfect-class="form"]').find(errorClass4).attr("style", "display:block");
            $thisForm.find('[name="VisitedDateAfter"]').closest('[perfect-class="form"]').find(errorClass4).text('Attended Date Should be greater than or equal to Last Follow Up Date');
            return false
        }
        else {
            $thisForm.find('[name="VisitedDateAfter"]').closest('[perfect-class="form"]').find(errorClass4).attr("style", "display:none");
            return true
        }
       //else if (enqDate < today) {

       //     $thisForm.find('[name="VisitedDateAfter"]').closest('[perfect-class="formGroup"]').find(errorClass4).attr("style", "display:none");
       //     $thisForm.find('[name="VisitedDateAfter"]').closest('[perfect-class="formGroup"]').find(errorClass4).text('');
       // }
    }




    var validationMessage = {

        'VisitedDateAfter': {
            'required': 'Please Enter A Date',
            'maxlength': jQuery.validator.format(' Name should be less than {0} characters'),
            'stringonly': 'Special characters are not allowed in  Name'

        },
        'ID_NextAction': {
            'required': 'Please Select Next Action',
            'digits': 'Invalid State selected'
        },
        'FK_ActionType': {
            'required': 'Please Select  Action Type',
            'digits': 'Invalid Action Type selected'
        },
        'ID_NextActionLead': {
            'required': 'Please Select  Lead Action',
            'digits': 'Invalid  Lead Action selected'
        },
        'NextActionDateLead': {
            'required': 'Please Enter Follow up Date',
            'min': jQuery.validator.format('Please Enter a Valid Date')
        },
        'BillTypeID': {
            'required': 'Please Select Bill Type',
            'digits': 'Invalid BillType selected'
        }


    };
                function Filter(ele) {

                    $('.bd-example-modal-sm').modal('show');
        }





    var serviceproductdetails;

        function GetServices(ele, id) {
            let $dropDownList = [];
            var $thisForm = $(ele).closest('[perfect-class="form"]');
        var InputData = {
            'FK_Customerserviceregister': id
        }

        $.ajax({
            url: "@Url.Action("GetServiceDetails", "ServiceList")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                $ProductHtml = '';
                if (ajaxOutput != null) {
                    let checked = "";
                    let arrayList = [];
                    if (servdetls != "") {
                        debugger
                        ajaxOutput.Lits.Data = servdetls;
                        arrayList = servdetls;
                        checked = "checked";
                    }
                    if (ajaxOutput.Lits.Data != null) {

                        if (ajaxOutput.Lits.Data.length > 0) {
                            $.each(ajaxOutput.Lits.Data, function (i, value) {
                                debugger
                                //let options = ''
                                //if (servdetls != '') {

                                //    $.each(servdetls, function (key, value1) {

                                //        if (value1.ID_Mode == value.ID_Mode) {


                                //            $.each(ajaxOutput.ServiceMod.Data, function (i, valuea) {
                                //                if (valuea.ID_Mode.toString() == value1.ID_Mode) {

                                //                    options += '<option value=' + valuea.ID_Mode + ' selected="selected">' + valuea.ModeName + '</option>'
                                //                }
                                //                else {
                                //                    options += '<option value=' + valuea.ID_Mode + '>' + valuea.ModeName + '</option>'
                                //                }
                                //            });
                                //        }


                                //    });

                                //}
                                //else {

                                //    $.each(ajaxOutput.ServiceMod.Data, function (i, valuea) {
                                //        options += '<option value=' + valuea.ID_Mode + '>' + valuea.ModeName + '</option>'
                                //    });
                                //    //---

                                //}

                                let options = ''
                                if (servdetls != '') {

                                    $.each(servdetls, function (key, value1) {

                                        if (value1.ID_Mode == value.ID_Mode) {

                                            //value.OctyAmount = value1.OctyAmount;
                                            $.each(ajaxOutput.ServiceMod.Data, function (i, valuea) {
                                                debugger
                                                if (valuea.ID_Mode.toString() == value1.ID_Mode) {

                                                    let optionValue = '<option value=' + valuea.ID_Mode + ' selected="selected">' + valuea.ModeName + '</option>';
                                                    if (!$dropDownList.includes(optionValue)) {
                                                        $dropDownList.push(optionValue)
                                                    }
                                                }
                                                else {
                                                    let optionValue = '<option value=' + valuea.ID_Mode + '>' + valuea.ModeName + '</option>';
                                                    if (!$dropDownList.includes(optionValue)) {
                                                        $dropDownList.push(optionValue)
                                                    }
                                                }
                                            });
                                        }


                                    });

                                }
                                else {

                                    $.each(ajaxOutput.ServiceMod.Data, function (i, valuea) {
                                        let optionValue = '<option value=' + valuea.ID_Mode + '>' + valuea.ModeName + '</option>';
                                        if (!$dropDownList.includes(optionValue)) {
                                            $dropDownList.push(optionValue)
                                        }
                                    });

                                }

                                $.each($dropDownList, function (i, value) {
                                    options += value;
                                });
                                $dropDownList = [];

                                let idReadOnly = parseInt((value.ID_Mode == undefined ? 1 : value.ID_Mode))!=1?"readonly":""
                                let $dropdownservice = '<select class="form-control" onchange="bindTextboxservicecost(this)">' + options + '</select>';
                                let rowCount = (i + 1);
                                let row = $(ele).closest("tr");
                                row.find('.jq_ProductServiceMode_td').find('selected').val(value.ID_Mode);
                                $ProductHtml += "<tr id=" + rowCount + ">";
                                $ProductHtml += "<td class='jq_ProductServices_ID_Services' Style='Display:none'>" + value.ID_Services + "</td>";
                                $ProductHtml += "<td class='jq_ProductServices_ID_Product' Style='Display:none'>" + value.ID_Product + "</td>";

                                $ProductHtml += "<td class='jq_ProductServices_td' ><input type='checkbox'  value='" + value.ProductStatus + "'" + checked + "/></td>";
                                $ProductHtml += "<td>" + value.SubProduct + "</td>";
                                $ProductHtml += "<td>" + value.Service + "</td>";
                                $ProductHtml += "<td class='jq_ProductServiceMode_td'>" + $dropdownservice + "</td>";
                                $ProductHtml += "<td class='jq_ProductServicesAmnt_td' ><input onkeypress='return /[0-9.]/i.test(event.key)' type='text'  min='0' maxlength ='12' "+`onpaste="return false"`+" class='form-control servicecost text-right' perfect-class='formGroupControl'  value='" + parseFloat(value.ServiceCost).toFixed(2) + "' " + `onchange="GetTaxNetdetails(this)" ${idReadOnly}` + "/></td>";
                                $ProductHtml += "<td class='jq_ProductServicesTaxAmount' style='display:none'><input onkeypress='return /[0-9]/i.test(event.key)' type='number'  min='0' maxlength ='12' class='form-control TaxAmount text-right' perfect-class='formGroupControl'  value='" + parseFloat(value.ServiceTaxAmount).toFixed(2) + "' readonly/></td>";
                                $ProductHtml += "<td class='jq_ProductServicesNetAmount' style='display:none'><input onkeypress='return /[0-9]/i.test(event.key)' type='number'  min='0' maxlength ='12' class='form-control NetAmount text-right' perfect-class='formGroupControl'  value='" + parseFloat(value.ServiceNetAmount).toFixed(2) + "' readonly/></td>";
                                $ProductHtml += "<td class='jq_ProductServicesRemarks_td' ><input type='textbox' style='width:300px' class='form-control'  value='" + value.Remarks + "' /></td>";



                                $ProductHtml += "</tr>";
                            });
                        }

                    }
                    else {
                        $ProductHtml += "<tr id='0'><td colspan='8' class='norecord' style'text-align:center'>No Records........</td></tr>";

                    }
                    $('#ProductServiceTbody').append($ProductHtml);

                    $('.bd-Productservice-modal-sm').modal('show');



                }

                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }
            });

        }



      function GetAttendedEmployeeDetails(ele, id) {


          var $thisForm = $(ele).closest('[perfect-class="form"]');
        var InputData = {
            'FK_Customerserviceregister': id
        }

        $.ajax({
            url: "@Url.Action("GetAttendedEmployeeDetails", "ServiceList")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
               // $('[name=FK_Customerserviceregister]').val($(ele).attr('data-id'));
                $AttendedEmpHtml = '';
                if (ajaxOutput != null) {




                        $('#AttendedProductServiceTbody').empty();
                       // var ProductData = ajaxOutput.Data;
                    let checked = "";
                    if (attendeddetls != "") {
                        ajaxOutput.Data = attendeddetls;

                    }
                    if (ajaxOutput.Data != null) {
                        if (ajaxOutput.Data.length > 0) {
                            $.each(ajaxOutput.Data, function (i, value) {
                                console.log("sas", ajaxOutput.Data);
                                let rowCount = (i + 1);
                                if (value.Attend == 1) {
                                    checked = "checked";
                                }
                                else {
                                    checked = "checked";
                                }
                                $AttendedEmpHtml += "<tr id=" + rowCount + ">";
                                $AttendedEmpHtml += "<td class='jq_ProductServices_ID_Employee' Style='Display:none'>" + value.ID_Employee + "</td>";

                                //    $ProductHtml += "<td style='text-align: center;'>" + rowCount + "</td>";
                                $AttendedEmpHtml += "<td class='jq_ProductServices_td' ><input type='checkbox'  value='" + value.Attend + "'" + checked+" /></td>";
                                $AttendedEmpHtml += "<td>" + value.Employee + "</td>";
                                $AttendedEmpHtml += "<td>" + value.Department + "</td>";
                                $AttendedEmpHtml += "<td>" + value.EmployeeType + "</td>";
                                $AttendedEmpHtml += "<td class='jq_Employeetypeid_td' Style =Display:none>" + value.ID_CSAEmployeeType + "</td>";
                                $AttendedEmpHtml += "</tr>";
                            });
                        }
                    }
                        else {
                            $AttendedEmpHtml += "<tr id='0'><td  colspan='4' style'text-align:center'>No Records..</td></tr>";
                        }

                        $('#AttendedProductServiceTbody').append($AttendedEmpHtml);





                  //  $('#btnUpdate').css('display', 'none');
                  //  $('#btnSave').css('display', 'block');
                    $('.bd-Productservice-modal-sm').modal('show');
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            },
            complete: function () {
                $(ele).prop('disabled', false);
            }
        });

    }


    var bindservicemodajaxout;
     function GetServicesadd(ele, id) {



         var $thisForm = $(ele).closest('[perfect-class="form"]');
        var InputData = {
            'FK_Services': id
        }

        $.ajax({
            url: "@Url.Action("GetServiceAddDetails", "ServiceList")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
               // $('[name=FK_Customerserviceregister]').val($(ele).attr('data-id'));

                $ProductHtml = '';
                console.log("sas",ajaxOutput.ServiceMod.Data);
                console.log("Listssas", ajaxOutput.Lits.Data);
                bindservicemodajaxout = ajaxOutput;
                if (ajaxOutput != null) {


                    if (ajaxOutput != null) {

                        $('#ProductServiceTbodyMoredetails').empty();
                       // var ProductData = ajaxOutput.Data;

                        let options = ''
                        $.each(ajaxOutput.ServiceMod.Data,function (i, value) {

                            options += '<option value=' + value.ID_Mode + '>' + value.ModeName + '</option>'
                        });
                        let $dropdownservice = '<select class="form-control" onchange="bindTextboxservicecost(this)">' + options + '</select>';

                        if (ajaxOutput.Lits.Data.length > 0) {
                            $.each(ajaxOutput.Lits.Data, function (i, value) {


                               console.log("sas",ajaxOutput.Data);
                                let rowCount = (i + 1);


                                $ProductHtml += "<tr id=" + rowCount + ">";
                                $ProductHtml += "<td class='jq_ProductServices_ID_Services' Style='Display:none'>" + value.ID_Services + "</td>";
                                $ProductHtml += "<td class='jq_ProductServices_ID_Product' Style='Display:none'>" + value.ID_Product + "</td>";
                                //    $ProductHtml += "<td style='text-align: center;'>" + rowCount + "</td>";
                                $ProductHtml += "<td class='jq_ProductServices_td' ><input id='chk1' type='checkbox'  value='" + value.ProductStatus + "' /></td>";
                                //$ProductHtml += "<td>" + value.SubProduct + "</td>";
                                $ProductHtml += "<td>" + value.Service + "</td>";
                                $ProductHtml += "<td class='jq_ProductServiceMode_td'  >" + $dropdownservice + "</td>";
                                $ProductHtml += "<td class='jq_ProductServicesAmnt_td' ><input onkeypress='return /[0-9.]/i.test(event.key)' type='text' " + `onpaste="return false"` +"  min ='0'   maxlength ='12' class='form-control servicecost text-right' value='" + parseFloat(value.ServiceCost).toFixed(2) + "' " + `onchange="GetTaxNetdetails(this)"` + "/></td>";
                                $ProductHtml += "<td class='jq_ProductServicesTaxAmount' style='display:none'><input onkeypress='return /[0-9]/i.test(event.key)' type='number'  min='0' maxlength ='12' class='form-control TaxAmount text-right' perfect-class='formGroupControl'  value='" + parseFloat(value.TaxAmount).toFixed(2) + "' readonly/></td>";
                                $ProductHtml += "<td class='jq_ProductServicesNetAmount' style='display:none'><input onkeypress='return /[0-9]/i.test(event.key)' type='number'  min='0' maxlength ='12' class='form-control NetAmount text-right' perfect-class='formGroupControl'  value='" + parseFloat(value.NetAmount).toFixed(2) + "' readonly/></td>";
                                $ProductHtml += "<td class='jq_ProductServicesRemarks_td' ><input type='textbox' style='width:300px' class='form-control'  value='" + value.Remarks + "' /></td>";




                                $ProductHtml += "</tr>";
                            });
                            if ($("input[id='chk1']:checked").length > 0) {

                                document.getElementById("btnSaveServicesMore").disabled = false;
                            }
                            else {
                                document.getElementById("btnSaveServicesMore").disabled = true;
                            }

                        }
                        else {
                            $ProductHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                        }




                        $('#ProductServiceTbodyMoredetails').append($ProductHtml);

                    }




                  //  $('#btnUpdate').css('display', 'none');
                  //  $('#btnSave').css('display', 'block');
                    $('.bd-ProductserviceMoredetails-modal-sm').modal('show');
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            },
            complete: function () {
                $(ele).prop('disabled', false);
            }
        });

    }
    ///////////////////////////////////////
    function GetTaxNetdetails(ele) {
        let row = $(ele).closest("tr");
        let TaxableAmount = row.find('.jq_ProductServicesAmnt_td').find('input').val();
        let FK_ServiceType = row.find('.jq_ProductServices_ID_Services').text();
        var $thisForm = $(ele).closest('[perfect-class="form"]');
        var InputData = {
            'FK_ServiceType': FK_ServiceType,
            'TaxableAmount': TaxableAmount,
        }

        $.ajax({
            url: "@Url.Action("GetServiceTaxAndNet", "ServiceList")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                debugger
                if (ajaxOutput != null) {
                    row.find('.jq_ProductServicesTaxAmount').find('input').val(parseFloat(ajaxOutput.TaxNet.Data[0].TaxAmount).toFixed(2));
                    row.find('.jq_ProductServicesNetAmount').find('input').val(parseFloat(ajaxOutput.TaxNet.Data[0].NetAmount).toFixed(2));
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            },
            complete: function () {
                $(ele).prop('disabled', false);
            }
        });

    }

         function GetProserDetails(ele, id) {

             let $dropDownList = [];

            var $thisForm = $(ele).closest('[perfect-class="form"]');
        var InputData = {
            'FK_Customerserviceregister': id
        }

        $.ajax({
            url: "@Url.Action("GetProductDetails", "ServiceList")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
               // $('[name=FK_Customerserviceregister]').val($(ele).attr('data-id'));
                $ProductHtml = '';
                if (ajaxOutput != null) {

                    let checked = "";
                    if (proddetls != "") {
                        ajaxOutput.Lits.Data = proddetls;
                        checked = "checked";
                    }
                    if (ajaxOutput != null) {

                        $('#ProductDetailsTbody').empty();

                        if (ajaxOutput.Lits.Data != null) {
                            if (ajaxOutput.Lits.Data.length > 0) {

                                $.each(ajaxOutput.Lits.Data, function (i, value) {
                                    let options = ''
                                if (proddetls != '') {

                                    $.each(proddetls, function (key, value1) {

                                        if (value1.ID_Mode == value.ID_Mode) {

                                           //value.OctyAmount = value1.OctyAmount;
                                            $.each(ajaxOutput.ChangeMod.Data, function (i, valuea) {
                                                debugger
                                                if (valuea.ID_Mode.toString() == value1.ID_Mode) {

                                                    let optionValue = '<option value=' + valuea.ID_Mode + ' selected="selected">' + valuea.ModeName + '</option>';
                                                    if (!$dropDownList.includes(optionValue)) {
                                                        $dropDownList.push(optionValue)
                                                    }
                                                }
                                                else {
                                                    let optionValue = '<option value=' + valuea.ID_Mode + '>' + valuea.ModeName + '</option>';
                                                    if (!$dropDownList.includes(optionValue)) {
                                                        $dropDownList.push(optionValue)
                                                    }
                                                }
                                            });
                                        }


                                    });

                                }
                                else {

                                    $.each(ajaxOutput.ChangeMod.Data, function (i, valuea) {
                                        let optionValue = '<option value=' + valuea.ID_Mode + '>' + valuea.ModeName + '</option>';
                                        if (!$dropDownList.includes(optionValue)) {
                                            $dropDownList.push(optionValue)
                                        }
                                    });
                                    //---

                                }

                                $.each($dropDownList, function (i, value) {
                                    options += value;
                                });
                                    $dropDownList = [];




                                    let idReadOnly = "";
                                    let idProduct = "";
                                    let idqtty = "";
                                    switch (parseInt(value.ID_Mode == undefined ? 1 : value.ID_Mode)) {
                                        case undefined: idReadOnly = ""; break;
                                        case 1: idReadOnly = ""; break;
                                        case 2: idReadOnly = ""; break;
                                        default:idReadOnly = "readonly"; break;
                                    }
                                    switch (parseInt(value.ID_Mode)) {
                                        case undefined: idProduct = ""; break;
                                        case 3:
                                            idProduct = "disabled";
                                            idqtty = "readonly";
                                            break;

                                        default: idProduct = ""; break;
                                    }
                                    //let idReadOnly = parseInt((value.ID_Mode == undefined ? 1 : value.ID_Mode)) != (1||2) ? "readonly" : ""
                                    let $dropdown = '<select class="form-control" onchange="bindTextbox(this)">' + options + '</select>';





                                    let rowCount = (i + 1);
                                    let index = i;


                                    $ProductHtml += "<tr id=" + rowCount + ">";

                                    $ProductHtml += "<td class='jq_Product_ID_Product' Style='Display:none'>" + value.ID_OLD_Product + "</td>";
                                    $ProductHtml += "<td class='jq_ProductDet_td' ><input type='checkbox'  value='" + value.ID_OLD_Product + "'" + checked+" /></td>";
                                    $ProductHtml += "<td >" + value.OLD_Product + "</td>";
                                    $ProductHtml += "<td class='jq_ProductDetQty_td' ><input  min='0' onkeypress='return /[0-9.]/i.test(event.key)' type='text' " + `onpaste="return false"` + "  maxlength ='10'  class='form-control text-right' value='" + value.SPDOldQuantity + "' /></td>";
                                    $ProductHtml += "<td style='display:none' class='jq_ProductDetAmnt_td'><input   min ='0' onkeypress='return /[0-9.]/i.test(event.key)'  type='number'  maxlength ='10'  class='form-control text-right' value='" + value.Amount + "'/></td>";
                                    $ProductHtml += "<td class='jq_ProductChangeMode_td'  >" + $dropdown + "</td>";

                                    $ProductHtml += "<td class='jq_ProductDetReplaAmnt_td' ><input ' min='0' onkeypress='return /[0-9.]/i.test(event.key)' maxlength ='10' type='text' " + `onpaste="return false"` +"  class='form-control text-right' value='" + value.ReplaceAmount + "' " + `${idReadOnly}`+"/></td>";



                                    $ProductHtml += "<td class='RplcdProduct'>" +
                                    "<div class='input-group'>" +
                                        "<input type='hidden'  " + ` id=RplacedProductId${index} name=ID_Product${index}` + "  class='form-control RplacedProductId' perfect-class='formGroupControl' perfect-ctype='hidden' value='" + value.ID_Product + "' >" +
                                        "<input type='hidden'  " + `id=RplacedMRPs${index} name=MRPs${index}` + "  class='form-control RplacedMRPs' perfect-class='formGroupControl' perfect-ctype='hidden' value='" + value.SPDMRP + "'>" +
                                        //"<input type='hidden'  " + `id=RplacedSalePrice${index} name=SalePrice${index}` +"  class='form-control RplacedSalePrice' perfect-class='formGroupControl' perfect-ctype='hidden'>" +                                        "<input type='hidden'  " + `id=RplacedStockId${index} name=StockId${index}` + "  class='form-control RplacedStockId' perfect-class='formGroupControl' perfect-ctype='hidden' value='" + value.Stock + "'>" +
                                        "<input type='hidden'  " + `id=RplacedTaxAmount${index} name=TaxAmount${index}` + "  class='form-control RplacedTaxAmount' perfect-class='formGroupControl' perfect-ctype='hidden'value='" + value.SPDTaxAmount + "'>" +

                                        "<input type='text'    " + `id=RplacedProductName${index} name=Name${index}` + " class='form-control RplacedProductName' perfect-class='formGroupControl' perfect-css='input' readonly value='" + value.Product + "'>" +


                                        "<input type='hidden'  " + ` id=RplacedEmployee_id name=Employee_id` + "  class='form-control' perfect-class='formGroupControl' perfect-ctype='hidden' value='" + @ViewBag.FK_Employee + "' >" +

                                        "<div class='input-group-append'><button type='button'" + `id=popup${index}`+" class='popup btn btn-primary fa fa-search '" + `onclick="GetCmnPopUpSearchValAssign(this, 88, 'Product Details', [], ['ID_Product',  'MRPs', 'SalePrice', 'StockId', 'TaxAmount'])" Criterea1="Employee_id" Criterea2="0" BindName="Name${index}" BindVal="ID_Product${index}" Function="2"` + " " + `${idProduct}` +"></button>" +
                                    "</div></div></td></td>";

                                    $ProductHtml += "<td class='RplcdProductqty' ><input  min='0' onkeypress='return /[0-9.]/i.test(event.key)' maxlength ='10' type='text' " + `onpaste="return false"` + " class='form-control text-right' value='" + value.Quantity + "' " + `${idqtty}` +"/></td>";
                                    $ProductHtml += "<td class='RplcdProductAmt' ><input  min='0' onkeypress='return /[0-9.]/i.test(event.key)' maxlength ='10' type='number' " + `onpaste="return false"` +"  " + `id=RplacedSalePrice${index} name=SalePrice${index}` + "  class='form-control text-right' value='" + value.SPDSalesPrice + "' readonly/></td>";

                                    $ProductHtml += "<td class='jq_ProductDetRemarks_td' ><input type='textbox' style='width:200px'  class='form-control'  value='" + value.Remarks + "' /></td>";

                                    $ProductHtml += "<td class='jq_Product_EmpCode' Style='Display:none'>" + value.EmpCode + "</td>";
                                    $ProductHtml += "<td class='jq_Product_StockID' Style='Display:none'>" + value.StockID + "</td>";
                                    $ProductHtml += "</tr>";
                                });

                            }
                        }
                        else {
                            $ProductHtml += "<tr id='0'><td id='norcd' class='norecord'colspan='4' style'text-align:center'>No Records..</td></tr>";
                        }

                        $('#ProductDetailsTbody').append($ProductHtml);
                    }



                  //  $('#btnUpdate').css('display', 'none');
                  //  $('#btnSave').css('display', 'block');
                    $('.bd-ProductDetails-modal-sm').modal('show');
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            },
            complete: function () {
                $(ele).prop('disabled', false);
            }
        });

    }

    function Commonpopup(ele, i) {
        let $thisForm = $(this).closest('[perfect-class="form"]');
        let row = $(ele).closest("tr");
        GetCmnPopUpSearchValAssign(this, 88, 'Product Details', [], ['ID_Product', 'Name', 'MRPs', 'SalePrice', 'StockId', 'TaxAmount']);
        let productID = $thisForm.find('[name=ID_Product]').val();
        let productName = $thisForm.find('[name=Name]').val();

        row.find('.RplcdProduct').find('input').val(productName);
    }

    //$("#ProductDetailsTbody").on("click", ".popup", function () {
    //    let row = $(this).closest("tr");
    //    let $thisForm = $(this).closest('[perfect-class="form"]');
    //    GetCmnPopUpSearchValAssign(this, 88, 'Product Details', [], ['ID_Product', 'Name', 'MRPs', 'SalePrice', 'StockId','TaxAmount']);

    //    let Name = $thisForm.find('[name=Name]').val();
    //    row.find('.RplcdProduct').find('input').val(Name);

    //});

    function getfunctionAssign(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $tempArr = $thisForm.data('popValueData');
        let row = $(ele).closest("tr").index();
        $(`#RplacedProductId${row}`).val($tempArr.ID_FIELD);
        $(`#RplacedProductName${row}`).val($tempArr.Name);
        $(`#RplacedMRPs${row}`).val($tempArr.MRPs);
        $(`#RplacedSalePrice${row}`).val($tempArr.SalePrice);
        $(`#RplacedStockId${row}`).val($tempArr.StockId);
        $(`#RplacedTaxAmount${row}`).val($tempArr.TaxAmount);



        //console.log("FSaveddata", $tempArr)
    }
    function getfunctionAssignchnage(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $tempArr = $thisForm.data('popValueData');
        console.log("$tempArr", $tempArr)
        let row = $(ele).closest("tr").index();

        $(`#RplacedProductIds${row}`).val($tempArr.ID_FIELD);
        $(`#RplacedProductNames${row}`).val($tempArr.Name);
        $(`#RplacedMRPss${row}`).val($tempArr.MRPs);
        $(`#RplacedSalePrices${row}`).val($tempArr.SalePrice);
        $(`#RplacedStockIds${row}`).val($tempArr.StockId);
        $(`#RplacedTaxAmounts${row}`).val($tempArr.TaxAmount);
    }

    var bindajaxout;

    function GetProserMoreDetails(ele,id) {

        debugger
        var $thisForm = $(ele).closest('[perfect-class="form"]');
        var InputData = {
            'FK_Customerserviceregister': id,
            'FK_Product': $thisForm.find('[name="ProductID"]').val(),
            'CategoryNameID': $thisForm.find('[name="CategoryNameID"]').val(),
        }

        $.ajax({
            url: "@Url.Action("GetProductMoreDetails", "ServiceList")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
               // $('[name=FK_Customerserviceregister]').val($(ele).attr('data-id'));
                $TicketHtml = '';
                if (ajaxOutput !=null) {


                    if (ajaxOutput != null) {

                        $('#ProductDetailsTbodyMoredetails').empty();
                        console.log("FGFG", ajaxOutput.Lits.Data);
                        console.log("FGFGVew", ajaxOutput.ChangeMod.Data);
                        bindajaxout = ajaxOutput;
                        let options = ''
                        $.each(ajaxOutput.ChangeMod.Data, function (i, value) {
                            options += '<option value=' + value.ID_Mode + '>' + value.ModeName + '</option>'
                        });
                        let $dropdown = '<select class="form-control" onchange="bindTextbox(this)">' + options + '</select>';
                        console.log('drop value', $dropdown);
                        $ProductHtml = '';


                        console.log('AJAXOUT DETAILS', ajaxOutput.Lits.Data);
                        if (ajaxOutput.Lits.Data != null) {
                            if (ajaxOutput.Lits.Data.length > 0) {

                                $.each(ajaxOutput.Lits.Data, function (i, value) {
                                    let rowCount = (i + 1);

                                    debugger
                                    $ProductHtml += "<tr id=" + rowCount + ">";
                                    //    $ProductHtml += "<td style='text-align: center;'>" + rowCount + "</td>";
                                    $ProductHtml += "<td class='jq_Product_ID_Product' Style='Display:none'>" + value.FK_Product + "</td>";
                                    $ProductHtml += "<td class='jq_ProductDet_td'><input  id='chk2'type='checkbox'  value='" + value.FK_Product + "' /></td>";
                                    $ProductHtml += "<td >" + value.Product + "</td>";

                                    $ProductHtml += "<td class='jq_ProductDetQty_td'><input type='text' id='Quantity' min ='0' onkeypress='return /[0-9]/i.test(event.key)' " + `onpaste="return false"` +" maxlength ='10' class='form-control text-right'  value=' " + value.Quantity + "' /></td>";
                                    $ProductHtml += "<td style='display:none' class='jq_ProductDetAmnt_td'><input type='number' id='Amount' min ='0' onkeypress='return /[0-9.]/i.test(event.key)'  maxlength ='12'  class='form-control text-right'  value='" + value.Amount + "' /></td>";
                                    $ProductHtml += "<td class='jq_ProductChangeMode_td' style='width: 130px;'>" + $dropdown + "</td>";

                                    $ProductHtml += "<td class='jq_ProductDetReplaAmnt_td'><input type='text' " + `onpaste="return false"` +" id='ReplaceAmount'min ='0' onkeypress='return /[0-9.]/i.test(event.key)' maxlength ='10'  class='form-control text-right' value='" + value.ReplaceAmount + "' /></td>";


                                    $ProductHtml += "<td class='RplcdProduct'>" +
                                        "<div class='input-group'>" +
                                        "<input type='hidden' " + `id=RplacedProductIds${i} name=ID_Product${i}` +"  class='form-control RplacedProductId' perfect-class='formGroupControl' perfect-ctype='hidden'>" +
                                        "<input type='hidden' " + `id=RplacedMRPss${i} name=MRP${i}` +"  class='form-control RplacedMRPs' perfect-class='formGroupControl' perfect-ctype='hidden'>" +
                                        //"<input type='hidden' " + `id=RplacedSalePrices${i} name=SalePrice${i}` +"  class='form-control RplacedSalePrice' perfect-class='formGroupControl' perfect-ctype='hidden'>" +
                                        "<input type='hidden' " + `id=RplacedStockIds${i} name=StockId${i}` +" class='form-control RplacedStockId' perfect-class='formGroupControl' perfect-ctype='hidden'>" +
                                        "<input type='hidden' " + `id=RplacedTaxAmounts${i} name=TaxAmount${i}` + "  class='form-control RplacedTaxAmount' perfect-class='formGroupControl' perfect-ctype='hidden'>" +

                                         "<input type='hidden'  " + ` id=RplacedEmployee_id name=Employee_id` + "  class='form-control' perfect-class='formGroupControl' perfect-ctype='hidden' value='" + @ViewBag.FK_Employee + "' >" +

                                        "<input type='text'   " + `id=RplacedProductNames${i} name=Names${i}` + " class='form-control RplacedProductName' perfect-class='formGroupControl' perfect-css='input' readonly>" +
                                        "<div class='input-group-append'><button type='button' " + `id=popupsub${i}` + " class='popup btn btn-primary fa fa-search '" + `onclick="GetCmnPopUpSearchValAssign(this, 88, 'Product Details', [], ['ID_Product',  'MRPs', 'SalePrice', 'StockId', 'TaxAmount'])"  Criterea1="Employee_id" Criterea2="0"  BindName="Names${i}" BindVal="ID_Product${i}" Function="4" ` + "></button>" +
                                        "</div></div></td></td>";

                                    $ProductHtml += "<td class='RplcdProductqty' ><input  min='0' onkeypress='return /[0-9.]/i.test(event.key)' maxlength ='10' type='text' " + `onpaste="return false"` +"  class='form-control text-right' value='" + value.ReplaceAmount + "' /></td>";
                                    $ProductHtml += "<td class='RplcdProductAmt' ><input  min='0' onkeypress='return /[0-9.]/i.test(event.key)' maxlength ='10' type='number' " + `onpaste="return false"` +" class='form-control text-right' " + `id=RplacedSalePrices${i} name=SalePrice${i}` +" readonly/></td>";

                                    $ProductHtml += "<td class='jq_ProductDetRemarks_td'><input type='textbox' style='width:200px'   class='form-control'  value='" + value.Remarks + "' /></td>";

                                    $ProductHtml += "<td class='jq_Product_EmpCode' Style='Display:none'>" + value.EmpCode + "</td>";
                                    $ProductHtml += "<td class='jq_Product_StockID' Style='Display:none'>" + value.StockID + "</td>";
                                    $ProductHtml += "</tr>";
                                });

                                if ($("input[id='chk2']:checked").length > 0) {
                                    document.getElementById("btnSaveMoreReplaceProduct").disabled = false;
                                }
                                else {
                                    document.getElementById("btnSaveMoreReplaceProduct").disabled = true;
                                }

                            }
                        }
                        else {
                            $ProductHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                        }

                        $('#ProductDetailsTbodyMoredetails').append($ProductHtml);

                    }




                    $('.bd-ProductReplacementMoredetails-modal-sm').modal('show');
                }



            },

        });

        }


      function fn_showFilter() {

        $formContainer.find('.jq_Service_body').find('.ServiceformSesction').toggleClass('d-none');

        let $thisForm = $(this).find('[perfect-class="form"]');

    }

    function bindTextboxservicecost(ele) {
        debugger
        let Values = $(ele).val();

        if (Values == 1) {
            $(ele).closest('tr').find('.jq_ProductServicesAmnt_td').find('input').prop('readonly', false)


        }
        else {

            $(ele).closest('tr').find('.jq_ProductServicesAmnt_td').find('input').prop('readonly', true)
            $(ele).closest('tr').find('.jq_ProductServicesAmnt_td').find('input').val("0");
            $(ele).closest('tr').find('.jq_ProductServicesTaxAmount').find('input').val("0");
            $(ele).closest('tr').find('.jq_ProductServicesNetAmount').find('input').val("0");


        }
    }
    function getParent(ele) {
        var t = ele.parentNode;
        tagName = "table";

        while (t) {
            if (t.tagName && t.tagName.toLowerCase() == tagName) {

                return t.id;
            }
            else {
                t = t.parentNode;
            }

        }
        return null;
    }
    function bindTextbox(ele) {
        debugger
        let Value = $(ele).val();
        let row = $(ele).closest("tr").index();

        var tableid = getParent(ele);
        if (Value == 1 || Value == 2) {
            $(ele).closest('tr').find('.jq_ProductDetReplaAmnt_td').find('input').prop('readonly', false);
        }
        else {
            $(ele).closest('tr').find('.jq_ProductDetReplaAmnt_td').find('input').prop('readonly', true);
            $(ele).closest('tr').find('.jq_ProductDetReplaAmnt_td').find('input').val("0");
        }
        if (Value == 3) {
            if (tableid == "ProductDetails") {
                $(`#popup${row}`).attr("disabled", "disabled");
            }
            else {
                $(`#popupsub${row}`).attr('disabled', 'disabled');
            }

            //$(`#popup${row}`).attr("disabled", "disabled");
            $(ele).closest('tr').find('.RplcdProductqty').find('input').prop('readonly', true);
            $(ele).closest('tr').find('.RplcdProductqty').find('input').prop('disabled', true);
            $(`#RplacedProductId${row}`).val("");
            $(`#RplacedProductName${row}`).val("");
            $(`#RplacedMRPs${row}`).val("");
            $(`#RplacedSalePrice${row}`).val("0");
            $(`#RplacedStockId${row}`).val("");
            $(`#RplacedTaxAmount${row}`).val("");
            $(ele).closest('tr').find('.RplcdProductqty').find('input').val("0");
            $(ele).closest('tr').find('.RplcdProductAmt').find('input').val("0");

        }
        else {
            $(`#popup${row}`).removeAttr('disabled');
            $(ele).closest('tr').find('.RplcdProductqty').find('input').prop('readonly', false);
            $(ele).closest('tr').find('.RplcdProductqty').find('input').prop('disabled', false);
        }

    }
    function bindTextboxSubAdd(ele) {
        debugger
        let Value = $(ele).val();
        let row = $(ele).closest("tr").index();

        if (Value == 1 || Value == 2) {
            $(ele).closest('tr').find('.jq_ProductDetReplaAmnt_td').find('input').prop('readonly', false);
        }
        else {
            $(ele).closest('tr').find('.jq_ProductDetReplaAmnt_td').find('input').prop('readonly', true);
            $(ele).closest('tr').find('.jq_ProductDetReplaAmnt_td').find('input').val("0");
        }
        if (Value == 3) {
            $(`#popupsub${row}`).attr('disabled', 'disabled');
            $(ele).closest('tr').find('.RplcdProductqty').find('input').prop('readonly', true);
            $(`#RplacedProductId${row}`).val("");
            $(`#RplacedProductName${row}`).val("");
            $(`#RplacedMRPs${row}`).val("");
            $(`#RplacedSalePrice${row}`).val("0");
            $(`#RplacedStockId${row}`).val("");
            $(`#RplacedTaxAmount${row}`).val("");
            $(ele).closest('tr').find('.RplcdProductqty').find('input').val("0");
            $(ele).closest('tr').find('.RplcdProductAmt').find('input').val("0");
        }
        else {
            $(`#popup${row}`).removeAttr('disabled');
            $(ele).closest('tr').find('.RplcdProductqty').find('input').prop('readonly', false);
        }

    }

        function fn_showProHistory() {

            $formContainer.find('.jq_ProHistory_body').find('.ProductHisformSesction').toggleClass('d-none');

            let $thisForm = $(this).find('[perfect-class="form"]');

        }


    function CheckExisting(Object_ID, val, ele, Error) {
        debugger
        let $container = $(ele).closest('[perfect-class="form"]');
        var Exist = 0;
        $container.find('[perfect-tempTable="' + val + '"]').find('tbody').find('tr').each(function () {
            var $tds = $(this).find('td'),
                productId = $tds.eq(1).text();
            console.log('PRODUCT_ID-->', productId)
            if (productId == Object_ID) {
                console.log($tds);
                console.log(Exist);
                Exist++;

            }
            if (Exist > 0) {
                $('#' + Error).css('display', 'block');
                console.log('Yes it exist');
            }
            else {
                $('#' + Error).css('display', 'none');
                console.log('No it not exist');
            }
        })
        return Exist;
    }

    function BindMoredetailsServiceAmountTEST1(ele) {
        debugger

        var tablemoredetailsrws = $("#ProductServiceTbodyMoredetails tr");

        var ProductService = [];

        if (tablemoredetailsrws.length > 0) {



            $('#ProductServiceTbodyMoredetails tr').each(function (index, ele) {


                if ($($(this).find("td:eq(2) input[type='checkbox']")[0]).is(":checked") == true) {



                    let checkbox1 = $(this).find("td:eq(2) input[type='checkbox']").is(":checked") == true ? "1" : "0";
                    let ID_Service = $(this).find("td:eq(0)").text();
                    let ID_Product = $(this).find("td:eq(1)").text();
                    let FK_Service = $(this).find("td:eq(3)").text();
                    let TextServiceMode = $(this).find("td:eq(4) option:selected").text();
                    let TextserviceModvalue = $(this).find("td:eq(4) option:selected").val();


                    let Textvaluecost = $(this).find("td:eq(5) input[type='text']").val().trim();
                    let TextvalueTaxAmount = $(this).find("td:eq(6) input[type='number']").val().trim();
                    let TextvalueNetAmount = $(this).find("td:eq(7) input[type='number']").val().trim();
                    let Textvalueremark = $(this).find("td:eq(8) input[type='textbox']").val();


                    var ary = { checkbox1: checkbox1, ID_Service: ID_Service, ID_Product: ID_Product, FK_Service: FK_Service, TextServiceMode: TextServiceMode, TextserviceModvalue: TextserviceModvalue, Textvaluecost: Textvaluecost, TextvalueTaxAmount: TextvalueTaxAmount ,TextvalueNetAmount: TextvalueNetAmount ,Textvalueremark: Textvalueremark }

                    ProductService.push(ary);

                }

            });




            console.log("ProductService test", ProductService)


            if (ProductService.length > 0) {


                $ProductmoreHtml = '';



                $.each(ProductService, function (i, key) {
                    let isexitp = 0;
                    $('#ProductServiceTbody tr').each(function (index, ele) {
                        if ($(ele).find('.norecord').text() != "") {
                            $('#ProductServiceTbody').empty();

                        }
                        if ($(ele).find('.jq_ProductServices_ID_Services').text() == key.ID_Service) {
                            isexitp++;

                        }
                    });
                    let CheckBoxValue = key.checkbox1 == "1" ? "Checked" : "";



                    let CheckBox = "<input type='checkbox' value='' " + CheckBoxValue + ">";

                    let options = ''
                    $.each(bindservicemodajaxout.ServiceMod.Data, function (i, value) {
                        if (value.ID_Mode == key.TextserviceModvalue) {
                            options += '<option value=' + value.ID_Mode + ' selected="selected">' + value.ModeName + '</option>'
                        }
                        else {
                            options += '<option value=' + value.ID_Mode + '>' + value.ModeName + '</option>'
                        }

                    });
                    $dropdown = '<select class="form-control" onchange="bindTextboxservicecost(this)">' + options + '</select>';





                    if (isexitp == 0) {
                        var readonly;

                        if (key.TextserviceModvalue == 1) {

                            readonly = '';

                        }
                        else {

                            readonly = "readonly";
                            key.Textvaluecost = 0;
                        }






                        $ProductmoreHtml += "<tr><td class='jq_ProductServices_td'>" + CheckBox + "</td><td></td><td class='jq_ProductServices_ID_Services' Style='Display:none'>" + key.ID_Service + "</td><td class='jq_ProductServices_ID_Product' Style='Display:none'>" + key.ID_Product + "</td><td class='jq_Type_td'>" + key.FK_Service + "</td></td><td class='jq_ProductServiceMode_td'>"
                            + $dropdown + "</td><td class='jq_ProductServicesAmnt_td'> <input onkeypress='return /[0-9.]/i.test(event.key)' type='number'  min ='0'   maxlength ='12' class='form-control servicecost text-right' value='" + key.Textvaluecost + "' " + `onchange="GetTaxNetdetails(this)"` + readonly +" /></td >" +
                            "<td class='jq_ProductServicesTaxAmount' style='display:none'> <input type='number' class='form-control text-right' value='" + key.TextvalueTaxAmount + "' readonly/></td >" +
                            "<td class='jq_ProductServicesNetAmount' style='display:none'> <input type='number' class='form-control text-right' value='" + key.TextvalueNetAmount + "' readonly/></td >" +
                            "<td class='jq_ProductServicesRemarks_td' ><input type='textbox'style='width:300px' class='form-control'  value='" + key.Textvalueremark + "' /></td></td ></tr > ";


                    }

                });


                $('#ProductServiceTbody').append($ProductmoreHtml);


            }

            $('.bd-ProductserviceMoredetails-modal-sm').modal('hide');
        }
    }


    function BindMoredetailsProduct(ele) {

        var tablemoredetailsrws = $("#ProductDetailsTbodyMoredetails tr");

        var ProductReplace = [];

        if (tablemoredetailsrws.length > 0) {

            //let rowCountProductDetails = parseInt($('#ProductDetailsTbody tr').length);

            $('#ProductDetailsTbodyMoredetails tr').each(function (index, ele) {
                if ($($(this).find("td:eq(1) input[type='checkbox']")[0]).is(":checked") == true) {
                    debugger

                    let checkbox1 = $(this).find("td:eq(1) input[type='checkbox']").is(":checked") == true ? "1" : "0";
                    let ID_Product = $(this).find("td:eq(0)").text();
                    let FK_Product = $(this).find("td:eq(2)").text();
                    let Textquanityy = $(this).find("td:eq(3) input[type='text'] ").val().trim();
                    let TextAmount = $(this).find("td:eq(4) input[type='number']").val().trim();
                    let TextChangeMode = $(this).find("td:eq(5) option:selected").text();
                    let TextChangeModvalue = $(this).find("td:eq(5) option:selected").val();
                    //'<select class="form-control" onchange="bindTextbox(this)">'
                    let TextReplaceamount = $(this).find("td:eq(6) input[type='text']").val().trim();

                    let RPDProductID = $(this).find('#RplacedProductIds' + index).val();
                    let RPDMRP = $(this).find('#RplacedMRPss' + index).val();
                    let RPDSalesPrice = $(this).find('#RplacedSalePrices' + index).val();
                    let RPDStockID = $(this).find('#RplacedStockIds' + index).val();
                    let RPDTaxAmount = $(this).find('#RplacedTaxAmounts' + index).val();
                    let RPDProduct = $(this).find('#RplacedProductNames' + index).val();

                    let RPDQuantity = $(this).find('.RplcdProductqty').find('input').val();
                    let RPDAmount = $(this).find('.RplcdProductAmt').find('input').val();

                    let TextRemarks = $(this).find("td:eq(10) input[type='textbox']").val().trim();
                    let EmpCode = $(this).find("td:eq(11)").text();
                    let StockID = $(this).find("td:eq(12)").text();

                    var pushvalue = {
                        checkbox1: checkbox1, ID_Product: ID_Product, FK_Product: FK_Product, Textquanityy: Textquanityy, TextAmount: TextAmount,
                        TextChangeMode: TextChangeMode, TextReplaceamount: TextReplaceamount, TextRemarks: TextRemarks, TextChangeModvalue: TextChangeModvalue, EmpCode: EmpCode, StockID: StockID,
                        RPDProductID: RPDProductID, RPDProduct: RPDProduct, RPDMRP: RPDMRP, RPDSalesPrice: RPDSalesPrice, RPDStockID: RPDStockID, RPDTaxAmount ,RPDQuantity: RPDQuantity, RPDAmount: RPDAmount
                    }

                    ProductReplace.push(pushvalue);

                }

            });


            console.log("ProductReplace test", ProductReplace)


            if (ProductReplace.length > 0) {

                $('#ProductDetailsTbody tr').each(function (index, ele) {
                    if ($(ele).find('.norecord').text() != "") { $('#ProductDetailsTbody').empty(); }
                });

                let rowCountProductDetails = parseInt($('#ProductDetailsTbody tr').length);



                ProductmoreHtml = '';

                let $dropdown;

                $.each(ProductReplace, function (i, key) {

                    let isexit = 0;
                    $('#ProductDetailsTbody tr').each(function (index, ele) {
                        if ($(ele).find('.norecord').text() !="") { $('#ProductDetailsTbody').empty();}
                        if ($(ele).find('.jq_Product_ID_Product').text() == key.ID_Product) {
                            isexit++;

                        }



                    });


                    let CheckBoxValue = key.checkbox1 == "1" ? "Checked" : "";


                    let CheckBox = "<input type='checkbox' value='' " + CheckBoxValue + ">";

                    let idProduct = ""
                    switch (parseInt(key.TextChangeModvalue)) {
                        case undefined: idProduct = ""; break;
                        case 3: idProduct = "disabled"; break;
                        default: idProduct = ""; break;
                    }

                    let options = ''
                    $.each(bindajaxout.ChangeMod.Data, function (i, value) {
                        if (value.ID_Mode == key.TextChangeModvalue) {
                            options += '<option value=' + value.ID_Mode + ' selected="selected">' + value.ModeName + '</option>'
                        }
                        else {
                            options += '<option value=' + value.ID_Mode + '>' + value.ModeName + '</option>'
                        }

                    });
                    $dropdown = '<select class="form-control" onchange="bindTextbox(this)">' + options + '</select>';





                    if (isexit == 0) {
                        var readonly;

                        if (key.TextChangeModvalue == 1 || key.TextChangeModvalue ==2) {

                            readonly = '';

                        }
                        else {

                            readonly = "readonly";
                            key.TextReplaceamount = 0;
                        }
                        let idProduct = ""
                        let idqty=""
                        switch (parseInt(key.TextChangeModvalue)) {
                            case undefined: idProduct = ""; break;
                            case 3: idProduct = "disabled"; break;
                            case 3: idqty = "readonly"; break;
                            default: idProduct = ""; break;
                        }

                        rowCountProductDetails++;
                      //  let rowCountProductDetails = parseInt($('#ProductDetailsTbody tr').length++);
                        ProductmoreHtml += "<tr id=" + rowCountProductDetails +"><td class='jq_ProductDet_td'>" + CheckBox + "</td><td class='jq_Product_ID_Product' Style='Display:none'>" + key.ID_Product +
                            "</td><td class='jq_ProductDet_td'>" + key.FK_Product + "</td><td class='jq_ProductDetQty_td'> <input type='text' " + `onpaste="return false"` +" maxlength='10' class='form-control text-right' value='" + key.Textquanityy +
                        "' /></td><td style='display:none' class='jq_ProductDetAmnt_td' > <input type='number'  class='form-control text-right' value='" + key.TextAmount + "'/></td><td class='jq_ProductChangeMode_td'>"
                            + $dropdown + "</td><td class='jq_ProductDetReplaAmnt_td'><input type='text' " + `onpaste="return false"` +" maxlength='10' class='form-control text-right' value='" + key.TextReplaceamount + "'" + readonly + "/></td>"+

                            "<td class='RplcdProduct'>" +

                        "<div class='input-group'>"+
                            "<input type='hidden' value='" + key.RPDProductID + "' " + `id=RplacedProductId${rowCountProductDetails - 1}  name=ID_Product${rowCountProductDetails-1}` +" class='form-control RplacedProductId' perfect-class='formGroupControl' perfect-ctype='hidden'>" +
                            "<input type='hidden' " + `id=RplacedMRPs${rowCountProductDetails - 1}  name=MRPs${rowCountProductDetails - 1}`+" value='" + key.RPDMRP + "' class='form-control RplacedMRPs' perfect-class='formGroupControl' perfect-ctype='hidden'>" +
                            //"<input type='hidden' " + `id='RplacedSalePrice'  name='SalePrice${rowCountProductDetails-1}'` +"  value='" + key.RPDSalesPrice + "' class='form-control RplacedSalePrice' perfect-class='formGroupControl' perfect-ctype='hidden'>" +
                            "<input type='hidden' " + `id=RplacedStockId${rowCountProductDetails - 1}  name=StockId ${rowCountProductDetails - 1}` +" value='" + key.RPDStockID + "' class='form-control RplacedStockId' perfect-class='formGroupControl' perfect-ctype='hidden'>" +
                            "<input type='hidden' " + `id=RplacedTaxAmount${rowCountProductDetails - 1}  name=TaxAmount ${rowCountProductDetails - 1}` + "  value='" + key.RPDTaxAmount + "' class='form-control RplacedTaxAmount' perfect-class='formGroupControl' perfect-ctype='hidden'>" +
                            "<input type='hidden'  " + ` id=RplacedEmployee_id${rowCountProductDetails - 1} name=Employee_id${rowCountProductDetails - 1} ` + "  class='form-control' perfect-class='formGroupControl' perfect-ctype='hidden' value='" + @ViewBag.FK_Employee + "' >" +

                            "<input type='text' value='" + key.RPDProduct + "' " + `id=RplacedProductName${rowCountProductDetails - 1}  name=Name${rowCountProductDetails - 1}` + "  class='form-control RplacedProductName' perfect-class='formGroupControl' perfect-css='input' readonly>" +

                            "<div class='input-group-append'><button type='button' " + `id=popup${rowCountProductDetails - 1}` + " class='popup btn btn-primary fa fa-search ' " + `onclick="GetCmnPopUpSearchValAssign(this, 88, 'Product Details', [], ['ID_Product', 'MRPs', 'SalePrice', 'StockId', 'TaxAmount'])" Criterea1="Employee_id" Criterea2="0"  BindName="Name" BindVal="ID_Product" Function="2"` + "  " + `${idProduct}` +"></button>" +
                        "</div></div></td></td>"+
                            "<td class='RplcdProductqty' ><input   type='text' " + `onpaste="return false"` + " maxlength='10' class='form-control text-right' value='" + key.RPDQuantity + "' " + `${idProduct}` +"/></td>"+
                            "<td class='RplcdProductAmt' ><input   type='number' " + `id=RplacedSalePrice${rowCountProductDetails - 1}  name=SalePrice${rowCountProductDetails - 1}` + "  class='form-control text-right' value='" + key.RPDSalesPrice + "' readonly/></td>"+
                        "<td class='jq_ProductDetRemarks_td'><input type='textbox' class='form-control'style='width:200px'  value='" + key.TextRemarks + "'/></td > "+
                        "<td class='jq_Product_EmpCode' Style='Display:none'>" + key.EmpCode + "'/></td > <td class='jq_Product_StockID' Style='Display:none'>" + key.StockID + "'/></td </td ></tr > ";

                    }


                });


                $('#ProductDetailsTbody').append(ProductmoreHtml);
                console.log(ProductmoreHtml);


            }

            $('.bd-ProductReplacementMoredetails-modal-sm').modal('hide');
        }
    }


    var sum = 0;
    //$(".servicecost").each(function () {
    //    debugger
    //    var value = $(this).text();
    //    // add only if the value is number
    //    if (!isNaN(value) && value.length != 0) {
    //        sum += parseFloat(value);
    //    }




    //});


    var sum;
    var Replacesum ;
    var Productssum ;

        function BindServiceAmount(ele) {

            console.log('inside binddatat fn1')

             $("#replacementinfoid").click();

        }


    function bindserv() {

        //BindProductAmount(this);
        BindComponentCharge(this);
        //CalculateTotal(this);
        //BillAmountbind(this);

    }

    function BindProductAmount(ele) {

        console.log('inside binddatat fn2')
        let $modal = $(ele).closest('.modal');


        Replacesum = +0;

        $('#ProductDetailsTbody tr').each(function (index, ele) {

            debugger


            if ($(this).find('.jq_ProductDet_td').find('[type="checkbox"]').is(':checked') == true && $(this).find("td:eq(5) option:selected").val() == 2) {

                ReplaceAmount = $(ele).find('.jq_ProductDetReplaAmnt_td').find('input').val()

                Replacesum = +Replacesum + (+ReplaceAmount);

            }
        });

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[name=ReplaceAmount]').val(parseFloat(Replacesum).toFixed(2));
        let securityAmount = $thisForm.find('[name=ReplaceAmount]').val(parseFloat(Replacesum).toFixed(2));

        CalculateTotal(ele);

        //    $('.bd-ProductDetails-modal-sm').modal('hide');

        $("#attendanceinfoid").click();

        if (Replacesum > 0) {
            $(".DivBillType").show();
            $('[name="BillTypeID"]').addClass('perfectValidate_numeric');
        }
        else if (Replacesum == 0 || Replacesum == "") {

            $(".DivBillType").hide();
            $('[name="BillTypeID"]').val('').selectpicker('refresh');
            $('[name="BillTypeID"]').removeClass('perfectValidate_numeric');
        }
    }






        function BindImageFils(ele) {

            console.log('inside binddatat fn')
            let $modal = $(ele).closest('.modal');
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            $modal.find('table tbody').find('tr').each(function () {
                var images = $('.jq_ProductImageID_td').attr('src');
                console.log('for relative image url ' + $('#imgFiletemp').attr('src'));
                console.log('fg', images);
            });


        }
        function BindDocFils(ele) {

            console.log('inside binddatat fn')
            let $modal = $(ele).closest('.modal');
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            $modal.find('table tbody').find('tr').each(function () {
                var images = $('.jq_UploadDoc_td').attr('src');
                console.log('for relative Doc url ' + $('#imgDocFiletemp').attr('src'));

            });


    }



    function CalculateTotal(ele) {

        console.log('calculations');
        console.log('sum', sum);
        console.log('Productssum', Productssum);
        console.log('Replacesum', Replacesum);

        let $thisForm = $('[perfect-class="form"]');


        //let ReplaceAmount = Replacesum;

        //let Productsum = Productssum;
        //let ServiceAmount = sum;
        //let DiscAmnt = $thisForm.find('[name="DiscountAmount"]').val() == "" ? "0" : $('[name="DiscountAmount"]').val();

        // TotAmount = parseFloat(ServiceAmount) + parseFloat(Productsum) - parseFloat(ReplaceAmount);


        //console.log('total', TotAmount);

        //let NetAmount = parseFloat(TotAmount) - parseFloat(DiscAmnt);

       // console.log('as', Sprice + Salesprice);
        $('[name=ReplaceAmount]').val(parseFloat(Replacesum).toFixed(2));
        //$('[name="ProductAmount"]').val(Productssum);
        //$('[name="ServiceAmount"]').val(sum);
        //$('[name="TotalAmount"]').val(TotAmount);
        //$('[name="NetAmount"]').val(NetAmount);
        let billamt = 0;
        let bilamt = 0;
        let netamt = parseFloat($thisForm.find('[name=ReplaceAmount]').val() == "" ? "0" : $thisForm.find('[name=ReplaceAmount]').val());
        bilamt = netamt;
        $('#Paymentdethead').find('tbody tr').each(function (index, ele) {
            billamt += parseFloat($(ele).find('.PAmount').text());

        });
        bilamt = parseFloat(bilamt) - billamt;
        $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));

    }


    function checkadmount(ele) {

        let ReplaceAmount = Replacesum;
        let Productsum = Productssum;
        let ServiceAmount = sum;
        TotAmount = parseFloat(ServiceAmount) + parseFloat(Productsum) - parseFloat(ReplaceAmount);

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let disamount = $thisForm.find('[name="DiscountAmount"]').val();
        let totalamount = TotAmount;



        debugger
        if (parseFloat(disamount) > parseFloat(totalamount)) {

            console.log('inside limit check if')
            $thisForm.find('[name="DiscountAmount"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Amount  should be less than or Equal to Total Amount');
            return false;
        }
        else {

            console.log('inside limit check else')
            $thisForm.find('[name="DiscountAmount"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
            return true;
        }
    }



    function fn_SaveCustomerService(ele) {


        let isValid = true;
        let blnHas = false;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
       let selectactionstatusvalue = $thisForm.find('[name="ID_NextAction"]').children(":selected").attr('Status');



        var tablerow = $("#ProductDetailsTbody tr");




        if (tablerow.length > 0) {
            let blnBuyBack = false;
            $('#ProductDetailsTbody tr').each(function (index, ele) {

                let checkbox1 =$(this).find(".jq_ProductDet_td input[type='checkbox']").is(":checked") == true ? "1" : "0";

                let TextChangeMode = $(this).find("td:eq(5) option:selected").text();
                let TextChangeModvalue = $(ele).find("td:eq(5) option:selected").val();


                let RPDProductID =$(ele).find('.RplacedProductId').val();
                let Quantity = $(ele).find('.jq_ProductDetQty_td').find('input').val();
                let RplcdQuantity = $(ele).find('.RplcdProductqty').find('input').val();

                if (checkbox1 == 1 && (Quantity == 0 || Quantity == "") && !blnHas) {
                    NotificationMessage({ 'type': 'Error', 'heading': 'Warning', 'message': 'Please Enter Quantity' });
                    isValid = false;
                    blnHas = true;
                }
                else if (checkbox1 == 1 && TextChangeModvalue != 3 && RPDProductID == 0 && !blnHas) {
                    NotificationMessage({ 'type': 'Error', 'heading': 'Warning', 'message': 'Please Enter Replaced product' });
                    isValid = false;
                    blnHas=true;
                }
                else if (checkbox1 == 1 && TextChangeModvalue != 3 && RPDProductID != 0 && (RplcdQuantity == 0 || RplcdQuantity == "") &&!blnHas) {
                    NotificationMessage({ 'type': 'Error', 'heading': 'Warning', 'message': 'Please Enter Replaced Quantity' });
                    isValid = false;
                    blnHas = true;
                }
                if ($(this).find('.jq_ProductDet_td').find('[type="checkbox"]').is(':checked') == true && $(this).find('.jq_ProductChangeMode_td').find('select').val() == 1 && !blnBuyBack) {
                    blnBuyBack = true;

                }
            });
            if (!blnBuyBack && parseInt(selectactionstatusvalue) == 9) {
                NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'Invalid action in Action Taken section' });
                isValid = false;
            }
        }



        if (isValid == true) {
            if ($thisForm.valid()) {
                if (BillAmountbind(ele)) {

                    $(ele).prop('disabled', true); // avoiding form submit the double click



                    var tableservicedetailsrws = $("#ProductServiceTbody tr");

                    let ServiceDetails = [];

                    if (tableservicedetailsrws.length > 0) {


                        $('#ProductServiceTbody tr').each(function (index, ele) {
                            debugger;
                            // if ($($(this).find("<td class='jq_ProductServices_td' input[type='checkbox']")[0]).is(":checked") == true)
                            if ($(this).find('.jq_ProductServices_td').find('[type="checkbox"]').is(':checked') == true) {
                                let Serviceinfo = {};
                                Serviceinfo['ID_Product'] = $(this).find('.jq_ProductServices_ID_Product').text();
                                Serviceinfo['ID_Services'] = $(this).find('.jq_ProductServices_ID_Services').text();
                                Serviceinfo['Services'] = $(this).find('.jq_Type_tdjq_Type_td').text();
                                Serviceinfo['ServiceType'] = $(this).find('.jq_ProductServiceMode_td').find('select').val();

                                Serviceinfo['ServiceCost'] = $(this).find('.jq_ProductServicesAmnt_td').find('input').val();
                                Serviceinfo['ServiceTaxAmount'] = $(this).find('.jq_ProductServicesTaxAmount').find('input').val();
                                Serviceinfo['ServiceNetAmount'] = $(this).find('.jq_ProductServicesNetAmount').find('input').val();
                                Serviceinfo['Remarks'] = $(this).find('.jq_ProductServicesRemarks_td').find('input').val();
                                console.log('Serviceinfo', Serviceinfo);
                                ServiceDetails.push(Serviceinfo);

                            }

                        });
                    }

                    var tablereplacedetailsrws = $("#ProductDetailsTbody tr");

                    let ProductDetails = [];

                    if (tablereplacedetailsrws.length > 0) {
                        debugger;

                        $('#ProductDetailsTbody tr').each(function (index, ele) {
                            debugger;
                            // if ($($(this).find("<td class='jq_ProductServices_td' input[type='checkbox']")[0]).is(":checked") == true)
                            if ($(this).find('.jq_ProductDet_td').find('[type="checkbox"]').is(':checked') == true) {
                                let PrDetinfo = {};


                                PrDetinfo['ID_Product'] = $(ele).find('.jq_Product_ID_Product').text();
                                PrDetinfo['Quantity'] = $(ele).find('.jq_ProductDetQty_td').find('input').val();
                                PrDetinfo['Amount'] = $(ele).find('.jq_ProductDetAmnt_td').find('input').val();
                                PrDetinfo['ReplaceAmount'] = $(ele).find('.jq_ProductDetReplaAmnt_td').find('input').val();
                                PrDetinfo['ID_Mode'] = $(ele).find('.jq_ProductChangeMode_td').find('select').val();
                                PrDetinfo['ModelNo'] = $(ele).find('.jq_ProductDetModelNO_td').find('input').val();

                                PrDetinfo['RpdProductId'] = $(ele).find('.RplacedProductId').val();
                                PrDetinfo['RpdMRP'] = $(ele).find('.RplacedMRPs').val()
                                PrDetinfo['RpdSalePrice'] = $(ele).find('.RplcdProductAmt').val();
                                PrDetinfo['RpdStockId'] = $(ele).find('.RplacedStockId').val();
                                PrDetinfo['RpdTaxAmount'] = $(ele).find('.RplacedTaxAmount').val();
                                PrDetinfo['RpdProductName'] = $(ele).find('.RplacedProductName').val();

                                PrDetinfo['RpdProductQty'] = $(ele).find('.RplcdProductqty').find('input').val();
                                PrDetinfo['RpdProductAmount'] = $(ele).find('.RplcdProductAmt').find('input').val();

                                PrDetinfo['Remarks'] = $(ele).find('.jq_ProductDetRemarks_td').find('input').val();
                                if ($(ele).find('.jq_Product_EmpCode').text() != null) {
                                    PrDetinfo['EmpCode'] = $(ele).find('.jq_Product_EmpCode').text();
                                } else {
                                    PrDetinfo['EmpCode'] = 0;
                                }
                                if ($(ele).find('.jq_Product_StockID').text() != null) {
                                    PrDetinfo['StockID'] = $(ele).find('.jq_Product_StockID').text();
                                } else {
                                    PrDetinfo['StockID'] = 0;
                                }
                                console.log('Prinfo', PrDetinfo);
                                ProductDetails.push(PrDetinfo);


                            }

                        });
                    }


                    var tableemployeedetailsrws = $("#AttendedProductServiceTbody tr");

                    let EmployeeDetails = [];

                    if (tableemployeedetailsrws.length > 0) {


                        $('#AttendedProductServiceTbody tr').each(function (index, ele) {


                            if ($(this).find('.jq_ProductServices_td').find('[type="checkbox"]').is(':checked') == true) {
                                let EmpDetinfo = {};
                                EmpDetinfo['ID_Employee'] = $(this).find('.jq_ProductServices_ID_Employee').text();
                                EmpDetinfo['EmployeeType'] = $(this).find('.jq_Employeetypeid_td').text();
                                console.log('Prinfo', EmpDetinfo);
                                EmployeeDetails.push(EmpDetinfo);


                            }

                        });
                    }
                    let paymentdetails = [];
                    $thisForm.find('[perfect-tempTable="Payment"]').find('tbody').find('tr').each(function () {
                        paymentdetails.push($(this).data('pData'));
                    })
                    console.log(@Model.FK_Customerserviceregister);
                    var data;
                    data = checkadmount;
                    if (data) {
                        let inputData = {

                            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                            'ServiceFollowUpID': 0,
                            'FK_Customerserviceregister': $thisForm.find('[name="FK_Customerserviceregister"]').val(),


                            'StartingDate': $thisForm.find('[name="VisitedDateAfter"]').val(),

                            'AttendedMode': $thisForm.find('[name="AttendedMode"]').val(),
                            'CustomerNote': $thisForm.find('[name="CustomerNote"]').val(),
                            'EmployeeNote': $thisForm.find('[name="EmployeeNote"]').val(),
                            'ServiceAmount': $thisForm.find('[name="ServiceAmount"]').val(),
                            'ReplaceAmount': $thisForm.find('[name="ReplaceAmount"]').val(),
                            'ProductAmount': $thisForm.find('[name="ProductAmount"]').val(),
                            'TotalAmount': $thisForm.find('[name="TotalAmount"]').val(),
                            'DiscountAmount': $thisForm.find('[name="DiscountAmount"]').val(),
                            'NetAmount': $thisForm.find('[name="NetAmount"]').val(),
                            'ID_NextAction': $thisForm.find('[name="ID_NextAction"]').val(),

                            'ID_NextActionLead': $thisForm.find('[name="ID_NextActionLead"]').val(),
                            'FK_ActionType': $thisForm.find('[name="FK_ActionType"]').val(),
                            'FK_EmployeeAssign': $thisForm.find('[name="FK_EmployeeAssign"]').val(),
                            'NextActionDateLead': $thisForm.find('[name="NextActionDateLead"]').val(),

                            'ServiceDetails': ServiceDetails,
                            'ProductDetails': ProductDetails,
                            'PaymentDetail': paymentdetails,
                            'BillTypeID': $thisForm.find('[name="BillTypeID"]').val(),
                            'TransMode': '@ViewBag.TransMode',
                            'AttendedEmployeeDetails': EmployeeDetails


                        };
                        console.log('save56', inputData)
                        $.ajax({
                            url: "@Url.Action("ServiceFollowUpUpdate", "ServiceList")",
                            type: "POST",
                            data: inputData,
                            dataType: "json",
                            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                            success: function (ajaxOutput) {

                                if (ajaxOutput.Process.IsProcess) {

                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });

                                        var url = '@Url.Action("Index", "ServiceList")?mgrp='+'@ViewBag.mgrp';
                                        window.location.href = url;
                                    });

                                    $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                    $thisForm.find('[perfect-ctype="input"]').val('');
                                    $thisForm.find('[perfect-ctype="date"]').val('');
                                    $thisFormNew.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                    $thisFormNew.find('[perfect-ctype="input"]').val('');
                                    $thisFormNew.find('[perfect-ctype="date"]').val('');




                                    // Get the value set in form's perfect-onFormSuccess attribute
                                    let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                    if (onSuccess) {
                                        window[onSuccess]();
                                    }
                                }
                                else {
                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                    });
                                }
                            },
                            complete: function () {
                                $(ele).prop('disabled', false);
                            }

                        });
                    }
                }
                else {
                    $(ele).prop('disabled', false);
                    NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'In Payment Method Balance Amt. Should be  Zero ' });
                }
            }
        }
    }

    function UpdateServicefollowup(ele) {

        let isValid = true;
        let blnHas = false;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let selectactionstatusvalue = $thisForm.find('[name="ID_NextAction"]').children(":selected").attr('Status');



        var tablerow = $("#ProductDetailsTbody tr");




        if (tablerow.length > 0) {
            let blnBuyBack = false;
            $('#ProductDetailsTbody tr').each(function (index, ele) {

                let checkbox1 = $(this).find(".jq_ProductDet_td input[type='checkbox']").is(":checked") == true ? "1" : "0";

                let TextChangeMode = $(this).find("td:eq(5) option:selected").text();
                let TextChangeModvalue = $(ele).find("td:eq(5) option:selected").val();


                let RPDProductID = $(ele).find('.RplacedProductId').val();
                let Quantity = $(ele).find('.jq_ProductDetQty_td').find('input').val();
                let RplcdQuantity = $(ele).find('.RplcdProductqty').find('input').val();

                if (checkbox1 == 1 && (Quantity == 0 || Quantity == "") && !blnHas) {
                    NotificationMessage({ 'type': 'Error', 'heading': 'Warning', 'message': 'Please Enter Quantity' });
                    isValid = false;
                    blnHas = true;
                }
                else if (checkbox1 == 1 && TextChangeModvalue != 3 && RPDProductID == 0 && !blnHas) {
                    NotificationMessage({ 'type': 'Error', 'heading': 'Warning', 'message': 'Please Enter Replaced product' });
                    isValid = false;
                    blnHas = true;
                }
                else if (checkbox1 == 1 && TextChangeModvalue != 0 && RPDProductID != 0 && (RplcdQuantity == 0 || RplcdQuantity == "") && !blnHas) {
                    NotificationMessage({ 'type': 'Error', 'heading': 'Warning', 'message': 'Please Enter Replaced Quantity' });
                    isValid = false;
                    blnHas = true;
                }
                if ($(this).find('.jq_ProductDet_td').find('[type="checkbox"]').is(':checked') == true && $(this).find('.jq_ProductChangeMode_td').find('select').val() == 1 && !blnBuyBack) {
                    blnBuyBack = true;

                }
            });
            if (!blnBuyBack && parseInt(selectactionstatusvalue) == 9) {
                NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'Invalid action in Action Taken section' });
                isValid = false;
            }
        }



        if (isValid == true) {
            if ($thisForm.valid()) {
                if (BillAmountbind(ele)) {

                    $(ele).prop('disabled', true);

                    let pdata = $thisForm.data('pData');

                    var tableservicedetailsrws1 = $("#ProductServiceTbody tr");

                    let ServiceDetails1 = [];

                    if (tableservicedetailsrws1.length > 0) {


                        $('#ProductServiceTbody tr').each(function (index, ele) {

                            // if ($($(this).find("<td class='jq_ProductServices_td' input[type='checkbox']")[0]).is(":checked") == true)
                            if ($(this).find('.jq_ProductServices_td').find('[type="checkbox"]').is(':checked') == true) {
                                let Serviceinfo1 = {};
                                Serviceinfo1['ID_Product'] = $(this).find('.jq_ProductServices_ID_Product').text();
                                Serviceinfo1['ID_Services'] = $(this).find('.jq_ProductServices_ID_Services').text();
                                Serviceinfo1['Services'] = $(this).find('.jq_Type_tdjq_Type_td').text();
                                Serviceinfo1['ServiceType'] = $(this).find('.jq_ProductServiceMode_td').find('select').val();
                                Serviceinfo1['ServiceCost'] = $(this).find('.jq_ProductServicesAmnt_td').find('input').val();

                                Serviceinfo1['ServiceTaxAmount'] = $(this).find('.jq_ProductServicesTaxAmount').find('input').val();
                                Serviceinfo1['ServiceNetAmount'] = $(this).find('.jq_ProductServicesNetAmount').find('input').val();

                                Serviceinfo1['Remarks'] = $(this).find('.jq_ProductServicesRemarks_td').find('input').val();
                                console.log('Serviceinfo', Serviceinfo);
                                ServiceDetails1.push(Serviceinfo1);

                            }

                        });
                    }

                    var tablereplacedetailsrws2 = $("#ProductDetailsTbody tr");

                    let ProductDetails1 = [];

                    if (tablereplacedetailsrws2.length > 0) {


                        $('#ProductDetailsTbody tr').each(function (index, ele) {

                            // if ($($(this).find("<td class='jq_ProductServices_td' input[type='checkbox']")[0]).is(":checked") == true)
                            if ($(this).find('.jq_ProductDet_td').find('[type="checkbox"]').is(':checked') == true) {
                                let PrDetinfo1 = {};

                                PrDetinfo1['ID_Product'] = $(this).find('.jq_Product_ID_Product').text();
                                //  PrDetinfo['ID_Product'] = $(this).find('.jq_ProductDet_td').find('[type="checkbox"]').val();
                                PrDetinfo1['Quantity'] = $(this).find('.jq_ProductDetQty_td').find('input').val();
                                PrDetinfo1['Amount'] = $(this).find('.jq_ProductDetAmnt_td').find('input').val();
                                PrDetinfo1['ReplaceAmount'] = $(this).find('.jq_ProductDetReplaAmnt_td').find('input').val();

                                PrDetinfo1['RpdProductId'] = $(ele).find('.RplacedProductId').val();
                                PrDetinfo1['RpdMRP'] = $(ele).find('.RplacedMRPs').val()
                                PrDetinfo1['RpdSalePrice'] = $(ele).find('.RplcdProductAmt').val();
                                PrDetinfo1['RpdStockId'] = $(ele).find('.RplacedStockId').val();
                                PrDetinfo1['RpdTaxAmount'] = $(ele).find('.RplacedTaxAmount').val();
                                PrDetinfo1['RpdProductName'] = $(ele).find('.RplacedProductName').val();

                                PrDetinfo1['RpdProductQty'] = $(ele).find('.RplcdProductqty').find('input').val();
                                PrDetinfo1['RpdProductAmount'] = $(ele).find('.RplcdProductAmt').find('input').val();
                                // PrDetinfo['ChangeMode'] = $(this).find('.jq_ProductChangeMode_td').val();
                                PrDetinfo1['ID_Mode'] = $(this).find('.jq_ProductChangeMode_td').find('select').val();
                                PrDetinfo1['ModelNo'] = $(this).find('.jq_ProductDetModelNO_td').find('input').val();
                                PrDetinfo1['Remarks'] = $(this).find('.jq_ProductDetRemarks_td').find('input').val();
                                PrDetinfo1['EmpCode'] = $(this).find('.jq_Product_EmpCode').text();
                                PrDetinfo1['StockID'] = $(this).find('.jq_Product_StockID').text();
                                console.log('Prinfo', PrDetinfo1);
                                ProductDetails1.push(PrDetinfo1);

                            }

                        });
                    }


                    var tableemployeedetailsrws3 = $("#AttendedProductServiceTbody tr");

                    let EmployeeDetails1 = [];

                    if (tableemployeedetailsrws3.length > 0) {


                        $('#AttendedProductServiceTbody tr').each(function (index, ele) {

                            // if ($($(this).find("<td class='jq_ProductServices_td' input[type='checkbox']")[0]).is(":checked") == true)
                            if ($(this).find('.jq_ProductServices_td').find('[type="checkbox"]').is(':checked') == true) {
                                let EmpDetinfo1 = {};
                                EmpDetinfo1['ID_Employee'] = $(this).find('.jq_ProductServices_ID_Employee').text();
                                EmpDetinfo1['EmployeeType'] = $(this).find('.jq_Employeetypeid_td').text();
                                console.log('Prinfo', EmpDetinfo1);
                                EmployeeDetails1.push(EmpDetinfo1);


                            }

                        });
                    }
                    let paymentdetails1 = [];
                    $thisForm.find('[perfect-tempTable="Payment"]').find('tbody').find('tr').each(function () {
                        paymentdetails1.push($(this).data('pData'));
                    })
                    console.log('pdata after view click', pdata)
                    console.log('> Update servicefollow up  form data saved', pdata);
                    var data;
                    data = checkadmount;
                    if (data) {
                        let inputData = {

                            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                            ID_ServiceFollowUp: pdata.ID_ServiceFollowUp,
                            'FK_Customerserviceregister': $thisForm.find('[name="FK_Customerserviceregister"]').val(),
                            'StartingDate': $thisForm.find('[name="VisitedDateAfter"]').val(),
                            'AttendedMode': $thisForm.find('[name="AttendedMode"]').val(),
                            'CustomerNote': $thisForm.find('[name="CustomerNote"]').val(),
                            'EmployeeNote': $thisForm.find('[name="EmployeeNote"]').val(),
                            'ServiceAmount': $thisForm.find('[name="ServiceAmount"]').val(),
                            'ReplaceAmount': $thisForm.find('[name="ReplaceAmount"]').val(),
                            'ProductAmount': $thisForm.find('[name="ProductAmount"]').val(),
                            'TotalAmount': $thisForm.find('[name="TotalAmount"]').val(),
                            'DiscountAmount': $thisForm.find('[name="DiscountAmount"]').val(),
                            'NetAmount': $thisForm.find('[name="NetAmount"]').val(),
                            'ID_NextAction': $thisForm.find('[name="ID_NextAction"]').val(),

                            'ID_NextActionLead': $thisForm.find('[name="ID_NextActionLead"]').val(),
                            'FK_ActionType': $thisForm.find('[name="FK_ActionType"]').val(),
                            'FK_EmployeeAssign': $thisForm.find('[name="FK_EmployeeAssign"]').val(),
                            'NextActionDateLead': $thisForm.find('[name="NextActionDateLead"]').val(),

                            'ServiceDetails': ServiceDetails1,
                            'ProductDetails': ProductDetails1,
                            'PaymentDetail': paymentdetails1,
                            'BillTypeID': $thisForm.find('[name="BillTypeID"]').val(),
                            'AttendedEmployeeDetails': EmployeeDetails1






                        };


                        console.log('> Update district ajax input', inputData);
                        $.ajax({
                            url: "@Url.Action("UpdateServiceFollowUpDetails", "ServiceList")",
                            type: "POST",
                            // headers: { "token_key": "1234" },
                            data: inputData,//<---- Input json : data passed to controller
                            dataType: "json",
                            contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                            success: function (ajaxOutput) { //<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                                if (ajaxOutput.Process.IsProcess) {

                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        //toastr.success(value, "Success");
                                        NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                        var url = '@Url.Action("Index", "ServiceList")?mgrp='+'@ViewBag.mgrp';
                                        window.location.href = url;
                                    });


                                    let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                    if (onSuccess) {
                                        window[onSuccess]();
                                    }

                                    //---------- Do stuff if success
                                    //toastr.success("Inside success", "Confirmation Box in table");

                                    console.log('> update new ServiceFollowUp success data', ajaxOutput);
                                }
                                else {
                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        //toastr.warning(value, "Error");
                                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                    });
                                }


                            },
                            complete: function () {
                                $(ele).prop('disabled', false);
                            }

                        });
                    }


                }
                else {
                    $(ele).prop('disabled', false);
                    NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'In Payment Method Balance Amt. Should be  Zero ' });
                }
            }
        }

        //}

    }

    @*function GetProductDetails(ele, id) {
            let $sidemenu = $sideMenuOptions.body;
            console.log("gfhfgh",$sidemenu);
            $sideMenuOptions.title.find('h4').text('Place ');
        var $thisForm = $(ele).closest('[perfect-class="form-Assign"]');
        var InputData = {
            'ID_Product': id
        }
        $.ajax({
            url: "@Url.Action("GetProductHistoryDetails1", "ServiceList")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
               // $('[name=FK_Customerserviceregister]').val($(ele).attr('data-id'));
                $TicketHtml = '';
                if (ajaxOutput != null) {


                    if (ajaxOutput != null) {

                        $('#ProductTbody').empty();
                       // var ProductData = ajaxOutput.Data;

                        $ProductHtml = '';

                        if (ajaxOutput.Data.length > 0) {
                            $.each(ajaxOutput.Data, function (i, value) {

                                let rowCount = (i + 1);

                                $ProductHtml += "<tr id=" + rowCount + ">";
                                $ProductHtml += "<td style='text-align: center;'>" + rowCount + "</td>";
                                $ProductHtml += "<td>" + value.Product + "</td>";
                                $ProductHtml += "<td>" + value.ProductComplaint + "</td>";
                                $ProductHtml += "<td>" + value.ProductDescription + "</td>";
                                $ProductHtml += "<td>" + value.Warrenty + "</td>";
                                $ProductHtml += "<td>" + value.WarrentyDate + "</td>";
                                $ProductHtml += "<td>" + value.ModelNo + "</td>";
                                $ProductHtml += "</tr>";
                            });
                        }
                        else {
                            $ProductHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                        }

                        $('#ProductTbody').append($ProductHtml);
                    }



                  //  $('#btnUpdate').css('display', 'none');
                  //  $('#btnSave').css('display', 'block');
                    $('.bd-service-modal-sm').modal('show');
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            },
            complete: function () {
                $(ele).prop('disabled', false);
            }
        });

    }*@

    function GetProductDetailsOld(ele, id)
    {

            let $sidemenu = $sideMenuOptions.body;

            $sideMenuOptions.title.find('h4').text('Place ');



        var $thisForm = $(ele).closest('[perfect-class="form"]');
        var InputData = {
            'ID_Product': id,
            'FK_Customer': '@Model.FK_Customer',
            'FK_CustomerOthers':'@Model.FK_CustomerOthers'
        }

        $.ajax({
            url: "@Url.Action("GetProductHistoryDetails1", "ServiceList")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {

                $TicketHtml = '';
                if (ajaxOutput != null) {


                    if (ajaxOutput != null) {

                        $('#ProductTbodyhistroy').empty();
                       // var ProductData = ajaxOutput.Data;

                        $ProductHtml = '';

                        if (ajaxOutput.Data.length > 0) {
                            $.each(ajaxOutput.Data, function (i, value) {

                                let rowCount = (i + 1);

                                $ProductHtml += "<tr id=" + rowCount + ">";
                                $ProductHtml += "<td style='text-align: center;'>" + rowCount + "</td>";
                                $ProductHtml += "<td>" + value.TicketNo + "</td>";
                                $ProductHtml += "<td>" + value.Service + "</td>";
                                $ProductHtml += "<td>" + value.Complaint + "</td>";
                                $ProductHtml += "<td>" + value.CurrentStatus + "</td>";
                                $ProductHtml += "<td>" + value.ClosedDate + "</td>";
                                $ProductHtml += "<td>" + value.EmployeeNotes + "</td>";
                                $ProductHtml += "</tr>";
                            });
                        }
                        else {
                            $ProductHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                        }

                        $('#ProductTbodyhistroy').append($ProductHtml);
                    }



                  //  $('#btnUpdate').css('display', 'none');
                  //  $('#btnSave').css('display', 'block');
                    $('.bd-service-modal-sm').modal('show');
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            },
            complete: function () {
                $(ele).prop('disabled', false);
            }
        });

        }

    function GetPaymentlists(ele) {
        debugger
        $('#formGroupModalpayment').modal({ backdrop: 'static', keyboard: false })

        $('#formGroupModalpayment').modal('show');

    }


    function Billttlnetchck(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let balamt = $thisForm.find('[name=BalAmt]').text();


        if (parseFloat(balamt) == 0) {
            $('#formGroupModalpayment').modal('hide');
            $thisForm.find('[perfect-tempTable="Payment"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
        }
        else {

            $thisForm.find('[perfect-tempTable="Payment"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Balance Amt. should be Zero');

        }
    }



    var paytableOptionsTempOut = {
        iconButton: {
            buttons: [

                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    class: "btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';

                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);

                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');

                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }

                                else {

                                    $thisNode.val(savedData[pf_name]);
                                }

                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }


                        });



                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    class: "btnPerfectGridDelete",
                    action: function () {
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            //$thistbl.dataTable({ paging: true, searchbtn: false });
                        }
                        else {
                            $thistbl.remove();
                        }
                        BillAmountbind($tablecontainer);
                    }
                },
            ]
        },

        rowAttribute: [],
        onlyShowColumn: ['PAmount', 'Refno', 'PaymentMethod_d'],
        renameHeader: { "PAmount": "Amount1R", "Refno": "Ref No", "PaymentMethod_d": "Method" },
        hideColumn: ['BalAmt'],
        serialNo: true,

    };

    function Pamount(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let amtp = $thisForm.find('[name="PAmount"]').val() == "" ? "0" : $thisForm.find('[name="PAmount"]').val();
        $thisForm.find('[name="PAmount"]').val(parseFloat(amtp).toFixed(2));
        //salroundoff(ele);
    }
    function validpaymntdetail(ele, tableKey, errorClass, isValid) {
        debugger

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val() == null) {

            isValid = false
            console.log('false', $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val());
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Payment Method');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val() < 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val() == '' || $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val() == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val()==undefined) {
            console.log('false', $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val());
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter a value greater than or equal to 1');
        }
        else {

            $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }


        return isValid;

    }

    function createtable(ele, tkey, uniq = [], tableOptionsTempOut) {

        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;
        console.log('tableOptionsTemp', tableOptionsTemp)
        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';

        //make index
        console.log('check 1');

        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        console.log('tableOptionsTemp.rowAttribute', tableOptionsTemp.rowAttribute)
        let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {
            //means update
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            //insert
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }
        //
        if (tableKey == 'Warranty') {

            isValid = validwartdetail(ele, tableKey, errorClass, isValid);
        }
        else if (tableKey == 'Payment') {
            isValid = validpaymntdetail(ele, tableKey, errorClass, isValid);
        }
        else if (tableKey == 'Purchase') {
            isValid = validsaledetail(ele, tableKey, errorClass, isValid);
        }

        if (unique.length > 0) {
            //getting previous data
            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }

                }

            })
            console.log('previous data', prevData);

            unique.forEach(function (key, i) {
                console.log('unid -> key:' + key + "| index :" + i);
                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                // let headerEleName = $thisForm.find('[name="lblProName"]').text();
                let atname = $thisEle.attr('name');
                let cvalue;
                console.log('atname', atname);
                console.log('$thisEle.length', $thisEle.length);
                if ($thisEle.length != 0) {
                    console.log('len', $thisEle)
                    let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    let errmessage = key + " Already exits"

                    //getting current value in cval
                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();

                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); console.log('cvalue ->', cvalue); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else { cvalue = $thisEle.val(); }



                    //searching in previous data
                    if (prevData.find(a => a[atname] == cvalue)) {
                        // console.log('Search =>' + cvalue + '| attr :' + atname)
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });

        }

        console.log('isValid', isValid);

        if (isValid) {

            console.log('check 4.1');
            // this section make table column data
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('nameAttr', nameAttr);
                console.log('headerName', headerName);

                if ($this.is('select')) {

                    //tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    //displat text of select
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }

                    insertData[nameAttr] = $this.val();


                    $this.val('').selectpicker('refresh');


                }
                else if ($this.is('input')) {

                    insertData[nameAttr] = $this.val();
                    console.log('insertData[nameAttr]', insertData[nameAttr])
                    if (nameAttr == "prodtid") { }
                    else if (nameAttr == "stkid") { }
                    else {
                        $this.val('');
                    }
                }

            });
            console.log('check 4.2', insertData);
            console.log('check 4.2 tableoption', tableOptionsTemp);
            if (isNew) {
                console.log('check 4.2.1');
                //this section nake table.table row
                if ($tblcontainer.find('table').length == 0) {
                    console.log('check 4.2.3');
                    console.log(insertData);
                    console.log(',tableOptionsTemp', tableOptionsTemp)
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));

                    //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false });
                }
                else {
                    console.log('check 4.2.1');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);


                }

            }
            else {

                let table = $tblcontainer.find('table').DataTable()
                table.destroy()

                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);

            }


            $tblcontainer.attr('perfect-tempTable-action', 0);

            if (tableKey == 'Warranty') {


            }
            else if (tableKey == 'Payment') {
                debugger
                BillAmountbind(ele);
            }
            else if (tableKey == 'Purchase') {
                $thisForm.find('[name=prdbtn]').removeAttr("disabled", "disabled")

                $thisForm.data({ pwarranty: warrantydetails });
                console.log('check 123', $thisForm.data('pwarranty'));
                $thisForm.data({ addpImageselect: $thisForm.data('pImageselect') });
                console.log('addpImageselect', $thisForm.data('addpImageselect'))
                BindBilldetails(ele);

            }

        }


        console.log('check 5');
    }


    function BillAmountbind(ele) {


        debugger
        let $thisForm = $('[perfect-class="form"]');

        let netamt = parseFloat($thisForm.find('[name="NetAmount"]').val() == "" ? 0 : $thisForm.find('[name="NetAmount"]').val());
        let billamt = 0;
        let bilamt = 0;

        if ($thisForm.find('[name=BalAmt]').text() == '') {
            bilamt = 0;
        }
        else {

            bilamt = netamt;
        }



        $('#Paymentdethead').find('tbody tr').each(function (index, ele) {

            billamt += parseFloat($(ele).find('.PAmount').text());

        });

        bilamt = parseFloat(bilamt) - parseFloat(billamt);

        $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));

        if (bilamt == 0) {

            return true;

        }
        else {

            return false;

        }
    }

    function clearproduct(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        console.log('categoryvalue', $thisForm.find('[name= CategoryNameID]').val());

        $thisForm.find('[name= ProductID]').val(0);

        $thisForm.find('[name=ProductName]').val('');
        GetProserMoreDetails(ele,0);

    }


    function getfunction(ele) {
        GetProserMoreDetails(ele,0);
    }


    //function decimalpnt(ele, id, range) {

    //    let input = $('#' + id);
    //    ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
    //    let t = ele.value;
    //    ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
    //    input.on('keydown', function () {
    //        if (ele.value.includes('.')) {

    //        }
    //        var key = event.keyCode || event.charCode;
    //        if (key == 8 || key == 46) { }
    //        else {
    //            if (ele.value.length == 9) {
    //                ele.value = ele.value + '.';
    //            }
    //        }

    //    });
    //}
    function decimalpnt(ele, id, range) {
        debugger
        let input = $('#' + id);

        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;

        $(document).on('keydown', '#' + id, function (event) {

            if (ele.value.includes('.')) {

            }
            else if (ele.value === '.' && (event.key === '.' || event.keyCode === 190)) {
                ele.value = '0.00'; // Change the value to '0.00' if only a dot is entered
                // Prevent the dot from being entered in the input field
            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.indexOf('.') < 0 && ele.value.indexOf('.') !== 9 && ele.value.length > 8) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }
    var WarrantytableOptions = {

        onlyShowColumn: [],
        hideColumn: ["ID_CustomerWiseProductDetails"],
       rowClickAction: GetWarrantylist,
        serialNo: true,
            renameHeader: { }
    };
    function fn_WaranttyDetails() {


         var obj = {
             FK_Customer: $("#FK_Customer").val(),
             FK_CustomerOthers: $("#FK_CustomerOthers").val(),
             FK_Product: $("#ID_Product").val(),
             FK_Category: $("#FK_Category").val(),
             Mode: 1
         }
         $.ajax({
                 url: "@Url.Action("getBillList", "Service")",
                type: "POST",
                data: obj ,
                dataType: "json",
                contentType: "application/x-www-form-urlencoded;charset=utf-8",
                  success: function (ajaxOutput) {

                 if (ajaxOutput.Process.IsProcess) {

                     let table = JSON.parse(ajaxOutput.Data);
                     $('#warrantyhis').html(pft_table_createtable(table.dtable, WarrantytableOptions))
                     document.getElementById("warrntydt").style.display = 'none';
                 }
                 else {

                     $('#warrantybadge').html(0);
                     document.getElementById("warrntydt").style.display = 'block';
                     document.getElementById("Warrantydet").style.display = 'none';
                     document.getElementById("Warrantyheader").style.display = 'none';
                     $('#warrantyhis').html('')
                     $('#warrntydt').html("<p style='text-align:center;' >No Records..</p>");
                 }

               }
         });
    }
    function GetWarrantylist(ele)
    {

            $('.Divcontact').hide();

          let $thisRow = $(this).closest('tr');
          let savedata = $thisRow.data('pData');


     var obj = {

         Mode: 4,
         MasterID: savedata.ID_CustomerWiseProductDetails
         }


         $.ajax({
                 url: "@Url.Action("getwarrantyList", "Service")",
                type: "POST",
                data: obj ,
                dataType: "json",
                contentType: "application/x-www-form-urlencoded;charset=utf-8",
                  success: function (ajaxOutput) {
                   if (ajaxOutput.Process.IsProcess) {
                    $('#Warrantydetbdy').empty();

                       $('#invoiceno').html("<b>Invoice No</b>" + ":" + " <b>" + savedata.InvoiceNo + "</b>");
                    let dtable = JSON.parse(ajaxOutput.Data).dtable;
                    console.log('dtable', dtable)
                    if (dtable.length > 0) {

                        var warranty = dtable[dtable.length - 1].ID_WarrantyDetails;

                        a = 1;

                        var pdficon ;
                        var viewicon ;
                        var title ;
                        for (var i = dtable.length - 1; i >= 0; i--)
                        {
                            let $tr = $('<tr/>');

                            let isicon = false;
                            var _validFileExtensions = [".jpg", ".jpeg", ".bmp", ".gif", ".png"];
                            if (dtable[i].ImageName != null) {
                                for (var j = 0; j < _validFileExtensions.length; j++) {

                                    if (dtable[i].ImageName.includes(_validFileExtensions[j])) {
                                        pdficon = "fa fa-file-image-o";
                                        viewicon = "fa fa-eye";
                                        title = "View File";
                                        isicon = true;
                                    }

                                }
                                if (!isicon) {
                                    if (dtable[i].ImageName.includes(".xl")) {
                                        pdficon = "fa fa-file-excel-o";
                                    }
                                    else if (dtable[i].ImageName.includes(".pdf")) {
                                        pdficon = "fa fa-file-pdf-o";
                                    }
                                    else { pdficon = "fa fa-file-o"; }
                                    viewicon = "fa fa-download";
                                    title = "Download file";

                                }
                            }

                            if (i == 0 || warranty != dtable[i - 1].ID_WarrantyDetails) {

                                var dateEntered = dtable[i].ReplacementWarrantyExpireDate;
                                var date = dateEntered.substring(0, 2);
                                var month = dateEntered.substring(3, 5);
                                var year = dateEntered.substring(6, 10);

                                var dateToCompare = new Date(year, month - 1, date);
                                var currentDate = new Date();





                                if (currentDate > dateToCompare) {
                                    $tr.addClass("ExpWarning");
                                }
                                $tr.append("<td  class='nrs' rowspan=\"" + a + "\">" + dtable[i].WarrantyType + "</td>");
                                $tr.append("<td rowspan=\"" + a + "\">" + dtable[i].ReplacementWarrantyExpireDate + "</td>");
                                $tr.append("<td rowspan=\"" + a + "\">" + dtable[i].ServiceWarrantyExpireDate + "</td>");

                                a = 1;
                                if (i > 0) warranty = dtable[i - 1].ID_WarrantyDetails;

                            }
                            else {
                               a++;
                            }
                            if (dtable[i].ImageName != null) {
                                $tr.append("<td class='imagename' style='display:none'>" + dtable[i].ImageName + "</td>");
                                $tr.append("<td class='imageval' style='display:none'>" + dtable[i].Image + "</td>");

                                $tr.append("<td class='imagemode' >" + dtable[i].ImageMode + "</td>");
                                $tr.append("<td > <button type='button' data-toggle='tooltip' onclick='downloadimg(this)' " +
                                    " class= 'btn btn-rounded btn-primary1' > <span class='btn-icon-left text-primary'><i id='imagei' class='" + pdficon + "'></i></span><i  title='" + title + "' class='" + viewicon + "'></i></button ></td >");
                            }
                            $('#Warrantydetbdy').prepend($tr);

                            document.getElementById("Warrantyheader").style.display = 'block';
                            document.getElementById("Warrantydet").style.display = 'block';
                             }
                    }
                    else
                    {
                                let $tr = $('<tr/>');
                                $tr.append("<th colspan='5' style='text-align:center'>No Data to display</th>");
                               $('#Warrantydetbdy').append($tr);
                          }
                }
                   else
                   {
                       document.getElementById("warrntydt").style.display = 'block';
                       document.getElementById("Warrantyheader").style.display = 'none';
                          document.getElementById("Warrantydet").style.display = 'none';
                          $('#warrntydt').html("<p style='text-align:center;' >No Records..</p>");
                }
            },
            complete: function () {
                $(ele).prop('disabled', false);
            }
        });

    }
    function downloadimg(ele) {

        var text = $(ele).closest('tr').find('.imagename').text();
        var imgname = $(ele).closest('tr').find('.imagemode').text();
        var textval = $(ele).closest('tr').find('.imageval').text();
        var isimage = false;
        var _validFileExtensions = [".jpg", ".jpeg", ".bmp", ".gif", ".png"];
        for (var j = 0; j < _validFileExtensions.length; j++) {
            if (text != null) {
                if (text.includes(_validFileExtensions[j])) {

                    $('#imageGrid').modal('show');
                    $('#modaltit').text(imgname);
                    $("#myImg").attr("src", "data:image/;base64," + textval);
                    $("#myImg").attr("name", text);
                    var myImg = document.getElementById("myImg");

                    myImg.style.width = "350px";



                    isimage = true;
                }
            }


        }
        if (!isimage) {

            var a = document.createElement("a");

            a.href = "data:image/;base64," + textval; //Image Base64 Goes here
            a.download = text;//File name Here
            a.click();
        }
    }


    function Showactionlead1(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let selectactionstatusval = $thisForm.find('[name="ID_NextAction"]').children(":selected").attr('Status');

        $thisForm.find('[name="FK_ActionStatus"]').val(selectactionstatusval).selectpicker('refresh');

        if (selectactionstatusval == 9) {
            $('.divactionlead').show();

            $thisForm.find('[name="ID_NextActionLead"]').addClass('perfectValidate_numeric');
        }
        else {
            $('.divactionlead').hide();
            $('.divaasignedto').hide();
            $('.divfollowupdate').hide();
            $('.divactiontype').hide();
            $thisForm.find('[name="ID_NextActionLead"]').removeClass('perfectValidate_numeric');
            $thisForm.find('[name="NextActionDateLead"]').removeClass('perfectValidate_date');
            $thisForm.find('[name="FK_ActionType"]').removeClass('perfectValidate_numeric');

        }
        $thisForm.find('[name=ID_NextActionLead]').val('').selectpicker('refresh');
        $thisForm.find('[name=FK_ActionType]').val('').selectpicker('refresh');
        $thisForm.find('[name="NextActionDate"]').val();

       }


    function SetActiontypedropdown(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let selectleadactionstatus = $thisForm.find('[name="ID_NextActionLead"]').children(":selected").attr('Statuslead');

        $thisForm.find('[name="NxtActnStageLead"]').val(selectleadactionstatus).selectpicker('refresh');

        if (selectleadactionstatus == 1) {

            $('.divaasignedto').show();
            $('.divfollowupdate').show();
            $('.divactiontype').show();

            $thisForm.find('[name="NextActionDateLead"]').addClass('perfectValidate_date');
            $thisForm.find('[name="FK_ActionType"]').addClass('perfectValidate_numeric');
        }
        else {
            $('.divaasignedto').hide();
            $('.divfollowupdate').hide();
            $('.divactiontype').hide();
            $thisForm.find('[name="NextActionDateLead"]').removeClass('perfectValidate_date');
            $thisForm.find('[name="FK_ActionType"]').removeClass('perfectValidate_numeric');
        }
        $thisForm.find('[name=FK_ActionType]').val('').selectpicker('refresh');
        $thisForm.find('[name="NextActionDate"]').val();


    }



    function productclear(ele, tablekey) {

        let $thisform = $(ele).closest('[perfect-class="form"]');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');

        let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);

        if (tablekey = "Payment") {

        }
        }
//***********************************************************************************new code **************************************************************************************************

        function checksearchvalues(ele) {
            debugger
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            if ($thisForm.find('[name="Searchnumber"]').val() != 0 || $thisForm.find('[name="Searchnumber"]').val() != "" || $thisForm.find('[name="Searchnumber"]').val() != undefined || $thisForm.find('[name="Searchnumber"]').val() != '' ) {
                $thisForm.find('[name="SearchID"]').val("");
            }


        }
        function checksearchid(ele) {
            debugger
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            if ($thisForm.find('[name="SearchID"]').val() != 0 || $thisForm.find('[name="SearchID"]').val() != "" || $thisForm.find('[name="SearchID"]').val() != undefined || $thisForm.find('[name="SearchID"]').val() != '' ) {
                $thisForm.find('[name="Searchnumber"]').val("");
            }


        }

        var Mode = 0;

        function GetProductDetails(ele) {

            let $thisForm = $(ele).closest('[perfect-class="form"]');

            let $tbody = $thisForm.find('[perfect-class="SubproductContainer"]').find('tbody');
            var ReferenceNo;

            if ($thisForm.find('[name="SearchID"]').val() != "" && $thisForm.find('[name="SearchID"]').val() != undefined && $thisForm.find('[name="SearchID"]').val() != '')
            {

                ReferenceNo = $thisForm.find('[name="SearchID"]').val();
                Mode = 2;

            }
            else
            {
                ReferenceNo = $thisForm.find('[name="Searchnumber"]').val();
               Mode = 1;

            }
            if (ReferenceNo == "") {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': "Please Enter Serial number or Customer ID" });
            }
            else {
                            var InputData = {
                'ReferenceNo': ReferenceNo,
                'Mode': Mode
            }

        $.ajax({
            url: "@Url.Action("GetProductSubDetailsusingReferenceNo", "ServiceList")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",


            success: function (data) {


                if (data.Process.IsProcess) {
                    debugger
                    let modules = data.Data;
                    console.log( 'modOut>>>>>>>',modules);
                    $("#ProductSubdetailsTbody tr").remove();
                    if (modules.length > 0) {
                        console.log('modul',modules)

                        $.each(modules, function (i, value) {
                            debugger

                            let $thead = $('<th/>', { class: "MasterProduct", colspan: 11 }).text(value.MasterProduct);
                            $tbody.append($('<tr/>').append($thead));

                            $.each(value.CustomerProductdetails, function (i, values) {

                                let RplceExpired = values.ReplacementWarrantyExpired == 1 ? "color:red" : "";
                                let ServExpired = values.ServiceWarrantyExpired == 1 ? "color:red" : "";
                                let RplceExpiredTooltip = values.ReplacementWarrantyExpired == 1 ? "Replacement Warranty Expired" : "";
                                let ServExpiredTooltip = values.ServiceWarrantyExpired == 1 ? "Service Warranty Expired" : "";
                                let rowCount = (i + 1);
                                let $row = $('<tr/>', { id: rowCount, class: "trvalue" });

                                let $ddl = "dllcomplaintlist_" + values.SNo;

                                $row.append($('<td>'))
                                    .append($('<td>', { class: "FK_Product", style: "display:none" }).text(values.FK_Product))
                                    .append($('<td>', { class: "FK_Category", style: "display:none" }).text(values.FK_Category))
                                    .append($('<td>', { class: "FK_ProductNumberingDetails", style: "display:none" }).text(values.FK_ProductNumberingDetails))
                                    .append($('<td>', { class: "ID_CustomerWiseProductDetails", style: "display:none" }).text(values.ID_CustomerWiseProductDetails))
                                    .append($('<td>', { class: "Product" }).text(values.Product))
                                    .append($('<td>', { class: "SLNo" }).text(values.SLNo))
                                    .append($('<td>', { class: "Warranty" }).text(values.Warranty))
                                    .append($('<td>', { class: "ServiceWarrantyExpireDate", style: ServExpired, title: ServExpiredTooltip  }).text(values.ServiceWarrantyExpireDate))
                                    .append($('<td>', { class: "ReplacementWarrantyExpireDate", style: RplceExpired, title: RplceExpiredTooltip }).text(values.ReplacementWarrantyExpireDate))

                                    .append($('<td>', { class: "jq_Productcheckbox_td" }).html(
                                        $('<input />', { type: 'checkbox', class:"chkProdSelect", name: 'check', id: 'ServiceCheck' + values.SNo, 'perfect-class': 'formCheckInput', 'perfect-ctype': "checkbox", 'FK_Category': values.FK_Category, 'FK_Product': values.FK_Product, 'ID_CustomerWiseProductDetails': values.ID_CustomerWiseProductDetails, 'Uniq_ID': values.SNo })
                                            .val(values.check)
                                            .on('change', function () {
                                                bindcomplaintlist(this);
                                            })
                                    ))
                                    .append($('<td>', { class: "jq_Productdropdowncomplaintlist_td" }).html(
                                        $("<select class='form-control remove-top-bottom-margin'name='ID_ComplaintList' style='display:none'  id='" + $ddl +"'>"), {
                                    }))
                                    .append($('<td>', { class: "jq_Productdetailsdescription_td" }).html(
                                        $('<input />', { class:'form-control remove-top-bottom-margin', type: 'textbox', name: 'Description', 'perfect-ctype': "text",value:values.Description  })

                                    ))


                                $tbody.append($row);
                                //alert($(this).closest("tr").find('.Product').text());
                            });


                        });

                    }
                    else {
                        $filldata += "<tr id='0'><td class='norecord'colspan='5' style'text-align:center'>No Records..</td></tr>";
                    }

                } else {
                    //console.error(data.Process.Message);
                    $("#ProductSubdetailsTbody tr").remove();
                    let $row = ($(`<td class='norecord'colspan='12' style='text-align:center'>No Records..</td>`))
                    $tbody.append($('<tr/>').append($row));
                }
            },
            complete: function () {

                $('#ProductSubdetailsTbody tr').each(function (index, ele) {
                    if ('@ViewBag.ID_ComplaintList' > 0) {
                        let id = $(this).find('.jq_Productcheckbox_td').find('[type="checkbox"]').attr('uniq_id')
                        $("#ServiceCheck" + id).prop("checked", true);
                        $("#ServiceCheck" + id).trigger('change');
                    }
                    //let ServExpDate = $(this).find('.ServiceWarrantyExpireDate').text();
                    //let RplcExpDate = $(this).find('.ReplacementWarrantyExpireDate').text();

                    //ServExpDate = new Date(ServExpDate);
                    //ServExpDate.setHours(0, 0, 0, 0);

                    //RplcExpDate = new Date(RplcExpDate);
                    //RplcExpDate.setHours(0, 0, 0, 0);

                    //let today = new Date();
                    //today.setHours(0, 0, 0, 0);
                    //compareDates(moment(ServExpDate).format('DD/MM/YYYY'), moment().format('DD/MM/YYYY'), ele, '.ServiceWarrantyExpireDate');
                    //compareDates(moment(RplcExpDate).format('DD/MM/YYYY'), moment().format('DD/MM/YYYY'), ele, '.ReplacementWarrantyExpireDate');
                   // alert(`ServExpDate : ${ServExpDate} ,today:${today}`)
                    //if (ServExpDate < today) {
                    //    $(ele).find('.ServiceWarrantyExpireDate').css('color', 'red');
                    //}
                    //if (RplcExpDate < today) {
                    //    $(ele).find('.ReplacementWarrantyExpireDate').css('color', 'red');
                    //}
                });
            }
            });
            }




        }

    const compareDates = (d1, d2, ele, elementClass) => {

        let date1 = new Date(d1).getTime();
        let date2 = new Date(d2).getTime();

        if (date1 < date2) {
            //alert('less than')
            $(ele).find(elementClass).css('color', 'red');
        }
    };


        function bindcomplaintlist(ele) {
            if ($(ele).prop('checked') == true) {
              $.ajax({
                    url: "@Url.Action("GetBindcomplaintlist", "ServiceList")?categoryid=" + $(ele).attr("FK_Category") + '&productid=' + $(ele).attr("FK_Product"),
                    type: "GET",
                    dataType: "json",
                    contentType: "application/json",
                    success: function (ajaxOutput) {
                        let selectedValue = parseInt('@ViewBag.ID_ComplaintList');
                        $.each(ajaxOutput.Data, function (i, value) {
                            let selected = value.ID_ComplaintList === selectedValue ? 'selected' : '';
                            $("#dllcomplaintlist_" + $(ele).attr("Uniq_ID")).append(`<option value="${value.ID_ComplaintList}" ${selected}>
                                       ${value.ComplaintName}
                                  </option>`);
                        });

                        $("#dllcomplaintlist_" + $(ele).attr("Uniq_ID")).attr("style", "display:block");
                    }
                });
            }
            else {
                $("#dllcomplaintlist_" + $(ele).attr("Uniq_ID")).empty();
                $("#dllcomplaintlist_" + $(ele).attr("Uniq_ID")).attr("style", "display:none");
            }





    }
    function fn_bindComplaintsList(FK_Category, FK_Product, ID_CustomerWiseProductDetails, SNo, FK_ComplaintList) {
         $.ajax({
             url: "@Url.Action("GetBindcomplaintlist", "ServiceList")?categoryid=" + FK_Category + '&productid=' + FK_Product,
                    type: "GET",
                    dataType: "json",
                    contentType: "application/json",
                    success: function (ajaxOutput) {

                        $.each(ajaxOutput.Data, function (i, value) {
                            let selected = value.ID_ComplaintList === FK_ComplaintList ? 'selected' : '';
                            $("#dllcomplaintlist_" + SNo).append(`<option value="${value.ID_ComplaintList}" ${selected}>
                                       ${value.ComplaintName}
                                  </option>`);
                        });

                        $("#dllcomplaintlist_" + SNo).attr("style", "display:block");
                    }
                });
    }

    function BindServiceattended(ele) {

        var ReplacedProductDetails = $("#ReplacedProductDetailsTbody tr");
        let ReplacedProductSubDetails = [];
        var ValidProduct = true;



        if (ReplacedProductDetails.length > 0) {
            $('#ReplacedProductDetailsTbody tr').each(function (index, ele) {
                debugger;

                if ($(ele).find('.jq_replacecheckbox_td').find('[type="checkbox"]').is(':checked') == true && ValidProduct) {
                    let ID_MasterProduct = $(ele).find('.ID_MasterProduct').text();
                    var ID_Product = $(ele).find('.ID_Product').text();
                    var Componant = $(ele).find('.Componant').text();
                    let ID_WarrantyMode = $(ele).find('.jq_warrantymode_td').find('select').val();
                    var ID_ReplaceMode = $(ele).find('.jq_replacemode_td').find('select').val();
                    var Quantity = $(this).find('.jq_Productqty_td').find('input').val();
                    var ProductAmount = $(this).find('.jq_ProductAmount_td').find('input').val();
                    var FK_Stock = $(ele).find('.FK_Stock').text();
                    //ReplacedProductSubDetails.push(PrDetinfo);
                    if (ID_WarrantyMode == "0") {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': `Select Warranty Mode of Product "${Componant}"` });
                        ValidProduct = false;
                    }
                    else if (Quantity == 0 || Quantity == "") {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': `Enter "${Componant}" Quantity` });
                        ValidProduct = false;
                    }
                    else if (ID_ReplaceMode == "0") {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': `Select Replace Mode of Product "${Componant}"` });
                        ValidProduct = false;
                    }
                }

            });
        }

        debugger;
        if (ValidProduct===true) {
            //fn_nextPrevious(3);
            fn_nextPrevious(5);
            if ('@ViewBag.Service' == 0) {
                GetServiceTab(ele);
            }
            else {
                ServicefollowupReturnServices(ele);
            }

        }
    }

        function BindProductSubdetailds(ele) {

            var tableprodcutsubdetailsrws = $("#ProductSubdetailsTbody tr");
            let $thisForm = $(ele).closest('[perfect-class="form"]');

            let $tbodyreplace = $thisForm.find('[perfect-class="ReplaceproductContainer"]').find('tbody');

            let ProductSubDetails = [];
            var catgryValid = true;
            var complaintsValid = true; var valid = true;
            if ('@ViewBag.ProductVal' == "1") {
                valid = false;
                if (tableprodcutsubdetailsrws.length > 0) {


                    $('#ProductSubdetailsTbody tr').each(function (index, ele) {


                        if ($(this).find('.jq_Productcheckbox_td').find('[type="checkbox"]').is(':checked') == true) {
                            let Productinfo = {};

                            Productinfo['FK_Product'] = $(this).find('.FK_Product').text();
                            Productinfo['ServiceWarrantyExpireDate'] = $(this).find('.ServiceWarrantyExpireDate').text();
                            Productinfo['ReplacementWarrantyExpireDate'] = $(this).find('.ReplacementWarrantyExpireDate').text();
                            Productinfo['CategoryID'] = 0;
                            Productinfo['SubCategoryID'] = 0;
                            Productinfo['BrandID'] = 0;
                            Productinfo['ComplaintsID'] = 0;

                            ProductSubDetails.push(Productinfo);
                            valid = true;
                        }

                    });
                }
            }else {


                if ('@ViewBag.CategoryVal' == "1") {
                    if ($("#ID_Category").val() == "" || $("#ID_Category").val() == "0") {
                        valid = false;
                        catgryValid = false;
                    }
                }
                if ('@ViewBag.ComplaintVal' == "1") {
                    if ($("#ID_Complaints").val() == "" || $("#ID_Complaints").val() == "0") {
                        valid = false;
                        complaintsValid = false;
                    }
                }
                if (valid) {

                    let Productinfo = {};

                    Productinfo['FK_Product'] ="";
                    Productinfo['ServiceWarrantyExpireDate'] = null;
                    Productinfo['ReplacementWarrantyExpireDate'] = null;
                    Productinfo['CategoryID'] = $("#ID_Category").val() == "" ? "0" : $("#ID_Category").val();
                    Productinfo['SubCategoryID'] = $("#ID_SubCategory").val() == "" ? "0" : $("#ID_SubCategory").val();
                    Productinfo['BrandID'] = $("#ID_Brand").val() == "" ? "0" : $("#ID_Brand").val();
                    Productinfo['ComplaintsID'] = $("#ID_Complaints").val() == "" ? "0" : $("#ID_Complaints").val();

                    ProductSubDetails.push(Productinfo);
                }


            }
            if (valid) {

                if (ProductSubDetails != '') {


                        var InputData = {
                            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                            'ProductSubDetails': ProductSubDetails
                        }

                        $.ajax({
                            url: "@Url.Action("ProductSubDetails", "ServiceList")",
                            type: "POST",
                            data: InputData,
                            dataType: "json",
                            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                            success: function (ajaxOutput) {
                                // ReplacedProductDetailsTbody

                                if (ajaxOutput.Process.IsProcess) {

                                    debugger
                                    let modules = ajaxOutput.Data;
                                    console.log(modules, 'modOut');


                                    fn_nextPrevious(2);

                                    var mstrID = 0; var k = 0;

                                    //$("#ReplacedProductDetailsTbody").find('.bindeddata').remove();
                                    //$("#ReplacedProductDetailsTbody tr").remove();


                                    var rowlen = $("#ReplacedProductDetailsTbody tr").length;
                                    var theadrlen = $("#ReplacedProductDetailsTbody").find('.trheader').length;
                                    if (rowlen <= 0) {
                                        if (modules) {
                                            console.log('modul', modules)

                                            $.each(modules, function (i, value) {
                                                debugger
                                                console.log('val', value);

                                                //if (theadrlen <= 0) {
                                                if ('@ViewBag.ProductVal' == "1") {
                                                    let $thead = $('<th/>', { colspan: 10 }).text(value.MainProduct);
                                                    var trheader = $('<tr/>', { class: "trheader" });
                                                    $tbodyreplace.append(trheader.append($thead));
                                                }
                                                else {
                                                    if (theadrlen <= 0) {
                                                        let $thead = $('<th/>', { colspan: 10 }).text($("#ID_Category option:selected").text());
                                                        var trheader = $('<tr/>', { class: "trheader" });
                                                        $tbodyreplace.append(trheader.append($thead));
                                                    }
                                                }
                                                //}

                                                $.each(value.Subproductreplacedetailss, function (i, values) {

                                                    let rowCount = (i + 1);


                                                    let options = ''
                                                    if (values.WarrantyMode == 2) {
                                                        options += '<option value=0>Please Select</option>'
                                                        options += '<option value=2>Paid Service</option></td>'


                                                    }
                                                    else {
                                                        options += '<option value=0>Please Select</option>'

                                                        options += '<option value=1>Warranty Replacement</option></td>'
                                                        options += '<option value=2>Paid Service</option></td>'
                                                        options += '<option value=3>AMC Service</option></td>';

                                                    }

                                                    let optionsreplace = ''
                                                    if (values.ReplceMode == 2) {
                                                        optionsreplace += '<option value=0>Please Select</option>'


                                                        optionsreplace += '<option value=2>Serviced</option></td>'
                                                        optionsreplace += '<option value=3>Item Request</option></td>';
                                                    }
                                                    else {
                                                        optionsreplace += '<option value=0>Please Select</option>'

                                                        optionsreplace += '<option value=1 >Replaced</option></td>'
                                                        optionsreplace += '<option value=2>Serviced</option></td>'
                                                        optionsreplace += '<option value=3>Item Request</option></td>';

                                                    }

                                                    let $companent = values.Componant;
                                                    if ($companent.length > 0) {
                                                        let $row = $('<tr/>', { id: rowCount, class: "trvalue bindeddata" });
                                                        $row.append($('<td>'))
                                                            .append($('<td>', { class: "jq_replacecheckbox_td" }).html(
                                                                $('<input />', { type: 'checkbox', name: 'productcheckbox', 'perfect-class': 'formCheckInput', 'perfect-ctype': "checkbox", 'FK_Product': values.FK_Product })

                                                            ))
                                                            .append($('<td>', { class: "ID_MasterProduct", style: "display:none" }).text(values.ID_MasterProduct))
                                                            .append($('<td>', { class: "ID_Product", style: "display:none" }).text(values.ID_Product))
                                                            .append($('<td>', { class: "Componant" }).text(values.Componant))
                                                            .append($('<td>', { class: "jq_warrantymode_td", style: "width: 200px", 'WarrantyMode': values.WarrantyMode }).html(
                                                                $("<select class='form-control' name='warrantyselector' id='warrantyselector'>" + options + "</select>"), {
                                                                }))

                                                            .append($('<td>', { class: "jq_Productqty_td", style: "width: 200px" }).html(
                                                                $('<input />', { class: 'form-control text-right', type: 'textbox', name: 'Quantity', id: 'Quantity', 'perfect-ctype': "text", value: values.Quantity, oninput: 'decimalpnt(this, "Quantity", 4)', maxlength: '13' })

                                                            ))
                                                            .append($('<td>', { class: "jq_ProductAmount_td", style: "display:none", size: "10" }).html(
                                                                $('<input />', { class: 'form-control text-right', type: 'textbox', name: 'ProductAmount', 'perfect-ctype': "text", value: values.ProductAmount })

                                                            ))
                                                            .append($('<td>', {
                                                                class: "jq_replacemode_td", style: "width: 200px", 'ReplaceMode': values.ReplceMode
                                                            }).html(
                                                                $("<select class='form-control' name='replaceselector'  id='replaceselector'>" + optionsreplace + "</select>"), {
                                                                }))
                                                            .append($('<td>', { class: "FK_Stock", style: "display:none" }).text(values.FK_Stock))
                                                        $tbodyreplace.append($row);
                                                    }

                                                });

                                                console.log('replacetable', value.Subproductreplacedetailss);


                                                mstrID = value.ID_MasterProduct;
                                                k = i;
                                                var footrlen = $("#ReplacedProductDetailsTbody").find('.tblftr').length;
                                                let $tfooter = $(`<td colspan="10"><button id="btnaddnewProduct" ID_MasterProduct=${mstrID} class="btn btn-primary fa fa-plus" type="button" perfect-css="button" style="float: right;" index=${k} onclick="GetCmnPopUpSearchValAssign(this, 38, 'Product List', [], ['Slno','ID_Stock', 'Stock', 'StandbyQuantity','ProductAmount'], '@ViewBag.TransMode')" Criterea1="BranchID" Criterea2="DepartmentID" Criterea3="FK_Employee" Criterea4="0" BindName="Product" BindVal="ID_Product" Function="1"></button></td>`);

                                                if ('@ViewBag.ProductVal' == "1") {

                                                    $tbodyreplace.append($(`<tr class='tblftr' id="btnSub${k}"/>`).append($tfooter));
                                                } else if (footrlen <= 0) {
                                                    $tbodyreplace.append($(`<tr class='tblftr' id="btnSub${k}"/>`).append($tfooter));
                                                }
                                            });


                                        }
                                        else {
                                            $filldata += "<tr id='0'><td class='norecord'colspan='10' style='text-align:center'>No Records..</td></tr>";
                                        }
                                    }
                                }

                                    else {
                                        console.error(ajaxOutput.Process.Message);
                                        fn_nextPrevious(2);
                                        $("#ReplacedProductDetailsTbody tr").remove();
                                        let $filldata = "<tr id='0'><td class='norecord'colspan='10' style='text-align:center'>No Records..</td></tr>";
                                        $tbodyreplace.append($filldata);

                                    }
                                }


                        });


                }
            }
            else {
                if (!catgryValid) {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please Select Category ' });
                }
                else if (!complaintsValid) {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please Select Complaint ' });

                } else {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'No Checkbox Marked ' });
                }
                $(ele).prop('disabled', false);
            }
        }

        function fn_nextPrevious(tabid) {
            debugger
        $("#Serviceinfoid").removeClass('active');
        $("#Serviceinfo").removeClass('active');
        $("#replacementinfoid").removeClass('active');
        $("#navpills2-1").removeClass('active');
        $("#attendanceinfoid").removeClass('active');
        $("#navpills2-2").removeClass('active');
        $("#summaryinfoid").removeClass('active');
        $("#navpills2-3").removeClass('active');
        $("#Historyid").removeClass('active');
        $("#History").removeClass('active');
        $("#Warrantyid").removeClass('active');
        $("#warranty").removeClass('active');
        $("#Serviceincentiveid").removeClass('active');
        $("#Serviceincentive").removeClass('active');
        switch (tabid) {
            case 1:
                $("#Serviceinfoid").addClass('active')
                $("#Serviceinfo").addClass('active')
                break;
            case 2:
                $("#replacementinfoid").addClass('active');
                $("#navpills2-1").addClass('active');
                break;
            case 3:
                $("#attendanceinfoid").addClass('active');
                $("#navpills2-2").addClass('active');
                break;
            case 4:
                $("#summaryinfoid").addClass('active');
                $("#navpills2-3").addClass('active');
                break;
            case 5:
                $("#Serviceincentiveid").addClass('active');
                $("#Serviceincentive").addClass('active');
                break;
        }
    }
        function getfunction(ele) {

            var id = 'btnSub' + $(ele).attr('index')
            var ID_MasterProduct = $(ele).attr('ID_MasterProduct');
          //  alert($(ele).attr('index'))
            let $thisForm = $('[perfect-class="form"]');
            let $tempArr = $thisForm.data('popValueData');
            console.log('$tempArr', $tempArr);

            var target = document.getElementById(id);
            var newElement = document.createElement('tr');
            newElement.className = 'CompnntRow';
            target.parentNode.insertBefore(newElement, target);

            var tdEle = document.createElement('td');
            var tdElement = document.createElement('td');
            tdElement.className = 'jq_replacecheckbox_td';

            var inputElement = document.createElement('input');
            inputElement.type = 'checkbox';
            inputElement.name = 'check';
            inputElement.setAttribute('perfect-class', 'formCheckInput');

            var tdElement2 = document.createElement('td');
            tdElement2.className = 'ID_MasterProduct';
            tdElement2.setAttribute('style', 'display:none');
            tdElement2.innerHTML = ID_MasterProduct;
            //tdElement2.text();

            var tdElement3 = document.createElement('td');
            tdElement3.className = 'ID_Product';
            tdElement3.setAttribute('style','display:none');
            tdElement3.innerHTML = $tempArr.ID_FIELD;

            var tdElement4 = document.createElement('td');
            tdElement4.className = 'Componant';
            tdElement4.innerHTML = $tempArr.ID_Name;

            var tdElement5 = document.createElement('td');
            tdElement5.className = 'jq_warrantymode_td';
            tdElement5.setAttribute('style', 'width: 200px');

            var selectElementWarranty = document.createElement('select');
            selectElementWarranty.className = 'form-control';
            selectElementWarranty.setAttribute('name', 'warrantyselector');
            selectElementWarranty.setAttribute('id', 'warrantyselector');

            if ('@ViewBag.ProductVal' == "1") {
                selectElementWarranty.innerHTML = `
                     <option value="0">Please Select</option>
                     <option value="1">Warranty Replacement</option>
                     <option value="2">Paid Service</option>
                     <option value="3">AMC Service</option>`;
            } else {
                selectElementWarranty.innerHTML = `
                     <option value="0">Please Select</option>
                     <option value="2">Paid Service</option>`;
            }
            tdElement5.appendChild(selectElementWarranty);

            var tdElement7 = document.createElement('td');
            tdElement7.className = 'jq_Productqty_td';
            tdElement7.setAttribute('style', 'width: 200px');

            var inputElement2 = document.createElement('input');
            inputElement2.className = 'form-control text-right';
            inputElement2.type = 'textbox';
            inputElement2.name = 'check';
            inputElement2.setAttribute('name', 'Quantity');
            inputElement2.setAttribute('perfect-ctype', 'text');
            inputElement2.maxLength = '13';
            inputElement2.setAttribute('id', 'Quantity');
            inputElement2.setAttribute('oninput', 'decimalpnt(this, "Quantity", 4)');
            tdElement7.appendChild(inputElement2);

            var tdElement6 = document.createElement('td');
            tdElement6.className = 'jq_replacemode_td';
            tdElement6.setAttribute('style', 'width: 200px');

            var selectElementReplce = document.createElement('select');
            selectElementReplce.className = 'form-control';
            selectElementReplce.setAttribute('name','replaceselector');
            selectElementReplce.setAttribute('id', 'replaceselector');

            selectElementReplce.innerHTML = `
                     <option value="0">Please Select</option>
                     <option value="1">Replaced</option>
                     <option value="2">Serviced</option>
                     <option value="3">Item Request</option>`;
            tdElement6.appendChild(selectElementReplce);



                    var tdElementstck = document.createElement('td');
            tdElementstck.className = 'FK_Stock';
            tdElementstck.setAttribute('style', 'display:none');
            tdElementstck.innerHTML = $tempArr.ID_Stock;




            var tdElement8 = document.createElement('td');
            tdElement8.className = 'jq_ProductAmount_td';
            tdElement8.setAttribute('style', 'display:none');
            //tdElement8.innerHTML = $tempArr.ProductAmount;


            var inputElement3 = document.createElement('input');
            inputElement3.className = 'form-control';
            inputElement3.type = 'textbox';
            inputElement3.name = 'ProductAmount';
            inputElement3.setAttribute('perfect-ctype', 'text');
            inputElement3.value = $tempArr.ProductAmount;
            tdElement8.appendChild(inputElement3);

            tdElement.appendChild(inputElement);
            newElement.appendChild(tdEle);
            newElement.appendChild(tdElement);
            newElement.appendChild(tdElement2);
            newElement.appendChild(tdElement3);
            newElement.appendChild(tdElement4);
            newElement.appendChild(tdElement5);
            newElement.appendChild(tdElement7);
            newElement.appendChild(tdElement6);
            newElement.appendChild(tdElementstck);
            newElement.appendChild(tdElement8);

        }



    var $ProductmoreHtml = '';
    var IsNextAction = 0;
        function Replacedpartsnext(ele) {
            let $thisForm = $('[perfect-class="form"]');

            fn_nextPrevious(4);
            bindserv();
            var replacerowdetailsrws = $("#ProductSubdetailsTbody tr");

            var ProductReplace = [];
            var pushvalue = {};
            let options = '';
            $ProductmoreHtml = '';
            console.log('rcteplaceprod--------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', ProductReplace);

            var lblProdOrCat = "Product";




            if (replacerowdetailsrws.length > 0) {

                //let rowCountProductDetails = parseInt($('#ProductDetailsTbody tr').length);
                debugger
                ProductReplace = [];
                $('#ProductSubdetailsTbody tr').each(function (index, ele) {
                    if ($(this).find('.jq_Productcheckbox_td').find('[type="checkbox"]').is(':checked') == true) {

                        let ID_Product = $(this).find('.FK_Product').text();
                        let Product = $(this).find('.Product').text();
                        let ID_CustomerWiseProductDetails = $(this).find('.ID_CustomerWiseProductDetails').text();
                        let FK_ProductNumberingDetails = $(this).find('.FK_ProductNumberingDetails').text();

                        pushvalue = {
                            ID_Product: ID_Product,
                            Product: Product,
                            ID_CustomerWiseProductDetails: ID_CustomerWiseProductDetails,
                            FK_ProductNumberingDetails: FK_ProductNumberingDetails,
                        }
                        ProductReplace.push(pushvalue);
                    }

                });
                //$("#ActiontakenProductDetailsTbody tr").empty();
                $('#Actiontakentables').empty();





            }
            else if ('@ViewBag.CategoryVal' == "1") {

                lblProdOrCat = "Category";
                let ID_Product = 0;
                let Product = $("#ID_Category option:selected").text();
                let ID_CustomerWiseProductDetails =0;
                let FK_ProductNumberingDetails = 0;

                pushvalue = {
                    ID_Product: ID_Product,
                    Product: Product,
                    ID_CustomerWiseProductDetails: ID_CustomerWiseProductDetails,
                    FK_ProductNumberingDetails: FK_ProductNumberingDetails,
                }
                ProductReplace.push(pushvalue);




            }

            if (ProductReplace.length > 0) {


                $('#Actiontakentables').html('');



                $.each(ProductReplace, function (i, key) {

                    //$('#ActiontakenProductDetailsTbody tr').each(function (index, ele) {

                    //});



                    $.ajax({
                        url: "@Url.Action("BindNextActionList", "ServiceList")",
                        type: "GET",
                        dataType: "json",
                        contentType: "application/json",
                        success: function (ajaxOutput) {
                            debugger

                            console.log('ajaxOutput', ajaxOutput)

                             NxtActnPageName = '@ViewBag.NxtActnPageName'==""?"":'@ViewBag.NxtActnPageName';
                            if (ajaxOutput.Process.IsProcess) {

                                options = '';
                                $ProductmoreHtml = '';
                                options += '<option value="0" Status="">' + "Please Select" + '</option>'
                                $.each(ajaxOutput.Data, function (i, value) {

                                    options += '<option value=' + value.ID_NextAction + ' Status=' + value.FK_ActionStatus + '>' + value.NxtActnName + '</option>'

                                });
                                //$ProductmoreHtml += "<tr>";
                                //$ProductmoreHtml += "<td></td>"
                                //$ProductmoreHtml += "<td class='jq_Attendproduct_ID_Product' Style = 'Display:none'><input  index=${i} >" + key.ID_Product+ "</td > <td class='jq_Attendproduct_Product'>" + key.Product + "</td>"
                                //$ProductmoreHtml += "<td class='jq_Nextaction_td' style = 'width: 130px;'><select class='form-control'name='ID_NextAction' id='dropdown' onchange='Showactionlead(this)'>" + options + "</select></td>"
                                //$ProductmoreHtml += "<td class='jq_NextLeadaction_td' style = 'width: 130px;'><select class='form-control dropdownlead'name='ID_NextActionLead'onchange='ShowActiontypedropdownval(this)>" + optionslead + "</select></td>"
                                //$ProductmoreHtml += "<td class='jq_NextLeadactiontype_td' style = 'width: 130px;'><select class='form-control dropdownActiontype'name='FK_ActionType' >" + optionsactiontype + "</select></td>"
                                //$ProductmoreHtml += "<td class='jq_NextLeadDate_td' style = 'width: 130px;'><input type='date' class='form-control' id='textNextActionDate' name='NextActionDateLead'/></td>"
                                //$ProductmoreHtml += `<td class='jq_Nextfollowupperson_td' style='text-align:right'><div class='input-group'><input type='text' class='form-control text-right' perfect-class='formGroupControl' index=${i} name='AssignEmp${i}' readonly><input type='hidden' class='form-control'id='FK_EmployeeAssignid${i}'  name='FK_EmployeeAssign${i}'/><div class='input-group-append'><button type='button' id='showemployeebutton${i}' class='btn btn-primary fa fa-search' onclick='GetCmnPopUpSearchValAssign(this, 69, "Employee Details", [], ["Branchs", "BranchTypeID", "FK_Departement", "Department", "BranchType", "SLNo"])' Criterea1='' Criterea2='' Criterea3='' BindName='AssignEmp${i}' BindVal='FK_EmployeeAssign${i}')'></button></div></div></td>`;
                                //$ProductmoreHtml += "</tr>";
                                //$('#ActiontakenProductDetailsTbody').append($ProductmoreHtml);


                                $ProductmoreHtml = `<div class="ProductClass"><div class="row">

                                                                 <div class="col-sm-12">
                                                                 <div class="row">
                                                                    <div class="col-sm-6">
                                                                       <div class="form-group row">
                                                                        <label class="col-sm-2 col-form-label">
                                                                            <span perfect-class="formGroupLabel">${lblProdOrCat}</span>
                                                                        </label>
                                                                        <div class="col-sm-6">
                                                                            <input type="hidden" id="ID_Product${i}" value="${key.ID_Product}"/>
                                                                            <input type="hidden" id="ID_CustomerWiseProductDetails${i}" value="${key.ID_CustomerWiseProductDetails}"/>
                                                                            <input type="hidden" id="FK_ProductNumberingDetails${i}" value="${key.FK_ProductNumberingDetails}"/>
                                                                            <input type="text" id="ProductName${i}" class="form-control" readonly name="GroupIcon" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value="${key.Product}">
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                 </div>
                                                               </div>
                                                             </div>
                                                            <div class="row">
                                                             <div class="col-sm-12">
                                                                  <div class="row">
                                                                <div class="col-sm-3">
                                                                    <div class="form-group row">
                                                                        <label class="col-sm-4 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Action</span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>
                                                                        <div class="col-sm-8">
                                                                            <select class="form-control valid" name="ID_NextAction" id="ID_NextAction${i}" onchange="Showactionlead(this,${i})" aria-invalid="false">${options}</select>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-3 divtesthide" id="divNextActionLead${i}" >
                                                                    <div class="form-group row">
                                                                        <label class="col-sm-4 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Lead Action</span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>
                                                                        <div class="col-sm-8">
                                                                            <select class="form-control dropdownlead${i}" name="ID_NextActionLead" id="ID_NextActionLead${i}" onchange="ShowActiontypedropdownval(this,${i})"></select>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                       <div class="col-sm-3 divtesthide" id="divPQuantity${i}" >
                                                                    <div class="form-group row">
                                                                        <label class="col-sm-4 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Quantity</span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>
                                                                        <div class="col-sm-8">
                                                                           <input type="text" class="form-control" id="textPQuantity${i}" name="PQuantity" maxlength="12" oninput="decimalpnt(this,'textPQuantity${i}',4)">
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                               <div class="col-sm-3 divtesthide" id="divNextActiontype${i}" >
                                                                    <div class="form-group row">
                                                                        <label class="col-sm-4 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Action Type</span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>
                                                                        <div class="col-sm-8">
                                                                            <select class="form-control dropdownActiontype${i}" name="FK_ActionType" id="FK_ActionType${i}"></select>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-3 divtesthide" id="divFollowupDate${i}" >
                                                                    <div class="form-group row">
                                                                        <label class="col-sm-4 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Follow up Date </span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>
                                                                        <div class="col-sm-8">
                                                                            <input type="date" class="form-control" id="textNextActionDate${i}" name="NextActionDateLead">
                                                                            <div class="invalid-feedback animated fadeInUp temptableErrors${i}"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-3 divtesthide" id="divAssignedTo${i}" >
                                                                    <div class="form-group row">
                                                                        <label class="col-sm-4 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Assigned To</span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>
                                                                        <div class="col-sm-8">

                                                                        <div class="input-group"><input type="text" class="form-control" perfect-class="formGroupControl" name="AssignEmp${i}" readonly>
                                                                        <input type="hidden" class="form-control" id="FK_EmployeeAssignid${i}"  name="FK_EmployeeAssign${i}"/>
                                                                        <div class="input-group-append"><button type="button" id="showemployeebutton${i}" class="btn btn-primary fa fa-search"
                                                                        onclick="GetCmnPopUpSearchValAssign(this, 69, 'Employee Details', [], ['Branchs', 'BranchTypeID', 'FK_Departement', 'Department', 'BranchType', 'SLNo','BranchID','FK_Branch'])"
                                                                        Criterea1="" Criterea2="" Criterea3="" BindName="AssignEmp${i}" BindVal="FK_EmployeeAssign${i}"></button></div></div>
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                                <div class="col-sm-3" id="providestandby${i}">
                                                                    <div class="form-group row">
                                                                        <label class="col-sm-7 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Provide Stand By</span>
                                                                        </label>
                                                                        <div class="col-sm-5">
                                                                            <input type="checkbox" class="form-check-input" perfect-class="formCheckInput" perfect-ctype="checkbox"perfect-css="checkbox" id="textprovidestandby${i}" name="Providestandby" onclick="ProvideStandbyEvent(this,${i})">
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-3" id="Customernote${i}">
                                                                    <div class="form-group row">
                                                                        <label class="col-sm-4 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Customer Note</span>
                                                                        </label>
                                                                        <div class="col-sm-8">
                                                                            <input type="text" class="form-control" id="textCustomerNote${i}" name="CustomerNote" maxlength="300">
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-3" id="Employeenote${i}">
                                                                    <div class="form-group row">
                                                                        <label class="col-sm-4 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Employee Note</span>
                                                                        </label>
                                                                        <div class="col-sm-8">
                                                                            <input type="text" class="form-control" id="textEmployeeNote${i}" name="EmployeeNote" maxlength="300">
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-3" id="Securityamount${i}">
                                                                    <div class="form-group row">
                                                                        <label class="col-sm-4 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Security Amount</span>
                                                                        </label>
                                                                        <div class="col-sm-8">
                                                                            <input type="text" class="form-control text-right" id="textSecurityamount${i}" name="SecurityAmount" maxlength="12" oninput="decimalpnt(this,'textSecurityamount${i}',3)" onchange="CalculateSecurityAmount(this, ${i})">
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                               <div class="col-sm-3" id="Offeredprice${i}">
                                                                    <div class="form-group row">
                                                                        <label class="col-sm-4 col-form-label">
                                                                            <span perfect-class="formGroupLabel">BuyBack Amount </span>
                                                                        </label>
                                                                        <div class="col-sm-8">
                                                                            <input type="text" class="form-control text-right" id="textOfferedprice${i}" name="Offeredprice" maxlength="12" oninput="decimalpnt(this,'textOfferedprice${i}',3)">
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                                 <div class="col-sm-3" id="EmployeeAuth${i}">
                                                                    <div class="form-group row">
                                                                        <label class="col-sm-4 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Approved By</span>
                                                                        </label>
                                                                        <div class="col-sm-8">

                                                                           <div class="input-group">
                                                                             <input type="text" class="form-control " name="EmployeeName${i}" id="textEmployee${i}"  perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                                             <input type="hidden" name="EmployeeID${i}" id="employeeid${i}"  class="perfectValidate_numeric_nm" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                           <div class="input-group-append">
                                                                             <button id="addarea-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,6,'Employee List',[],['Department'])" bindname="EmployeeName${i}" bindval="EmployeeID${i}"></button>
                                                                           </div>
                                                                          </div>

                                                                        </div>
                                                                    </div>
                                                                </div>

                                                             </div>
                                                           </div>
                                                         </div>
                                                       </div>
                                                            </div> `;

                                $('#Actiontakentables').append($ProductmoreHtml);
                                $("#divNextActionLead" + i).hide();
                                $("#divNextActiontype" + i).hide();
                                $("#divPQuantity" + i).hide();
                                $("#divFollowupDate" + i).hide();
                                $("#divAssignedTo" + i).hide();
                                $("#providestandby" + i).hide();
                                $("#Securityamount" + i).hide();
                                $("#Offeredprice" + i).hide();
                                $("#EmployeeAuth" + i).hide();
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    if (i == 0) {
                                        NotificationMessage({
                                            'type': 'error', 'heading': 'Error', 'message': 'Please Add atleast one Action in ' + NxtActnPageName+' Master' });
                                        IsNextAction = 1;
                                        return false;
                                    }
                                });
                            }
                        }


                    });




                });





            }

            console.log("ProductReplace test", ProductReplace)




        }




    function ProvideStandbyEvent(ele, index) {

        if ($("#textprovidestandby" + index).is(":checked")) {
            $("#Securityamount" + index + "").show();
        }
        else {
            $("#Securityamount" + index + "").hide();
            $('[name="TotalSecurityAmount"]').val(0.00);
            $("#textSecurityamount" + index).val(0.00);

            //$("#textprovidestandby" + index).is(":checked") = false;
            document.getElementById("textprovidestandby" + index).checked = false;
        }
        }
    //Hide show Section
    let optionslead = '';
        function Showactionlead(ele, index, SelectValue) {
            debugger

            let $thisForm = $(ele).closest('[perfect-class="form"]');
            let selectactionstatusval = $("#ID_NextAction" + index).children(":selected").attr('Status');


            if (selectactionstatusval && (selectactionstatusval !== "0" && selectactionstatusval !== 0) && $num == 1) {

                    $('#textEmployee' + index).val('');
                    $('#employeeid' + index).val(0);
                    $("#EmployeeAuth" + index).show();
            } else if (selectactionstatusval && (selectactionstatusval !== "0" && selectactionstatusval !== 0) && $num == 0) {
                $("#EmployeeAuth" + index).show();
            }
            else {
                    $('#textEmployee' + index).val('');
                    $('#employeeid' + index).val(0);
                    $("#EmployeeAuth" + index).hide();
                }

            //clearDropvalue(selectactionstatusval);


        if (selectactionstatusval == 9) { // BUY BACK LEAD

            $("#Offeredprice" + index).show();
            $("#divNextActionLead" + index).show();
            $("#BuyBackamount" + index).hide();
            $("#divNextActiontype" + index).hide();
            $("#divPQuantity" + index).hide();

            $("#divFollowupDate" + index).hide();
            $("#divAssignedTo" + index).hide();
            $("#providestandby" + index).hide();
            $("#Securityamount" + index).hide();
            document.getElementById("textprovidestandby" + index).checked = false;
            $.ajax({
                url: "@Url.Action("BindNextLeadActionList", "ServiceList")",
                type: "GET",
                dataType: "json",
                contentType: "application/json",
                success: function (ajaxOutput) {

                    if (ajaxOutput.Process.IsProcess) {
                        optionslead = "";
                        optionslead += '<option value="0" StatusLead="">' + "Please Select" + '</option>'


                        $.each(ajaxOutput.Data, function (i, value) {

                            if (SelectValue != 0 || SelectValue != "" || SelectValue != null || SelectValue != undefined) {
                                var selected = (value.ID_NextActionLead === SelectValue) ? 'selected' : '';
                            }
                            optionslead += '<option value=' + value.ID_NextActionLead + ' StatusLead=' + value.NxtActnStageLead + ' ' + selected + '>' + value.NxtActnNameLead + '</option>';

                        });

                    }
                    else {
                    }
                    $(".dropdownlead" + index).html(optionslead);
                    //ShowActiontypedropdownval(this, index)
                }

            });

        }
        else if (selectactionstatusval == 5) {//PICK UP REQUEST
            $("#providestandby" + index).show();
            $("#divNextActionLead" + index).hide();
            $("#divNextActiontype" + index).hide();
            $("#divPQuantity" + index).hide();
            $("#textPQuantity" + index).val(0.00);
            $("#divFollowupDate" + index).hide();
            $("#divAssignedTo" + index).hide();
            $("#Securityamount" + index).hide();
            $("#Offeredprice" + index).hide();
            document.getElementById("textprovidestandby" + index).checked = false;

            if ($("#textprovidestandby" + index).is(":checked")) {
                $("#Securityamount" + index).show();
            }
        }
        else if (selectactionstatusval == 13 || selectactionstatusval == 2) {// FACTORY SERVICE & PENDING
            $("#divNextActionLead" + index).hide();
            $("#divNextActiontype" + index).hide();
            $("#divPQuantity" + index).hide();
            $("#textPQuantity" + index).val(0.00);
            $("#divFollowupDate" + index).hide();
            $("#divAssignedTo" + index).hide();
            $("#providestandby" + index).hide();
            $("#Securityamount" + index).hide();
            $("#Offeredprice" + index).hide();

            document.getElementById("textprovidestandby" + index).checked = false;
        }
        else if (selectactionstatusval == 10) {// BUY BACK ORDER
            $("#Offeredprice" + index).show();
            $("#divNextActionLead" + index).hide();
            $("#divNextActiontype" + index).hide();
            $("#divPQuantity" + index).hide();
            $("#textPQuantity" + index).val(0.00);
            $("#divFollowupDate" + index).hide();
            $("#divAssignedTo" + index).hide();
            $("#providestandby" + index).hide();
            $("#Securityamount" + index).hide();
            document.getElementById("textprovidestandby" + index).checked = false;
        }
        else if (selectactionstatusval == 6) {//STAND BY REQUEST
            $("#Securityamount" + index).show();
            $("#divNextActionLead" + index).hide();
            $("#divNextActiontype" + index).hide();
            $("#divPQuantity" + index).hide();
            $("#textPQuantity" + index).val(0.00);
            $("#divFollowupDate" + index).hide();
            $("#divAssignedTo" + index).hide();
            $("#providestandby" + index).hide();
            $("#Offeredprice" + index).hide();
            document.getElementById("textprovidestandby" + index).checked = false;

        }
        else {
            $("#divNextActionLead" + index).hide();
            $("#divNextActiontype" + index).hide();
            $("#divPQuantity" + index).hide();
            $("#textPQuantity" + index).val(0.00);
            $("#divFollowupDate" + index).hide();
            $("#divAssignedTo" + index).hide();
            $("#providestandby" + index).hide();
            $("#Securityamount" + index).hide();
            $("#Offeredprice" + index).hide();
            document.getElementById("textprovidestandby" + index).checked = false;
        }

        if (selectactionstatusval != 6) {
            $('[name="TotalSecurityAmount"]').val(0.00);
            $("#textSecurityamount" + index).val(0.00);

            Calcaulatetotalamount(ele);
        }
        if (selectactionstatusval != 10) {
            $("#textOfferedprice" + index).val(0.00);

        }
        if (selectactionstatusval!=9) {
            $("#textNextActionDate" + index).val("");
            $("#FK_EmployeeAssignid" + index).val("");
            $("#AssignEmp" + index).val("");
        }
        $('[name="TotalSecurityAmount"]').val(0.00);
        $("#textSecurityamount" + index).val(0.00);

        CalculateSecurityAmount(this);
    }

    let optionsactiontype = '';
    function ShowActiontypedropdownval(ele, index, SelectValue) {

        let selectleadactionstatus = $("#ID_NextActionLead" + index).children(":selected").attr('statuslead');
        if (selectleadactionstatus == 1 || selectleadactionstatus == 2 || selectleadactionstatus == 3) {
            SelectValue = 0;

        }
        if (selectleadactionstatus == 1 || SelectValue > 0) {
            $("#divNextActiontype" + index + "").show();
            $("#divFollowupDate" + index + "").show();
            $("#divAssignedTo" + index + "").show();
            $("#divPQuantity" + index + "").show();

            $.ajax({
                url: "@Url.Action("BindActiontypelist", "ServiceList")",
                type: "GET",
                dataType: "json",
                contentType: "application/json",
                success: function (ajaxOutput) {

                    if (ajaxOutput.Process.IsProcess) {
                        optionslead += '<option value=' + "" + ' StatusLead=' + "" + '>' + "Please Select" + '</option>'

                        optionsactiontype = "";
                        optionsactiontype += '<option value="0">' + "Please Select" + '</option>'

                        $.each(ajaxOutput.Data, function (i, value) {

                            if (SelectValue != 0 || SelectValue != "" || SelectValue != null || SelectValue != undefined) {
                                var selected = (value.FK_ActionType === SelectValue) ? 'selected' : '';
                            }
                            optionsactiontype += '<option value=' + value.FK_ActionType + ' '+selected+' >' + value.ActnTypeName + '</option>';

                        });

                    }
                    $(".dropdownActiontype" + index + "").html(optionsactiontype);

                }
            });

        }
        else {
            $("#FK_EmployeeAssignid"+ index).val("");
            $("#AssignEmp"+ index).val("");
            $("#textNextActionDate" + index).val("");
            $("#divNextActiontype" + index).hide();
            $("#divFollowupDate" + index).hide();
            $("#divAssignedTo" + index).hide();
            $("#divPQuantity" + index).hide();
            $("#textPQuantity" + index).val(0.00);
        }
    }
    function CalculateSecurityAmount(ele, index) {
        let $thisForm = $('[perfect-class="form"]');
        let TotalSecurityAmt = 0;
        let securityAmt = 0;
        TotalSecurityAmt = (parseFloat(TotalSecurityAmt).toFixed(2));
        $(".ProductClass").each(function (index, ele) {
            securityAmt = $("#textSecurityamount" + index).val() == "" ? "0" : $("#textSecurityamount" + index).val();
            if (parseFloat(securityAmt) > 0) {
                TotalSecurityAmt = parseFloat(TotalSecurityAmt) + parseFloat(securityAmt);
            }
        });
        $('[name="TotalSecurityAmount"]').val(Number(TotalSecurityAmt).toFixed(2));
        Calcaulatetotalamount(ele);
    }

    let Amountsum;
    let Amount = 0;
    let ComponentQty = 0;
    function BindComponentCharge(ele) {

        Amountsum = 0;
        $('#ReplacedProductDetailsTbody tr').each(function (index, ele) {



            if ($(this).find('.jq_replacecheckbox_td').find('[type="checkbox"]').is(':checked') == true) {

                debugger
                Amount = $(ele).find('.jq_ProductAmount_td').find('input').val();
                ComponentQty = $(ele).find('.jq_Productqty_td').find('input').val();

                Amountsum = parseFloat(Amountsum) + (parseFloat(Amount) * parseFloat(ComponentQty));

            }
        });
        console.log('Amountsum>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', Amountsum);


        $("#ComponentAmnt").val(Number(Amountsum).toFixed(2));

        Calcaulatetotalamount(ele);
    }

    var othrchargelst = [];


    function ShowOtherCharges(ele, mode) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');

        if ($thisForm.data('pOthrChgData')) {

            if ($thisForm.data('pOthrChgData').length > 0) {

                othrchargelst = $thisForm.data('pOthrChgData');
            }

        }

        BindChargeDetails(ele, mode)


    }
function BindChargeDetails(ele, mode) {

        var InputData =
        {
            TransMode: '@ViewBag.TransMode',
        }


        $.ajax({
            url: "@Url.Action("GetOtherCharges","Sales")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                if (ajaxOutput.OtherCharges.Process.IsProcess) {
                         var CheckListHTML = '';

                         if (ajaxOutput.OtherCharges.Data.length > 0) {

                             $.each(ajaxOutput.OtherCharges.Data, function (i, value) {

                                 let options = ''
                                     if (othrchargelst != '') {

                                         $.each(othrchargelst, function (key, value1) {

                                             if (value1.ID_OtherChargeType == value.ID_OtherChargeType) {

                                                 value.OctyAmount = value1.OctyAmount;
                                                 $.each(ajaxOutput.Transtypelist.Data, function (i, valuea) {
                                                     if (valuea.TransTypeID.toString() == value1.OctyTransType) {

                                                         options += '<option value=' + valuea.TransTypeID + ' selected="selected">' + valuea.TransType + '</option>'
                                                     }
                                                     else {
                                                         options += '<option value=' + valuea.TransTypeID + '>' + valuea.TransType + '</option>'
                                                     }
                                                 });
                                             }


                                         });

                                     }
                                     else
                                     {

                                         $.each(ajaxOutput.Transtypelist.Data, function (i, valuea) {
                                             options += '<option value=' + valuea.TransTypeID + '>' + valuea.TransType + '</option>'
                                         });
                                         //---

                                     }
                                 console.log('optionsl', options)
                                 let $dropdown = '<select class="form-control"name="selector" id="selector" >' + options + '</select>';
                                 CheckListHTML += "<tr>";
                                 CheckListHTML += "<td>" + value.SlNo + "</td>";
                                 CheckListHTML += "<td Class='jq_ID_OtherChargeType_td' Style='Display:none'>" + value.ID_OtherChargeType + "</td>";
                                 CheckListHTML += "<td Class='jq_Type_td'>" + value.OctyName + "</td>";
                                 CheckListHTML += "<td class='jq_TransType_td'>" + $dropdown + "</td>";
                                 CheckListHTML += "<td class='jq_OtherChagAmnt_td' ><input min='0'  class='form-control text-right' onkeypress='return isNumberKey(event)' type='number'  value='" + value.OctyAmount + "' ' /></td> /></td>";

                                 CheckListHTML += "</tr>";
                             })
                         }
                         else {
                             CheckListHTML += "<div class='form-group col-md-6'>";
                             CheckListHTML += "<div class='form-check mb-2'>";
                             CheckListHTML += "<label class='form-check-label' for='check1'>No Records...</label>";
                             CheckListHTML += "</div></div>"
                         }


                    $("#formGroupModalOtherChargebody").html(CheckListHTML)

                    if (mode == 0) {
                        $('#formGroupModalOtherCharge').modal({ backdrop: 'static', keyboard: false })
                     $('#formGroupModalOtherCharge').modal('show');
                    }
                    else {

                       $('#formGroupModalOtherCharge').modal('hide');
                    }


                     }
                else {

                    $.each(ajaxOutput.OtherCharges.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                  //  $('select').selectpicker('refresh');
                }
            });
    }

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 46 || charCode > 57))
            return false;

        return true;
    }

    function BindOtherChargeAmount(ele) {
        console.log('inside binddatat fn')
        let $modal = $(ele).closest('.modal');
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let sum = 0;
        othrchargelst = [];
        $modal.find('table tbody').find('tr').each(function () {

            let value = parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val());
            if ($(this).find('.jq_OtherChagAmnt_td').find('input').val() == '' || $(this).find('.jq_OtherChagAmnt_td').find('input').val() == null) {
                value = 0;
            }

            if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 0) {
                value = value * 0;
            }
            else if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 1) {
                value = value * -1;
            }
            else {
                value = value * 1;
            }
            sum = sum + value;

            let othrcharge = {
                ID_OtherChargeType: $(this).find('.jq_ID_OtherChargeType_td').text(),
                OctyTransType: $(this).find('.jq_TransType_td').find('select').val(),
                OctyAmount: parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val())
            };
            othrchargelst.push(othrcharge);
            $thisForm.data({ pOthrChgData: othrchargelst });
            console.log('othrchargelst', othrchargelst)

        });

        $thisForm.find('[name=OtherCharge]').val(sum);
        Calcaulatetotalamount(ele);
       // roundof(ele);
    }

    let TotalAmt;
    function Calcaulatetotalamount(ele) {


        let $thisForm = $('[perfect-class="form"]');

        let disamount = $thisForm.find('[name="DiscountAmount"]').val()== "" ? "0" : $('[name="DiscountAmount"]').val();

        let Componentcharge = $thisForm.find('[name="ComponentCharge"]').val() == "" ? "0" : $('[name="ComponentCharge"]').val();
        let Servicecharge = $thisForm.find('[name="ServiceCharge"]').val() == "" ? "0" : $('[name="ServiceCharge"]').val();
        let othercharge = $thisForm.find('[name="OtherCharge"]').val() == "" ? "0" : $('[name="OtherCharge"]').val();
        let TotalSecurityAmount = $thisForm.find('[name="TotalSecurityAmount"]').val() == "" ? "0" : $('[name="TotalSecurityAmount"]').val();


        TotalAmt = (parseFloat(TotalSecurityAmount) + parseFloat(Componentcharge) + parseFloat(Servicecharge) + parseFloat(othercharge)) - parseFloat(disamount);

        $thisForm.find('[name="NetAmount"]').val(Number(TotalAmt).toFixed(2));
        let totalamount = TotalAmt;

        let billamt = 0;
        let bilamt = 0;

        let netamt = TotalAmt;
        bilamt = netamt;
        $('#Paymentdethead').find('tbody tr').each(function (index, ele) {
            billamt += parseFloat($(ele).find('.PAmount').text());

        });
        bilamt = parseFloat(bilamt) - billamt;
        $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));
        debugger
        if (parseFloat(disamount) > parseFloat(totalamount)) {

            console.log('inside limit check if')
            $thisForm.find('[name="DiscountAmount"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Amount  should be less than or Equal to Total Amount');
            return false;
        }
        else {
            console.log('inside limit check else')
            $thisForm.find('[name="DiscountAmount"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
            return true;
        }

    }
    function ValidateProductActions() {
        var today = new Date();
        var CurrentDate = today.toISOString().split('T')[0];
        let AttendedDate = $('[name="VisitedDateAfter"]').val();

        var ID_Product = 0;
        var ProductName = "";
        var ID_NextAction = 0;
        var ID_NextActionLead = 0;
        var FK_ActionType = 0;
        var FK_EmployeeAssign = 0;
        var NextActionDate = null;
        var ProvideStandBy = false;
        var CustomerNote = "";
        var EmployeeNote = "";
        var SecurityAmount = 0;
        var OfferPrice = 0;
        var ID_CustomerWiseProductDetails = 0;
        var EmployeeID = 0;
        let ValidDate;
        let Validdata=true;
        $(".ProductClass").each(function (index, ele) {

            let errorClass = '.temptableErrors' + index;
            ID_Product = $("#ID_Product" + index).val();
            ProductName = $("#ProductName" + index).val();
            ID_NextAction = $("#ID_NextAction" + index).val();
            ID_NextActionLead = $("#ID_NextActionLead" + index).val();
            FK_ActionType = $("#FK_ActionType" + index).val();
            FK_EmployeeAssign = $("#FK_EmployeeAssignid" + index).val();
            NextActionDate = $("#textNextActionDate" + index).val();
            ProvideStandBy = $("#textprovidestandby" + index).is(":checked");///checkbox
            CustomerNote = $("#textCustomerNote" + index).val();
            EmployeeNote = $("#textEmployeeNote" + index).val();
            SecurityAmount = $("#textSecurityamount" + index).val();
            OfferPrice = $("#textOfferedprice" + index).val();
            EmployeeID = $("#employeeid" + index).val();
            ID_CustomerWiseProductDetails = $("#ID_CustomerWiseProductDetails" + index).val();

            if ($("#ID_NextAction" + index).children(":selected").attr('Status') == 9) {

                if ($("#ID_NextActionLead" + index).children(":selected").attr('statuslead') == 1) {
                    if ($("#FK_ActionType" + index).val() == "0") {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': `Select Action Type For ${ProductName}` });
                        Validdata = false;
                    }
                    else if ($("#textNextActionDate" + index).val() == null || $("#textNextActionDate" + index).val() == "") {
                        //alert('in again to date')

                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': `Select Follow Up Date For ${ProductName}` });
                        Validdata = false;

                    }
                    else if ($("#textNextActionDate" + index).val() < AttendedDate) {

                        //NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': `Follow Up Date For ${ProductName} is greater than attend` });
                        $("#textNextActionDate" + index).closest('[perfect-class="form"]').find(errorClass).attr("style", "display:block");
                        $("#textNextActionDate" + index).closest('[perfect-class="form"]').find(errorClass).text('Follow Up Date Should  greater than or equal to Attended date');
                        Validdata = false;
                    }
                    else if ($("#FK_EmployeeAssignid" + index).val() == 0) {
                        $("#textNextActionDate" + index).closest('[perfect-class="form"]').find(errorClass).text('');
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': `Select Assigned To For ${ProductName}` });
                        Validdata = false;

                    }
                    else if ($("#textPQuantity" + index).val() == 0) {
                        $("#textNextActionDate" + index).closest('[perfect-class="form"]').find(errorClass).text('');
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': `Enter Quantity For ${ProductName}` });
                        Validdata = false;

                    }
                    else {
                        $("#textNextActionDate" + index).closest('[perfect-class="form"]').find(errorClass).text('');
                        Validdata = true;
                    }

                }
                else if ($("#ID_NextActionLead" + index).val() == "0") {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': `Select Lead Action For ${ProductName}` });
                    Validdata = false;
                }

            }
            else if ($("#ID_NextAction" + index).val() == "0") {

                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': `Select Action For ${ProductName}` });
                Validdata = false;
            }
            //if (Validdata == false) {
            //    return false;
            //}
        });

        return Validdata;
    }
    function fn_SaveCustomerServicefollow(ele, actionType) {


        let isValid = true;
        let PaymentMethodValid = true;



        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let dataout = ValidateProductActions();
        if (IsNextAction == 0) {
            if (dataout) {
                //payment method calculation
                PaymentMethodValid = BillAmountbind(ele);

                let Paymentdata = []
                $thisForm.find('[perfect-tempTable="Payment"]').find('tbody').find('tr').each(function () {
                    Paymentdata.push($(this).data('pData'));
                });

                if (Paymentdata.length > 0) {
                    $thisForm.find('[name="BillTypeID"]').addClass('perfectValidate_string');
                }
                else {
                    $thisForm.find('[name="BillTypeID"]').removeClass("perfectValidate_string");
                }
                //payment method calculation end
                $(".ProductClass").each(function (index, ele) {
                    let product = $("#ID_Product" + index).val();
                    let ID_NextAction = $("#ID_NextAction" + index).children(":selected").attr('status');
                    //alert(ID_NextAction)
                    if (ID_NextAction != (4 || 11)) {
                        //alert('no close complete')
                        PaymentMethodValid = true;
                    }

                });
                //alert(PaymentMethodValid)
                if (PaymentMethodValid) {
                    let Attenddatechecking = datecheck(ele);
                    if (Attenddatechecking) {
                        if ($thisForm.valid()) {

                            // $(ele).prop('disabled', true); // avoiding form submit the double click

                            var tableservicedetailsrws = $("#ProductSubdetailsTbody tr");

                            let ServiceDetails = [];
                            if ('@ViewBag.ProductVal' == "1") {
                                if (tableservicedetailsrws.length > 0) {


                                    $('#ProductSubdetailsTbody tr').each(function (index, ele) {
                                        debugger;

                                        if ($(this).find('.jq_Productcheckbox_td').find('[type="checkbox"]').is(':checked') == true) {

                                            let Serviceinfo = {};


                                            Serviceinfo['ID_Product'] = $(this).find('.FK_Product').text();
                                            Serviceinfo['FK_ProductNumberingDetails'] = $(this).find('.FK_ProductNumberingDetails').text();
                                            Serviceinfo['ID_CustomerWiseProductDetails'] = $(this).find('.ID_CustomerWiseProductDetails').text();
                                            Serviceinfo['ID_Services'] = $(this).find('.FK_Category').text();
                                            Serviceinfo['Product'] = $(this).find('.Product').text();
                                            Serviceinfo['Warranty'] = $(this).find('.Warranty').text();
                                            Serviceinfo['ID_ComplaintList'] = $(this).find('.jq_Productdropdowncomplaintlist_td').find('select').val();

                                            Serviceinfo['Description'] = $(this).find('.jq_Productdetailsdescription_td').find('input').val();



                                            ServiceDetails.push(Serviceinfo);

                                        }
                                        console.log('Serviceinfo checking now', ServiceDetails);
                                    });
                                }
                            }

                            if ('@ViewBag.CategoryVal' == "1") {
                                let Serviceinfo = {};


                                Serviceinfo['ID_Product'] = 0;
                                Serviceinfo['FK_ProductNumberingDetails'] = 0;
                                Serviceinfo['ID_CustomerWiseProductDetails'] = 0;
                                Serviceinfo['ID_Services'] = 0;
                                Serviceinfo['Product'] = '';
                                Serviceinfo['Warranty'] = '';
                                Serviceinfo['ID_ComplaintList'] = $("#ID_Complaints").val();
                                Serviceinfo['FK_Category'] = $("#ID_Category").val();
                                Serviceinfo['FK_SubCategory'] = $("#ID_SubCategory").val();
                                Serviceinfo['FK_Brand'] = $("#ID_Brand").val();

                                Serviceinfo['Description'] = '';



                                ServiceDetails.push(Serviceinfo);
                            }

                            var tablereplacedetailsrws = $("#ReplacedProductDetailsTbody tr");

                            let ProductDetails = [];

                            if (tablereplacedetailsrws.length > 0) {
                                debugger;


                                $('#ReplacedProductDetailsTbody tr').each(function (index, ele) {
                                    debugger;

                                    if ($(this).find('.jq_replacecheckbox_td').find('[type="checkbox"]').is(':checked') == true) {

                                        let PrDetinfo = {};


                                        PrDetinfo['ID_MasterProduct'] = $(ele).find('.ID_MasterProduct').text();
                                        PrDetinfo['ID_Product'] = $(ele).find('.ID_Product').text();
                                        PrDetinfo['Componant'] = $(ele).find('.Componant').val();
                                        PrDetinfo['ID_WarrantyMode'] = $(ele).find('.jq_warrantymode_td').find('select').val();
                                        PrDetinfo['ID_ReplaceMode'] = $(ele).find('.jq_replacemode_td').find('select').val();
                                        PrDetinfo['Quantity'] = $(this).find('.jq_Productqty_td').find('input').val();
                                        PrDetinfo['ProductAmount'] = $(ele).find('.jq_ProductAmount_td').find('input').val();
                                        PrDetinfo['FK_Stock'] = $(ele).find('.FK_Stock').text();



                                        ProductDetails.push(PrDetinfo);


                                    }

                                });
                                console.log('ProductDetails', ProductDetails);
                            }


                            var tableIncentiveDetailsrws = $("#ProductServiceTbody tr");

                            let IncentiveServiceDetails = [];

                            if (tableIncentiveDetailsrws.length > 0) {
                                $('#ProductServiceTbody tr').each(function (index, ele) {
                                    if ($(this).find('.jq_ProductServices_td').find('[type="checkbox"]').is(':checked') == true) {
                                        let IncSerinfo = {};

                                        IncSerinfo['ID_Service'] = $(this).find('.jq_ProductServices_ID_Services').text();
                                        IncSerinfo['ID_MasterProduct'] = $(this).find(".jq_ProductServices_ID_Product").text();
                                        IncSerinfo['ServiceMod'] = $(this).find('.jq_ProductServiceMode_td').find('select').val();
                                        IncSerinfo['ServiceCost'] = $(this).find('.jq_ProductServicesAmnt_td').find('input').val();
                                        IncSerinfo['ServiceTax'] = $(this).find('.jq_ProductServicesTaxAmount').find('input').val();
                                        IncSerinfo['ServiceNetAmount'] = $(this).find('.jq_ProductServicesNetAmount').find('input').val();
                                        IncSerinfo['ServiceRemarks'] = $(this).find('.jq_ProductServicesRemarks_td').find('input').val();

                                        IncentiveServiceDetails.push(IncSerinfo);
                                    }
                                });
                            }

                            var tablereplacedetailsrws = $("#ActiontakenProductDetailsTbody tr");

                            let ActionProductDetails = [];

                            if (tablereplacedetailsrws.length > 0) {
                                debugger;


                                $('#ActiontakenProductDetailsTbody tr').each(function (index, ele) {
                                    let ActionPrDetinfo = {};
                                    ActionPrDetinfo['ID_Product'] = $(ele).find('.jq_Attendproduct_ID_Product').text();
                                    ActionPrDetinfo['ID_NextAction'] = $(ele).find('.jq_Nextaction_td').find('select').val();
                                    ActionPrDetinfo['ID_NextActionLead'] = $(ele).find('.jq_NextLeadaction_td').find('select').val();
                                    ActionPrDetinfo['FK_ActionType'] = $(ele).find('.jq_NextLeadactiontype_td').find('select').val();

                                    ActionPrDetinfo['FK_EmployeeAssign'] = $("#FK_EmployeeAssignid" + index).val();/*$(ele).find('.jq_Nextfollowupperson_td').find('div').find('input').val();*/
                                    ActionPrDetinfo['NextActionDateLead'] = $(ele).find('.jq_NextLeadDate_td').find('input').val();
                                    //ActionProductDetails.push(ActionPrDetinfo);
                                });

                            }
                            $(".ProductClass").each(function (index, ele) {
                                let ActionPrDetinfo = {};
                                ActionPrDetinfo['ID_Product'] = $("#ID_Product" + index).val();
                                ActionPrDetinfo['ID_NextAction'] = $("#ID_NextAction" + index).val();
                                ActionPrDetinfo['ID_NextActionLead'] = $("#ID_NextActionLead" + index).val();
                                ActionPrDetinfo['FK_ActionType'] = $("#FK_ActionType" + index).val();
                                ActionPrDetinfo['PQuantity'] = $("#textPQuantity" + index).val();
                                ActionPrDetinfo['FK_EmployeeAssign'] = $("#FK_EmployeeAssignid" + index).val();
                                ActionPrDetinfo['NextActionDate'] = $("#textNextActionDate" + index).val();
                                ActionPrDetinfo['ProvideStandBy'] = $("#textprovidestandby" + index).is(":checked");///checkbox
                                ActionPrDetinfo['CustomerNote'] = $("#textCustomerNote" + index).val();
                                ActionPrDetinfo['EmployeeNote'] = $("#textEmployeeNote" + index).val();
                                ActionPrDetinfo['SecurityAmount'] = $("#textSecurityamount" + index).val();
                                ActionPrDetinfo['OfferPrice'] = $("#textOfferedprice" + index).val();
                                ActionPrDetinfo['EmployeeID'] = $("#employeeid" + index).val();
                                ActionPrDetinfo['ID_CustomerWiseProductDetails'] = $("#ID_CustomerWiseProductDetails" + index).val();
                                ActionPrDetinfo['FK_ProductNumberingDetails'] = $("#FK_ProductNumberingDetails" + index).val();
                                ActionProductDetails.push(ActionPrDetinfo);
                            });

                            console.log('FINAL RESULT ARRAY>>>>>>>>>>>>>>>>>>>>>>>>>>>>', ActionProductDetails);


                            var tableemployeedetailsrws = $("#AttendedProductServiceTbody tr");

                            let EmployeeDetails = [];

                            if (tableemployeedetailsrws.length > 0) {


                                $('#AttendedProductServiceTbody tr').each(function (index, ele) {


                                    if ($(this).find('.jq_ProductServices_td').find('[type="checkbox"]').is(':checked') == true) {
                                        let EmpDetinfo = {};
                                        EmpDetinfo['ID_Employee'] = $(this).find('.jq_ProductServices_ID_Employee').text();
                                        EmpDetinfo['EmployeeType'] = $(this).find('.jq_Employeetypeid_td').text();

                                        console.log('EmpDetinfo', EmpDetinfo);
                                        EmployeeDetails.push(EmpDetinfo);


                                    }

                                });
                            }

                            let $modal2 = $thisForm.find('#zero_configOthercharge');
                            let OtherCharge = [];
                            $modal2.find('tbody').find('tr').each(function () {

                                let OtChargeinfo = {};
                                OtChargeinfo['ID_OtherChargeType'] = $(this).find('.jq_ID_OtherChargeType_td').text();

                                OtChargeinfo['OctyTransType'] = $(this).find('.jq_TransType_td').find('select').val();
                                OtChargeinfo['OctyName'] = $(this).find('.jq_Type_td').text();
                                OtChargeinfo['OctyAmount'] = $(this).find('.jq_OtherChagAmnt_td').find('input').val();
                                console.log('OtChargeinfo', OtChargeinfo);
                                OtherCharge.push(OtChargeinfo);

                            });
                            let paymentdetails = [];

                            $thisForm.find('[perfect-tempTable="Payment"]').find('tbody').find('tr').each(function () {
                                paymentdetails.push($(this).data('pData'));
                            });

                            console.log(@Model.FK_Customerserviceregister);

                            var data;
                            data = Calcaulatetotalamount;

                            if (data) {
                                let _ID_Followup = 0;
                                let _ActionUrl = "";
                                if (actionType === "new") {
                                    _ID_Followup = 0;
                                    _ActionUrl = "@Url.Action("ServiceFollowUpSave", "ServiceList")";
                                }

                                else if (actionType === "update") {
                                    _ID_Followup = '@ViewBag.Service';
                                    _ActionUrl = "@Url.Action("ServiceFollowUpUpdate", "ServiceList")";
                                }

                                $(ele).prop('disabled', true);
                                let inputData = {

                                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                    'ID_ServiceFollowUp': _ID_Followup,
                                    'FK_Customerserviceregister': $thisForm.find('[name="FK_Customerserviceregister"]').val(),
                                    'StartingDate': $thisForm.find('[name="VisitedDateAfter"]').val(),
                                    'TotalSecurityAmount': $thisForm.find('[name="TotalSecurityAmount"]').val(),
                                    'ComponentCharge': $thisForm.find('[name="ComponentCharge"]').val(),
                                    'ServiceCharge': $thisForm.find('[name="ServiceCharge"]').val(),
                                    'OtherCharge': $thisForm.find('[name="OtherCharge"]').val(),

                                    'DiscountAmount': $thisForm.find('[name="DiscountAmount"]').val(),
                                    'NetAmount': $thisForm.find('[name="NetAmount"]').val(),
                                    'TransMode': '@ViewBag.TransMode',
                                    'OtherChgDetails': OtherCharge,
                                    'ServiceDetails': ServiceDetails,
                                    'ProductDetails': ProductDetails,
                                    'ServiceIncentiveDetails': IncentiveServiceDetails,
                                    'ActionProductDetails': ActionProductDetails,
                                    'AttendedEmployeeDetails': EmployeeDetails,
                                    'ID_CustomerServiceRegisterProductDetails': $thisForm.find('[name="ID_CustomerServiceRegisterProductDetails"]').val(),
                                    'PaymentDetail': paymentdetails,
                                    'BillTypeID': $thisForm.find('[name="BillTypeID"]').val(),
                                    'LastID': $thisForm.find('[name="LastID"]').val(),
                                };
                                console.log('save56', inputData)
                                $.ajax({
                                    url: _ActionUrl,
                                    type: "POST",
                                    data: inputData,
                                    dataType: "json",
                                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                    success: function (ajaxOutput) {

                                        if (ajaxOutput.Process.IsProcess) {

                                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });

                                                var url = '@Url.Action("Index", "ServiceList")?mgrp=' + '@ViewBag.mgrp';
                                                window.location.href = url;
                                            });

                                            $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                            $thisForm.find('[perfect-ctype="input"]').val('');
                                            $thisForm.find('[perfect-ctype="date"]').val('');
                                            $thisFormNew.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                            $thisFormNew.find('[perfect-ctype="input"]').val('');
                                            $thisFormNew.find('[perfect-ctype="date"]').val('');




                                            // Get the value set in form's perfect-onFormSuccess attribute
                                            let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                            if (onSuccess) {
                                                window[onSuccess]();
                                            }
                                        }
                                        else {
                                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                            });
                                        }
                                    },
                                    complete: function () {
                                        $(ele).prop('disabled', false);
                                    }

                                });
                            }
                        }
                    }
                }
                else {
                    $(ele).prop('disabled', false);
                    NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'In Payment Method Balance Amt. Should be  Zero ' });
                }
            }
        }
        else {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please Add atleast one Action in ' + NxtActnPageName+' Master' });
        }

    }





    ///////////view Section////////////////
    function ServicefollowupReturn(ele, ID_ServiceFollowUp) {

            let inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                FK_ServiceFollowUp: ID_ServiceFollowUp,
                TransMode:'@ViewBag.TransMode',

        };
        let $thisForm = $(ele).closest('[perfect-class="form"]');

       // let $tbody = $thisForm.find('[perfect-class="SubproductContainer"]').find('tbody');
        let $tbody = $("#Subproducttable").find('tbody');
        var ReferenceNo;

            $.ajax({
                url: '@Url.Action("GetServicefollowupInfoByIDReturn", "ServiceList")',
                        type: "POST",
                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                success: function (ajaxOutput) {



                            if (ajaxOutput.Process.IsProcess) {
                                let modules = ajaxOutput.Data;
                                console.log(modules[0].CustomerProductdetails[0].FK_Subcategory);
                                console.log(modules[0].CustomerProductdetails[0].FK_ComplaintList);
                                console.log(modules[0].CustomerProductdetails[0].FK_Brand);




                                $("#ProductSubdetailsTbody tr").remove();

                                if (modules!=null) {
                                    var fk_categry = 0;



                                    //$("#ID_SubCategory").val(modules[0].CustomerProductdetails[0].FK_Subcategory).selectpicker('refresh');
                                    //$("#ID_Brand").val(modules[0].CustomerProductdetails[0].FK_Brand).selectpicker('refresh');
                                    //$("#ID_Complaints").val(modules[0].CustomerProductdetails[0].FK_ComplaintList).selectpicker('refresh');
                                    $.each(modules, function (i, value) {




                                        let $thead = $('<th/>', { class: "MasterProduct", colspan: 11 }).text(value.MasterProduct);
                                        $tbody.append($('<tr/>').append($thead));
                                        $.each(value.CustomerProductdetails, function (i, values) {
                                            let rowCount = (i + 1);
                                            let $row = $('<tr/>', { id: rowCount, class: "trvalue" });
                                            let $ddl = "dllcomplaintlist_" + values.SNo;

                                            let RplceExpired = values.ReplacementWarrantyExpired == 1 ? "color:red" : "";
                                            let ServExpired = values.ServiceWarrantyExpired == 1 ? "color:red" : "";
                                            let RplceExpiredTooltip = values.ReplacementWarrantyExpired == 1 ? "Replacement Warranty Expired" : "";
                                            let ServExpiredTooltip = values.ServiceWarrantyExpired == 1 ? "Service Warranty Expired" : "";



                                            $row.append($('<td>'))
                                                .append($('<td>', { class: "FK_Product", style: "display:none" }).text(values.FK_Product))
                                                .append($('<td>', { class: "FK_Category", style: "display:none" }).text(values.FK_Category))
                                                .append($('<td>', { class: "FK_ProductNumberingDetails", style: "display:none" }).text(values.FK_ProductNumberingDetails))
                                                .append($('<td>', { class: "ID_CustomerWiseProductDetails", style: "display:none" }).text(values.ID_CustomerWiseProductDetails))
                                                .append($('<td>', { class: "Product" }).text(values.Product))
                                                .append($('<td>', { class: "SLNo" }).text(values.SLNo))
                                                .append($('<td>', { class: "Warranty" }).text(values.Warranty))
                                                .append($('<td>', { class: "ServiceWarrantyExpireDate", style: ServExpired, title: ServExpiredTooltip }).text(values.ServiceWarrantyExpireDate))
                                                .append($('<td>', { class: "ReplacementWarrantyExpireDate", style: RplceExpired, title: RplceExpiredTooltip }).text(values.ReplacementWarrantyExpireDate))
                                                .append($('<td>', { class: "jq_Productcheckbox_td" }).html(
                                                    $('<input />', { type: 'checkbox', name: 'check', 'perfect-class': 'formCheckInput', 'perfect-ctype': "checkbox", 'FK_Category': values.FK_Category, 'FK_Product': values.FK_Product, 'ID_CustomerWiseProductDetails': values.ID_CustomerWiseProductDetails, 'checked': true, 'readonly': "readonly", 'Uniq_ID': values.SNo })
                                                        .val(values.check)
                                                        .on('change', function () {
                                                            bindcomplaintlist(this);
                                                        })

                                                ))
                                                .append($('<td>', { class: "jq_Productdropdowncomplaintlist_td" }).html(
                                                    $("<select class='form-control'name='ID_ComplaintList' style='display:none'  id='" + $ddl + "'>"), {
                                                    }))
                                                .append($('<td>', { class: "jq_Productdetailsdescription_td" }).html(
                                                    $('<input />', { class: 'form-control', type: 'textbox', name: 'Description', 'perfect-ctype': "text", value: values.Description })

                                                ))
                                            $tbody.append($row);





                                            fn_bindComplaintsList(values.FK_Category, values.FK_Product, values.ID_CustomerWiseProductDetails, values.SNo, values.FK_ComplaintList);

                                        });


                                    });

                                    if (modules != null) {
                                        if (modules[0].CustomerProductdetails != null) {
                                            fk_categry = modules[0].CustomerProductdetails[0].FK_Category;
                                            fk_subcategry = modules[0].CustomerProductdetails[0].FK_Subcategory;
                                            fk_cmplnt = modules[0].CustomerProductdetails[0].FK_ComplaintList;
                                            $("#ID_Category").val(fk_categry).selectpicker('refresh');
                                            //$("#ID_SubCategory").val(modules[0].CustomerProductdetails[0].FK_Subcategory).selectpicker('refresh');
                                            $("#ID_Brand").val(modules[0].CustomerProductdetails[0].FK_Brand).selectpicker('refresh');
                                            //$("#ID_Complaints").val(modules[0].CustomerProductdetails[0].FK_ComplaintList).selectpicker('refresh');
                                            FillSubcategory(fk_categry, fk_subcategry);
                                            FillComplaint(fk_categry, fk_cmplnt);

                                        }
                                    }
                                }
                                else {
                                    $filldata += "<tr id='0'><td class='norecord'colspan='5' style'text-align:center'>No Records..</td></tr>";
                                }

                            } else {
                                console.error(ajaxOutput.Process.Message);
                            }
                },

            });

    }


    function ServicefollowupReturnSubProduct(ele) {

            var tableprodcutsubdetailsrws = $("#ProductSubdetailsTbody tr");
        let $thisForm = $('[perfect-class="form"]');


            let ProductSubDetails = [];
        var catgryValid = true;
        var complaintsValid = true; var valid = true;
        if ('@ViewBag.ProductVal' == "1") {
            if (tableprodcutsubdetailsrws.length > 0) {


                $('#ProductSubdetailsTbody tr').each(function (index, ele) {


                    if ($(this).find('.jq_Productcheckbox_td').find('[type="checkbox"]').is(':checked') == true) {
                        let Productinfo = {};

                        Productinfo['FK_Product'] = $(this).find('.FK_Product').text();
                        Productinfo['ServiceWarrantyExpireDate'] = $(this).find('.ServiceWarrantyExpireDate').text();
                        Productinfo['ReplacementWarrantyExpireDate'] = $(this).find('.ReplacementWarrantyExpireDate').text();
                        Productinfo['CategoryID'] = 0;
                        Productinfo['SubCategoryID'] = 0;
                        Productinfo['BrandID'] = 0;
                        Productinfo['ComplaintsID'] = 0;
                        ProductSubDetails.push(Productinfo);
                        ProductSubDetails.push(Productinfo);

                    }

                });
            }
        }
         else {


                if ('@ViewBag.CategoryVal' == "1") {
                    if ($("#ID_Category").val() == "" || $("#ID_Category").val() == "0") {
                        valid = false;
                        catgryValid = false;
                    }
                }
                if ('@ViewBag.ComplaintVal' == "1") {
                    if ($("#ID_Complaints").val() == "" || $("#ID_Complaints").val() == "0") {
                        valid = false;
                        complaintsValid = false;
                    }
                }
                if (valid) {
                    let Productinfo = {};

                    Productinfo['FK_Product'] = 0;
                    Productinfo['ServiceWarrantyExpireDate'] = null;
                    Productinfo['ReplacementWarrantyExpireDate'] = null;
                    Productinfo['CategoryID'] = $("#ID_Category").val() == "" ? "0" : $("#ID_Category").val();
                    Productinfo['SubCategoryID'] = $("#ID_SubCategory").val() == "" ? "0" : $("#ID_SubCategory").val();
                    Productinfo['BrandID'] = $("#ID_Brand").val() == "" ? "0" : $("#ID_Brand").val();
                    Productinfo['ComplaintsID'] = $("#ID_Complaints").val() == "" ? "0" : $("#ID_Complaints").val();

                    ProductSubDetails.push(Productinfo);
                }


            }
        if (valid)
        {
            var trlen = $("#ReplacedProductDetailsTbody").find('.bindeddata').length;

            if (trlen <= 0) {
                var htmlbdy = $("#ReplacedProductDetailsTbody").find('.CompnntRow');
                $("#ReplacedProductDetailsTbody").html('');
                let $tbodyreplace = $("#ReplacedProductDetailsTbody");//$('[perfect-class="ReplaceproductContainer"]').find('tbody');
                if (ProductSubDetails != '') {
                    let InputData = {
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        FK_ServiceFollowUp: @ViewBag.Service,
                        TransMode: '@ViewBag.TransMode',

                    };

                    $.ajax({
                        url: '@Url.Action("GetServicefollowupInfoByIDReturnSubProduct", "ServiceList")',
                        type: "POST",
                        data: InputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (ajaxOutput) {
                            // ReplacedProductDetailsTbody

                            if (ajaxOutput.output.Process.IsProcess) {
                                debugger
                                let modules = ajaxOutput.output.Data;
                                console.log(modules, 'modOut');


                                fn_nextPrevious(2);




                                if (modules) {
                                    var tfootVisble = $("#ReplacedProductDetailsTbody").find(".tfootershw").length;
                                    $.each(modules, function (i, value) {




                                        let $thead = $('<th/>', { colspan: 10 }).text(value.MainProduct);
                                        $tbodyreplace.append($('<tr/>').append($thead));

                                        $.each(value.Subproductreplacedetailss, function (i, values) {


                                            let rowCount = (i + 1);
                                            let $row = $('<tr/>', { id: rowCount, class: "trvalue bindeddata" });

                                            let options = ''
                                            if (values.WarrantyMode == 2) {
                                                options += '<option value=0 >Please Select</option>'
                                                options += '<option value=2 ' + (values.WarrantyType == 2 ? "Selected" : "") + '>Paid Service</option></td>'
                                            }
                                            else {
                                                options += '<option value=0 >Please Select</option>'
                                                options += '<option value=1 ' + (values.WarrantyType == 1 ? "Selected" : "") + '>Warranty Replacement</option></td>'
                                                options += '<option value=2 ' + (values.WarrantyType == 2 ? "Selected" : "") + '>Paid Service</option></td>'
                                                options += '<option value=3 ' + (values.WarrantyType == 3 ? "Selected" : "") + '>AMC Service</option></td>';
                                            }

                                            let optionsreplace = ''
                                            if (values.ReplceMode == 2) {
                                                optionsreplace += '<option value=0 >Please Select</option>'
                                                optionsreplace += '<option value=2 ' + (values.ReplceType == 2 ? "Selected" : "") + '>Serviced</option></td>'
                                                optionsreplace += '<option value=3 ' + (values.ReplceType == 3 ? "Selected" : "") + '>Item Request</option></td>';
                                            }
                                            else {
                                                optionsreplace += '<option value=0>Please Select</option>'
                                                optionsreplace += '<option value=1 ' + (values.ReplceType == 1 ? "Selected" : "") + '>Replaced</option></td>'
                                                optionsreplace += '<option value=2 ' + (values.ReplceType == 2 ? "Selected" : "") + '>Serviced</option></td>'
                                                optionsreplace += '<option value=3 ' + (values.ReplceType == 3 ? "Selected" : "") + '>Item Request</option></td>';

                                            }

                                            let $companent = values.Componant;
                                            if ($companent.length > 0) {

                                                $row.append($('<td>'))
                                                    .append($('<td>', { class: "jq_replacecheckbox_td" }).html(
                                                        $('<input />', { type: 'checkbox', name: 'productcheckbox', 'perfect-class': 'formCheckInput', 'perfect-ctype': "checkbox", 'FK_Product': values.FK_Product, 'checked': true })

                                                    ))
                                                    .append($('<td>', { class: "ID_MasterProduct", style: "display:none" }).text(values.ID_MasterProduct))
                                                    .append($('<td>', { class: "ID_Product", style: "display:none" }).text(values.ID_Product))
                                                    .append($('<td>', { class: "Componant" }).text(values.Componant))
                                                    .append($('<td>', { class: "jq_warrantymode_td", style: "width: 200px", 'WarrantyMode': values.WarrantyMode }).html(
                                                        $("<select class='form-control' name='warrantyselector' id='warrantyselector'>" + options + "</select>"), {
                                                        }))

                                                    .append($('<td>', { class: "jq_Productqty_td", style: "width: 200px" }).html(
                                                        $('<input />', { class: 'form-control text-right', type: 'textbox', name: 'Quantity', id: 'Quantity', 'perfect-ctype': "text", value: (values.Quantity.toFixed(3)), oninput: 'decimalpnt(this, "Quantity", 4)', maxlength: '13' })

                                                    ))
                                                    .append($('<td>', { class: "jq_ProductAmount_td", style: "display:none", size: "10" }).html(
                                                        $('<input />', { class: 'form-control text-right', type: 'textbox', name: 'ProductAmount', 'perfect-ctype': "text", value: values.ProductAmount })

                                                    ))
                                                    .append($('<td>', {
                                                        class: "jq_replacemode_td", style: "width: 200px", 'ReplaceMode': values.ReplceMode
                                                    }).html(
                                                        $("<select class='form-control' name='replaceselector' id='replaceselector'>" + optionsreplace + "</select>"), {
                                                        }))
                                                    .append($('<td>', { class: "FK_Stock", style: "display:none" }).text(values.FK_Stock))
                                                $tbodyreplace.append($row);

                                            }

                                        });
                                        $tbodyreplace.append(htmlbdy);



                                        console.log('replacetable', value.Subproductreplacedetailss);
                                        if (tfootVisble <= 0) {
                                            let $tfooter = $(`<td colspan="10"><button id="btnaddnewProduct" ID_MasterProduct=${value.ID_MasterProduct} class="btn btn-primary fa fa-plus tfootershw" type="button" perfect-css="button" style="float: right;" index=${i} onclick="GetCmnPopUpSearchValAssign(this, 38, 'Product List', [], ['Slno','ID_Stock', 'Stock', 'StandbyQuantity','ProductAmount'], '@ViewBag.TransMode')" Criterea1="BranchID" Criterea2="DepartmentID" Criterea3="FK_Employee" Criterea4="0" BindName="Product" BindVal="ID_Product" Function="1"></button></td>`);

                                            $tbodyreplace.append($(`<tr id="btnSub${i}"/>`).append($tfooter));
                                        }


                                    });

                                }
                                else {
                                    $filldata += "<tr id='0'><td class='norecord'colspan='10' style='text-align:center'>No Records..</td></tr>";
                                }

                            } else {
                                console.error(ajaxOutput.Process.Message);
                                fn_nextPrevious(2);
                                $("#ReplacedProductDetailsTbody tr").remove();
                                let $filldata = "<tr id='0'><td class='norecord'colspan='10' style='text-align:center'>No Records..</td></tr>";
                                $tbodyreplace.append($filldata);

                            }
                            //employee attendance section
                            var $AttendedEmpHtml = '';
                            $('#AttendedProductServiceTbody').empty();
                            // var ProductData = ajaxOutput.Data;
                            let checked = "";
                            if (attendeddetls != "") {
                                ajaxOutput.Data = attendeddetls;

                            }
                            if (ajaxOutput.servicefollowupInfoAssignee.Data != null) {
                                if (ajaxOutput.servicefollowupInfoAssignee.Data.length > 0) {
                                    $.each(ajaxOutput.servicefollowupInfoAssignee.Data, function (i, value) {
                                        let rowCount = (i + 1);
                                        if (value.Attend == 1) {
                                            checked = "checked";
                                        }
                                        else {
                                            checked = "";
                                        }
                                        $AttendedEmpHtml += "<tr id=" + rowCount + ">";
                                        $AttendedEmpHtml += "<td class='jq_ProductServices_ID_Employee' Style='Display:none'>" + value.ID_Employee + "</td>";

                                        //    $ProductHtml += "<td style='text-align: center;'>" + rowCount + "</td>";
                                        $AttendedEmpHtml += "<td class='jq_ProductServices_td' ><input type='checkbox'  value='" + value.Attend + "'" + checked + " /></td>";
                                        $AttendedEmpHtml += "<td>" + value.Employee + "</td>";
                                        $AttendedEmpHtml += "<td>" + value.Department + "</td>";
                                        $AttendedEmpHtml += "<td>" + value.EmployeeType + "</td>";
                                        $AttendedEmpHtml += "<td class='jq_Employeetypeid_td' Style =Display:none>" + value.ID_CSAEmployeeType + "</td>";
                                        $AttendedEmpHtml += "</tr>";
                                    });
                                }
                            }
                            else {
                                $AttendedEmpHtml += "<tr id='0'><td  colspan='4' style'text-align:center'>No Records..</td></tr>";
                            }

                            $('#AttendedProductServiceTbody').append($AttendedEmpHtml);
                        },
                    });
                }
            } else {
                fn_nextPrevious(2);
            }

        }
        else {
            if (!catgryValid) {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please Select Category ' });
            }
            else if (!complaintsValid) {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please Select Complaint ' });

            } else {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'No Checkbox Marked ' });
            }
            $(ele).prop('disabled', false);
        }
    }


        var $num = 0;
    var $ProductmoreHtml = '';
    var ProductFilterData = [];
    function fn_set1(ProductReplace,callback) {

        let InputData = {
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        FK_ServiceFollowUp: @ViewBag.Service,
                        TransMode: '@ViewBag.TransMode',
                    };

                    $.ajax({
                        url: '@Url.Action("GetServiceActionTakenReturn", "ServiceList")',
                        type: "POST",
                        data: InputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (ajaxOutput) {
                            if (ajaxOutput.serviceActionfollowupInfo.Process.IsProcess) {
                                var ProductResults = [];
                                ProductFilterData = [];
                                ProductResults = ajaxOutput.serviceActionfollowupInfo.Data;
                                console.log('ProductResults>>>>>>>', ProductResults);
                                $.each(ProductReplace, function (i, value) {
                                    $.each(ajaxOutput.serviceActionfollowupInfo.Data, function (i, values) {
                                        ProductResults = ajaxOutput.serviceActionfollowupInfo.Data;
                                        console.log("values", values)
                                        console.log("ProductResults : ", ProductResults)
                                        console.log("value.ID_CustomerWiseProductDetails.toString() : ", value.ID_CustomerWiseProductDetails.toString());
                                        if (values.FK_CustomerWiseProductDetails.toString() == value.ID_CustomerWiseProductDetails.toString()) {
                                            let Productinfo = {};

                                            Productinfo['CustomerNote'] = values.CustomerNote;
                                            Productinfo['EmployeeNote'] = values.EmployeeNote;
                                            Productinfo['FK_ActionType'] = values.FK_ActionType;
                                            Productinfo['FK_CustomerWiseProductDetails'] = values.FK_CustomerWiseProductDetails;
                                            Productinfo['FK_EmployeeAssign'] = values.FK_EmployeeAssign;
                                            Productinfo['EmpName'] = values.EmpName;
                                            Productinfo['ID_NextAction'] = values.ID_NextAction;
                                            Productinfo['ID_NextActionLead'] = values.ID_NextActionLead;
                                            Productinfo['PQuantity'] = values.PQuantity;
                                            Productinfo['NextActionDate'] = values.NextActionDate;
                                            Productinfo['ID_Product'] = values.ID_Product;
                                            Productinfo['OfferPrice'] = values.OfferPrice;
                                            Productinfo['Product'] = values.Product;
                                            Productinfo['ProvideStandBy'] = values.ProvideStandBy;
                                            Productinfo['SecurityAmount'] = values.SecurityAmount;
                                            Productinfo['EmployeeID'] = values.EmployeeID;
                                            Productinfo['EmployeeName'] = values.EmployeeName;
                                            ProductFilterData.push(Productinfo);
                                        }
                                    });
                                });
                                console.log('ProductFilterData>>>>>>>>', ProductFilterData)
                                callback(ProductFilterData);
                            }
                            else {
                                callback([]);
                            }
                        },
                    });
    }

        function ReplacedpartsReturnNext(ele) {

            let $thisForm = $('[perfect-class="form"]');
            $num = 0;
            fn_nextPrevious(4);
            bindserv();
            var replacerowdetailsrws = $("#ProductSubdetailsTbody tr");

            var ProductReplace = [];
            var lblProdOrCat = "";
            var pushvalue = {};
            let options = '';
            $ProductmoreHtml = '';
            if ('@ViewBag.ProductVal' == "1") {
                if (replacerowdetailsrws.length > 0) {
                    debugger
                    lblProdOrCat = "Product";
                    ProductReplace = [];
                    $('#ProductSubdetailsTbody tr').each(function (index, ele) {
                        if ($(this).find('.jq_Productcheckbox_td').find('[type="checkbox"]').is(':checked') == true) {

                            let ID_Product = $(this).find('.FK_Product').text();
                            let Product = $(this).find('.Product').text();
                            let ID_CustomerWiseProductDetails = $(this).find('.ID_CustomerWiseProductDetails').text();
                            let FK_ProductNumberingDetails = $(this).find('.FK_ProductNumberingDetails').text();

                            pushvalue = {
                                ID_Product: ID_Product,
                                Product: Product,
                                ID_CustomerWiseProductDetails: ID_CustomerWiseProductDetails,
                                FK_ProductNumberingDetails: FK_ProductNumberingDetails,
                            }
                            ProductReplace.push(pushvalue);
                        }
                    });


                }
            }
            else if ('@ViewBag.CategoryVal' == "1") {

                lblProdOrCat = "Category";
                let ID_Product = 0;
                let Product = $("#ID_Category option:selected").text();
                let ID_CustomerWiseProductDetails = 0;
                let FK_ProductNumberingDetails = 0;

                pushvalue = {
                    ID_Product: ID_Product,
                    Product: Product,
                    ID_CustomerWiseProductDetails: ID_CustomerWiseProductDetails,
                    FK_ProductNumberingDetails: FK_ProductNumberingDetails,
                }
                ProductReplace.push(pushvalue);




            } $('#Actiontakentables').empty();
            if (ProductReplace.length > 0) {

                fn_set1(ProductReplace, function (resultProductFilterData) {
                    $('#Actiontakentables').empty();
                    console.log('resultProductFilterData>>>>>', resultProductFilterData)
                    $.each(resultProductFilterData, function (i, key) {

                        $.ajax({
                            url: "@Url.Action("BindNextActionList", "ServiceList")",
                            type: "GET",
                            dataType: "json",
                            contentType: "application/json",
                            success: function (ajaxOutput) {
                                debugger

                                if (ajaxOutput.Process.IsProcess) {
                                    options = '';
                                    $ProductmoreHtml = '';
                                    options += '<option value="0" Status="">' + "Please Select" + '</option>'
                                    $.each(ajaxOutput.Data, function (i, value) {
                                        var selected = (value.ID_NextAction === key.ID_NextAction) ? 'selected' : '';
                                        options += '<option value=' + value.ID_NextAction + '  Status=' + value.FK_ActionStatus + ' ' + selected + '>' + value.NxtActnName + '</option>'

                                    });
                                    let checked = "";
                                    if (key.ProvideStandBy == true) {
                                        checked = "checked='true'";
                                    }
                                    else {
                                        checked = "";
                                    }

                                    //var Checked = (key.ProvideStandBy ==true) ? 'true' : '';
                                    //var ID_NextActionLeadSelect = (value.ID_NextActionLead === key.ID_NextActionLead) ? 'selected' : '';
                                    $ProductmoreHtml = `<div class="ProductClass"><div class="row">

                                                                      <div class="col-sm-12">
                                                                       <div class="row">
                                                                          <div class="col-sm-6">
                                                                             <div class="form-group row">
                                                                              <label class="col-sm-2 col-form-label">
                                                                                  <span perfect-class="formGroupLabel">Product</span>
                                                                              </label>
                                                                              <div class="col-sm-6">
                                                                                  <input type="hidden" id="ID_Product${i}" value="${key.ID_Product}"/>
                                                                                  <input type="hidden" id="FK_ProductNumberingDetails${i}" value="${key.FK_ProductNumberingDetails}" />
                                                                                  <input type="hidden" id="ID_CustomerWiseProductDetails${i}" value="${key.FK_CustomerWiseProductDetails}" />
                                                                                  <input type="text" id="ProductName${i}" class="form-control" readonly name="GroupIcon" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value="${key.Product}">
                                                                              </div>
                                                                            </div>
                                                                          </div>
                                                                       </div>
                                                                     </div>
                                                                   </div>
                                                                  <div class="row">
                                                                   <div class="col-sm-12">
                                                                        <div class="row">
                                                                      <div class="col-sm-3">
                                                                          <div class="form-group row">
                                                                              <label class="col-sm-4 col-form-label">
                                                                                  <span perfect-class="formGroupLabel">Action</span>
                                                                                  <span class="text-danger">*</span>
                                                                              </label>
                                                                              <div class="col-sm-8">
                                                                                  <select class="form-control valid" name="ID_NextAction" id="ID_NextAction${i}" onchange="Showactionlead(this,${i},${key.ID_NextActionLead})" onclick="ActionClick()" aria-invalid="false">${options}</select>
                                                                              </div>
                                                                          </div>
                                                                      </div>
                                                                      <div class="col-sm-3 divtesthide" id="divNextActionLead${i}" >
                                                                          <div class="form-group row">
                                                                              <label class="col-sm-4 col-form-label">
                                                                                  <span perfect-class="formGroupLabel">Lead Action</span>
                                                                                  <span class="text-danger">*</span>
                                                                              </label>
                                                                              <div class="col-sm-8">
                                                                                  <select class="form-control dropdownlead${i}" name="ID_NextActionLead" id="ID_NextActionLead${i}"  onchange="ShowActiontypedropdownval(this,${i},${key.FK_ActionType})"></select>
                                                                              </div>
                                                                          </div>
                                                                      </div>
                                                                   <div class="col-sm-3 divtesthide" id="divPQuantity${i}" >
                                                                    <div class="form-group row">
                                                                        <label class="col-sm-4 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Quantity</span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>
                                                                        <div class="col-sm-8">
                                                                           <input type="text" class="form-control" id="textPQuantity${i}" name="PQuantity" maxlength="12" oninput="decimalpnt(this,'texPQuantity${i}',4)" value="${key.PQuantity}">
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                     <div class="col-sm-3 divtesthide" id="divNextActiontype${i}" >
                                                                          <div class="form-group row">
                                                                              <label class="col-sm-4 col-form-label">
                                                                                  <span perfect-class="formGroupLabel">Action Type</span>
                                                                                  <span class="text-danger">*</span>
                                                                              </label>
                                                                              <div class="col-sm-8">
                                                                                  <select class="form-control dropdownActiontype${i}" name="FK_ActionType" id="FK_ActionType${i}"></select>
                                                                              </div>
                                                                          </div>
                                                                      </div>
                                                                      <div class="col-sm-3 divtesthide" id="divFollowupDate${i}" >
                                                                          <div class="form-group row">
                                                                              <label class="col-sm-4 col-form-label">
                                                                                  <span perfect-class="formGroupLabel">Follow up Date </span>
                                                                                  <span class="text-danger">*</span>
                                                                              </label>
                                                                              <div class="col-sm-8">
                                                                                  <input type="date" class="form-control" id="textNextActionDate${i}" name="NextActionDateLead">
                                                                                  <div class="invalid-feedback animated fadeInUp temptableErrors${i}"></div>
                                                                              </div>
                                                                          </div>
                                                                      </div>
                                                                      <div class="col-sm-3 divtesthide" id="divAssignedTo${i}" >
                                                                          <div class="form-group row">
                                                                              <label class="col-sm-4 col-form-label">
                                                                                  <span perfect-class="formGroupLabel">Assigned To</span>
                                                                                  <span class="text-danger">*</span>
                                                                              </label>
                                                                              <div class="col-sm-8">

                                                                                  <div class="input-group">
                                                                                  <input type="text" class="form-control" perfect-class="formGroupControl" id="AssignEmp${i}" name="AssignEmp${i}" readonly>
                                                                                  <input type="hidden" class="form-control" id="FK_EmployeeAssignid${i}"  name="FK_EmployeeAssign${i}"/><div class="input-group-append"><button type="button" id="showemployeebutton${i}" class="btn btn-primary fa fa-search" onclick="GetCmnPopUpSearchValAssign(this, 69, 'Employee Details', [], ['Branchs', 'BranchTypeID', 'FK_Departement', 'Department', 'BranchType', 'SLNo','BranchID','FK_Branch'])" Criterea1="" Criterea2="" Criterea3="" BindName="AssignEmp${i}" BindVal="FK_EmployeeAssign${i}"></button></div></div>
                                                                              </div>
                                                                          </div>
                                                                      </div>

                                                                      <div class="col-sm-3" id="providestandby${i}">
                                                                          <div class="form-group row">
                                                                              <label class="col-sm-7 col-form-label">
                                                                                  <span perfect-class="formGroupLabel">Provide Stand By</span>
                                                                              </label>
                                                                              <div class="col-sm-5">
                                                                                  <input type="checkbox"   perfect-ctype="checkbox"perfect-css="checkbox" id="textprovidestandby${i}" name="Providestandby"  onclick="ProvideStandbyEvent(this,${i})" >
                                                                              </div>
                                                                          </div>
                                                                      </div>
                                                                      <div class="col-sm-3" id="Customernote${i}">
                                                                          <div class="form-group row">
                                                                              <label class="col-sm-4 col-form-label">
                                                                                  <span perfect-class="formGroupLabel">Customer Note</span>
                                                                              </label>
                                                                              <div class="col-sm-8">
                                                                                  <input type="text" class="form-control" id="textCustomerNote${i}" name="CustomerNote" maxlength="300" value="${key.CustomerNote}">
                                                                              </div>
                                                                          </div>
                                                                      </div>
                                                                      <div class="col-sm-3" id="Employeenote${i}">
                                                                          <div class="form-group row">
                                                                              <label class="col-sm-4 col-form-label">
                                                                                  <span perfect-class="formGroupLabel">Employee Note</span>
                                                                              </label>
                                                                              <div class="col-sm-8">
                                                                                  <input type="text" class="form-control" id="textEmployeeNote${i}" name="EmployeeNote" maxlength="300" value="${key.EmployeeNote}">
                                                                              </div>
                                                                          </div>
                                                                      </div>
                                                                      <div class="col-sm-3" id="Securityamount${i}">
                                                                          <div class="form-group row">
                                                                              <label class="col-sm-4 col-form-label">
                                                                                  <span perfect-class="formGroupLabel">Security Amount</span>
                                                                              </label>
                                                                              <div class="col-sm-8">
                                                                                  <input type="text" class="form-control text-right" id="textSecurityamount${i}" name="SecurityAmount" maxlength="12" oninput="decimalpnt(this,'textSecurityamount${i}',3)" onchange="CalculateSecurityAmount(this, ${i})">
                                                                              </div>
                                                                          </div>
                                                                      </div>
                                                                     <div class="col-sm-3" id="Offeredprice${i}">
                                                                          <div class="form-group row">
                                                                              <label class="col-sm-4 col-form-label">
                                                                                  <span perfect-class="formGroupLabel">BuyBack Amount </span>
                                                                              </label>
                                                                              <div class="col-sm-8">
                                                                                  <input type="text" class="form-control text-right" id="textOfferedprice${i}" name="Offeredprice" maxlength="12" oninput="decimalpnt(this,'textOfferedprice${i}',3)">
                                                                              </div>
                                                                          </div>
                                                                      </div>

                                                               <div class="col-sm-3" id="EmployeeAuth${i}">
                                                                    <div class="form-group row">
                                                                        <label class="col-sm-4 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Approved By</span>
                                                                        </label>
                                                                        <div class="col-sm-8">

                                                                           <div class="input-group">
                                                                             <input type="text" class="form-control " name="EmployeeName${i}" id="textEmployee${i}"  perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled value="${key.EmployeeName}" />
                                                                             <input type="hidden" name="EmployeeID${i}" id="employeeid${i}"  class="perfectValidate_numeric_nm" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" value="${key.EmployeeID}" />
                                                                           <div class="input-group-append">
                                                                             <button id="addarea-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,6,'Employee List',['Department'])" bindname="EmployeeName${i}" bindval="EmployeeID${i}" Function="1"></button>
                                                                           </div>
                                                                          </div>

                                                                        </div>
                                                                    </div>
                                                                </div>

                                                                   </div>
                                                                 </div>
                                                               </div>
                                                             </div>
                                                                  </div> `;

                                    $('#Actiontakentables').append($ProductmoreHtml);

                                    $("#divNextActionLead" + i).hide();
                                    $("#divNextActiontype" + i).hide();
                                    $("#divPQuantity" + i).hide();
                                    $("#divFollowupDate" + i).hide();
                                    $("#divAssignedTo" + i).hide();
                                    $("#providestandby" + i).hide();
                                    $("#Securityamount" + i).hide();
                                    $("#Offeredprice" + i).hide();
                                    $("#ID_NextAction" + i).trigger('change');

                                    if ($("#ID_NextAction" + i).children(":selected").attr('Status') == 9) {
                                        //if (key.ID_NextActionLead > 0) {
                                        //    $("#ID_NextActionLead" + i).val(key.ID_NextActionLead).selectpicker('refresh');
                                        //}
                                        $("#ID_NextActionLead" + i).trigger('change');
                                        if (key.FK_ActionType == 0) {
                                            $("#textNextActionDate" + i).val("");
                                            $("#textOfferedprice" + i).val("");
                                        }
                                        if (key.FK_ActionType > 0) {

                                            $("#textNextActionDate" + i).val(moment(key.NextActionDate).format('YYYY-MM-DD'));
                                            $("#textOfferedprice" + i).val(key.OfferPrice);
                                            //$("#FK_ActionType" + i).val(key.FK_ActionType).selectpicker('refresh');
                                            if (key.FK_EmployeeAssign != 0) {
                                                $("#AssignEmp" + i).val(key.EmpName);
                                                $("#FK_EmployeeAssignid" + i).val(key.FK_EmployeeAssign);
                                            }
                                        }

                                    }

                                    if ($("#ID_NextAction" + i).children(":selected").attr('Status') == 5) {
                                        $("#textprovidestandby" + i).trigger('click');
                                        if (key.ProvideStandBy == true) {
                                            $("#textprovidestandby" + i).attr("checked", true);
                                            $("#textSecurityamount" + i).val(Number(key.SecurityAmount).toFixed(2));
                                        }
                                        else {
                                            $("#textprovidestandby" + i).trigger('click');
                                            $("#textprovidestandby" + i).attr("checked", false);
                                            $("#textSecurityamount" + i).val(Number(key.SecurityAmount).toFixed(2));
                                        }
                                        CalculateSecurityAmount(this, i);
                                    }
                                    else {
                                        if (key.ProvideStandBy == false) {
                                            $("#textprovidestandby" + i).attr("checked", false);
                                            $("#textSecurityamount" + i).val(Number(key.SecurityAmount).toFixed(2));
                                        }
                                        CalculateSecurityAmount(this, i);
                                    }
                                }
                                else {

                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        if (i == 0) {
                                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please Add atleast one Action in ' + NxtActnPageName + ' Master'  });
                                            IsNextAction = 1;
                                            return false;
                                        }
                                    });

                                }

                            }

                        });

                    });
                });
            }
            GetAmountDetails();
        }
        //}

    function GetAmountDetails() {
        let $thisForm = $('[perfect-class="form"]');
        let TotalOtherCharge = 0;
        let InputData = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            FK_ServiceFollowUp: @ViewBag.Service,
            TransMode: '@ViewBag.TransMode',
        };


        $.ajax({
            url: '@Url.Action("GetServiceAllAmounts", "ServiceList")',
            type: "POST",
            data: InputData,
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (ajaxOutput) {
                if (ajaxOutput.servicefollowupInfoDetails.Process.IsProcess) {
                    if (ajaxOutput.servicefollowupInfoDetails.Data != null) {
                        if (ajaxOutput.servicefollowupInfoDetails.Data.length > 0) {

                            var tableIncentiveDetailsrws = $("#ProductServiceTbody tr");
                            let ServiceTotalCost = 0;
                            if (tableIncentiveDetailsrws.length > 0) {
                                $('#ProductServiceTbody tr').each(function (index, ele) {
                                    if ($(this).find('.jq_ProductServices_td').find('[type="checkbox"]').is(':checked') == true) {

                                        ServiceTotalCost += parseFloat($(this).find('.jq_ProductServicesNetAmount').find('input').val());
                                    }
                                });
                                $('[name="ServiceCharge"]').val(Number(ServiceTotalCost).toFixed(2));
                            }
                            else {
                                $('[name="ServiceCharge"]').val(Number(ajaxOutput.servicefollowupInfoDetails.Data[0].ServiceAmount).toFixed(2));
                            }

                            $('[name="DiscountAmount"]').val(Number(ajaxOutput.servicefollowupInfoDetails.Data[0].DiscountAmount).toFixed(2));
                            $('[name="BillTypeID"]').val(ajaxOutput.servicefollowupInfoDetails.Data[0].BillTypeID).selectpicker('refresh');
                        }
                        if (ajaxOutput.paymentdetailData.Data != null) {
                            fillTablepaymentmethod($thisForm, 'Payment', ajaxOutput.paymentdetailData.Data, paytableOptionsTempOut);
                        }
                        if (ajaxOutput.OtherChargeData.Data != null) {
                            ShowOtherCharges(this, 1)
                            if (ajaxOutput.OtherChargeData.Process.IsProcess) {
                                $.each(ajaxOutput.OtherChargeData.Data, function (i, value) {
                                    TotalOtherCharge += value.OctyAmount;
                                });
                                $('[name="OtherCharge"]').val(Number(TotalOtherCharge).toFixed(2));
                                let othechg = ajaxOutput.OtherChargeData.Data;
                                console.log('AJAX OTHER CHG OUTTPUT>', ajaxOutput.OtherChargeData.Data);
                                othrchargelst = [];
                                othrchargelst = othrchargelst.concat(othechg);
                                console.log('OTH INFOT>', othrchargelst);
                                $thisForm.data({ prtothchgData: othrchargelst });
                            }
                        }
                    }
                }
            },
        });
    }

    ///////////view Section////////////////

    //incentive
    function GetServiceTab(ele) {

        var tableprodcutsubdetailsrws = $("#ProductSubdetailsTbody tr");
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let $tbodyreplace = $thisForm.find('[perfect-class="ServicedContainer"]').find('tbody');

        let ProductSubDetails = [];
        if ('@ViewBag.ProductVal' == "1") {
            if (tableprodcutsubdetailsrws.length > 0) {

                $('#ProductSubdetailsTbody tr').each(function (index, ele) {

                    if ($(this).find('.jq_Productcheckbox_td').find('[type="checkbox"]').is(':checked') == true) {
                        let Productinfo = {};

                        Productinfo['MasterProduct'] = $(this).find('.Product').text();
                        Productinfo['ID_MasterProduct'] = $(this).find('.FK_Product').text()

                        ProductSubDetails.push(Productinfo);

                    }
                });
            }
        } else {

            let Productinfo = {};

            Productinfo['MasterProduct'] = $("#ID_Category option:selected").text();
            Productinfo['ID_MasterProduct'] = 0

            ProductSubDetails.push(Productinfo);





        }


        console.log('ProductSubDetails>>>>>>>>>>>>>>>>>>>', ProductSubDetails)



        //$("#ProductServiceTbody").find('.newServce').remove();

        //var htmlserv = $("#ProductServiceTbody").html();


        var len = $("#ProductServiceTbody").find('.newServce').length;
       if (len <= 0) {
            if (ProductSubDetails) {

                $.each(ProductSubDetails, function (i, value) {


                    let $thead = $('<th/>', { colspan: 10 }).text(value.MasterProduct);
                    let $theadtr = $('<tr/>', { class: "newServce" });


                    $tbodyreplace.append($theadtr.append($thead));






                    //let $tfooter = $(`<td colspan="10"><button id="btnaddnewService" ID_MasterProduct=${value.ID_MasterProduct} class="btn btn-primary fa fa-plus" type="button" perfect-css="button" style="float: right;" index=${i} onclick="GetAddServices(this,'@Model.FK_Customerserviceregister')"></button></td>`);
                    let $tfooter = $(`<td id="ProductSer${i}"colspan="10"><button id="btnaddnewService" ID_MasterProduct=${value.ID_MasterProduct} class="btn btn-primary fa fa-plus" type="button" perfect-css="button" style="float: right;" index=${i} onclick="GetAddServices(this,0)"></button></td>`);
                    $tbodyreplace.append($(`<tr id="btnser${i}" class='newServce'/>`).append($tfooter));

                });
                $('#ProductServiceTbody').append($tbodyreplace);
            }
        }

        //else {
        //    $tbodyreplace += "<tr id='0'><td class='norecord'colspan='10' style='text-align:center'>No Records..</td></tr>";
        //}
        //$('#ProductServiceTbody').append($tbodyreplace);
    }

    function GetAddServices(ele, id) {

        var $thisForm = $(ele).closest('[perfect-class="form"]');
        var InputData = {
            'FK_Services': id
        }
        $('#ProductServiceTbody tr').each(function (index, ele) {
            $(this).removeClass('Active')
        });

        console.log("$(ele).closest('tr')-------", 'btnser' + $(ele).attr('index'));
        $("#Rowvalue").val($(ele).attr('index'));
        $.ajax({
            url: "@Url.Action("GetServiceAddDetails", "ServiceList")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {

                $ProductHtml = '';
                console.log("sas",ajaxOutput.ServiceMod.Data);
                console.log("Listssas", ajaxOutput.Lits.Data);
                bindservicemodajaxout = ajaxOutput;
                if (ajaxOutput != null) {

                    if (ajaxOutput != null) {

                        $('#ProductServiceTbodyMoredetails').empty();

                        let options = ''
                        $.each(ajaxOutput.ServiceMod.Data,function (i, value) {

                            options += '<option value=' + value.ID_Mode + '>' + value.ModeName + '</option>'
                        });
                        let $dropdownservice = '<select class="form-control" onchange="bindTextboxservicecost(this)">' + options + '</select>';

                        if (ajaxOutput.Lits.Data.length > 0) {
                            $.each(ajaxOutput.Lits.Data, function (i, value) {

                                let rowCount = (i + 1);
                                let Tax = isNaN(parseFloat(value.NetAmount)) ? 0 : parseFloat(value.NetAmount);
                                let NetAmount = isNaN(parseFloat(value.NetAmount)) ? 0 : parseFloat(value.NetAmount);
                                $ProductHtml += "<tr  id=" + rowCount + ">";
                                $ProductHtml += "<td class='jq_ProductServices_ID_Services' Style='Display:none'>" + value.ID_Services + "</td>";
                                $ProductHtml += "<td class='jq_ProductServices_ID_Product' Style='Display:none'>" + $(ele).attr('ID_MasterProduct')/*value.ID_Product*/ + "</td>";
                                $ProductHtml += "<td class='jq_ProductServices_td' ><input id='chk1' type='checkbox'  value='" + value.ProductStatus + "' /></td>";
                                $ProductHtml += "<td>" + value.Service + "</td>";
                                $ProductHtml += "<td class='jq_ProductServiceMode_td'  >" + $dropdownservice + "</td>";
                                $ProductHtml += "<td class='jq_ProductServicesAmnt_td' ><input id='ServicesAmnt' name='ServicesAmnt'  type='text' " + `id="ServicesAmnt" name="ServicesAmnt" oninput='decimalpnt(this,"ServicesAmnt",3)'  onpaste="return false"` +"  min ='0'   maxlength ='12' class='form-control servicecost text-right' value='" + parseFloat(value.ServiceCost).toFixed(2) + "' " + `onchange="GetTaxNetdetails(this)"` + "/></td>";
                                $ProductHtml += "<td class='jq_ProductServicesTaxAmount'><input onkeypress='return /[0-9]/i.test(event.key)' type='number'  min='0' maxlength ='12' class='form-control TaxAmount text-right' perfect-class='formGroupControl'  value='" + Tax + "' readonly/></td>";
                                $ProductHtml += "<td class='jq_ProductServicesNetAmount'><input onkeypress='return /[0-9]/i.test(event.key)' type='number'  min='0' maxlength ='12' class='form-control NetAmount text-right' perfect-class='formGroupControl'  value='" + NetAmount + "' readonly/></td>";
                                $ProductHtml += "<td class='jq_ProductServicesRemarks_td' ><input type='textbox' style='width:300px' class='form-control' onkeypress='return /[0-9A-Za-z().]/i.test(event.key)'  value='" + value.Remarks + "' maxlength='150'/></td>";
                                $ProductHtml += "</tr>";
                            });
                            if ($("input[id='chk1']:checked").length > 0) {

                                document.getElementById("btnSaveServicesMore").disabled = false;
                            }
                            else {
                                document.getElementById("btnSaveServicesMore").disabled = true;
                            }

                        }
                        else {
                            $ProductHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                        }
                        $('#ProductServiceTbodyMoredetails').append($ProductHtml);

                    }

                    $('.bd-ProductserviceMoredetails-modal-sm').modal('show');

                    $("#ProductServiceTbody .Active").closest('tr');
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            },
            complete: function () {
                $(ele).prop('disabled', false);
            }
        });

    }


    function BindMoredetailsServiceAmount(ele) {

        var tablemoredetailsrws = $("#ProductServiceTbodyMoredetails tr");

        var ProductService = [];

        if (tablemoredetailsrws.length > 0) {
            $('#ProductServiceTbodyMoredetails tr').each(function (index, ele) {

                if ($($(this).find(".jq_ProductServices_td input[type='checkbox']")[0]).is(":checked") == true) {

                    let checkbox1 = $(this).find(".jq_ProductServices_td input[type='checkbox']").is(":checked") == true ? "1" : "0";
                    let ID_Service = $(this).find(".jq_ProductServices_ID_Services").text();
                    let ID_Product = $(this).find(".jq_ProductServices_ID_Product").text();
                    let FK_Service = $(this).find("td:eq(3)").text();
                    let TextServiceMode = /*$(this).find("td:eq(4) option:selected").text();*/ $(this).find('.jq_ProductServiceMode_td').find('select').val();
                    let TextserviceModvalue = /*$(this).find("td:eq(4) option:selected").val();*/$(this).find('.jq_ProductServiceMode_td').find('select').val();


                    let Textvaluecost = $(this).find(".jq_ProductServicesAmnt_td input[type='text']").val().trim();
                    let TextvalueTaxAmount = $(this).find(".jq_ProductServicesTaxAmount input[type='number']").val().trim();
                    let TextvalueNetAmount = $(this).find(".jq_ProductServicesNetAmount input[type='number']").val().trim();
                    let Textvalueremark = $(this).find(".jq_ProductServicesRemarks_td input[type='textbox']").val();


                    var ary = { checkbox1: checkbox1, ID_Service: ID_Service, ID_Product: ID_Product, FK_Service: FK_Service, TextServiceMode: TextServiceMode, TextserviceModvalue: TextserviceModvalue, Textvaluecost: Textvaluecost, TextvalueTaxAmount: TextvalueTaxAmount, TextvalueNetAmount: TextvalueNetAmount, Textvalueremark: Textvalueremark }

                    ProductService.push(ary);
                }

            });
            var _class = 'SerClass' + $("#Rowvalue").val() +" AddServcComp";

            var tabledetailsrws = $("#ProductServiceTbody tr");

            let Existency = 0;

            if (ProductService.length > 0) {

                $.each(ProductService, function (i, key) {

                    let CheckBoxValue = key.checkbox1 == "1" ? "Checked" : "";
                    let CheckBox = "<input type='checkbox' value='' " + CheckBoxValue + ">";

                    var read='';
                    if (key.TextserviceModvalue != 1) {
                        key.Textvaluecost = 0;
                    }


                    let options = ''
                    $.each(bindservicemodajaxout.ServiceMod.Data, function (i, value) {
                        if (value.ID_Mode == key.TextserviceModvalue) {
                            options += '<option value=' + value.ID_Mode + ' selected="selected">' + value.ModeName + '</option>'
                        }
                        else {
                            options += '<option value=' + value.ID_Mode + '>' + value.ModeName + '</option>'
                        }
                    });
                    $dropdown = '<select class="form-control" onchange="bindTextboxservicecost(this)">' + options + '</select>';


                    if (tabledetailsrws.length > 0) {
                        $(`#ProductServiceTbody tr.${_class}`).each(function (index, ele) {

                            $(this).find(".jq_ProductServices_ID_Services").text()
                            if ($(this).find(".jq_ProductServices_ID_Services").text() == key.ID_Service) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': `${key.FK_Service} Already Exists` });
                                Existency = 1;
                            }
                            return Existency;
                        });
                    }
                    if (Existency != 1) {
                        var rowid = $("#Rowvalue").val();


                        var id = 'btnser' + $("#Rowvalue").val();
                        var target = document.getElementById(id);

                        var newElement = document.createElement('tr');
                        newElement.className = 'SerClass' + $("#Rowvalue").val() +" AddServcComp";
                        target.parentNode.insertBefore(newElement, target);


                        var tdEle = document.createElement('td');
                        var tdElement = document.createElement('td');
                        tdElement.className = 'jq_ProductServices_td';
                        tdElement.innerHTML = CheckBox;

                        var tdElement10 = document.createElement('td');


                        var tdElement2 = document.createElement('td');
                        tdElement2.className = 'jq_ProductServices_ID_Services';
                        tdElement2.setAttribute('style', 'display:none');
                        tdElement2.innerHTML = key.ID_Service;

                        var tdElement3 = document.createElement('td');
                        tdElement3.className = 'jq_ProductServices_ID_Product';
                        tdElement3.setAttribute('style', 'display:none');
                        tdElement3.innerHTML = key.ID_Product;

                        var tdElement4 = document.createElement('td');
                        tdElement4.className = 'jq_Type_td';
                        tdElement4.innerHTML = key.FK_Service;

                        var tdElement5 = document.createElement('td');
                        tdElement5.className = 'jq_ProductServiceMode_td';
                        tdElement5.innerHTML = $dropdown;

                        var tdElement6 = document.createElement('td');
                        tdElement6.className = 'jq_ProductServicesAmnt_td';

                        var inputElement2 = document.createElement('input');
                        inputElement2.className = 'form-control text-right servicecost';
                        inputElement2.type = 'text';
                        inputElement2.maxLength = '12';
                        inputElement2.id = 'ServicesAmnt';
                        inputElement2.setAttribute('oninput', 'decimalpnt(this,"ServicesAmnt",3)');
                        inputElement2.setAttribute('onchange', 'GetTaxNetdetails(this)');
                        inputElement2.setAttribute('value', key.Textvaluecost);
                        if (key.TextserviceModvalue != 1) {
                            inputElement2.setAttribute('readonly', 'readonly');
                        }
                        tdElement6.appendChild(inputElement2);

                        var tdElement7 = document.createElement('td');
                        tdElement7.className = 'jq_ProductServicesTaxAmount';
                        //tdElement7.setAttribute('style', 'display:none');

                        var inputElement3 = document.createElement('input');
                        inputElement3.className = 'form-control text-right';
                        inputElement3.type = 'number';
                        inputElement3.setAttribute('readonly', 'readonly');
                        inputElement3.setAttribute('value', key.TextvalueTaxAmount);
                        tdElement7.appendChild(inputElement3);

                        var tdElement8 = document.createElement('td');
                        tdElement8.className = 'jq_ProductServicesNetAmount';
                        //tdElement8.setAttribute('style', 'display:none');

                        var inputElement4 = document.createElement('input');
                        inputElement4.className = 'form-control text-right';
                        inputElement4.type = 'number';
                        inputElement4.setAttribute('readonly', 'readonly');
                        inputElement4.setAttribute('value', key.TextvalueNetAmount);
                        tdElement8.appendChild(inputElement4);

                        var tdElement9 = document.createElement('td');
                        tdElement9.className = 'jq_ProductServicesRemarks_td';

                        var inputElement5 = document.createElement('input');
                        inputElement5.className = 'form-control';
                        inputElement5.type = 'text';
                        inputElement5.setAttribute('style', 'width:300px');
                        inputElement5.setAttribute('value', key.Textvalueremark);
                        inputElement5.setAttribute('onkeypress', 'return /[0-9A-Za-z().]/i.test(event.key)');
                        inputElement5.maxLength = '150';
                        tdElement9.appendChild(inputElement5);

                        newElement.appendChild(tdElement10);
                        newElement.appendChild(tdElement);
                        newElement.appendChild(tdElement2);
                        newElement.appendChild(tdElement3);
                        newElement.appendChild(tdElement4);
                        newElement.appendChild(tdElement5);
                        newElement.appendChild(tdElement6);
                        newElement.appendChild(tdElement7);
                        newElement.appendChild(tdElement8);
                        newElement.appendChild(tdElement9);

                        $('.bd-ProductserviceMoredetails-modal-sm').modal('hide');
                    }

                });
            }
        }
    }

    function CalculateServiceIncentiveCost(ele) {
        var $thisForm = $(ele).closest('[perfect-class="form"]');
        fn_nextPrevious(3);
        var tableIncentiveDetailsrws = $("#ProductServiceTbody tr");

        let IncentiveServiceDetails = [];
        let ServiceTotalCost = 0;
        if (tableIncentiveDetailsrws.length > 0) {
            $('#ProductServiceTbody tr').each(function (index, ele) {
                if ($(this).find('.jq_ProductServices_td').find('[type="checkbox"]').is(':checked') == true) {

                    ServiceTotalCost += parseFloat($(this).find('.jq_ProductServicesNetAmount').find('input').val());
                }
            });
        }


        $('[name="ServiceCharge"]').val(Number(ServiceTotalCost).toFixed(2));
        Calcaulatetotalamount(this);
    }
    //incentive end
    //Service incentive Return
    function ServicefollowupReturnServices(ele) {

        var tableprodcutsubdetailsrws = $("#ProductSubdetailsTbody tr");
        let $thisForm = $('[perfect-class="form"]');
        let $tbodyreplace = $('[perfect-class="ServicedContainer"]').find('tbody');
        //let $tbodyreplace = $("#ProductServiceTbody").find('tbody');
        let InputData = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            FK_ServiceFollowUp: @ViewBag.Service,
            TransMode: '@ViewBag.TransMode',
        };
        var AddServclen = $("#ProductServiceTbody").find('.AddServc').length;
        if (AddServclen <= 0) {
            $.ajax({

                url: '@Url.Action("GetServicefollowupInfoByIDReturnService", "ServiceList")',
                type: "POST",
                data: InputData,
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxOutput) {

                    if (ajaxOutput.output.Process.IsProcess) {


                        $("#ProductServiceTbody tr").remove();
                        if (ajaxOutput.output.Data) {

                            //let options = ''
                            //$.each(ajaxOutput.ServiceMod.Data, function (i, value) {

                            //    options += '<option value=' + value.ID_Mode + '>' + value.ModeName + '</option>'
                            //});

                            $.each(ajaxOutput.output.Data, function (index, values) {

                                let $thead = $('<th/>', { colspan: 10 }).text(values.MainProduct);
                                $tbodyreplace.append($('<tr/>').append($thead));
                                console.log("ajaxOutput.output.Data>>>>>>>>>>>>", ajaxOutput.output.Data);
                                $.each((values.ProductServiceCostdetailss), function (i, value) {

                                    let rowCount = (i + 1);
                                    let $row = $('<tr/>', { id: rowCount, class: "SerClass" + index + " AddServc" });

                                    let options = ''
                                    $.each(ajaxOutput.ServiceMod.Data, function (i, value1) {
                                        if (value1.ID_Mode == value.ServiceType) {
                                            options += '<option value=' + value1.ID_Mode + ' selected="selected">' + value1.ModeName + '</option>'
                                        }
                                        else {
                                            options += '<option value=' + value1.ID_Mode + '>' + value1.ModeName + '</option>'
                                        }
                                    });
                                    $dropdown = '<select class="form-control" onchange="bindTextboxservicecost(this)">' + options + '</select>';

                                    var read = true;
                                    if (value.ServiceType == 1) {
                                        read = false;
                                    }

                                    $row.append($('<td>'))

                                        .append($('<td>', { class: "jq_ProductServices_td" }).html(
                                            $('<input />', { type: 'checkbox', 'perfect-class': 'formCheckInput', 'perfect-ctype': "checkbox", 'checked': true })
                                        ))

                                        .append($('<td>', { class: "jq_ProductServices_ID_Product", style: "display:none" }).text(value.ID_MasterProduct))
                                        .append($('<td>', { class: "jq_ProductServices_ID_Services", style: "display:none" }).text(value.FK_Service))
                                        .append($('<td>', {}).text())
                                        .append($('<td>', { class: "jq_Type_td" }).text(value.Service))
                                        .append($('<td>', { class: "jq_ProductServiceMode_td" }).html(
                                            $dropdown, {}
                                        ))

                                        .append($('<td>', { class: "jq_ProductServicesAmnt_td" }).html(
                                            $('<input />', {
                                                class: 'form-control text-right servicecost', type: 'text', name: 'ServicesAmnt', id: 'ServicesAmnt', 'perfect-ctype': "text",
                                                value: value.ServiceCost.toFixed(2), oninput: 'decimalpnt(this, "ServicesAmnt", 3)', onchange: 'GetTaxNetdetails(this)', maxlength: '12', readonly: read
                                            })
                                        ))
                                        .append($('<td>', { class: "jq_ProductServicesTaxAmount" }).html(
                                            $('<input />', { class: 'form-control text-right', type: 'number', value: value.ServiceTax.toFixed(2), readonly: 'readonly' })
                                        ))
                                        .append($('<td>', { class: "jq_ProductServicesNetAmount" }).html(
                                            $('<input />', { class: 'form-control text-right ', type: 'number', value: value.ServiceNetAmount.toFixed(2), readonly: 'readonly' })
                                        ))
                                        .append($('<td>', { class: "jq_ProductServicesRemarks_td" }).html(
                                            $('<input />', { class: 'form-control text-right', type: 'text', style: 'width: 300px', value: value.ServiceRemarks, onkeypress: 'return /[0-9A-Za-z().]/i.test(event.key)', maxlength: '150' })
                                        ))

                                    $tbodyreplace.append($row);
                                    //}
                                    //console.log("ProductServiceCostdetailss2222222>>>>>>>>>>>>", value.ProductServiceCostdetailss);
                                });

                                let $tfooter = $(`<td id="ProductSer${index}"colspan="10"><button id="btnaddnewService" ID_MasterProduct=${values.ID_MasterProduct} class="btn btn-primary fa fa-plus" type="button" perfect-css="button" style="float: right;" index=${index} onclick="GetAddServices(this,0)"></button></td>`);

                                $tbodyreplace.append($(`<tr id="btnser${index}"/>`).append($tfooter));
                            });
                        }
                        else {
                            $filldata += "<tr id='0'><td class='norecord'colspan='10' style='text-align:center'>No Records..</td></tr>";
                        }
                    }
                    else {
                        $("#ProductServiceTbody tr").remove();
                        let ProductSubDetails = [];
                        var tableprodcutsubdetailsrws = $("#ProductSubdetailsTbody tr");
                        let $thisForm = $(ele).closest('[perfect-class="form"]');
                        if (tableprodcutsubdetailsrws.length > 0) {

                            $('#ProductSubdetailsTbody tr').each(function (index, ele) {

                                if ($(this).find('.jq_Productcheckbox_td').find('[type="checkbox"]').is(':checked') == true) {
                                    let Productinfo = {};

                                    Productinfo['MasterProduct'] = $(this).find('.Product').text();
                                    Productinfo['ID_MasterProduct'] = $(this).find('.FK_Product').text()

                                    ProductSubDetails.push(Productinfo);

                                }
                            });
                        }
                        $('#ProductServiceTbody').empty();

                        if (ProductSubDetails) {
                            $.each(ProductSubDetails, function (i, value) {
                                let $thead = $('<th/>', { colspan: 10 }).text(value.MasterProduct);
                                $tbodyreplace.append($('<tr/>').append($thead));
                                //let $tfooter = $(`<td colspan="10"><button id="btnaddnewService" ID_MasterProduct=${value.ID_MasterProduct} class="btn btn-primary fa fa-plus" type="button" perfect-css="button" style="float: right;" index=${i} onclick="GetAddServices(this,'@Model.FK_Customerserviceregister')"></button></td>`);
                                let $tfooter = $(`<td id="ProductSer${i}"colspan="10"><button id="btnaddnewService" ID_MasterProduct=${value.ID_MasterProduct} class="btn btn-primary fa fa-plus" type="button" perfect-css="button" style="float: right;" index=${i} onclick="GetAddServices(this,0)"></button></td>`);

                                $tbodyreplace.append($(`<tr id="btnser${i}"/>`).append($tfooter));
                            });

                            $('#ProductServiceTbody').append($tbodyreplace);
                        }

                        //let $filldata = "<tr id='0'><td class='norecord'colspan='10' style='text-align:center'>No Records..</td></tr>";
                        //$tbodyreplace.append($filldata);
                    }
                },
            });
        }
    }

        function ActionClick() {
            $num = 1;
        }

    //Service incentive Return end
</script>
}

