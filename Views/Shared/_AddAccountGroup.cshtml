@*----------------------------------------------------------------------
Created By	: Kavya
Created On	: 17/10/2022
Purpose		: AccountGroup
-------------------------------------------------------------------------
Modification
On			By					OMID/Remarks
-------------------------------------------------------------------------
-------------------------------------------------------------------------*@

@model PerfectWebERP.Models.AccountGroupModel.AccountGroupView
<style>

</style>

<div class="card ">

    <div class="card-header">
        @*<h4 class="card-title col-12">Account Group<span class="badge light badge-success float-right" perfect-class="formTitle">ADD</span></h4>*@
        <h4 class="card-title col-12">@ViewBag.PageTitle</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
	<div class="card-body">
		<form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
			<div class="">

                <div class="row">

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-3 col-form-label">
                                <span perfect-class="formGroupLabel">Name</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control perfectValidate_name " placeholder="" name="AGName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="generateShortName(this)" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-3 col-form-label">
                                <span perfect-class="formGroupLabel">Short Name</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-9">
                                <input type="text" maxlength="10" class="form-control perfectValidate_shortName " placeholder="" name="AGShortName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-3 col-form-label">
                                <span perfect-class="formGroupLabel">Final A/c Type</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-md-3">
                                <div class="form-check form-check-inline" perfect-class="formCheck">
                                    <label class="form-check-label" perfect-class="formCheckLabel">
                                        <input type="checkbox" class="form-check-input" id="cbTrading" name="cbTrading" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox"onchange="checkcbTrading(this)"><span perfect-class="formCheckInputText">Trading A/c</span>
                                    </label>
                                </div>
                                <div class="text-danger temptableError" id="errorFinalAcType"></div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-check form-check-inline" perfect-class="formCheck">
                                    <label class="form-check-label" perfect-class="formCheckLabel">
                                        <input type="checkbox" class="form-check-input" id="cbProfitLoss" name="cbProfitLoss" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox"onchange="checkcbProfitLoss(this)"><span perfect-class="formCheckInputText">Profit & Loss A/c</span>
                                    </label>
                                </div>

                            </div>
                            <div class="col-md-3">
                                <div class="form-check form-check-inline" perfect-class="formCheck">
                                    <label class="form-check-label" perfect-class="formCheckLabel">
                                        <input type="checkbox" class="form-check-input" id="cbBalanceSheet" name="cbBalanceSheet" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox"onchange="checkcbBalanceSheet(this)"><span perfect-class="formCheckInputText">Balance Sheet</span>
                                    </label>
                                </div>

                            </div>
                            <div class="col-sm-8 PerError" style="display:none;">
                                <select class="form-control" name="AccType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="fn_AccountType(this)">
                                    <option value="">Please select</option>
                                    @if (!(Model.FinalAccountType is null))
                                    {
                                        foreach (var FAT in Model.FinalAccountType)
                                        {
                                            <option value="@FAT.ID_Mode">@FAT.ModeName</option>
                                        }
                                    }
                                </select>
                                <div class="text-danger temptableError"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-3 col-form-label">
                                <span perfect-class="formGroupLabel">A/c Group Type</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-9 PerError">
                                <select class="form-control perfectValidate_string" name="AccGroupType" id="AccGroupType1" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="fn_Get_AccCategory(this, this.value)">
                                    <option value="">Please select</option>
                                    @if (!(Model.FinalAccountGroup is null))
                                    {
                                        foreach (var FAT in Model.FinalAccountGroup)
                                        {
                                            <option value="@FAT.ID_Mode">@FAT.ModeName</option>
                                        }
                                    }

                                </select>
                                <div class="text-danger temptableError"></div>
                            </div>
                        </div>
                    </div>
                  <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-3 col-form-label">
                                <span perfect-class="formGroupLabel">A/c Categorization</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8 bnddrop">

                                <select class="form-control" name="AGFinalAccGroupSubType" id="AcCategry" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" value="" onchange="fn_ChngeAcgrp(this, value)">
                                    <option value="">Please select</option>
                                    @if (!(Model.SubGroupType is null))
                                    {
                                        foreach (var sb in Model.SubGroupType)
                                        {
                                            <option value="@sb.ID_Mode" data-modeparent="@sb.ModeParent">@sb.ModeName</option>
                                        }
                                    }

                                </select>
                                @*<div class="text-danger temptableError"></div>*@
                            </div>
                        </div>
                    </div>  
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-3 col-form-label">
                                <span perfect-class="formGroupLabel">Sort Order</span>
                             
                            </label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" placeholder="" name="SortOrder" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value="@Model.SortOrder" />
                            </div>
                        </div>
                    </div>
                </div>
		<div class="card-footer text-right" perfect-class="formFooter">
			<button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_AccountGroupForm_update(this)" ><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
			<button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_AccountGroupForm_add(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
			<button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
		</div>
                </div>
	</form>
</div>
</div>
<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>
<script>


 $(document).ready(function () 
 {
     initFunctions('form');
     //$('#AcCategry').prop('disabled', true);
 });

    function ResetButton() {
        LoadFormAccountGroup();
    }

    function fn_AccountType(ele) {
        debugger
 
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $actionDropdown = $thisForm.find('[name="AccGroupType"]');
        $actionDropdown.empty();
        $actionDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');
        let inputData =
        {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            'FK_AccType': $thisForm.find('[name=AccType]').val()
        };

        $.ajax({
            url: "@Url.Action("FillAccountGroupType", "AccountGroup")",
            type: "POST",
            dataType: "json",
            data: inputData,
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (ajaxOutput) {
                if (ajaxOutput.result.length > 0) {
                    $.each(ajaxOutput.result, function (key, value) {
                        $actionDropdown.append($('<option/>', { value: value.ID_Mode }).text(value.ModeName)).selectpicker('refresh');
                    });
                    if ($actionDropdown.attr('perfect-onloadSelect')) {
                        $actionDropdown.val($actionDropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                    }
                }
                else if (ajaxOutput.result.Data.length > 0) {
                    $.each(ajaxOutput.result.Data, function (key, value) {
                        $actionDropdown.append($('<option/>', { value: value.ID_Mode }).text(value.ModeName)).selectpicker('refresh');
                    });
                    if ($actionDropdown.attr('perfect-onloadSelect')) {
                        $actionDropdown.val($actionDropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                    }
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            }
        });
    }


    function fn_AccountGroupForm_add(ele)
    {

        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        console.log("1", $thisForm.find('[name="AccGroupType"]').val().trim());
        let blnFinalAcType = true;
        $("#errorFinalAcType").text("")
        if (!$("#cbTrading").is(":checked") && !$("#cbProfitLoss").is(":checked") && !$("#cbBalanceSheet").is(":checked")) {
            blnFinalAcType = false;
            $("#errorFinalAcType").text("Please select at least one");
        }

        if ($thisForm.valid() && blnFinalAcType) {

         $(ele).prop('disabled', true);
         
         let inputData = {
             'ID_AccountGroup': 0,
             __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(), //antiForgery
             'AGName': $thisForm.find('[name="AGName"]').val().trim(),
             'AGShortName': $thisForm.find('[name="AGShortName"]').val().trim(),
             'AGFinalAccType': $thisForm.find('[name="AccType"]').val().trim(),
             'AGFinalAccGroupType': $thisForm.find('[name="AccGroupType"]').val().trim(),
             'SortOrder': $thisForm.find('[name="SortOrder"]').val().trim(),
             'TransMode': AccountGroupTransMode,
             'Trading': $("#cbTrading").is(":checked"),
             'ProfitLoss': $("#cbProfitLoss").is(":checked"),
             'BalanceSheet': $("#cbBalanceSheet").is(":checked"),
             'AGFinalAccGroupSubType': $thisForm.find('[name="AGFinalAccGroupSubType"]').val()
         };
       
            $.ajax({
                  url: "@Url.Action("SaveAccountGroup", "AccountGroup")",
                type: "POST",
                data: inputData, //Antiforgery removed stringyfy
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8", //antiforgery
                success: function (ajaxOutput) {

                    if (ajaxOutput.Process.IsProcess) {

                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                        });

                        $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                        $thisForm.find('[perfect-ctype="input"]').val('');
                        $thisForm.find('[perfect-ctype="date"]').val('');

                        // Get the value set in form's perfect-onFormSuccess attribute
                        let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                        if (onSuccess) {
                            window[onSuccess]($thisForm);
                        }
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });
        }
    }




 function fn_AccountGroupForm_update(ele)
 {
     let $thisForm = $(ele).closest('[perfect-class="form"]');
     let blnFinalAcType = true;
     $("#errorFinalAcType").text("")
     if (!$("#cbTrading").is(":checked") && !$("#cbProfitLoss").is(":checked") && !$("#cbBalanceSheet").is(":checked")) {
         blnFinalAcType = false;
         $("#errorFinalAcType").text("Please select at least one");
     }

     if ($thisForm.valid() && blnFinalAcType) {
         let SavedData = $thisForm.data('pData');

         $(ele).prop('disabled', true);

         let inputData = {
             __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(), //antiForgery
             'ID_AccountGroup': SavedData.ID_AccountGroup,
             'AGName': $thisForm.find('[name="AGName"]').val().trim(),
             'AGShortName': $thisForm.find('[name="AGShortName"]').val().trim(),
             'AGFinalAccType': $thisForm.find('[name="AccType"]').val(),
             'AGFinalAccGroupType': $thisForm.find('[name="AccGroupType"]').val().trim(),
             'SortOrder': $thisForm.find('[name="SortOrder"]').val().trim(),
             'TransMode': AccountGroupTransMode,
             'Trading': $("#cbTrading").is(":checked"),
             'ProfitLoss': $("#cbProfitLoss").is(":checked"),
             'BalanceSheet': $("#cbBalanceSheet").is(":checked"),
             'AGFinalAccGroupSubType': $thisForm.find('[name="AGFinalAccGroupSubType"]').val()
         };
        

            $.ajax({
                 url: "@Url.Action("UpdateAccountGroup", "AccountGroup")",
                type: "POST",
                 data: inputData,
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                 success: function (ajaxOutput) {

                     if (ajaxOutput.Process.IsProcess) {

                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                         });

                         // Get the value set in form's perfect-onFormSuccess attribute
                         let onSuccess = $thisForm.attr('perfect-onFormSuccess');

                         if (onSuccess) {
                             window[onSuccess]($thisForm);
                         }
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });


        }

    }
                    


    function fn_ChngeAcgrp(ele, val) {
        debugger
        $thisForm = $(ele).closest('[perfect-class="form"]');
        let AcGrp = parseFloat($thisForm.find('[name="AccGroupType"]').val()) || 0;
        let AcCategory = $thisForm.find('[name="AGFinalAccGroupSubType"]');

        if (AcGrp == 0 || AcGrp == "") { 
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please Select A/c Group Type ' });
            AcCategory.val("").selectpicker('refresh');
        }

           
    }



function fn_Get_AccCategory(ele,values) {
  
    console.log('values', values);
    $thisForm = $(ele).closest('[perfect-class="form"]');
    let AcGrpType = $thisForm.find('[name="AccGroupType"]').val();

       var dropdown = $('<select class="form-control" name="AGFinalAccGroupSubType" id="AcCategry" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select"></select>');

      dropdown.append('<option value="">Please select</option>');

  
        @if (!(Model.SubGroupType is null))
        {
        foreach (var sb in Model.SubGroupType)
        {
            <text>
           if (values == '@sb.ModeParent') {
               dropdown.append('<option value="@sb.ID_Mode" data-modeparent="@sb.ModeParent">@sb.ModeName</option>');
           }
            </text>
        }
        }

        //dropdown2.find(`option[data-modeparent!="${values}"]`).remove();

        var targetDiv = $thisForm.find('.bnddrop'); 

        targetDiv.empty();
        dropdown.appendTo(targetDiv);
    
}

    function fn_ChangeDropValues(values) {
        debugger;
        
        $thisForm = $('[perfect-class="form"]');
       // var dropdown2 = $('<select class="form-control perfectValidate_string" name="AGFinalAccGroupSubType" id="AcCategry" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select"></select>');
        var dropdown2 = $thisForm.find('[name="AGFinalAccGroupSubType"]')
        dropdown2.empty();
        //dropdown2.append('<option value="0">Please select</option>');
        
  
        @if (!(Model.SubGroupType is null))
        {
        foreach (var sb in Model.SubGroupType)
        {
            <text>
        if (values =='@sb.ModeParent') {
            dropdown2.append('<option value="@sb.ID_Mode" data-modeparent="@sb.ModeParent">@sb.ModeName</option>');
        }
            </text>
        }
        }

        // dropdown2.find(`option[data-modeparent!="${values}"]`).remove();
        //var targetDiv = $thisForm.find('.bnddrop'); 

       // targetDiv.empty();
        if ($thisForm.find('[name="AGFinalAccGroupSubType"]').attr('perfect-onloadSelect')) {
           // alert('ib');
            dropdown2.val(dropdown2.attr('perfect-onloadSelect')).selectpicker('refresh');
        }
       // dropdown2.html(targetDiv);

    }
    function checkcbTrading(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.find('[name="cbTrading"]').is(':Checked') == true) {

            $thisForm.find('[name="cbBalanceSheet"]').prop('checked', false);
            $thisForm.find('[name="cbProfitLoss"]').prop('checked', false);
            let $actionDropdown = $thisForm.find('[name="AccGroupType"]');
            $actionDropdown.empty();
            $actionDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');
            let inputData =
            {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),

            };

            $.ajax({
                url: "@Url.Action("FillAccountGroupTypeotherthanbalancesheet", "AccountGroup")",
                type: "POST",
                dataType: "json",
                data: inputData,
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxOutput) {
                    if (ajaxOutput.result.length > 0) {
                        $.each(ajaxOutput.result, function (key, value) {
                            $actionDropdown.append($('<option/>', { value: value.ID_Mode }).text(value.ModeName)).selectpicker('refresh');
                        });
                        if ($actionDropdown.attr('perfect-onloadSelect')) {
                            $actionDropdown.val($actionDropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                        }
                    }
                    else if (ajaxOutput.result.Data.length > 0) {
                        $.each(ajaxOutput.result.Data, function (key, value) {
                            $actionDropdown.append($('<option/>', { value: value.ID_Mode }).text(value.ModeName)).selectpicker('refresh');
                        });
                        if ($actionDropdown.attr('perfect-onloadSelect')) {
                            $actionDropdown.val($actionDropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                        }
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }
            });
        }
    }

    function checkcbBalanceSheet(ele) {
       
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.find('[name="cbBalanceSheet"]').is(':Checked') == true) {

            $thisForm.find('[name="cbTrading"]').prop('checked', false);
            $thisForm.find('[name="cbProfitLoss"]').prop('checked', false);
        let $actionDropdown = $thisForm.find('[name="AccGroupType"]');
        $actionDropdown.empty();
        $actionDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');
        let inputData =
        {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            
        };

        $.ajax({
            url: "@Url.Action("FillAccountGroupTypebalancesheet", "AccountGroup")",
            type: "POST",
            dataType: "json",
            data: inputData,
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (ajaxOutput) {
                if (ajaxOutput.result.length > 0) {
                    $.each(ajaxOutput.result, function (key, value) {
                        $actionDropdown.append($('<option/>', { value: value.ID_Mode }).text(value.ModeName)).selectpicker('refresh');
                    });
                    if ($actionDropdown.attr('perfect-onloadSelect')) {
                        $actionDropdown.val($actionDropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                    }
                }
                else if (ajaxOutput.result.Data.length > 0) {
                    $.each(ajaxOutput.result.Data, function (key, value) {
                        $actionDropdown.append($('<option/>', { value: value.ID_Mode }).text(value.ModeName)).selectpicker('refresh');
                    });
                    if ($actionDropdown.attr('perfect-onloadSelect')) {
                        $actionDropdown.val($actionDropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                    }
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            }
        });

        }
       
       //  let $thisForm = $(ele).closest('[perfect-class="form"]');
      
    }
    function checkcbProfitLoss(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.find('[name="cbProfitLoss"]').is(':Checked') == true) {

            $thisForm.find('[name="cbBalanceSheet"]').prop('checked', false);
            $thisForm.find('[name="cbTrading"]').prop('checked', false);

            let $actionDropdown = $thisForm.find('[name="AccGroupType"]');
            $actionDropdown.empty();
            $actionDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');
            let inputData =
            {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),

            };

            $.ajax({
                url: "@Url.Action("FillAccountGroupTypeotherthanbalancesheet", "AccountGroup")",
                type: "POST",
                dataType: "json",
                data: inputData,
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxOutput) {
                    if (ajaxOutput.result.length > 0) {
                        $.each(ajaxOutput.result, function (key, value) {
                            $actionDropdown.append($('<option/>', { value: value.ID_Mode }).text(value.ModeName)).selectpicker('refresh');
                        });
                        if ($actionDropdown.attr('perfect-onloadSelect')) {
                            $actionDropdown.val($actionDropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                        }
                    }
                    else if (ajaxOutput.result.Data.length > 0) {
                        $.each(ajaxOutput.result.Data, function (key, value) {
                            $actionDropdown.append($('<option/>', { value: value.ID_Mode }).text(value.ModeName)).selectpicker('refresh');
                        });
                        if ($actionDropdown.attr('perfect-onloadSelect')) {
                            $actionDropdown.val($actionDropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                        }
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }
            });

        }
    }

    function generateShortName(ele) {
        let $form = $(ele).closest('[perfect-class="form"]');
        var fullName = $form.find('[name="AGName"]').val();
        var shortName = generateShortNameFromFullName(fullName);
        $form.find('[name="AGShortName"]').val(shortName);
    }


</script>