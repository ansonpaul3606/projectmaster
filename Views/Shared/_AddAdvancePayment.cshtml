@model PerfectWebERP.Models.AdvancePaymentModel.AdvancePaymentView
<div class="card">

    <div class="card-header">
        <h4 class="card-title col-12">@ViewBag.PageTitle</h4>

        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>

    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">

            <div class="">
                @Html.AntiForgeryToken()

                <div class="row">


                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Advance Type</span>

                                <span class="text-danger">*</span>
                                <input type="hidden" name="ID_SalaryAdvancePayment" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />

                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_numeric" name="FK_AllowanceType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">

                                    <option value="">Please Select </option>

                                    @if (!(Model.AllowanceTypeList is null))
                                    {
                                        foreach (var AllowanceTypeList in Model.AllowanceTypeList)
                                        {
                                            <option value="@AllowanceTypeList.FK_AllowanceType">@AllowanceTypeList.Allowancetype</option>
                                        }

                                    }

                                </select>

                            </div>
                        </div>


                    </div>

                    @*<div class="col-sm-6">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    &nbsp;&nbsp;&nbsp;

                                    <span perfect-class="formGroupLabel">Trans Date</span>

                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-sm-8">
                                    <input type="date" class=" form-control perfectValidate_date" id="TransDate" name="TransDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" onchange="datechecking(this)" />
                                    <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>

                                </div>

                            </div>
                        </div>*@
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Trans Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date" id="TransDate" name="TransDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" onchange="datechecking(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                            </div>
                        </div>
                    </div>

                    @*<div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                &nbsp;&nbsp;&nbsp;

                                <span perfect-class="formGroupLabel">Effect Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date" name="EffectDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" onchange="datechecking(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>

                                <div id="ToDate-error" class="Custominvalid animated fadeInUp ToDateerror" style="display: none;">To Date sholud be greater than  Or Equal to From Date</div>

                            </div>
                        </div>
                    </div>*@
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                               
                                <span perfect-class="formGroupLabel">Effect Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date" id="EffectDate" name="EffectDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" onchange="datechecking(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                               
                                <span perfect-class="formGroupLabel">Branch</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_numeric" name="FK_Branch" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" onchange="departmentclearto(this)">
                                    <option value="">Please Select</option>
                                    @if (!(Model.BranchListTo is null))
                                    {
                                        foreach (var branchListto in Model.BranchListTo)
                                        {
                                            <option value="@branchListto.FK_Branch">@branchListto.BranchNameTo</option>
                                        }

                                    }
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                               
                                <span perfect-class="formGroupLabel">Department</span>
                                <span class="text-danger">*</span>

                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_numeric" name="FK_Department" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" onchange="employeepopupclear(this)">

                                    <option value="">Please Select </option>

                                    @if (!(Model.DepartmentListTo is null))
                                    {
                                        foreach (var departmentListto in Model.DepartmentListTo)
                                        {
                                            <option value="@departmentListto.FK_Department">@departmentListto.DepartmentNameTo</option>
                                        }

                                    }

                                </select>

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                               
                                <span perfect-class="formGroupLabel">Employee</span>
                                <span class="text-danger">*</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control" name="EmployeeName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />

                                    <input type="hidden" name="FK_EMployee" class="form-control perfectValidate_numeric" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">

                                        <button id="addemployeestockto-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,69,'Employee Details',[],['FK_Branch','BranchTypeID','FK_Departement','BranchType'])" Criterea1="FK_Department" Criterea2="FK_Branch" BindName="EmployeeName" BindVal="FK_EMployee"></button>

                                    </div>
                                </div>

                            </div>

                        </div>

                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                             
                                <span perfect-class="formGroupLabel">Advance Amount</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_string" name="SalAdvAmount" id="SalAdvAmount" perfect-class="formGroupControl" oninput="decimalpnt(this,'SalAdvAmount',4)" perfect-ctype="text" perfect-css="text" onchange="checkLimit(this)" maxlength="12" min="1" />

                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                               
                                <span perfect-class="formGroupLabel"> Monthly Recovery</span>

                                <span class="text-danger">*</span>

                            </label>

                            <div class="col-sm-8">

                                <input type="text" class="form-control perfectValidate_string" name="SalMonthlyRecAmount" id="SalMonthlyRecAmount" perfect-class="formGroupControl" oninput="decimalpnt(this,'SalMonthlyRecAmount',4)" perfect-ctype="text" perfect-css="text" onchange="checkLimit(this)" maxlength="12" min="1" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                            </div>

                        </div>
                    </div>




                </div>

            </div>

            <div class="card-footer text-right" perfect-class="formFooter">

                @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                {
                    <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_UpdateAdvancePayment(this,'update')"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                }
                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_UpdateAdvancePayment(this,'new')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                <button type="button" class="btn btn-light" perfect-css="button" onclick="fn_advancepayment(this)" name="reset">Clear</button>
            </div>
        </form>
    </div>


</div>

<script>

    (function () {
        //jQuery('form').validate();//<-----  Validate/initialize our form on page load
        jQuery('select').selectpicker();

    })();

    function fn_advancepayment(ele) {
        AdvancePaymentInitialLoad();
    }
    function datechecking(ele) {

        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let transdate = $thisForm.find('[name=TransDate]').val();
        let effectdate = $thisForm.find('[name=EffectDate]').val();


        transdate = new Date(transdate);
        transdate.setHours(0, 0, 0, 0)

        effectdate = new Date(effectdate);
        effectdate.setHours(0, 0, 0, 0)


        let today = new Date();
        today.setHours(0, 0, 0, 0);

        if (transdate < today) {

            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Trans date should be greater than or equal to Todays date' });

        }

        else if (effectdate < fromdate) {


            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Effect Date should be greater than or equal to Trans Date' });

        }

        else {

            $thisForm.find('[name="EffectDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
            $thisForm.find('[name="TransDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
            return true;
        }




    }

    function decimalpnt(ele, id, range) {

        let input = $('#' + id);
        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
        input.on('keydown', function () {
            if (ele.value.includes('.')) {

            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.length == 9) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }
    function checkLimit(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let upperlimit = $thisForm.find('[name="SalAdvAmount"]').val();
        let lowerlimit = $thisForm.find('[name="SalMonthlyRecAmount"]').val();

        if (parseFloat(upperlimit) < parseFloat(lowerlimit)) {

            $thisForm.find('[name="SalMonthlyRecAmount"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Monthly Recovery should be less than or equal to Advance Amount');
        }
        else {
            $thisForm.find('[name="SalMonthlyRecAmount"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('');
        }


    }
    function departmentclearto(ele) {

        let $container = $(ele).closest('[perfect-class="form"]');
        $container.find('[name=FK_Department]').val('');
        $container.find('[name=FK_Department]').val('').selectpicker('refresh');
        $container.find('[name=FK_EMployee]').val('');
        $container.find('[name=EmployeeName]').val('');
    }

    function employeepopupclear(ele) {
        let $container = $(ele).closest('[perfect-class="form"]');
        $container.find('[name=FK_EMployee]').val('')
        $container.find('[name=EmployeeName]').val('');

    }
    function fn_UpdateAdvancePayment(element, actionType) {
        debugger
        let $thisForm = $(element).closest('[perfect-class="form"]');

        let transdate = $thisForm.find('[name=TransDate]').val();
        let effectdate = $thisForm.find('[name=EffectDate]').val();
        let upperlimit = $thisForm.find('[name="SalAdvAmount"]').val();
        let lowerlimit = $thisForm.find('[name="SalMonthlyRecAmount"]').val();

        //if (upperlimit == 0 || lowerlimit == 0) {

        //    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Amount should be greater than 0' });
        //    return;
        //}

        transdate = new Date(transdate);
        transdate.setHours(0, 0, 0, 0)

        effectdate = new Date(effectdate);
        effectdate.setHours(0, 0, 0, 0)


        let today = new Date();
        today.setHours(0, 0, 0, 0);

        if (effectdate < transdate) {


            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Effect Date should be greater than or equal to Trans Date' });

        }
        else if (parseFloat(upperlimit) < parseFloat(lowerlimit)) {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Monthly Recovery should be less than or equal to Advance Amount' });

        }

        else {

            if ($thisForm.valid()) {


                $(element).prop('disabled', true);
                let _ID_Advancepayment = 0;
                let _ActionUrl = "";

                if (actionType === "new") {
                    _ID_Advancepayment = 0;
                    _ActionUrl = "@Url.Action("AddNewAdvancePayment", "AdvancePayment")";
                }
                else if (actionType === "update") {
                    _ID_Advancepayment = $thisForm.find('[name="ID_SalaryAdvancePayment"]').val();
                    _ActionUrl = "@Url.Action("UpdateAdvancePayment", "AdvancePayment")";
                }
                
                let inputData =
                {

                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    'ID_SalaryAdvancePayment': _ID_Advancepayment,
                    'FK_AllowanceType': $thisForm.find('[name="FK_AllowanceType"]').val(),
                    'TransDate': $thisForm.find('[name="TransDate"]').val(),
                    'EffectDate': $thisForm.find('[name="EffectDate"]').val(),
                    'FK_EMployee': $thisForm.find('[name="FK_EMployee"]').val(),
                    'SalAdvAmount': $thisForm.find('[name="SalAdvAmount"]').val(),
                    'SalMonthlyRecAmount': $thisForm.find('[name="SalMonthlyRecAmount"]').val(),
                    'FK_Branch': $thisForm.find('[name="FK_Branch"]').val(),
                    'FK_Department': $thisForm.find('[name="FK_Department"]').val(),
                    
                };
                console.log("inputData", inputData)


                {
                    $.ajax({
                        url: _ActionUrl,
                        type: "POST",
                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (ajaxOutput) {
                            if (ajaxOutput.Process.IsProcess) {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                    $(element).prop('disabled', false);

                                });
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                    $(element).prop('disabled', false);

                                });
                            }

                            $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                            $thisForm.find('[perfect-ctype="input"]').val('');
                            $thisForm.find('[perfect-ctype="date"]').val('');
                            let onSuccess = $thisForm.attr('perfect-onFormSuccess')
                            if (onSuccess) {
                                window[onSuccess]();

                            }
                        },
                        complete: function () {
                            $(element).prop('disabled', false);
                        }
                    });
                }

            }
        }


    }


</script>