@*----------------------------------------------------------------------
Created By	: Amritha A K
Created On	: 29/01/2022
Purpose		: Branch
-------------------------------------------------------------------------
Modification
On			By					OMID/Remarks
-------------------------------------------------------------------------
-------------------------------------------------------------------------*@
@model PerfectWebERP.Models.BranchModel.BranchViewList

<style>
</style>

<div class="card ">

    <div class="card-header">

        <h4 class="card-title col-12">@ViewBag.PageTitle</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Parent Branch</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string_nm" name="BranchParentID" perfect-selectButton="BranchName" perfect-selectButtonAction="BranchAdding" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">

                                    <option value="">Please Select </option>

                                    @if (!(Model.BranchList is null))
                                    {
                                        foreach (var branchList in Model.BranchList)
                                        {
                                            <option value="@branchList.BranchParentID">@branchList.BranchParent</option>
                                        }

                                    }

                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Terminal Type</span>
                                <span class="text-danger">*</span>
                            </label>


                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" name="BranchTypeIDs" perfect-selectButton="BranchTypess" perfect-selectButtonAction="BranchTypeAdding" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">

                                    <option value="">Please Select </option>

                                    @if (!(Model.BranchTypelists is null))
                                    {
                                        foreach (var branchtypeList in Model.BranchTypelists)
                                        {
                                            <option value="@branchtypeList.BranchTypeIDs" BranchMode="@branchtypeList.BranchMode">@branchtypeList.BranchTypess</option>
                                        }

                                    }

                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Code</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_numeric " placeholder="" name="Code" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="3"/>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Name/Institution</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_specialChar" placeholder="" name="Name" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="generateShortName(this)" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Short Name</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_shortName " placeholder="" name="ShortName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">In Charge</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control " name="Employee" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="EmployeeID" class="perfectValidate_numeric" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        <button id="addEmployee-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,69,'Employee Details',[],['Branchs','BranchTypeID','FK_Departement','Department','BranchType','SLNo','FK_Branch'])" Criterea1="" Criterea2="0" Criterea3="0" BindName="Employee" BindVal="EmployeeID"></button>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Contact Person</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_string_nm " placeholder="" name="ContactPerson" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Address </span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control" placeholder="" name="Address1" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Place</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_string_nm" placeholder="" name="Address2" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">GSTIN No.</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_gstinno_nm" maxlength="15" name="GSTNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Phone</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text fa fa-phone bg-primary text-white"></span>
                                    </div>
                                    <input type="text" class="form-control perfectValidate_mobile_nm" placeholder="" name="Phone" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Mobile</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text fa fa-phone bg-primary text-white"></span>
                                    </div>
                                    <input type="text" class="form-control perfectValidate_mobile" placeholder="" name="Mobile" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Email</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text fa fa-envelope bg-primary text-white"></span>
                                    </div>
                                    <input type="text" class="form-control " placeholder="" name="Email" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Cash Position Limit</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="number" class="form-control perfectValidate_quantity_nm" placeholder="" name="CashPositionLimit" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="checkLimit(this)" />

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel"> Cash Re-Order Level</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="number" class="form-control perfectValidate_quantity_nm" placeholder="" name="CashReOrderLevel" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="checkLimit(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Latitude</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_latitude_nm" placeholder="" name="Latitude" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Longitude</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_latitude_nm" placeholder="" name="Longitude" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Start Time</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="time" class="form-control perfectValidate_time_nm" placeholder="" name="StartTime" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="checkTime(this)" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">End Time</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="time" class="form-control perfectValidate_time_nm" placeholder="" name="EndTime" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="checkTime(this)" />
                                <div class="invalid-feedback animated fadeInUp timelimit-check" style="display: block;"></div>
                            </div>
                        </div>
                    </div>


                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">PinCode</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="number" class="form-control " maxlength="10" placeholder="Type here and search" name="PinCode" perfect-class="formGroupControl perfectValidate_numeric_nm" perfect-ctype="input" perfect-css="input" min="0" />
                                    @*<input type="hidden" name="PinCode" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input"  />*@
                                    <div class="input-group-append">
                                        <button id="addpincode-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="searchbtn(this)"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Country</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control " name="Country" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="CountryID" class="perfectValidate_numeric" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        @*<button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getCountry(this)"></button>*@
                                        <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,9,'Country List',['','','States','StatesID','DistrictID','District','AreaID','Area','PlaceID','Place','Post','PostID'])" Criterea1="0" Criterea2="0" BindName="Country" BindVal="CountryID"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">State</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control " name="States" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="StatesID" class="perfectValidate_numeric" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        @*<button id="addstates-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getStates(this)"></button>*@
                                        <button id="addstates-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,10,'State List',['CountryID','Country','DistrictID','District','AreaID','Area','PlaceID','Place','Post','PostID'])" Criterea1="CountryID" Criterea2="0" BindName="States" BindVal="StatesID"></button>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">District</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control " name="District" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="DistrictID" class="perfectValidate_numeric" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        @*<button id="adddistrict-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getDistrict(this)"></button>*@
                                        <button id="adddistrict-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,11,'District List',['StatesID','State','AreaID','Area','PlaceID','Place','Post','PostID'])" Criterea1="StatesID" Criterea2="0" BindName="District" BindVal="DistrictID"></button>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Area</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control " name="Area" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="AreaID" class="perfectValidate_numeric_nm" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        @*<button id="addarea-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getArea(this)"></button>*@
                                        <button id="addarea-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,14,'Area List',['DistrictID','District','PlaceID','Place','Post','PostID'])" Criterea1="DistrictID" Criterea2="0" BindName="Area" BindVal="AreaID"></button>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Post</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control " name="Post" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="PostID" class="perfectValidate_numeric_nm" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">


                                        @*<button id="addpincode-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getPost(this)"></button>*@
                                        <button id="addpincode-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,13,'Post List',['AreaID','Area','PlaceID','Place'])" Criterea1="AreaID" Criterea2="" BindName="Post" BindVal="PostID"></button>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6" style="display:none">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Place</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input list="place" type="text" class="form-control " name="Place" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="PlaceID" class="perfectValidate_numeric_nm" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        @*<button id="addplace-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getPlace(this)"></button>*@
                                        <button id="addplace-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,12,'Place List',['PostID','Post'])" Criterea1="PostID" Criterea2="0" BindName="Place" BindVal="PlaceID"></button>

                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">

                            <div class="col-sm-8">

                            </div>
                        </div>
                    </div>


                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Account Head</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control perfectValidate_string" name="AHeadName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="AccountHead" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <input type="hidden" name="AccountCode" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        @*<button id="" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="searchAccountHeadbtn(this)"></button>*@
                                        <button id="btn btn-primary fa fa-search" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,16,'Account Head List',['','','AccountHeadSub','ASHeadName'])" Criterea1="0" Criterea2="0" BindName="AHeadName" BindVal="AccountHead"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Account Sub Head</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control perfectValidate_string" name="ASHeadName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="AccountHeadSub" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <input type="hidden" name="AccountSHCode" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">

                                        <button id="btn btn-primary fa fa-search" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,17,'Account Sub Head List',['AHeadName','AHeadName'])" Criterea1="AccountHead" Criterea2="0" BindName="ASHeadName" BindVal="AccountHeadSub"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Sort Order</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="number" class="form-control perfectValidate_numeric_nm " placeholder="" name="SortOrder" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value="@Model.SortOrder" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">

                            <div class="col-sm-8">
                                <button type="button" class="btn btn-rounded btn-success" onclick="ImageLoad(this)">
                                    <span class="btn-icon-left text-success">
                                        <i class="fa fa-upload color-success"></i>
                                    </span>Image Upload
                                </button>
                            </div>
                        </div>

                    </div>
                    <div class="col-sm-12" id="Image-form">

                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Introduce</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string_nm" name="FK_IntroduceBranch" perfect-selectButton="BranchName" perfect-selectButtonAction="BranchAdding" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">
                                     <option value="">Please Select </option>
                                    @if (!(Model.BranchList is null))
                                    {
                                        foreach (var branchList in Model.BranchList)
                                        {
                                            <option value="@branchList.BranchParentID">@branchList.BranchParent</option>
                                        }
                                    }

                                </select>
                            </div>
                        </div>
                    </div>
                    @*  <div class="row">*@
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="daccordion__header">

                                <span class="accordion__header--text">BANK DETAILS</span>

                            </div>
                            <div class="card-body">
                                <div class="row">


                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-3 col-form-label">
                                                <span perfect-class="formGroupLabel">Bank</span>

                                            </label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control perfectValidate_specialCharName_nm" placeholder="" perfect-tempTable-bstatus="BankName" id="BankName" name="BankName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="100" />
                                                <div class="text-danger temptableError"></div>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-3 col-form-label">
                                                <span perfect-class="formGroupLabel">Branch</span>

                                            </label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control perfectValidate_specialCharName_nm" placeholder="" perfect-tempTable-bstatus="BranchName" id="BranchName" name="BranchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="100" />
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Account No.</span>

                                            </label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control perfectValidate_string_nm " placeholder="" perfect-tempTable-bstatus="BankAccount" id="BankAccount" name="BankAccount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="18" />
                                                <div class="text-danger temptableError"></div>
                                                <div class="text-danger temptableError1"></div>
                                            </div>
                                        </div>
                                    </div>



                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-3 col-form-label">
                                                <span perfect-class="formGroupLabel">IFSC Code</span>

                                            </label>
                                            <div class="col-sm-7">
                                                <input type="text" class="form-control perfectValidate_string_nm " maxlength="11" placeholder="" perfect-tempTable-bstatus="IFSCCode" id="IFSCCode" name="IFSCCode" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                <div class="text-danger temptableError"></div>
                                            </div>

                                        </div>

                                    </div>
                                </div>
                                <div class="row">

                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    <button type="button" class="btn btn-primary1" perfect-css="button" onclick="BankDetailsTable_create(this,'bstatus',['BankAccount'])" name="reset" align="center"><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                                    &nbsp;&nbsp;&nbsp<button class="btn btn-light1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="clearbankdetails(this,'bstatus')"><i class="fa fa-refresh" aria-hidden="true"></i></button>



                                </div>


                            </div>
                            <div class="row">
                                <div class="col-sm-12" style="padding-right:25px;padding-left:25px;">
                                    <div class="form-group row" perfect-class="formGroup">
                                        <div class="table-responsive" perfect-tempTable="bstatus" id="bstatusHead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>



                    @*</div>*@


                </div>
                <div class="card-footer text-right" perfect-class="formFooter">
                    @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                    {
                        <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_BranchForm_update(this)"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                    }
                    @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                    {
                        <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_BranchForm_add(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                    }
                        <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                    </div>
            </div>
                </form>
    </div>
</div>
<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>
<script>

    //on load functions
    //on load functions

    (function () {
        //jQuery('form').validate();//<-----  Validate/initialize our form on page load
        jQuery('select').selectpicker();
    })();


    function checkLimit(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
       
        let upperlimit = $thisForm.find('[name="CashPositionLimit"]').val();
        let lowerlimit = $thisForm.find('[name="CashReOrderLevel"]').val();
   
        if (parseFloat(upperlimit) < parseFloat(lowerlimit)) {         
            $thisForm.find('[name="CashReOrderLevel"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Cash Re-Order Level should be less than Cash Position Limit')
        }
        else {         
            $thisForm.find('[name="CashReOrderLevel"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
        }


    }

    function checkTime(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');   
        var startTime = moment($thisForm.find('[name="StartTime"]').val(), "hh:mm:ss a");
        var endTime = moment($thisForm.find('[name="EndTime"]').val(), "hh:mm:ss a");
        if (endTime.diff(startTime, 'minutes') > 0) {
            $thisForm.find('[name="EndTime"]').closest('[perfect-class="formGroup"]').find('.timelimit-check').text('')
        }
        else {
            $thisForm.find('[name="EndTime"]').closest('[perfect-class="formGroup"]').find('.timelimit-check').text('Time must greater than starttime ')
        }

    }


    function ResetButton(ele) {


 
        $('.dataTable tr').removeClass("SelectForDelete");
        loadbranchAddForm();
    }

     function searchbtn(ele) {

        console.log('Search function run')
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let searchPin = { Pincode: $thisForm.find('[name="PinCode"]').val() };
       $.ajax({
            url: '@Url.Action("GetPinCodedetails", "Organization")',
            type: "POST",
            data: searchPin ,//<---- Input json : data passed to controller
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded;charset=utf-8',
            success: function (ajaxOutput) {
                console.log('> Search button click success', ajaxOutput);

                if (ajaxOutput.Process.IsProcess) {

                    //$.each(successData.Process.Message, function (key, value) {
                    //    toastr.success(value, "Success");
                    //});
                    //var sss = createSelectList({ data: JSON.parse(data), hideColumn: ['id'] });
                    //var sss = createSelectList({ data: successData.Data, hideColumn: ['DistrictID'], settings: { size: 'modal-xl'} });
                    var sss = createSelectList({ data: ajaxOutput.Data, hideColumn: ["StatesID", "DistrictID", "CountryID", "PlaceID", "PostID", "AreaID"], settings: { size:"modal-lg"} });
                    sss.then(function (ret) {
                        if (ret) {
                           $thisForm.find('[name="CountryID"]').val(ret['CountryID']);
                            $thisForm.find('[name="Country"]').val(ret['Country']);
                            $thisForm.find('[name="StatesID"]').val(ret['StatesID']);
                            $thisForm.find('[name="States"]').val(ret['States']);
                            $thisForm.find('[name="DistrictID"]').val(ret['DistrictID']);
                            $thisForm.find('[name="District"]').val(ret['District']);
                            $thisForm.find('[name="AreaID"]').val(ret['AreaID']);
                            $thisForm.find('[name="Area"]').val(ret['Area']);
                            $thisForm.find('[name="PlaceID"]').val(ret['PlaceID']);
                            $thisForm.find('[name="Place"]').val(ret['Place']);
                            $thisForm.find('[name="PostID"]').val(ret['PostID']);
                            $thisForm.find('[name="Post"]').val(ret['Post']);
                            $thisForm.find('[name="PinCode"]').val(ret['PinCode']);
                        }
                        else {
                            console.log(ret);
                        }
                    });

                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        //toastr.warning(value, "Error");
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }




            },
            complete: function () {

                //a.find('.dataTables_wrapper').css('width', '100%');
            }
        });

    }
     function getCountry(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

               //console.log("Input data",inputData)

                $.ajax({
                 url: '@Url.Action("GetCountryList", "Organization")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                    type: "GET",


                dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var countryModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['CountryID'], headingText:'Country List' });
                            countryModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=CountryID]').val(ret.CountryID);
                                    $thisForm.find('[name=Country]').val(ret.Country);
                                    //clear other field
                                    $thisForm.find('[name=StatesID]').val('');
                                    $thisForm.find('[name=States]').val('');
                                    $thisForm.find('[name=DistrictID]').val('');
                                    $thisForm.find('[name=District]').val('');
                                    $thisForm.find('[name=AreaID]').val('');
                                    $thisForm.find('[name=Area]').val('');
                                    $thisForm.find('[name=PlaceID]').val('');
                                    $thisForm.find('[name=Place]').val('');
                                    $thisForm.find('[name=PostID]').val('');
                                    $thisForm.find('[name=Post]').val('');
                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }





                },


            });


    }
    function getStates(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let countryid = {CountryID : $thisForm.find('[name=CountryID]').val() }
               //console.log("Input data",inputData)

                $.ajax({
                 url: '@Url.Action("GetStateList", "Organization")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                  data: countryid ,
                  dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var stateModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['StatesID'], headingText:'State List' });
                            stateModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=StatesID]').val(ret.StatesID);
                                    $thisForm.find('[name=States]').val(ret.States);

                                    $thisForm.find('[name=DistrictID]').val('');
                                    $thisForm.find('[name=District]').val('');
                                    $thisForm.find('[name=AreaID]').val('');
                                    $thisForm.find('[name=Area]').val('');
                                    $thisForm.find('[name=PlaceID]').val('');
                                    $thisForm.find('[name=Place]').val('');
                                    $thisForm.find('[name=PostID]').val('');
                                    $thisForm.find('[name=Post]').val('');


                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }





                },


            });


    }

      function getDistrict(ele) {
          let $thisForm = $(ele).closest('[perfect-class="form"]');
          let statesid = { statesid: parseInt($thisForm.find('[name=StatesID]').val()) }
          console.log("Input data", statesid)

                $.ajax({
                 url: '@Url.Action("GetDistrictList", "Organization")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                    data: statesid,
                  dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var districtModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['DistrictID'], headingText:'District List' });
                            districtModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=DistrictID]').val(ret.DistrictID);
                                    $thisForm.find('[name=District]').val(ret.District);

                                    $thisForm.find('[name=AreaID]').val('');
                                    $thisForm.find('[name=Area]').val('');
                                    $thisForm.find('[name=PlaceID]').val('');
                                    $thisForm.find('[name=Place]').val('');
                                    $thisForm.find('[name=PostID]').val('');
                                    $thisForm.find('[name=Post]').val('');
                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }





                },


            });


    }

      function getArea(ele) {
          let $thisForm = $(ele).closest('[perfect-class="form"]');
          let districtid = { districtid: parseInt($thisForm.find('[name=DistrictID]').val()) }
          console.log("Input data", districtid)

                $.ajax({
                 url: '@Url.Action("GetAreaList", "Organization")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                    data: districtid,
                  dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var districtModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['AreaID'], headingText:'Area List' });
                            districtModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=AreaID]').val(ret.AreaID);
                                    $thisForm.find('[name=Area]').val(ret.Area);

                                    $thisForm.find('[name=PostID]').val('');
                                    $thisForm.find('[name=Post]').val('');


                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }





                },


            });


    }
    function getPlace(ele) {
          let $thisForm = $(ele).closest('[perfect-class="form"]');
          let districtid = { districtid: parseInt($thisForm.find('[name=DistrictID]').val()) }
          console.log("Input data", districtid)

                $.ajax({
                 url: '@Url.Action("GetPlaceList", "Organization")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                    data: districtid,
                  dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var districtModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['PlaceID'], headingText:'Place List' });
                            districtModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=PlaceID]').val(ret.PlaceID);
                                    $thisForm.find('[name=Place]').val(ret.Place);

                                    $thisForm.find('[name=PostID]').val('');
                                    $thisForm.find('[name=Post]').val('');
                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }





                },


            });


    }


    


    function getPost(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let inputData = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            DistrictID: parseInt($thisForm.find('[name=DistrictID]').val()),
            PlaceID: parseInt($thisForm.find('[name=PlaceID]').val())

        };

                $.ajax({
                 url: '@Url.Action("GetPostList", "Organization")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                    type: "POST",
                    data: inputData,
                  dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var postModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['PostID'], headingText:'Post List' });
                              postModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=PostID]').val(ret.PostID);
                                    $thisForm.find('[name=Post]').val(ret.Post);
                                    $thisForm.find('[name=PinCode]').val(ret.PinCode);
                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }





                },


            });


    }

    function getEmployee(ele) {
         let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[name=LgCollectedBy]').val('');
        $thisForm.find('[name=FK_LgCollectedBy]').val('');
         let ID_LeadFrom = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            ID_LeadFrom: 6
         };
        $.ajax({
            @*url: '@Url.Action("GetEmployee", "LeadGeneration")',*@
             url: '@Url.Action("GetLeadFromList", "LeadGeneration")',
            type: "POST",
            data: ID_LeadFrom,
            dataType: "json",
            contentType: "application/x-www-form-urlencoded;charset=utf-8",
            success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                // console.log("Data", data);

                let table = JSON.parse(ajaxOutput.Data);
                if (ajaxOutput.Process.IsProcess) {
                    if (table.dtable.length > 0) {
                        var stateModel = createSelectList({ data: table.dtable, hideColumn: ['ID_FIELD'], headingText: 'Employee Details' });
                        stateModel.then(function (ret) {
                            if (ret) {                               
                                $thisForm.find('[name=Employee]').val(ret.Name);
                                $thisForm.find('[name=EmployeeID]').val(ret.ID_FIELD);
                                
                            }
                            else {
                                console.log(ret);
                            }
                        });
                    }
                    else {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'No Records Found' });
                    }
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            },


        });

       
    }

     @*function getEmployee(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

               //console.log("Input data",inputData)

                $.ajax({
                 url: '@Url.Action("GetEmployeeList", "Branch")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                    type: "GET",


                dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var employeeModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['EmployeeID'] });
                            employeeModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=EmployeeID]').val(ret.EmployeeID);
                                    $thisForm.find('[name=Employee]').val(ret.Employee);
                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }





                },


            });


    }*@


      

     function searchAccountHeadbtn(ele) {

        console.log('Search function run')

        let $this = $(ele).closest('[perfect-class="form"]');
        $.ajax({
            url: '@Url.Action("GetAccountHeadDetails", "Maintenance")',
            type: "Get",

            dataType: "json",
            contentType: "application/json",
            success: function (successData) {
                console.log('> Search button click success', successData);

                if (successData.Process.IsProcess) {


                    var account = createSelectList({ data: successData.Data, hideColumn: ['AccountHead'] /*settings: { size: 'modal-xl' } */, headingText:'Account Head Details' });
                    account.then(function (selectedData) {
                        if (selectedData) {
                            console.log('>_ Search button > list click', selectedData);
                            $this.find('[name=AccountHead]').val(selectedData['AccountHead']);
                            $this.find('[name=AccountCode]').focus().val(selectedData['AccountCode'])
                            $this.find('[name="AHeadName"').val(selectedData['AHeadName']);
                            $this.find('[name="ASHeadName').val('');
                        }
                        else {
                            console.log(selectedData);
                        }
                    });

                }
                else {
                    $.each(successData.Process.Message, function (key, value) {
                        //toastr.warning(value, "Error");
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }




            },
            complete: function () {

                //a.find('.dataTables_wrapper').css('width', '100%');
            }
        });

        }

        function searchAccountSubHeadbtn(ele) {

        console.log('Search function run')

            let $this = $(ele).closest('[perfect-class="form"]');
            let search = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                AccountCode: $this.find('[name="AccountCode"]').val()
            };
        $.ajax({
            url: '@Url.Action("GetAccountSubHeadDetails", "Maintenance")',
            type: "POST",
            data: search,//<---- Input json : data passed to controller
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded;charset=utf-8',
            success: function (successData) {
                console.log('> Search button click success', successData);

                if (successData.Process.IsProcess) {


                    var account = createSelectList({ data: successData.Data, hideColumn: ['StateID'], headingText:'Account Sub Head Details' });
                    account.then(function (selectedData) {
                        if (selectedData) {
                            console.log('>_ Search button > list click', selectedData);
                            $this.find('[name=AccountHeadSub]').val(selectedData['AccountHeadSub']);
                            $this.find('[name=AccountSHCode]').val(selectedData['AccountSHCode'])
                            $this.find('[name="ASHeadName').val(selectedData['ASHeadName']);

                        }
                        else {
                            console.log(selectedData);
                        }
                    });

                }
                else {
                    $.each(successData.Process.Message, function (key, value) {
                        //toastr.warning(value, "Error");
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }




            },
            complete: function () {

                //a.find('.dataTables_wrapper').css('width', '100%');
            }
        });

        }


    // Function to Add Branch
    var Images = [];
    function fn_BranchForm_add(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        //<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability
        let branchlist = [];
        $thisForm.find('[perfect-tempTable="bstatus"]').find('tbody').find('tr').each(function () {
            branchlist.push($(this).data('pData'));
        })
        if ($thisForm.valid() && ($thisForm.find('[name="CashPositionLimit"]').val() != null || $thisForm.find('[name="CashReOrderLevel"]').val() != null)) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

            let upperlimit = $thisForm.find('[name="CashPositionLimit"]').val();
            let lowerlimit = $thisForm.find('[name="CashReOrderLevel"]').val();
            if (parseFloat(upperlimit) < parseFloat(lowerlimit)) {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Cash Re-Order Level should be less than Cash Position Limit' });
            }
            else {
                $(ele).prop('disabled', true);
                // $(ele).prop('disabled', true); // avoiding form submit the double click

                Images = [];
                $('#imagediv .imagedivd').each(function (index, ele) {
                    ;
                    var id = $(ele).attr("id").split("div")[1];
                    var imgbyte1 = $("#img" + id).attr("src");
                    var mode = { SVImgMode: id, SVImgValue: imgbyte1 };
                    Images.push(mode);
                })

                var inputData = {//<---- Input Json : this is the variable we pass to controller
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    BranchID: 0,
                    Code: $thisForm.find('[name=Code]').val().trim(),
                    Name: $thisForm.find('[name=Name]').val().trim(),
                    ShortName: $thisForm.find('[name=ShortName]').val().trim(),
                    Address1: $thisForm.find('[name=Address1]').val().trim(),
                    Address2: $thisForm.find('[name=Address2]').val().trim(),
                    Email: $thisForm.find('[name=Email]').val().trim(),
                    Mobile: $thisForm.find('[name=Mobile]').val().trim(),
                    GSTNo: $thisForm.find('[name=GSTNo]').val().trim(),
                    Phone: $thisForm.find('[name=Phone]').val().trim(),
                    CashPositionLimit: $thisForm.find('[name= CashPositionLimit]').val().trim(),
                    CashReOrderLevel: $thisForm.find('[name=CashReOrderLevel]').val().trim(),
                    Latitude: $thisForm.find('[name=Latitude]').val().trim(),
                    Longitude: $thisForm.find('[name=Longitude]').val().trim(),
                    StartTime: $thisForm.find('[name=StartTime]').val().trim(),
                    EndTime: $thisForm.find('[name=EndTime]').val().trim(),
                    EmployeeID: $thisForm.find('[name=EmployeeID]').val().trim(),
                    BranchParentID: $thisForm.find('[name=BranchParentID]').val().trim(),
                    BranchTypeIDs: $thisForm.find('[name=BranchTypeIDs]').val().trim(),
                    BranchMode: $thisForm.find('[name=BranchTypeIDs]').children(":selected").attr('BranchMode'), 
                    AccountHead: $thisForm.find('[name=AccountHead]').val().trim(),
                    AccountHeadSub: $thisForm.find('[name=AccountHeadSub]').val().trim(),
                    SortOrder: $thisForm.find('[name=SortOrder]').val().trim(),
                    TransMode: "MSBRH",
                    CountryID: $thisForm.find('[name=CountryID]').val().trim(),
                    StatesID: $thisForm.find('[name=StatesID]').val().trim(),
                    DistrictID: $thisForm.find('[name=DistrictID]').val().trim(),
                    AreaID: $thisForm.find('[name=AreaID]').val().trim(),
                    PostID: $thisForm.find('[name=PostID]').val().trim(),
                    PlaceID: $thisForm.find('[name=PlaceID]').val().trim(),
                    ContactPerson: $thisForm.find('[name=ContactPerson]').val().trim(),
                    FK_IntroduceBranch: $thisForm.find('[name=FK_IntroduceBranch]').val(),
                    'BranchBankDetails': branchlist

                };
             

              
                $.ajax({
                    url: "@Url.Action("AddNewBranch", "Branch")",
                    type: "POST",

                    data: inputData,//<---- Input json : data passed to controller
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                        if (ajaxOutput.Process.IsProcess) {

                            $.each(ajaxOutput.Process.Message, function (key, value) {

                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                            });
                            $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                            $thisForm.find('[perfect-ctype="input"]').val('');
                            $thisForm.find('[perfect-ctype="digit"]').val('');



                            let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                            if (onSuccess) {
                                window[onSuccess]($thisForm);
                            }

                            //---------- Do stuff if success

                            console.log('> Add new branch success data', ajaxOutput);
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                //toastr.warning(value, "Error");
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }
                    },
                    complete: function () {
                        $(ele).prop('disabled', false);
                    }

                });

            }

        }
    }
    
    
    

    // Function to Update Branch
    function fn_BranchForm_update(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability
        console.log('form is valid', $thisForm.valid())
        //if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
        //    $(ele).prop('disabled', true);
        debugger

        let branchlists = [];
        $thisForm.find('[perfect-tempTable="bstatus"]').find('tbody').find('tr').each(function () {
            branchlists.push($(this).data('pData'));
        })
        if ($thisForm.valid() && ($thisForm.find('[name="CashPositionLimit"]').val() != null || $thisForm.find('[name="CashReOrderLevel"]').val() != null)) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
            let upperlimit = $thisForm.find('[name="CashPositionLimit"]').val();
            let lowerlimit = $thisForm.find('[name="CashReOrderLevel"]').val();
            if (parseFloat(upperlimit) < parseFloat(lowerlimit)) {
           
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Cash Re-Order Level should be less than Cash Position Limit' });
            }
            else {
                $(ele).prop('disabled', true);

                let pdata = $thisForm.data('pData');

                console.log('pdata after view click', pdata)
                console.log('> Update branch form data saved', pdata);
                let inputData = {

                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    BranchID: pdata.BranchID,
                    Code: $thisForm.find('[name=Code]').val().trim(),
                    Name: $thisForm.find('[name=Name]').val().trim(),
                    ShortName: $thisForm.find('[name=ShortName]').val().trim(),
                    Address1: $thisForm.find('[name=Address1]').val().trim(),
                    Address2: $thisForm.find('[name=Address2]').val().trim(),
                    Email: $thisForm.find('[name=Email]').val().trim(),
                    Mobile: $thisForm.find('[name=Mobile]').val().trim(),
                    Phone: $thisForm.find('[name=Phone]').val().trim(),
                    GSTNo: $thisForm.find('[name=GSTNo]').val().trim(),
                    CashPositionLimit: $thisForm.find('[name=CashPositionLimit]').val().trim(),
                    CashReOrderLevel: $thisForm.find('[name=CashReOrderLevel]').val().trim(),
                    Latitude: $thisForm.find('[name=Latitude]').val().trim(),
                    Longitude: $thisForm.find('[name=Longitude]').val().trim(),
                    StartTime: $thisForm.find('[name=StartTime]').val().trim(),
                    EndTime: $thisForm.find('[name=EndTime]').val().trim(),
                    EmployeeID: $thisForm.find('[name=EmployeeID]').val().trim(),
                    BranchParentID: $thisForm.find('[name=BranchParentID]').val(),
                    BranchTypeIDs: $thisForm.find('[name=BranchTypeIDs]').val().trim(),
                    BranchMode: $thisForm.find('[name=BranchTypeIDs]').children(":selected").attr('BranchMode'), 
                    AccountHead: $thisForm.find('[name=AccountHead]').val().trim(),
                    AccountHeadSub: $thisForm.find('[name=AccountHeadSub]').val().trim(),
                    SortOrder: $thisForm.find('[name=SortOrder]').val().trim(),
                    TransMode: "MSBRH",
                    CountryID: $thisForm.find('[name=CountryID]').val().trim(),
                    StatesID: $thisForm.find('[name=StatesID]').val().trim(),
                    DistrictID: $thisForm.find('[name=DistrictID]').val().trim(),
                    AreaID: $thisForm.find('[name=AreaID]').val().trim(),
                    PostID: $thisForm.find('[name=PostID]').val().trim(),
                    PlaceID: $thisForm.find('[name=PlaceID]').val().trim(),
                    ContactPerson: $thisForm.find('[name=ContactPerson]').val().trim(),
                    FK_IntroduceBranch: $thisForm.find('[name=FK_IntroduceBranch]').val(),
                    'BranchBankDetails': branchlists

                };
              

                console.log('> Update branch ajax input', inputData);
                $.ajax({
                    url: "@Url.Action("UpdateBranch", "Branch")",
                    type: "POST",
                    // headers: { "token_key": "1234" },
                    data: inputData,//<---- Input json : data passed to controller
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                    success: function (ajaxOutput) { //<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                        if (ajaxOutput.Process.IsProcess) {

                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                //toastr.success(value, "Success");
                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                            });


                            let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                            if (onSuccess) {
                                window[onSuccess](onSuccess);
                            }

                            //---------- Do stuff if success
                            //toastr.success("Inside success", "Confirmation Box in table");

                            console.log('> update new branch data', ajaxOutput);
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                //toastr.warning(value, "Error");
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }


                    },
                    complete: function () {
                        $(ele).prop('disabled', false);
                    }

                });

            }

        }
    }
     var Subimg = "";
    function Getsubimg(dataimg) {
        Subimg = dataimg;
    }
    var $imgContainer = $('#Image-form');
      function ImageLoad(ele) {

        $imgContainer.load('@Url.Action("LoadImageForm", "Branch")', function () {
            getcase('Company');
        debugger
            if (Subimg != "") {
                $.each(Subimg, function (key, value) {

                    var Mode = value.SVImgMode;
                    console.log('Mode', Mode);
                    var imgal = value.SVImgValue;
                    var ModeName = value.SVModeName;
                    Getimgcntrl1(ele, "data:image/;base64," + imgal, Subimg, ModeName, Mode, value.SVImgName)
                });
            }


        });
    }


    var tableOptionsTempOut = {
        iconButton: {
            buttons: [

                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        let indexname = tableKey + 'index';
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {

                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            $thistbl.dataTable({ paging: true });
                        }
                        else {
                            $thistbl.remove();
                        }
                    }
                },
            ]
        },
        onlyShowColumn: [],
        hideColumn: [],
        serialNo: true,
        renameHeader: { 'BranchName': 'Branch','BankName': 'Bank', 'BankAccount': 'AccountNo' },
        rowAttribute: [],
        isCheckType: []



    };
    function BankDetailsTable_create(element, tkey, uniq) {

        let $thisForm = $(element).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';
        let errorClass1 = '.temptableError1';

        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }
        
        
        
        
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="BankName"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="BankName"]').val().length == null) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="BankName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Bank Name');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="BankName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        //if ($thisForm.find('[perfect-tempTable-' + tableKey + '="IFSCCode"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="IFSCCode"]').val().length == null) {
        //    isValid = false;

        //    $thisForm.find('[perfect-tempTable-' + tableKey + '="IFSCCode"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter IFSC Code');
        //}
        //else {
        //    $thisForm.find('[perfect-tempTable-' + tableKey + '="IFSCCode"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        //}

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="BankAccount"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="BankAccount"]').val().length == null) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="BankAccount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Bank Account');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="BankAccount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="BankAccount"]').val().length != 0) {
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="BankAccount"]').val().length < 9 || $thisForm.find('[perfect-tempTable-' + tableKey + '="BankAccount"]').val().length >18) {
                isValid = false;

                $thisForm.find('[perfect-tempTable-' + tableKey + '="BankAccount"]').closest('[perfect-class="formGroup"]').find(errorClass1).text('Please Enter A Valid Account Number(Minimun lenght 9,Maximum length 18)');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="BankAccount"]').closest('[perfect-class="formGroup"]').find(errorClass1).text('');
            }
        }
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="BranchName"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="BranchName"]').val().length == null) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="BranchName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Branch Name');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="BranchName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }


        if (unique.length > 0) {
            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }

                }

            })

            unique.forEach(function (key, i) {
                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                let headerEleName = $thisForm.find('[name="lblType"]').text();
                let atname = $thisEle.attr('name');
                let cvalue;


                if ($thisEle.length != 0) {
                    let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    let errmessage = headerEleName + " Account Number Already exits"

                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();

                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else {
                        cvalue = $thisEle.val();
                    }

                    if (prevData.find(a => a[atname] == cvalue)) {
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });

        }

        if (isValid) {
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                if ($this.is('select')) {

                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    insertData[nameAttr] = $this.val();

                    $this.val('').selectpicker('refresh');
                }
                else if ($this.is('input')) {

                    let inputType = $this.attr('type').toLocaleLowerCase();

                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp.isCheckType.push(nameAttr)
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {
                        insertData[nameAttr] = $this.val();
                        $this.val('');

                    }

                    else {
                        insertData[nameAttr] = $this.val();

                        $this.val('');
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();

                    $this.val('');
                }
            });

            if (isNew) {
                if ($tblcontainer.find('table').length == 0) {
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                }
                else {
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                }
            }
            else {
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
            }

            $tblcontainer.attr('perfect-tempTable-action', 0);
            //$thisForm.find('[name="AldAmountTo"]').attr('readonly', true);
        }
    }

    function ComDetailsTable_Fill(ele, tkey, data, tableOptionsTempOut) {

        let $thisForm = $(ele)

        let tableOptionsTemp = tableOptionsTempOut;
        let insertData = []
        let tableKey = tkey;

        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);

        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');


        $.each(data, function (keyOne, valOne) {

            let pData = {};

            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])
            //---

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                console.log('name', valOne[nameAttr])
                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {


                        tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTemp.hideColumn.push(nameAttr);
                        //displat text of select

                        let selectText = ($this.val().length == 1) ? '' : $this.find('[value="' + valOne[nameAttr] + '"]').text();

                        pData[nameAttr + '_d'] = selectText;
                        pData[nameAttr] = valOne[nameAttr];
                        console.log('select', $this.find('options[value="' + valOne[nameAttr] + '"]').text());
                        console.log('selectText', $this.find('[value="' + valOne[nameAttr] + '"]').text());

                    }
                    else if ($this.is('input')) {

                        let inputType = $this.attr('type').toLocaleLowerCase();
                        console.log('inputType', inputType)
                        if (inputType == 'checkbox') {

                            pData[nameAttr] = valOne[nameAttr];

                            tableOptionsTemp.isCheckType.push(nameAttr);

                            console.log('checkbox', nameAttr)


                        }
                        else if (inputType == 'hidden') {

                            tableOptionsTemp.hideColumn.push(nameAttr);
                            pData[nameAttr] = valOne[nameAttr];


                        }

                        else if (inputType == 'date') {


                            pData[nameAttr] = moment(valOne[nameAttr]).format('DD-MM-YYYY');


                        }
                        else {
                            pData[nameAttr] = valOne[nameAttr];


                        }
                    }
                    else {
                        pData[nameAttr] = valOne[nameAttr];


                    }
                }



            });

            insertData.push(pData);
            console.log('insertdata', insertData)

            //----

        });

        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTemp));
        // $tblcontainer.find('table').dataTable({ paging: true });

    }


    function clearbankdetails(ele, tablekey) {


        let $thisform = $(ele).closest('[perfect-class="form"]');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');

        let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);

        if (tablekey = "bstatus") {

        }

    }

    function generateShortName(ele) {
        let $form = $(ele).closest('[perfect-class="form"]');
        var fullName = $form.find('[name="Name"]').val();
        var shortName = generateShortNameFromFullName(fullName);
        $form.find('[name="ShortName"]').val(shortName);
    }
</script>