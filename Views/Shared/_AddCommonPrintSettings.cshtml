@model PerfectWebERP.Models.CommonPrintSettingsModal.CommonPrintSettingsView


<style>
    form .error {
        color: #FF6746;
        font-size: 81%;
        margin-top: 0.25rem;
    }

    .btn-export {
        /*//height:10px;*/
        background-color: #2aa2ad;
        color: white;
    }

    .div-export {
        float: right;
        margin-left: 3px;
        /*background-color:red;*/
        height: 41px;
        /*// width:90px;*/
    }

        .div-export:hover {
            color: white !important;
        }

    .btn-export :hover {
        color: white !important;
    }
    /*.image {
        display: block;
        width: 100%;
        height: auto;
    }*/

    .multiline {
        white-space: pre-wrap;
    }

    .column-table {
        width: 100px; /* Your fixed width */
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    #hiddenMeasureElement {
        visibility: hidden;
        position: absolute;
        font-size: 16px; /* Replace with your desired font size */
        font-family: Arial, sans-serif; /* Replace with your desired font family */
    }

    .element {
        border: 2px solid transparent; /* Start with a transparent border */
        transition: border 0.3s; /* Add a transition for smooth animation */
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .element:hover {
            border: 2px solid #1dedfc; /* Add a solid blue border on hover */
        }

    .pmain-body {
        width: 100%;
        overflow: auto;
        white-space: nowrap;
    }

    .horizontal-line {
        border-top: 1px solid black;
    }

    .vertical-line {
        border-left: 1px solid black;
        /*height: 100px; /* Adjust the height as needed */
    }

    .pbox {
        border: 1px solid black;
    }

    .pSection {
        border: 1px dotted #ADA4A1;
    }
    /*.card-body {
        overflow-x: unset;
        overflow-y: unset;
    }*/
    .addrs-element {
        border: 2px solid transparent; /* Start with a transparent border */
        transition: border 0.3s; /* Add a transition for smooth animation */
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .addrs-element:hover {
            border: 2px solid #1dedfc; /* Add a solid blue border on hover */
        }

  

    
</style>

<div class="card ">

    <div class="card-header">
        <div class="col-xl-4">
            @*<h4 class="card-title col-12">@ViewBag.PageTitle</h4>*@
            <h4 class="card-title col-12">Common Print Settings</h4>


        </div>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer text-right" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>

    <div class="card-body jq_leadgeneration_body ">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="leadformSesction">
                @Html.AntiForgeryToken()

                <div class="" id="step1">
                    <div class="row">
                        <div class="col-sm-4 ">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Module</span>
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-sm-8">
                                    <input type="hidden" value=0 name="ID_CommonPrintingSettings">
                                    <select class="form-control perfectValidate_string" name="Module" id="Module" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="Element_load(this)">
                                        <option value="">Please Select </option>

                                        @if (!(Model.Modules is null))
                                        {
                                            foreach (var i in Model.Modules)
                                            {
                                                <option value="@i.ID_Mode">@i.ModeName</option>
                                            }
                                        }
                                    </select>
                                    &nbsp;&nbsp; <span class="field-validation-valid" data-valmsg-for="" id="ErrForModule" data-valmsg-replace="true" style="color: red;"></span>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-4">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Page Orientation</span>
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-sm-8">

                                    <select class="form-control perfectValidate_string" name="PageOrientation" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="PageOrientaionChange()" id="PageOrientation">
                                        <option value="">Please Select </option>

                                        @if (!(Model.PageOrientaions is null))
                                        {
                                            foreach (var i in Model.PageOrientaions)
                                            {
                                                <option value="@i.PValue">@i.Page_Orientaion</option>
                                            }
                                        }
                                    </select>
                                    &nbsp;&nbsp; <span class="field-validation-valid" data-valmsg-for="" id="ErrPageOrientation" data-valmsg-replace="true" style="color: red;"></span>
                                </div>
                            </div>
                        </div>


                        <div class="col-sm-4 ">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Setting Name</span>
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-sm-8">
                                    <input type="text" class="form-control perfectValidate_string" id="SettingNameID" name="SettingNameID" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="50" oninput="removeSpaces(this)"@*onkeypress="return /^[0-9a-zA-Z-]+$/i.test(event.key)"*@/>
                                    &nbsp;&nbsp; <span class="field-validation-valid" data-valmsg-for="" id="ErrForSettingNam" data-valmsg-replace="true" style="color: red;"></span>
                                    <span class="field-validation-valid" data-valmsg-for="" id="ErrForSettingNams" data-valmsg-replace="true" style="color: red;"></span>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="text-right col-12" perfect-class="formFooter">

                            <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" id="reset" name="reset">Clear</button>
                            <button id="next1" type="button" class="btn btn-primary" href="#profile" name="next1" perfect-css="button" onclick="fn_nextStep(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Next</button>

                        </div>

                    </div>

                </div>

                <div class="" id="SecondStpe" style="display:block !important">
                    <div class="row ">

                        <div class="col-sm-3" id="Toolbox">

                            @*<div class="col-sm-12 MoreElement">
            <div id="accordion-nine" class="accordion accordion-active-header">
                <div class="accordion__item">
                    <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseSectionElements">
                        <span class="accordion__header--icon"></span>
                        <span class="accordion__header--text">Section </span>
                        <span class="accordion__header--indicator"></span>
                    </div>
                    <div id="active-header_collapseSectionElements" class="collapse accordion__body" data-parent="">
                        <div class="accordion__body--text" id="">

                            <ul class="" style="margin: 0 0 10px 0px;">

                                <li class="">
                                    <a href="#" class="list-group-item  sec_elmnt" data-id="PRHeader" style="padding-right:0px;">
                                        Report Header
                                        <span class="pull-right btn btn-xs btn-primary" id="PRHeaderAdd" style="margin-top:-5px;">Add</span>
                                        <span class="pull-right btn btn-xs btn-default" id="PRHeaderRemove" style="margin-right:16px;display:none;">X</span>
                                    </a>
                                </li>

                                <li class="">
                                    <a href="#" class="list-group-item  sec_elmnt" data-id="PPHeader" style="padding-right:0px;">
                                        Page Header
                                        <span class="pull-right btn btn-xs btn-primary" id="PPHeaderAdd" style="margin-top:-5px;">Add</span>
                                        <span class="pull-right btn btn-xs btn-default" id="PPHeaderRemove" style="margin-right:16px;display:none;">X</span>
                                    </a>
                                </li>


                                <li>
                                    <a href="#" class="list-group-item sec_elmnt" data-id="PRFooter" style="padding-right:0px;">
                                        Report Footer
                                        <span class="pull-right btn btn btn-primary " id="PRFooterAdd" style="margin-top:-5px;">Add</span>
                                        <span class="pull-right btn btn-xs btn-default" id="PRFooterRemove" style="display:none;margin-right:16px;">X</span>
                                    </a>
                                </li>


                                <li>
                                    <a href="#" class="list-group-item sec_elmnt" data-id="PPFooter" style="padding-right:0px;">
                                        Page Footer
                                        <span class="pull-right btn btn btn-primary " id="PPFooterAdd" style="margin-top:-5px;">Add</span>
                                        <span class="pull-right btn btn-xs btn-default" id="PPFooterRemove" style="display:none;margin-right:16px;">X</span>
                                    </a>
                                </li>
                                <li>
                                    <a href="#" class="list-group-item sec_elmnt" data-id="PBody" style="padding-right:0px;">
                                        Main Body
                                        <span class="pull-right btn btn btn-primary " id="PBodyAdd" style="margin-top:-5px;">Add</span>
                                        <span class="pull-right btn btn-xs btn-default" id="PBodyRemove" style="display:none;margin-right:16px;">X</span>
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@



                            <div class="col-sm-12 addElement">
                                <div id="accordion-nine" class="accordion accordion-active-header">
                                    <div class="accordion__item">
                                        <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseTen">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text">Design Elements</span>
                                            <span class="accordion__header--indicator"></span>
                                        </div>
                                        <div id="active-header_collapseTen" class="collapse accordion__body" data-parent="" style="max-height: 324px; overflow-y: auto;">
                                            <div class="accordion__body--text">

                                                <ul class="" style="margin: 0 0 10px 0px;">
                                                    <li class="">
                                                        <a href="#" class="list-group-item  elmnt" data-id="logoImage" style="padding-right:0px;">
                                                            Image
                                                            <span class="pull-right btn btn-xs btn-primary" id="logoImageAdd" style="margin-top:-5px;">Add</span>
                                                            <span class="pull-right btn btn-xs btn-default" id="logoImageRemove" style="margin-right:16px;display:none;">X</span>
                                                        </a>


                                                    </li>

                                                    <li>
                                                        <a href="#" class="list-group-item elmnt" data-id="" style="padding-right:0px;">
                                                            Background Image
                                                            <span class="pull-right btn btn btn-primary " id="BackImage" style="margin-top:-5px;">Add</span>
                                                            <span class="pull-right btn btn-xs btn-default" id="BackImageRemove" style="display:none;margin-right:16px;">X</span>
                                                        </a>

                                                    </li>

                                                    @*<li>
            <a href="#" class="list-group-item elmnt" data-id="Subtotal" style="padding-right:0px;">
                Sub Total
                <span class="pull-right btn btn btn-primary" id="SubtotalAdd" style="margin-top:-5px;">Add</span>
                <span class="pull-right btn btn-xs btn-default" id="SubtotalRemove" style="display:none;margin-right:16px;">X</span>
            </a>

        </li>*@
                                                    @*<li>
            <a href="#" class="list-group-item elmnt" data-id="Date" style="padding-right:0px;">
                Date
                <span class="pull-right btn btn btn-primary" id="DateAdd" style="margin-top:-5px;">Add</span>
                <span class="pull-right btn btn-xs btn-default" id="DateRemove" style="display:none;margin-right:16px;">X</span>
            </a>

        </li>*@

                                                    @*<li>
            <a href="#" class="list-group-item elmnt" data-id="NameLabel" style="padding-right:0px;">
                Tittle
                <span class="pull-right btn btn btn-primary " id="NameLabelAdd" style="margin-top:-5px;">Add</span>
                <span class="pull-right btn btn-xs btn-default" id="NameLabelRemove" style="display:none;margin-right:16px;">X</span>
            </a>

        </li>*@

                                                    @*<li>
            <a href="#" class="list-group-item elmnt" data-id="InsAddress" style="padding-right:0px;">
                Address
                <span class="pull-right btn btn btn-primary " id="InsAddressAdd" style="margin-top:-5px;">Add</span>
                <span class="pull-right btn btn-xs btn-default" id="InsAddressRemove" style="display:none;margin-right:16px;">X</span>
            </a>

        </li>*@

                                                    @*<li>
            <a href="#" class="list-group-item elmnt" data-id="Paymentinfo" style="padding-right:0px;">
                Payment Info
                <span class="pull-right btn btn btn-primary" id="PaymentinfoAdd" style="margin-top:-5px;">Add</span>
                <span class="pull-right btn btn-xs btn-default" id="PaymentinfoRemove" style="display:none;margin-right:16px;">X</span>
            </a>

        </li>*@

                                                    @*<li>
            <a href="#" class="list-group-item elmnt" data-id="InvoiceNo" style="padding-right:0px;">
                Invoice No.
                <span class="pull-right btn btn btn-primary " id="InvoiceNoAdd" style="margin-top:-5px;">Add</span>
                <span class="pull-right btn btn-xs btn-default" id="InvoiceNoRemove" style="display:none;margin-right:16px;">X</span>
            </a>

        </li>*@
                                                    @*<li>
            <a href="#" class="list-group-item elmnt" data-id="Termscondtn" style="padding-right:0px;">
                terms and conditions
                <span class="pull-right btn btn btn-primary " id="TermscondtnAdd" style="margin-top:-5px;">Add</span>
                <span class="pull-right btn btn-xs btn-default" id="TermscondtnRemove" style="display:none;margin-right:16px;">X</span>
            </a>

        </li>*@

                                                    @*<li>
            <a href="#" class="list-group-item elmnt" data-id="innerTable" style="padding-right:0px;">
                Table
                <span class="pull-right btn btn btn-primary" id="innerTableAdd" style="margin-top:-5px;">Add</span>
                <span class="pull-right btn btn-xs btn-default" id="innerTableRemove" style="display:none;margin-right:16px;">X</span>
            </a>

        </li>*@
                                                    @*<li>
            <a href="#" class="list-group-item elmnt" data-id="pHorizontalLine" style="padding-right:0px;">
                Horizontal Line
                <span class="pull-right btn btn btn-primary" id="pHorizontalLineAdd" style="margin-top:-5px;">Add</span>
                <span class="pull-right btn btn-xs btn-default" id="pHorizontalLineRemove" style="display:none;margin-right:16px;">X</span>
            </a>

        </li>
        <li>
            <a href="#" class="list-group-item elmnt" data-id="pVerticalLine" style="padding-right:0px;">
                Vertical Line
                <span class="pull-right btn btn btn-primary" id="pVerticalLineAdd" style="margin-top:-5px;">Add</span>
                <span class="pull-right btn btn-xs btn-default" id="pVerticalLineRemove" style="display:none;margin-right:16px;">X</span>
            </a>

        </li>*@
                                                    @*<li>
            <a href="#" class="list-group-item elmnt" data-id="pBox" style="padding-right:0px;">
                Box
                <span class="pull-right btn btn btn-primary" id="pBoxAdd" style="margin-top:-5px;">Add</span>
                <span class="pull-right btn btn-xs btn-default" id="pBoxRemove" style="display:none;margin-right:16px;">X</span>
            </a>

        </li>*@
                                                    <li>
                                                        <a href="#" class="list-group-item elmnt" data-id="ptableMarkerStarter" style="padding-right:0px;">
                                                            table1 Marker starter
                                                            <span class="pull-right btn btn btn-primary" id="ptableMarkerStarterAdd" style="margin-top:-5px;">Add</span>
                                                            <span class="pull-right btn btn-xs btn-default" id="ptableMarkerStarterRemove" style="display:none;margin-right:16px;">X</span>
                                                        </a>

                                                    </li>

                                                    <li>
                                                        <a href="#" class="list-group-item elmnt" data-id="ptableMarkerEnder" style="padding-right:0px;">
                                                            table1 Marker ender
                                                            <span class="pull-right btn btn btn-primary" id="ptableMarkerEnderAdd" style="margin-top:-5px;">Add</span>
                                                            <span class="pull-right btn btn-xs btn-default" id="ptableMarkerEnderRemove" style="display:none;margin-right:16px;">X</span>
                                                        </a>

                                                    </li>
                                                    <li>
                                                        <a href="#" class="list-group-item elmnt" data-id="ptable2MarkerStarter" style="padding-right:0px;">
                                                            table2 Marker starter
                                                            <span class="pull-right btn btn btn-primary" id="ptable2MarkerStarterAdd" style="margin-top:-5px;">Add</span>
                                                            <span class="pull-right btn btn-xs btn-default" id="ptable2MarkerStarterRemove" style="display:none;margin-right:16px;">X</span>
                                                        </a>

                                                    </li>

                                                    <li>
                                                        <a href="#" class="list-group-item elmnt" data-id="ptable2MarkerEnder" style="padding-right:0px;">
                                                            table2 Marker ender
                                                            <span class="pull-right btn btn btn-primary" id="ptable2MarkerEnderAdd" style="margin-top:-5px;">Add</span>
                                                            <span class="pull-right btn btn-xs btn-default" id="ptable2MarkerEnderRemove" style="display:none;margin-right:16px;">X</span>
                                                        </a>

                                                    </li>
                                                    <li>
                                                        <a href="#" class="list-group-item elmnt" data-id="ptable3MarkerStarter" style="padding-right:0px;">
                                                            table3 Marker starter
                                                            <span class="pull-right btn btn btn-primary" id="ptable3MarkerStarterAdd" style="margin-top:-5px;">Add</span>
                                                            <span class="pull-right btn btn-xs btn-default" id="ptable3MarkerStarterRemove" style="display:none;margin-right:16px;">X</span>
                                                        </a>

                                                    </li>
                                                    <li>
                                                        <a href="#" class="list-group-item elmnt" data-id="ptable3MarkerEnder" style="padding-right:0px;">
                                                            table3 Marker ender
                                                            <span class="pull-right btn btn btn-primary" id="ptable3MarkerEnderAdd" style="margin-top:-5px;">Add</span>
                                                            <span class="pull-right btn btn-xs btn-default" id="ptable3MarkerEnderRemove" style="display:none;margin-right:16px;">X</span>
                                                        </a>

                                                    </li>
                                                    <li>
                                                        <a href="#" class="list-group-item elmnt" data-id="ptable4MarkerStarter" style="padding-right:0px;">
                                                            table4 Marker starter
                                                            <span class="pull-right btn btn btn-primary" id="ptable4MarkerStarterAdd" style="margin-top:-5px;">Add</span>
                                                            <span class="pull-right btn btn-xs btn-default" id="ptable4MarkerStarterRemove" style="display:none;margin-right:16px;">X</span>
                                                        </a>

                                                    </li>
                                                    <li>
                                                        <a href="#" class="list-group-item elmnt" data-id="ptable4MarkerEnder" style="padding-right:0px;">
                                                            table4 Marker ender
                                                            <span class="pull-right btn btn btn-primary" id="ptable4MarkerEnderAdd" style="margin-top:-5px;">Add</span>
                                                            <span class="pull-right btn btn-xs btn-default" id="ptable4MarkerEnderRemove" style="display:none;margin-right:16px;">X</span>
                                                        </a>

                                                    </li>
                                                    <li>
                                                        <a href="#" class="list-group-item elmnt" data-id="ptable5MarkerStarter" style="padding-right:0px;">
                                                            table5 Marker starter
                                                            <span class="pull-right btn btn btn-primary" id="ptable5MarkerStarterAdd" style="margin-top:-5px;">Add</span>
                                                            <span class="pull-right btn btn-xs btn-default" id="ptable5MarkerStarterRemove" style="display:none;margin-right:16px;">X</span>
                                                        </a>

                                                    </li>
                                                    <li>
                                                        <a href="#" class="list-group-item elmnt" data-id="ptable5MarkerEnder" style="padding-right:0px;">
                                                            table5 Marker ender
                                                            <span class="pull-right btn btn btn-primary" id="ptable5MarkerEnderAdd" style="margin-top:-5px;">Add</span>
                                                            <span class="pull-right btn btn-xs btn-default" id="ptable5MarkerEnderRemove" style="display:none;margin-right:16px;">X</span>
                                                        </a>

                                                    </li>
                                                    <li>
                                                        <a href="#" class="list-group-item elmnt" data-id="ptable6MarkerStarter" style="padding-right:0px;">
                                                            table6 Marker starter
                                                            <span class="pull-right btn btn btn-primary" id="ptable6MarkerStarterAdd" style="margin-top:-5px;">Add</span>
                                                            <span class="pull-right btn btn-xs btn-default" id="ptable6MarkerStarterRemove" style="display:none;margin-right:16px;">X</span>
                                                        </a>

                                                    </li>
                                                    <li>
                                                        <a href="#" class="list-group-item elmnt" data-id="ptable6MarkerEnder" style="padding-right:0px;">
                                                            table6 Marker ender
                                                            <span class="pull-right btn btn btn-primary" id="ptable6MarkerEnderAdd" style="margin-top:-5px;">Add</span>
                                                            <span class="pull-right btn btn-xs btn-default" id="ptable6MarkerEnderRemove" style="display:none;margin-right:16px;">X</span>
                                                        </a>

                                                    </li>
                                                </ul>

                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-12 MoreElement">
                                <div id="accordion-nine" class="accordion accordion-active-header">
                                    <div class="accordion__item">
                                        <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseMoreElements">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text">General Elements</span>
                                            <span class="accordion__header--indicator"></span>
                                        </div>
                                        <div id="active-header_collapseMoreElements" class="collapse accordion__body" data-parent="" style="max-height: 324px; overflow-y: auto;">
                                            <div class="accordion__body--text">

                                                <ul class="" style="margin: 0 0 10px 0px;" id="MoreElemetsId"></ul>

                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 Details Section1">
                                <div id="accordion-ten" class="accordion accordion-active-header">
                                    <div class="accordion__item">
                                        <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseDetailsSection1">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text">Transaction Details </span>
                                            <span class="accordion__header--indicator"></span>
                                        </div>
                                        <div id="active-header_collapseDetailsSection1" class="collapse accordion__body" data-parent="" style="max-height: 324px; overflow-y: auto;">
                                            <div class="accordion__body--text">

                                                <ul class="" style="margin: 0 0 10px 0px;" id="DetailsSection1"></ul>

                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 Details TaxDetColoum">
                                <div id="accordion-eleven" class="accordion accordion-active-header">
                                    <div class="accordion__item">
                                        <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseDetailsTaxDetColoum">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text">Tax Detail Column Wise</span>
                                            <span class="accordion__header--indicator"></span>
                                        </div>
                                        <div id="active-header_collapseDetailsTaxDetColoum" class="collapse accordion__body" data-parent="" style="max-height: 324px; overflow-y: auto;">
                                            <div class="accordion__body--text">

                                                <ul class="" style="margin: 0 0 10px 0px;" id="DetailsTaxDetColoum"></ul>

                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 Details Section2">
                                <div id="accordion-eleven" class="accordion accordion-active-header">
                                    <div class="accordion__item">
                                        <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseDetailsSection2">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text">Tax Details Row Wise</span>
                                            <span class="accordion__header--indicator"></span>
                                        </div>
                                        <div id="active-header_collapseDetailsSection2" class="collapse accordion__body" data-parent="" style="max-height: 324px; overflow-y: auto;">
                                            <div class="accordion__body--text">

                                                <ul class="" style="margin: 0 0 10px 0px;" id="DetailsSection2"></ul>

                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>



                            <div class="col-sm-12 Details PaymentMode">
                                <div id="accordion-eleven" class="accordion accordion-active-header">
                                    <div class="accordion__item">
                                        <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseDetailsPaymentMode">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text">Payment Mode</span>
                                            <span class="accordion__header--indicator"></span>
                                        </div>
                                        <div id="active-header_collapseDetailsPaymentMode" class="collapse accordion__body" data-parent="" style="max-height: 324px; overflow-y: auto;">
                                            <div class="accordion__body--text">

                                                <ul class="" style="margin: 0 0 10px 0px;" id="DetailsPaymentMode"></ul>

                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>


                            <div class="col-sm-12 Details BankSection">
                                <div id="accordion-eleven" class="accordion accordion-active-header">
                                    <div class="accordion__item">
                                        <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseDetailsBankSection">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text">Bank Details</span>
                                            <span class="accordion__header--indicator"></span>
                                        </div>
                                        <div id="active-header_collapseDetailsBankSection" class="collapse accordion__body" data-parent="" style="max-height: 324px; overflow-y: auto;">
                                            <div class="accordion__body--text">

                                                <ul class="" style="margin: 0 0 10px 0px;" id="DetailsBankSection"></ul>

                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 Details Section7">
                                <div id="accordion-eleven" class="accordion accordion-active-header">
                                    <div class="accordion__item">
                                        <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseDetailsSection7">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text"> Details</span>
                                            <span class="accordion__header--indicator"></span>
                                        </div>
                                        <div id="active-header_collapseDetailsSection7" class="collapse accordion__body" data-parent="" style="max-height: 324px; overflow-y: auto;">
                                            <div class="accordion__body--text">

                                                <ul class="" style="margin: 0 0 10px 0px;" id="DetailsSection7"></ul>

                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 Details Section8">
                                <div id="accordion-eleven" class="accordion accordion-active-header">
                                    <div class="accordion__item">
                                        <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseDetailsSection8">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text"> Details</span>
                                            <span class="accordion__header--indicator"></span>
                                        </div>
                                        <div id="active-header_collapseDetailsSection8" class="collapse accordion__body" data-parent="" style="max-height: 324px; overflow-y: auto;">
                                            <div class="accordion__body--text">

                                                <ul class="" style="margin: 0 0 10px 0px;" id="DetailsSection8"></ul>

                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 Details Section9">
                                <div id="accordion-eleven" class="accordion accordion-active-header">
                                    <div class="accordion__item">
                                        <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseDetailsSection9">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text"> Details</span>
                                            <span class="accordion__header--indicator"></span>
                                        </div>
                                        <div id="active-header_collapseDetailsSection9" class="collapse accordion__body" data-parent="" style="max-height: 324px; overflow-y: auto;">
                                            <div class="accordion__body--text">

                                                <ul class="" style="margin: 0 0 10px 0px;" id="DetailsSection9"></ul>

                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 Details Section10">
                                <div id="accordion-eleven" class="accordion accordion-active-header">
                                    <div class="accordion__item">
                                        <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseDetailsSection10">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text"> Details</span>
                                            <span class="accordion__header--indicator"></span>
                                        </div>
                                        <div id="active-header_collapseDetailsSection10" class="collapse accordion__body" data-parent="" style="max-height: 324px; overflow-y: auto;">
                                            <div class="accordion__body--text">

                                                <ul class="" style="margin: 0 0 10px 0px;" id="DetailsSection10"></ul>

                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>

                            @*<div class="col-sm-12 TableOptions">
            <div id="accordion-ten" class="accordion accordion-active-header">
                <div class="accordion__item">
                    <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseTableOptions">
                        <span class="accordion__header--icon"></span>
                        <span class="accordion__header--text">Table Options</span>
                        <span class="accordion__header--indicator"></span>
                    </div>
                    <div id="active-header_collapseTableOptions" class="collapse accordion__body" data-parent="">
                        <div class="accordion__body--text">

                            <div class="form-group col-sm-12">
                                <div class=" row" perfect-common-print="settings">
                                    <div class="col-sm-12">
                                        <label class="col-sm-12 form-label " perfect-class="formGroupLabel">Number of Columns</label>
                                        <input type="text" id="NoColumn" style="width:100%;" class="form-control" maxlength="2" onkeypress="return /^[0-9]+$/i.test(event.key)" onkeyup="if(value>parseInt(datawidth)) value=datawidth;" perfect-class="formGroupControl" perfect-css="input" perfect-ctype="input" onchange="ColumnnoChange(this)" />
                                    </div>
                                    <div class="col-sm-12" perfect-common-print="tableOption">





                                    </div>
                                    <div class="col-sm-12">
                                        <label class="col-sm-12 form-label " perfect-class="formGroupLabel">Number of Rows</label>
                                        <input type="text" id="No_Rows" style="width:100%;" class="form-control" maxlength="2" onkeypress="return /^[0-9]+$/i.test(event.key)" onkeyup="if(value>parseInt(datawidth)) value=datawidth;" perfect-class="formGroupControl" perfect-css="input" perfect-ctype="input" onchange="" />
                                    </div>
                                </div>
                            </div>



                            <div class="form-group col-sm-12 text-right">
                                <div class="">
                                    <input type="button" id="Add_table" class="form-group  btn btn-sm btn-primary mr-1" id="Cordinates" value="Add" onclick="Add_Table()" />

                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>*@
                            @*<div class="col-sm-12 Multtiple Elements" >
            <div id="accordion-muttipleElement" class="accordion accordion-active-header">
                <div class="accordion__item">
                    <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseMulttipleElement">
                        <span class="accordion__header--icon"></span>
                        <span class="accordion__header--text">Multtiple Elements</span>
                        <span class="accordion__header--indicator"></span>
                    </div>
                    <div id="active-header_collapseMulttipleElement" class="collapse accordion__body" data-parent="">
                        <div class="accordion__body--text">
                           <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Element</span>
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-sm-8">

                                    <select class="form-control " name="MuttipleElement" id="MuttipleElement" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                        <option value="">Please Select </option>
                                        <option value="logoImage">Image</option>
                                        <option value="pHorizontalLine">Horizontal Line</option>
                                        <option value="InsAddress">Address</option>
                                        <option value="innerTable">Table</option>

                                        </select>
                                    &nbsp;&nbsp; <span class="field-validation-valid" data-valmsg-for="" id="ErrForModule" data-valmsg-replace="true" style="color: red;"></span>
                                </div>
                            </div>
                         </div>
                     </div>
                </div>
            </div>
        </div>*@

                        </div>
                        <div class="col-sm-6 pmain-body" id="workboard">

                            <div class="col-md-12" id="FrontIDCard" style="display:none;padding:0px; height:auto;">

                                <div class="panel panel-danger" id="FrontSideParent" style="border-color:#ebeef3; height:auto;">

                                    <div id="FrontSide" class="" style="width:210px;height:297px;color:#ffffff;background-size:contain;border-style:groove;border-width:1px;background-color:#ffffff; border-color: black;  position: absolute;">

                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="col-md-3">

                            <div class="col-sm-12 fontSettings">
                                <div id="accordion-nine" class="accordion accordion-active-header">
                                    <div class="accordion__item">
                                        <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseFontSettings">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text">Font Settings</span>
                                            <span class="accordion__header--indicator"></span>
                                        </div>
                                        <div id="active-header_collapseFontSettings" class="collapse accordion__body" data-parent="">
                                            <div class="accordion__body--text ">
                                                <div class="form-group row">
                                                    <div class="col-sm-6">
                                                        <select class="form-control" id="ElmntFontAlign" style="height:28px;" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                            <option value="" selected>-Font Align-</option>
                                                            <option value="center">Center</option>
                                                            <option value="left">Left</option>
                                                            <option value="right">Right</option>
                                                        </select>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <input type="button" id="btnFontAlign" class="btn btn-xs btn-primary" value="Set" />


                                                    </div>

                                                </div>
                                                <div class="form-group row">
                                                    <div class="col-sm-6">
                                                        <select class="form-control" id="ElmntFontStyle" style="height:28px;" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                            <option style="font-family:0;">-Font Style-</option>
                                                            <option style="font-family: arial;">Arial</option>
                                                            <option style="font-family: 'Times New Roman'">Times New Roman</option>
                                                            <option style="font-family: 'Verdana';">Verdana</option>
                                                            @*<option style="font-family: 'Comic Sans Serif'">Comic Sans Serif</option>*@
                                                            <option style="font-family: 'Trebuchet MS';">Trebuchet MS</option>
                                                            <option style="font-family: 'Tahoma';">Tahoma</option>
                                                            <option style="font-family: 'Cambria';">Cambria</option>
                                                        </select>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <input type="button" id="btnFontStyle" class="btn btn-xs btn-primary" value="Set" />


                                                    </div>

                                                </div>
                                                <div class="form-group row">
                                                    <div class="col-sm-6">
                                                        @*<label>Font Size</label>*@
                                                        <input type="text" id="ElmntFont" style="width:100%;" class="form-control" placeholder="Font Size" maxlength="3" onkeypress="return /^[0-9]+$/i.test(event.key);" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />

                                                    </div>
                                                    <div class="col-sm-6">
                                                        <input type="button" id="btnFont" class="btn btn-xs btn-primary" value="Set" />


                                                    </div>

                                                </div>
                                                <div class="form-group row">
                                                    <div class="col-sm-6">
                                                        @*<label>Font Color</label>*@
                                                        <input type="color" id="ElmntFontColor" class="form-control" placeholder="Font Color" title="Font Color" style="padding:0px;width:100%;height:38px;" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <input type="button" id="btnColor" class="btn btn-xs btn-primary" value="Set" />

                                                    </div>
                                                </div>

                                                <div class="form-group row">
                                                    <div class="col-sm-6">
                                                        <a class="btn btn-light" id="BtnBold"> <i class="fa fa-bold"></i> </a>
                                                        <a class="btn btn-light" id="BtnItalic"> <i class="fa fa-italic"></i> </a>
                                                        <a class="btn btn-light" id="BtnUpprCse"> <i class="fa fa-font"></i> </a>
                                                    </div>
                                                </div>
                                                <div class="form-group row">
                                                    <div class="col-sm-12 text-right">
                                                        <button class="btn btn-primary" id="" type="button" name="" onclick="Load_toolbox('addFontSettings')">
                                                            Next
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>




                            </div>

                            <div class="col-sm-12 styleSettings">
                                <div id="accordion-nine" class="accordion accordion-active-header">
                                    <div class="accordion__item">
                                        <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseStyleSettings">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text">Style Settings</span>
                                            <span class="accordion__header--indicator"></span>
                                        </div>
                                        <div id="active-header_collapseStyleSettings" class="collapse accordion__body" data-parent="">
                                            <div class="accordion__body--text">

                                                <div class="form-group col-sm-12">
                                                    <div class=" row">
                                                        <div class="col-sm-6">
                                                            <label class="col-sm-12 form-label " perfect-class="formGroupLabel">Left</label>
                                                            <input type="text" id="xCordinates" style="width:100%;" class="form-control" placeholder="Left (pixels)" maxlength="4" onkeypress="return /^[0-9]+$/i.test(event.key)" onkeyup="if(value>parseInt(datawidth)) value=datawidth;" perfect-class="formGroupControl" perfect-css="input" perfect-ctype="input" />
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <label class="col-sm-12">Top &nbsp;<span class="text-danger">*</span></label>
                                                            <input type="text" id="ElmTop" style="width:100%;" class="form-control " placeholder="Top (pixels)" maxlength="4" onkeypress="return /^[0-9]+$/i.test(event.key)" onkeyup="if(value>parseInt(dataheight)) value=dataheight;" />
                                                            <span class="field-validation-valid" data-valmsg-for="" id="ValForElmTop" data-valmsg-replace="true" style="color: red;"></span>
                                                        </div>

                                                    </div>
                                                </div>

                                                <div class="form-group col-sm-12">

                                                    <div class="row">
                                                        <div class="col-sm-6">
                                                            <label class="col-sm-12">Width</label>
                                                            <input type="text" id="ElmWidth" style="width:100%;" class="form-control " placeholder="Width (pixels)" maxlength="4" onkeypress="return /^[0-9]+$/i.test(event.key)" onkeyup="if(value>parseInt(datawidth)) value=datawidth;" />
                                                        </div>

                                                        <div class="col-sm-6">
                                                            <label class="col-sm-12">Height</label>
                                                            <input type="text" id="ElmHeight" style="width:100%;" class="form-control " placeholder="Height (pixels)" maxlength="4" onkeypress="return /^[0-9]+$/i.test(event.key)" onkeyup="if(value>parseInt(dataheight)) value=dataheight;" />
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="form-group col-sm-12">

                                                    <div class="row">

                                                        @*<div class="col-sm-6">
                                                                <label class="col-sm-12">Charater Length</label>

                                                                <input type="text" id="CharacterLength" style="width:100%;" class="form-control TxtDeciOne" placeholder="character Length" disabled />
                                                            </div>*@



                                                        <div class="col-sm-6">
                                                            <label class="col-sm-12">Is MaxLength</label>


                                                            <input type="checkbox" class="form-check-input TxtDeciOne" id="ISMaxLength" name="ISMaxLength" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" />

                                                        </div>

                                                        <div id="characterLengthContainer" class="col-sm-6" style="display: none;">
                                                            <label class="col-sm-12">Charater Length</label>

                                                            <input type="text" id="CharacterLength" style="width:100%;" class="form-control TxtDeciOne" placeholder="Max-Character Count in Single Line " title="Max-Character Count in Single Line ." />
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <label class="col-sm-12">Opacity</label>
                                                            @*<input type="text" id="ElmOpacity" style="width:100%;" class="form-group TxtDeciOne" placeholder="0.0 - 1.0" />*@
                                                            <input type="number" id="ElmOpacity" style="width:100%;" class="form-control TxtDeciOne" max="1" min="0" step=".1" placeholder="0.0 - 1.0" , onkeyup="if(value<0) value=0;if(value>1) value=1;" />
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-12">
                                                        <span class="field-validation-valid" data-valmsg-for="" id="ValForCmmn" data-valmsg-replace="true" style="color: red;"></span>
                                                        <span class="field-validation-valid" data-valmsg-for="" id="ValForCmmn2" data-valmsg-replace="true" style="color: red;"></span>
                                                        <span class="field-validation-valid" data-valmsg-for="" id="ValForCmmn3" data-valmsg-replace="true" style="color: red;"></span>

                                                    </div>

                                                </div>
                                                <div class="form-group col-sm-12">
                                                    <div class="">
                                                        <input type="button" class="form-group  btn btn-sm btn-primary mr-1" id="Cordinates" value="Set Coordinates" />
                                                        <input type="button" class="form-group  btn btn-sm btn-light" id="ClearCordinates" value="Clear" />
                                                    </div>
                                                </div>

                                                @*<div class="form-group col-sm-12 text-right">
                                                        <div class="">
                                                            <input type="button" class="form-group  btn btn-sm btn-primary mr-1" id="Cordinates" value="Next" onclick="Load_toolbox('addStyleSettings')">

                                                        </div>
                                                    </div>*@
                                            </div>





                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>


                    <div class="row">


                    </div>
                    <div class="">
                        <div class="card-footer text-right" perfect-class="formFooter">


                            <button id="Submit_update" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" perfect-class=formTitle onclick="fn_SaveCommonPrintSettings(this,'Save')" data-target=".bd-example-modal-lg"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                            <button id="Submit_save" type="button" class="btn btn-primary mr-3 " name="Upadte" perfect-css="button" perfect-class=formTitle onclick="fn_SaveCommonPrintSettings(this,'Update')" data-target=".bd-example-modal-lg"><i class="fa fa-refresh fa-spin loaderClass "></i>Update</button>
                            <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" id="reset" name="reset">Clear</button>
                        </div>

                    </div>
                </div>




            </div>
        </form>

        <div id="hiddenMeasureElement"></div>



        @*/* image upload modal*/*@
        <div class="modal fade" id="squarespaceModal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" onclick="onModalClose()"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                        <h3 class="modal-title" id="lineModalLabel">Upload Image</h3>
                    </div>
                    <div class="modal-body">

                        <!-- content goes here -->
                        <form>
                            <div class="form-group">
                                <input type="file" id="BackGroundInputFile" name="BackGroundInputFile" accept="image/jpeg, image/x-png, image/gif, image/bmp" onchange="validateFileSize()" />

                                @*@Html.TextBoxFor(model => model.BackGroundInputFile, new { @type = "file", @accept = "image/jpeg, image/x-png, image/gif, image/bmp", @class = "form-control", @style = "color: Gray;", @id = "BackGroundInputFile" })
                                    @Html.ValidationMessageFor(m => m.BackGroundInputFile, "", new { @style = "color: red;" })*@
                                <p class="help-block">Upload Image</p>
                                <p id="Id_Upload_bg_img" class="text-danger"></p>
                            </div>


                        </form>
                    </div>
                    <div class="modal-footer">
                        <div class="btn-group btn-group-justified" role="group" aria-label="group button">
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-default" data-dismiss="modal" role="button" onclick="onModalClose()">Close</button>
                            </div>
                            <div class="btn-group" role="group">
                                <button type="button" id="saveImage" class="btn btn-success  pull-right btn-hover-green" data-action="save" role="button">Add</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @*<button onclick="Binddata__into()" class="btn btn-primary">Preview</button>
            <button onclick="getPrint()" class="btn btn-primary">Print</button>*@
    </div>
</div>


<script src="~/Scripts/jspdf.min.js"></script>

@*<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.3.1/html2canvas.min.js"></script>*@


<script>

    var valwidth;
    var valheight;
    var datawidth;
    var dataheight;
    var frontImgUrl;
    var BackImgUrl;
    var Side = 'FrontSide';
    var SelectedIdArray = [];
    //var SelectedId = 0;
    var SecletdSectionsArray = [];
    var SelectedItems = [];
    var NoColumn;
    var ViewChildElement;


    function ColumnnoChange(ele) {

        let $this = $(ele);
        let rowCount = $this.val();

        let $rowContainer = $this.closest('[perfect-common-print="settings"]').find('[perfect-common-print="tableOption"]')

        $rowContainer.empty();


        for (var i = 0; i < rowCount; i++) {

            let html = '<div class="col-12">';
            html+='<label class="col-sm-12 form-label" perfect-class="formGroupLabel">Columns'+(i+1)+' </label>'
            html += '<input type="text" id="Column' + (i+1) + '"  placeholder="Column Width" style="width:100%;" class="form-control" maxlength="3" onkeypress="return /^[0-9]+$/i.test(event.key)" onkeyup="if(value>parseInt(datawidth)) value=datawidth;" perfect-class="formGroupControl" perfect-css="input" perfect-ctype="input" />'
            html +='</div>'
            $rowContainer.append(html);
        }



    }
    function fn_nextStep() {
        debugger
        let Valid = true;


        if ($('#Submit_save').is(':hidden')) {
            // update
            console.log('Element is hidden');
            CheckVal = "Save";
        } else {
           //save
            CheckCommonNameExists();
        }


        console.log('settingsval', $('#SettingNameID').val());

        if (!$('#Module').val()) {
            $('#ErrForModule').text('Please a Module'); Valid = false;
        } else {
            $('#ErrForModule').text('');
        };
        if (!$('#PageOrientation').val()) {
            $('#ErrPageOrientation').text('Please Select Page Orientation'); Valid = false;
        } else {
            $('#ErrPageOrientation').text('');
        };
        if ($('#SettingNameID').val()=="") {
            $('#ErrForSettingNam').text('Please Select Setting Name'); Valid = false;
        }
        else {
            $('#ErrForSettingNam').text('');
        };

        if (CheckVal == "Exists") {
            $('#ErrForSettingNams').text('Setting Name Already Exists'); Valid = false;
        }
        else {
            $('#ErrForSettingNams').text('');
        };
        if (Valid && CheckVal=='Save') {
            document.querySelector('#step1').style.display = "none";
            document.querySelector('#SecondStpe').style.display = "block";



            @*$.ajax({
              //  url: '/CommonPrintSettings/GetCommonPrintElements',
                url: "@Url.Action("GetCommonPrintElements", "CommonPrintSettings")",
                data: { 'TransType': 1 },
                cache: false,
                type: 'POST',
                dataType: 'json',
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    debugger;
                    console.log(data, 'data')
                    //if (data.Process.IsProcess) {



                    //}
                    //else
                    //{

                    //}
                },

            });*@

            //$.ajax({
            //    url: '/CommonPrintSettings/GetCommonPrintElements',
            //    cache: false,
            //    type: 'post',
            //    dataType: 'json',
            //    contentType: 'application/json; charset=utf-8',
            //    success: function (data) {
            //        debugger;
            //        console.log(data, 'data');


            //        if (data.BranchList.Process.IsProcess) {



            //            data.BranchList.Data.forEach((i) => {

            //                var html = '<li>';
            //                html += '<a href="#" class="list-group-item elmnt" data-id="' + i.Id + '" style="padding-right: 0px; ">' + i.ElementName;
            //                html += ' <span class="pull-right btn btn-xs btn-primary" id="' + i.Id + 'Add" style="margin-top:-5px;">Add</span>';
            //                html += '<span class="pull-right btn btn-xs btn-default" id="' + i.Id + 'Remove" style="margin-right:16px;display:none;">X</span>';
            //                html += '</a></li>';


            //                $('#MoreElemetsId').append(html);

            //                //Add Event
            //                $('#'+i.Id+'Add').click(function () {
            //                    debugger

            //                    $('#' + Side).append(i.Html)

            //                    $('#' + i.Id + 'Add').css('display', 'none');
            //                    $('#' + i.Id+'Remove').css('display', 'block');

            //                    var ID = i.Id;
            //                    if (SelectedIdArray.length > 0) {
            //                        SelectedIdArray.length = 0;
            //                    }
            //                    SelectedIdArray.push(ID);
            //                    // }
            //                    // SelectedId = ID;

            //                });

            //                 // Remove Title
            //                $('#'+i.Id +'Remove').click(function () {
            //                    //if (confirm("Are you sure you want to remove this") == true) {
            //                    var div = document.getElementById(i.Id);
            //                    div.remove();

            //                    $('#' + i.Id + 'Add').css('display', 'block');
            //                    $('#' + i.Id + 'Remove').css('display', 'none');
            //                    return true;
            //                    //}
            //                });


            //                $('.elmnt').click(function () {
            //                    debugger
            //                    $('#ElmWidth').attr('disabled', false);
            //                    $('.elmnt').css({ 'background-color': '', 'color': '' });
            //                    var ID = $(this).attr('data-id');
            //                    $(this).css({ 'background-color': '#86a8d2', 'color': '#ffffff' });

            //                    if ($('#' + ID).attr('style') != undefined) {
            //                        var emtop = $('#' + ID).attr('style').split('top');

            //                        if (emtop.length > 1) {
            //                            var emoto = $('#' + ID).css('top').replace('px', '');
            //                            if (emoto != 'auto') { $('#ElmTop').val(emoto); } else { $('#ElmTop').val(''); }
            //                        } else { $('#ElmTop').val(''); }
            //                        var emleft = $('#' + ID).attr('style').split('left');

            //                        if (emleft.length > 1) {
            //                            var emole = $('#' + ID).css('left').replace('px', '');
            //                            if (emole != 'auto') { $('#xCordinates').val(emole); } else { $('#xCordinates').val(''); }
            //                        } else { $('#xCordinates').val(''); }

            //                        var emopa = $('#' + ID).attr('style').split('opacity');
            //                        if (emopa.length > 1) {
            //                            var emopaci = $('#' + ID).css('opacity').replace('px', '');
            //                            if (emopaci != 'auto') { $('#ElmOpacity').val(emopaci); } else { $('#ElmOpacity').val(''); }
            //                        } else { $('#ElmOpacity').val(''); }


            //                        var widhattr = $('#' + ID).attr('style').split('width');
            //                        if (widhattr.length > 1) {
            //                            var emweight = $('#' + ID).css('width').replace('px', '');
            //                            if (emweight != 'auto' && emweight != 0) { $('#ElmWidth').val(emweight); } else { $('#ElmWidth').val(''); }

            //                        } else { $('#ElmWidth').val(''); }

            //                        var heightattr = $('#' + ID).attr('style').split('height');
            //                        if (heightattr.length > 1) {


            //                            var emheight = $('#' + ID).css('height').replace('px', '');
            //                            if (emheight != 'auto' && emheight != 0) { $('#ElmHeight').val(emheight); } else { $('#ElmHeight').val(''); }
            //                        } else { $('#ElmHeight').val(''); }

            //                    }
            //                    else {
            //                        $('#ElmTop').val('');
            //                        $('#xCordinates').val('');
            //                        $('#ElmOpacity').val('');
            //                        $('#ElmWidth').val('');
            //                        $('#ElmHeight').val('');
            //                    }

            //                    if (SelectedIdArray.length > 0) {
            //                        SelectedIdArray.length = 0;
            //                    }

            //                    SelectedIdArray.push(ID);

            //                    SelectedItems.push(ID);
            //                    // SelectedId = ID;
            //                });
            //            })
            //            data.DetailsSection1.Data.forEach((i) => {

            //                var html = '<li>';
            //                html += '<a href="#" class="list-group-item elmnt" data-id="' + i.Id + '" style="padding-right: 0px; ">' + i.ElementName;
            //                html += ' <span class="pull-right btn btn-xs btn-primary" id="' + i.Id + 'Add" style="margin-top:-5px;">Add</span>';
            //                html += '<span class="pull-right btn btn-xs btn-default" id="' + i.Id + 'Remove" style="margin-right:16px;display:none;">X</span>';
            //                html += '</a></li>';


            //                $('#DetailsSection1').append(html);

            //                //Add Event
            //                $('#' + i.Id + 'Add').click(function () {
            //                    debugger

            //                    $('#' + Side).append(i.Html)

            //                    $('#' + i.Id + 'Add').css('display', 'none');
            //                    $('#' + i.Id + 'Remove').css('display', 'block');

            //                    var ID = i.Id;
            //                    if (SelectedIdArray.length > 0) {
            //                        SelectedIdArray.length = 0;
            //                    }
            //                    SelectedIdArray.push(ID);
            //                    // }
            //                    // SelectedId = ID;

            //                });

            //                // Remove Title
            //                $('#' + i.Id + 'Remove').click(function () {
            //                    //if (confirm("Are you sure you want to remove this") == true) {
            //                    var div = document.getElementById(i.Id);
            //                    div.remove();

            //                    $('#' + i.Id + 'Add').css('display', 'block');
            //                    $('#' + i.Id + 'Remove').css('display', 'none');
            //                    return true;
            //                    //}
            //                });


            //                $('.elmnt').click(function () {
            //                    debugger
            //                    $('#ElmWidth').attr('disabled', false);
            //                    $('.elmnt').css({ 'background-color': '', 'color': '' });
            //                    var ID = $(this).attr('data-id');
            //                    $(this).css({ 'background-color': '#86a8d2', 'color': '#ffffff' });

            //                    if ($('#' + ID).attr('style') != undefined) {
            //                        var emtop = $('#' + ID).attr('style').split('top');

            //                        if (emtop.length > 1) {
            //                            var emoto = $('#' + ID).css('top').replace('px', '');
            //                            if (emoto != 'auto') { $('#ElmTop').val(emoto); } else { $('#ElmTop').val(''); }
            //                        } else { $('#ElmTop').val(''); }
            //                        var emleft = $('#' + ID).attr('style').split('left');

            //                        if (emleft.length > 1) {
            //                            var emole = $('#' + ID).css('left').replace('px', '');
            //                            if (emole != 'auto') { $('#xCordinates').val(emole); } else { $('#xCordinates').val(''); }
            //                        } else { $('#xCordinates').val(''); }

            //                        var emopa = $('#' + ID).attr('style').split('opacity');
            //                        if (emopa.length > 1) {
            //                            var emopaci = $('#' + ID).css('opacity').replace('px', '');
            //                            if (emopaci != 'auto') { $('#ElmOpacity').val(emopaci); } else { $('#ElmOpacity').val(''); }
            //                        } else { $('#ElmOpacity').val(''); }


            //                        var widhattr = $('#' + ID).attr('style').split('width');
            //                        if (widhattr.length > 1) {
            //                            var emweight = $('#' + ID).css('width').replace('px', '');
            //                            if (emweight != 'auto' && emweight != 0) { $('#ElmWidth').val(emweight); } else { $('#ElmWidth').val(''); }

            //                        } else { $('#ElmWidth').val(''); }

            //                        var heightattr = $('#' + ID).attr('style').split('height');
            //                        if (heightattr.length > 1) {


            //                            var emheight = $('#' + ID).css('height').replace('px', '');
            //                            if (emheight != 'auto' && emheight != 0) { $('#ElmHeight').val(emheight); } else { $('#ElmHeight').val(''); }
            //                        } else { $('#ElmHeight').val(''); }

            //                    }
            //                    else {
            //                        $('#ElmTop').val('');
            //                        $('#xCordinates').val('');
            //                        $('#ElmOpacity').val('');
            //                        $('#ElmWidth').val('');
            //                        $('#ElmHeight').val('');
            //                    }

            //                    if (SelectedIdArray.length > 0) {
            //                        SelectedIdArray.length = 0;
            //                    }

            //                    SelectedIdArray.push(ID);

            //                    SelectedItems.push(ID);
            //                    // SelectedId = ID;
            //                });
            //            });

            //            data.DetailsSection2.Data.forEach((i) => {
            //                debugger
            //                var html = '<li>';
            //                html += '<a href="#" class="list-group-item elmnt" data-id="' + i.Id + '" style="padding-right: 0px; ">' + i.ElementName;
            //                html += ' <span class="pull-right btn btn-xs btn-primary" id="' + i.Id + 'Add" style="margin-top:-5px;">Add</span>';
            //                html += '<span class="pull-right btn btn-xs btn-default" id="' + i.Id + 'Remove" style="margin-right:16px;display:none;">X</span>';
            //                html += '</a></li>';


            //                $('#DetailsSection2').append(html);

            //                //Add Event
            //                $('#' + i.Id + 'Add').click(function () {
            //                    debugger

            //                    $('#' + Side).append(i.Html)

            //                    $('#' + i.Id + 'Add').css('display', 'none');
            //                    $('#' + i.Id + 'Remove').css('display', 'block');

            //                    var ID = i.Id;
            //                    if (SelectedIdArray.length > 0) {
            //                        SelectedIdArray.length = 0;
            //                    }
            //                    SelectedIdArray.push(ID);
            //                    // }
            //                    // SelectedId = ID;

            //                });

            //                // Remove Title
            //                $('#' + i.Id + 'Remove').click(function () {
            //                    //if (confirm("Are you sure you want to remove this") == true) {
            //                    debugger
            //                    var div = document.getElementById(i.Id);
            //                    div.remove();

            //                    $('#' + i.Id + 'Add').css('display', 'block');
            //                    $('#' + i.Id + 'Remove').css('display', 'none');
            //                    return true;
            //                    //}
            //                });


            //                $('.elmnt').click(function () {
            //                    debugger
            //                    $('#ElmWidth').attr('disabled', false);
            //                    $('.elmnt').css({ 'background-color': '', 'color': '' });
            //                    var ID = $(this).attr('data-id');
            //                    $(this).css({ 'background-color': '#86a8d2', 'color': '#ffffff' });

            //                    if ($('#' + ID).attr('style') != undefined) {
            //                        var emtop = $('#' + ID).attr('style').split('top');

            //                        if (emtop.length > 1) {
            //                            var emoto = $('#' + ID).css('top').replace('px', '');
            //                            if (emoto != 'auto') { $('#ElmTop').val(emoto); } else { $('#ElmTop').val(''); }
            //                        } else { $('#ElmTop').val(''); }
            //                        var emleft = $('#' + ID).attr('style').split('left');

            //                        if (emleft.length > 1) {
            //                            var emole = $('#' + ID).css('left').replace('px', '');
            //                            if (emole != 'auto') { $('#xCordinates').val(emole); } else { $('#xCordinates').val(''); }
            //                        } else { $('#xCordinates').val(''); }

            //                        var emopa = $('#' + ID).attr('style').split('opacity');
            //                        if (emopa.length > 1) {
            //                            var emopaci = $('#' + ID).css('opacity').replace('px', '');
            //                            if (emopaci != 'auto') { $('#ElmOpacity').val(emopaci); } else { $('#ElmOpacity').val(''); }
            //                        } else { $('#ElmOpacity').val(''); }


            //                        var widhattr = $('#' + ID).attr('style').split('width');
            //                        if (widhattr.length > 1) {
            //                            var emweight = $('#' + ID).css('width').replace('px', '');
            //                            if (emweight != 'auto' && emweight != 0) { $('#ElmWidth').val(emweight); } else { $('#ElmWidth').val(''); }

            //                        } else { $('#ElmWidth').val(''); }

            //                        var heightattr = $('#' + ID).attr('style').split('height');
            //                        if (heightattr.length > 1) {


            //                            var emheight = $('#' + ID).css('height').replace('px', '');
            //                            if (emheight != 'auto' && emheight != 0) { $('#ElmHeight').val(emheight); } else { $('#ElmHeight').val(''); }
            //                        } else { $('#ElmHeight').val(''); }

            //                    }
            //                    else {
            //                        $('#ElmTop').val('');
            //                        $('#xCordinates').val('');
            //                        $('#ElmOpacity').val('');
            //                        $('#ElmWidth').val('');
            //                        $('#ElmHeight').val('');
            //                    }

            //                    if (SelectedIdArray.length > 0) {
            //                        SelectedIdArray.length = 0;
            //                    }

            //                    SelectedIdArray.push(ID);

            //                    SelectedItems.push(ID);
            //                    // SelectedId = ID;
            //                });
            //            })

            //        }
            //    },
            //    error: function (error) {
            //        console.log('An error occurred:', error);
            //    }
            //});
           // Element_load()
        };
    };
    $(document).on('click', '.panel-heading span.clickable', function (e) {
        debugger
        var $this = $(this);
        if (!$this.hasClass('panel-collapsed')) {
            $this.parents('.panel').find('.panel-body').slideUp();
            $this.addClass('panel-collapsed');
            $this.find('i').removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');
        } else {
            $this.parents('.panel').find('.panel-body').slideDown();
            $this.removeClass('panel-collapsed');
            $this.find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
        }
    });


    function test(callback) {
       // $("#FrontSide").css({ 'width': '100px', 'height': '100px' });


       

        var $PageOrientation = $('#PageOrientation option:selected').val();
        console.log(PageSizeObj);

        PageSizeObj.forEach((i) => {

            //if (i.PValue == $PageOrientation) {
            //    valwidth = i.width_in_px +'px';
            //    valheight = i.height_in_px +'px';
            //    datawidth = i.width_in_px;
            //    dataheight = i.height_in_px ;
            //};
            if (i.PValue == $PageOrientation) {
                valwidth = i.width_in_px ;
                valheight = i.height_in_px;
                datawidth = i.width_in_px;
                dataheight = i.height_in_px;
            };
        });

       
        callback({ "width": valwidth, "height": valheight });
      //  $("#FrontSide").css({ 'width': '200mm', 'height': '100px' });
       
    }
    function setWidthAndHeight(data) {
        console.log('sss',data)
        $("#FrontSide").css("width", data.width + "mm");
        $("#FrontSide").css("height", data.height + "mm");
    }


    function PageOrientaionChange() {
        debugger

       // $("#FrontSide").css({ 'width': '100px', 'height': '100px' });




        var $PageOrientation = $('#PageOrientation option:selected').val();
        console.log('pageorientation1:',PageSizeObj);

        PageSizeObj.forEach((i) => {

            //if (i.PValue == $PageOrientation) {
            //    valwidth = i.width_in_px +'px';
            //    valheight = i.height_in_px +'px';
            //    datawidth = i.width_in_px;
            //    dataheight = i.height_in_px ;
            //};
            if (i.PValue == $PageOrientation) {
                valwidth = i.width_in_px + 'mm';
                valheight = i.height_in_px + 'mm';
                datawidth = i.width_in_px;
                dataheight = i.height_in_px;
            };
        });

        //var element = document.getElementById("FrontSide");
        //if (element) {
        //    element.style.width = valwidth;
        //    element.style.height = valheight;
        //}
        $("#FrontSide").css({ 'width': valwidth, 'height': valheight });
        $("#workboard").css({ 'width': valwidth, 'height': valheight });
      //  test(setWidthAndHeight)

    };

    //Image Add
    $('#logoImageAdd').click(function(){
        let image = "@Url.Content("~/Assets/images/avatar/avatar2.png")";
        //if (_Error == 0) {
            if (findCommonElement(SelectedItems, SelectedIdArray) == true) { }
            $('#logoImageAdd').css('display', 'none');
            $('#logoImageRemove').css('display', 'block');
       // $('#' + Side).append('<img id="logoImage" src="' + image + '" style="max-width:' + valwidth + ';max-height:' + valheight + ';"/>')
        $('#' + Side).append('<img id="logoImage" src="' + image + '" style="max-width:' + '200px' + ';max-height:' + '200' + ';  width: 100px; height:100px" class="element"/>')

        var ID = "logoImage";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
    });

    //Title Add
    $('#NameLabelAdd').click(function () {
        debugger
        //var _Error = 0;
        //if (Side == 0) {
        //    $('#ValForSide').html('Select Side');
        //    _Error++;
        //}
        //else {
        //    $('#ValForSide').html('');
        //    _Error = 0;
        //}
        //if (_Error == 0) {
        $('#' + Side).append('<label id="NameLabel" class="element" style="color:black;font-size:medium;font-weight:bold;  width: 50px; height: 30px;">Tittle</label>')

            $('#NameLabelAdd').css('display', 'none');
            $('#NameLabelRemove').css('display', 'block');

            var ID = "NameLabel";
            if (SelectedIdArray.length > 0) {
                SelectedIdArray.length = 0;
            }
            SelectedIdArray.push(ID);
        // }
       // SelectedId = ID;

    });

    //upload backgroud image modal show
    //$('#Cordinates').on('click', function () {
    $('#BackImage').click( function () {
        $('#squarespaceModal').modal('show');
    });

    //save image
    $('#saveImage').click(function () {

        $('#squarespaceModal').modal('hide');
        readURL();
    });

    //Remove image
    $('#logoImageRemove').click(function () {

        debugger
        //if (confirm("Are you sure you want to remove this") == true) {
        var div = document.getElementById('logoImage');
        div.remove();
        $('#logoImageAdd').css('display', 'block');
        $('#logoImageRemove').css('display', 'none');
        //$("#logoImage").empty();

        return true;
        //}

    });
    // Remove Title
    $('#NameLabelRemove').click(function () {
        //if (confirm("Are you sure you want to remove this") == true) {
        var div = document.getElementById('NameLabel');
        div.remove();
        $('#NameLabelAdd').css('display', 'block');
        $('#NameLabelRemove').css('display', 'none');
        return true;
        //}
    });

    //adding address
    $('#StdAddr').click(function () {
        //var _Error = 0;
        //if (Side == 0) {
        //    $('#ValForSide').html('Select Side');
        //    _Error++;
        //}
        //else {
        //    $('#ValForSide').html('');
        //    _Error = 0;
        //}
        //if (_Error == 0) {
            $('#StdAddr').css('display', 'none');
            $('#StuAddremove').css('display', 'block');
            $('#' + Side).append('<div id="StuAddress" style="color:black;"><div id=""><strong>Address, Ins.</strong><br>Address line 1<br>Address line 2<br>Address line 3<br><strong title="Phone" style="font-size:10px;">Phone Number</strong><br><strong title="Email"style="font-size:10px;"><span style="font-size: 8px;">EmailAddr@gmail.com</span></strong></div></div>')

        //}
        var ID = "StuAddress";

        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
    })




    //return url of image
    function readURL() {
        debugger
        var file = document.getElementById("BackGroundInputFile").files[0];
        var reader = new FileReader();
        reader.onloadend = function () {

            frontImgUrl = reader.result;
            document.getElementById('FrontSide').style.backgroundImage = "url(" + reader.result + ")";
            $('#BackImage').css('display', 'none');
            $('#BackImageRemove').css('display', 'block');
        }
        if (file) {
            reader.readAsDataURL(file);
        } else {
        }
    }


    function findCommonElement(array1, array2) {

        // Loop for array1
        for (let i = 0; i < array1.length; i++) {

            // Loop for array2
            for (let j = 0; j < array2.length; j++) {

                // Compare the element of each and
                // every element from both of the
                // arrays
                if (array1[i] === array2[j]) {

                    // Return if common element found
                    return true;
                }
            }
        }

        // Return if no common element exist
        return false;
    }








    // validation foe set cordinates
    $('#Cordinates').click( function () {
        debugger
        //if ($('#ElmTop').val() != "" && $('#ElmTop').val() != undefined && $('#ElmTop').val() != "0") {
        //    $('#ValForElmTop').html('');

        if ($('#xCordinates').val() == "") {
           var xCordinate = 0;
        } else {
             xCordinate = $('#xCordinates').val();
        }

        if ($('#yCordinate').val() == "") {
            var yCordinate = 0;
        } else {
            yCordinate = $('#yCordinates').val();
        }

        var Width = $('#ElmWidth').val();

        var Height = $('#ElmHeight').val();

        var Opacity = $('#ElmOpacity').val();

        var Top = $('#ElmTop').val();
        var MaxLength ;
        if ($('#CharacterLength').val() == "") {
            MaxLength = 0;
        }
        else {
            MaxLength = $('#CharacterLength').val();
        }
       // var NoCharacter = $('#CharacterLength').val();

        var ID = SelectedIdArray[0];
        //var ID = SelectedId;

        var error = false;


        //if (NoCharacter != undefined && NoCharacter != "" && NoCharacter!= 0) {
        //    NoCharacter = Number(NoCharacter);
        //    Width = getWidth(NoCharacter);
        //    $('#ElmWidth').val(Width);
        //}
        //if (Width != undefined && Width != "" && Width != 0) {
        //    if (ID == 'pBox') {
        //        var NoCharacter = getNumofcharonbox(ID);
        //    } else {
        //        NoCharacter = getNumofcharonLine(ID);
        //    };
        //    $('#CharacterLength').val(NoCharacter);
        //}


        if ($('#ElmTop').val() != "" && $('#ElmTop').val() != undefined && $('#ElmTop').val() != "0") { $('#ValForElmTop').html(''); }
        else {
            $('#ValForElmTop').html('Enter Top');
            error = true;
        }


        if (ID == undefined) { error = true; $('#ValForCmmn3').html('Select Element.'); } else {
            $('#ValForCmmn3').html('');
        }


        var tot = parseInt(xCordinate) + parseInt(Width)
        //var tot = parseInt(xCordinate)
        if (parseInt(tot) > parseInt(datawidth)) {
            $('#ValForCmmn').html('Sum of Left and Width cannot be greater than ' + datawidth + '.<br />');
            error = true;
        }
        else {
            $('#ValForCmmn').html('');
        }
         var tothei = parseInt(Top) + parseInt(Height)
        //var tothei = parseInt(Top)
        if (parseInt(tothei) > parseInt(dataheight)) {
            $('#ValForCmmn2').html('Sum of Top and Height cannot be greater than ' + dataheight + '.<br />');
            error = true;
        } else {
            $('#ValForCmmn2').html('');
        }

        //let position;
        //if (ID == 'PRHeader' || ID == 'PPHeader' || ID == 'PPFooter'|| ID == 'PRFooter'|| ID == 'PBody') {
            position = 'absolute';


        //} else {
        //    position = 'relative';
        //}





        if (!error) {
            updateDiv(ID, Width, Height, xCordinate, yCordinate, Top, Opacity, position, MaxLength);
        }
        $('#xCordinates').val('');
        $('#CharacterLength').val('');
        $('#ISMaxLength').prop('checked', false); // Set checkbox to false

        hideCharacterLengthContainer();
        //}
        //else {
        //    $('#ValForElmTop').html('Enter Top');

        //}
    });







    //upadteing css
    function updateDiv(id, width, height, left, right, top, opacity, position, MaxLength) {
        debugger
        var mydiv = document.getElementById(id);

        mydiv.setAttribute('id', id);
        if (width != "" && width != undefined) {
            mydiv.style.width = width + "mm";
        }
        else {
            mydiv.style.width = "";
        }
        if (height != "" && height != undefined) {
            mydiv.style.height = height + "mm";
        } else {
            mydiv.style.height = "";
        }

        if (left != "" && left != undefined) {
            mydiv.style.left = left + "mm";
        } else {
            mydiv.style.left = "";
        }

        if (top != "" && top != undefined) {
            mydiv.style.top = top + "mm";
        } else {
            mydiv.style.top = "";
        }

        if (right != "" && right != undefined) {
            mydiv.style.right = right + "mm";
        } else {
            mydiv.style.right = "";
        }

        if (opacity != "" && opacity != undefined) {
            mydiv.style.opacity = opacity;
        } else {
            mydiv.style.opacity = "";
        }

      // mydiv.style.position = "absolute";
        //mydiv.style.position = "relative";
        mydiv.style.position = position;
        if (MaxLength != "" && MaxLength != "0") {
            mydiv.setAttribute('MaxLength', MaxLength);
        }


        if (id.length > 0) {

            var element = id;

            // Set the maximum length you desire
            var maxLength = MaxLength; // for example, limit to 100 characters

            // Trim the content to the maximum length
            var content = element.textContent;
            if (id.length > maxLength) {
                id = id.substring(0, maxLength);
            }

        }
    }


    //$(document).on('click', '.elm-add', function () {
    //   debugger
    //   // console.log(this.id)
    //    Load_toolbox('addElement');


    //})


    function Load_toolbox(ele) {
        debugger

        //switch (ele) {
        //    case 'addElement':
        //        $('.addElement').hide();
        //        $('.fontSettings').show();
        //        break;

        //    case 'addFontSettings':
        //        $('.fontSettings').hide();
        //        $('.styleSettings').show();
        //        break;
        //    case 'addStyleSettings':
        //        $('.styleSettings').hide();
        //        $('.addElement').show();
        //    default:
        //        //
        //}
    };

    $(document).ready(function () {
        debugger
        //$('.addElement').show();
        //$('.styleSettings').hide();
        //$('.fontSettings').hide();
        //$('.moreTools').hide();

        // IdCardSideChange(Side);
        //var AddORUpdate = 0;



        console.log('parentElement555???', parentElement_test);

        $("#FrontIDCard").show();
    });

    //font align
    //$('#PaymentinfoAdd').click(function () {
    $('#btnFontAlign').click( function () {
        debugger
        var txtalign = $('#ElmntFontAlign option:selected').val();

        var ID = SelectedIdArray[0];
        if (txtalign != "" && txtalign != undefined && txtalign != "0") {
            document.getElementById(ID).style.textAlign = txtalign;
        }
        else {
            $("#" + ID + "").css("text-align", "");
        }
    });

    //Font style

    $('#btnFontStyle').click( function () {
        debugger
        var fontstyleelm = $('#ElmntFontStyle :selected').css('font-family');
        var ID = SelectedIdArray[0];
        if (fontstyleelm != "Rubik-Regular, sans-serif" && fontstyleelm != undefined) {
            document.getElementById(ID).style.fontFamily = fontstyleelm;
        }
        else {
            $("#" + ID + "").css("font-family", "");
        }
        ////$('#HdnQuestionPaper').val($('#FK_QuestionPaper :selected').val());
        //$('#QuestionPaper').val($('#ElmntFontStyle :selected').text());
    });


    $('#btnFont').click( function () {
        debugger
        var FontSize = $('#ElmntFont').val();

        var ID = SelectedIdArray[0];


        if (FontSize != "" && FontSize != undefined) {
            document.getElementById(ID).style.fontSize = FontSize + "px";
        }
        else {
            $("#" + ID + "").css("font-size", "");
        }
    });

    $('#BtnBold').click (function () {
        debugger
        var ID = SelectedIdArray[0];
        var n = $("#" + ID).css("font-weight");
        if (n != "700") {
            document.getElementById(ID).style.fontWeight = "bold";
        }
        else {

            $("#" + ID + "").css("font-weight", "");
        }
    });


    $('#BtnItalic').click (function () {
        debugger
        var ID = SelectedIdArray[0];
        var n = $("#" + ID).css("font-style");

        if (n != "italic") {
            document.getElementById(ID).style.fontStyle = "italic";
        }
        else {

            $("#" + ID + "").css("font-style", "");
        }
    });


    $('#BtnUpprCse').click( function () {
        debugger
        var ID = SelectedIdArray[0];
        var n = $("#" + ID).css("text-transform");

        if (n != "uppercase") {
            document.getElementById(ID).style.textTransform = "uppercase";
        }
        else {

            $("#" + ID + "").css("text-transform", "");
        }
    });


    $('#btnColor').click( function () {
        debugger
        var FontColor = $('#ElmntFontColor').val();
        var ID = SelectedIdArray[0];
        if (FontColor != "" && FontColor != undefined) {
            document.getElementById(ID).style.color = FontColor;
        }
    });


    $('#ClearCordinates').click(function () {
        $('#ValForElmTop').html('');

        $('#xCordinates').val('');

        $('#yCordinates').val('');

        $('#ElmWidth').val('');

        $('#ElmHeight').val('');

        $('#ElmOpacity').val('');

        $('#ElmTop').val('');
        $('#CharacterLength').val('');
        $('#ISMaxLength').prop('checked', false); // Set checkbox to false
        // Trigger the change event manually if needed

    });

    function updateCheckboxState() {
        var characterLengthInput = document.getElementById("CharacterLength");
        var maxLengthCheckbox = document.getElementById("ISMaxLength");

        if (characterLengthInput.value.trim() === "") {
            maxLengthCheckbox.checked = false;
        }
    }

    // Add event listener to the input field to detect changes
    document.getElementById("CharacterLength").addEventListener("input", updateCheckboxState);
    /* Start  item remove Events Section-- */
   //$('#PaymentinfoAdd').click(function () {
    $('#NameLabelRemove').click( function () {
            //if (confirm("Are you sure you want to remove this") == true) {
            var div = document.getElementById('NameLabel');
            div.remove();
            $('#NameLabelAdd').css('display', 'block');
            $('#NameLabelRemove').css('display', 'none');
            return true;
            //}
        });
        //$(document).on('click', '#logoImageRemove', function () {

        //    debugger
        //    //if (confirm("Are you sure you want to remove this") == true) {
        //    var div = document.getElementById('logoImage');
        //    div.remove();

        //    $('#logoImageAdd').css('display', 'block');
        //    $('#logoImageRemove').css('display', 'none');
        //    //$("#logoImage").empty();

        //    return true;
        //    //}

        //});

    $('#BackImageRemove').click( function () {
            //if (confirm("Are you sure you want to remove this") == true) {
            $("#FrontSide").attr("style", "width:" + valwidth + ";height:" + valheight + ";color:#ffffff;background-size:contain;border-style:groove;border-width:1px;");
            $('#BackImage').css('display', 'block');
        $('#BackImageRemove').css('display', 'none');
        frontImgUrl = '';
            return true;
            //}
        });
    //$('#PaymentinfoAdd').click(function () {
    $('#InvoiceNoRemove').click(function () {
        debugger
            //if (confirm("Are you sure you want to remove this") == true) {
            var div = document.getElementById('InvoiceNo');
            div.remove();
            $('#InvoiceNoAdd').css('display', 'block');
            $('#InvoiceNoRemove').css('display', 'none');
            return true;
            //}
    });
    $('#pVerticalLineRemove').click(function () {
        //if (confirm("Are you sure you want to remove this") == true) {
        var div = document.getElementById('pVerticalLine');
        div.remove();
        $('#pVerticalLineAdd').css('display', 'block');
        $('#pVerticalLineRemove').css('display', 'none');
        return true;
        //}
    });
    $('#pBoxRemove').click(function () {

        //if (confirm("Are you sure you want to remove this") == true) {
        var div = document.getElementById('pBox');
        div.remove();
        $('#pBoxAdd').css('display', 'block');
        $('#pBoxRemove').css('display', 'none');
        return true;
        //}
    });
    $('#ptableMarkerStarterRemove').click(function () {
       debugger
        var div = document.getElementById('ptableMarkerStarter');
        div.remove();
        $('#ptableMarkerStarterAdd').css('display', 'block');
        $('#ptableMarkerStarterRemove').css('display', 'none');
        return true;
        //}
    });
    $('#ptable2MarkerStarterRemove').click(function () {
        debugger
        var div = document.getElementById('ptable2MarkerStarter');
        div.remove();
        $('#ptable2MarkerStarterAdd').css('display', 'block');
        $('#ptable2MarkerStarterRemove').css('display', 'none');
        return true;
        //}
    });
    $('#ptable3MarkerStarterRemove').click(function () {
        debugger
        var div = document.getElementById('ptable3MarkerStarter');
        div.remove();
        $('#ptable3MarkerStarterAdd').css('display', 'block');
        $('#ptable3MarkerStarterRemove').css('display', 'none');
        return true;
        //}
    });
    $('#ptable4MarkerStarterRemove').click(function () {
        debugger
        var div = document.getElementById('ptable4MarkerStarter');
        div.remove();
        $('#ptable4MarkerStarterAdd').css('display', 'block');
        $('#ptable4MarkerStarterRemove').css('display', 'none');
        return true;
        //}
    });
    $('#ptable5MarkerStarterRemove').click(function () {
        debugger
        var div = document.getElementById('ptable5MarkerStarter');
        div.remove();
        $('#ptable5MarkerStarterAdd').css('display', 'block');
        $('#ptable5MarkerStarterRemove').css('display', 'none');
        return true;
        //}
    });
    $('#ptable6MarkerStarterRemove').click(function () {
        debugger
        var div = document.getElementById('ptable6MarkerStarter');
        div.remove();
        $('#ptable6MarkerStarterAdd').css('display', 'block');
        $('#ptable6MarkerStarterRemove').css('display', 'none');
        return true;
        //}
    });
    $('#ptableMarkerEnderRemove').click(function () {
        debugger
        var div = document.getElementById('ptableMarkerEnder');
        div.remove();
        $('#ptableMarkerEnderAdd').css('display', 'block');
        $('#ptableMarkerEnderRemove').css('display', 'none');
        return true;
        //}
    });
    $('#ptable2MarkerEnderRemove').click(function () {
        debugger
        var div = document.getElementById('ptable2MarkerEnder');
        div.remove();
        $('#ptable2MarkerEnderAdd').css('display', 'block');
        $('#ptable2MarkerEnderRemove').css('display', 'none');
        return true;
        //}
    });
    $('#ptable3MarkerEnderRemove').click(function () {
        debugger
        var div = document.getElementById('ptable3MarkerEnder');
        div.remove();
        $('#ptable3MarkerEnderAdd').css('display', 'block');
        $('#ptable3MarkerEnderRemove').css('display', 'none');
        return true;
        //}
    });
    $('#ptable4MarkerEnderRemove').click(function () {
        debugger
        var div = document.getElementById('ptable4MarkerEnder');
        div.remove();
        $('#ptable4MarkerEnderAdd').css('display', 'block');
        $('#ptable4MarkerEnderRemove').css('display', 'none');
        return true;
        //}
    });
    $('#ptable5MarkerEnderRemove').click(function () {
        debugger
        var div = document.getElementById('ptable5MarkerEnder');
        div.remove();
        $('#ptable5MarkerEnderAdd').css('display', 'block');
        $('#ptable5MarkerEnderRemove').css('display', 'none');
        return true;
        //}
    });
    $('#ptable6MarkerEnderRemove').click(function () {
        debugger
        var div = document.getElementById('ptable6MarkerEnder');
        div.remove();
        $('#ptable6MarkerEnderAdd').css('display', 'block');
        $('#ptable6MarkerEnderRemove').css('display', 'none');
        return true;
        //}
    });
    $('#pHorizontalLineRemove').click(function () {
        //if (confirm("Are you sure you want to remove this") == true) {
        var div = document.getElementById('pHorizontalLine');
        div.remove();
        $('#pHorizontalLineAdd').css('display', 'block');
        $('#pHorizontalLineRemove').css('display', 'none');
        return true;
        //}
    });
    //$('#PaymentinfoAdd').click(function () {
    //$('#InsAddressRemove').click( function () {
    //    debugger
    //        //if (confirm("Are you sure you want to remove this") == true) {
    //        var div = document.getElementById('InsAddress');
    //        div.remove();
    //        $('#InsAddressAdd').css('display', 'block');
    //        $('#InsAddressRemove').css('display', 'none');
    //        return true;
    //        //}
    //});
    //$('#PaymentinfoAdd').click(function () {
    //$('#SubtotalRemove').click( function () {
    //    debugger
    //    //if (confirm("Are you sure you want to remove this") == true) {
    //    var div = document.getElementById('Subtotal');
    //    div.remove();
    //    $('#SubtotalAdd').css('display', 'block');
    //    $('#SubtotalRemove').css('display', 'none');
    //    return true;
    //    //}
    //});

    //$('#PaymentinfoAdd').click(function () {
    $('#DateRemove').click( function () {
        debugger
        //if (confirm("Are you sure you want to remove this") == true) {
        var div = document.getElementById('Date');
        div.remove();
        $('#DateAdd').css('display', 'block');
        $('#DateRemove').css('display', 'none');
        return true;
        //}
    });

    //$('#PaymentinfoRemove').click(function () {
    ////$(document).on('click', '#PaymentinfoRemove', function () {
    //    debugger
    //    //if (confirm("Are you sure you want to remove this") == true) {
    //    var div = document.getElementById('Paymentinfo');
    //    $('#PaymentinfoAdd').css('display', 'block');
    //    if (div)
    //    div.remove();

    //    $('#PaymentinfoRemove').css('display', 'none');

    //    return true;
    //    //}
    //});


    //$('#innerTableRemove').click( function () {
    //    debugger
    //    var div = document.getElementById('innerTable');
    //    div.remove();
    //    $('#innerTableAdd').css('display', 'block');
    //    $('#innerTableRemove').css('display', 'none');
    //    return true;
    //})


    //$('#TermscondtnRemove').click( function () {
    //    debugger
    //    var div = document.getElementById('Termscondtn');
    //    div.remove();
    //    $('#TermscondtnAdd').css('display', 'block');
    //    $('#TermscondtnRemove').css('display', 'none');
    //    return true;
    //})

    /* End  item remove Events Section--*/



    /* Start  item add Events Section-- */




    $('#InvoiceNoAdd').click(function () {
        debugger
            var _Error = 0;
            if (Side == 0) {
                $('#ValForSide').html('Select Side');
                _Error++;
            }
            else {
                $('#ValForSide').html('');
                _Error = 0;
            }
            if (_Error == 0) {
                $('#' + Side).append('<div id="InvoiceNo" class="element" style="color:black;">Invoice No:10054</div>')
                $('#InvoiceNoAdd').css('display', 'none');
                $('#InvoiceNoRemove').css('display', 'block');
                var ID = "InvoiceNo";
                if (SelectedIdArray.length > 0) {
                    SelectedIdArray.length = 0;
                }
                SelectedIdArray.push(ID);
            }

        });

    //$('#PaymentinfoAdd').click(function () {
  //$(document).off('click', '#innerTableAdd').on('click', '#innerTableAdd', function () {
  //      event.preventDefault();
  //  //$(document).on('click', '#innerTableAdd', function () {
  //  //    event.preventDefault();
  //      debugger

  //      // Get the element with the class "accordion__header" within the specified container
  //      const headerElement = document.querySelector("#accordion-ten > div > div.accordion__header");

  //      // Check if the element exists and has an "aria-expanded" attribute
  //      if (headerElement && !headerElement.getAttribute("aria-expanded")) {
  //          // Get the value of the "aria-expanded" attribute as a boolean
  //         // const isExpanded = headerElement.getAttribute("aria-expanded") === "true";

  //          // Check if the element is currently collapsed
  //          //if (isExpanded) {
  //              // Find and click the indicator element to expand it
  //              //const indicatorElement = document.querySelector("#accordion-ten > div > div.accordion__header.collapsed > span.accordion__header--indicator");
  //              //if (indicatorElement) {
  //              //    indicatorElement.click();
  //              //}
  //         // }
  //      }



  //      let numColumns = 3;
  //      let columnNames = ['Column 1', 'Column 2', 'Column 3'];
  //      let columnWidths = [100, 150, 80];
  //      let tableData = [
  //          ['Row 1, Col 1', 'Row 1, Col 2', 'Row 1, Col 3'],
  //          ['Row 2, Col 1', 'Row 2, Col 2', 'Row 2, Col 3'],
  //          ['Row 3, Col 1', 'Row 3, Col 2', 'Row 3, Col 3'],
  //      ];

  //      let tableHtml = generateCustomTable1(numColumns, columnNames, columnWidths, tableData);

  //      console.log(tableHtml, 'tableHtml');

  //      $('#' + Side).append(`<div id="innerTable" style="color:black;">${tableHtml}</div>`);

  //      $('#innerTableAdd').css('display', 'none');
  //      $('#innerTableRemove').css('display', 'block');

  //      //const ID ='innerTable'
  //      //SelectedIdArray.push(ID)
  //      //SelectedId = ID;


  //  })

    //$('#PaymentinfoAdd').click(function () {
    //$('#InsAddressAdd').click (function () {

    //        $('#InsAddressAdd').css('display', 'none');
    //        $('#InsAddressRemove').css('display', 'block');
    //    $('#' + Side).append('<div id="InsAddress" class="element" style="color:black;  width:200px; height:100px;"><strong>Address, Ins.</strong><br>Address line 1<br>Address line 2<br>Address line 3</div>')
    //       // $('#' + Side).append('<div id="InsAddress" class="element" style="color:black;"><strong>Address, Ins.</strong><div id="InnerInsAddress">Address line 1<br>Address line 2<br>Address line 3</div></div>');


    //    var ID = "InsAddress";
    //    if (SelectedIdArray.length > 0) {
    //        SelectedIdArray.length = 0;
    //    }
    //    SelectedIdArray.push(ID);
    //   // SelectedId = ID;
    //});




    $('#PaymentinfoAdd').click(function () {
   // $(document).on('click', '#PaymentinfoAdd', function () {
        debugger
        $('#PaymentinfoAdd').css('display', 'none');
        $('#PaymentinfoRemove').css('display', 'block');
        $('#' + Side).append('<div id="Paymentinfo" class="element" style="color:black; width: 200px; height:100px;"><strong>Payment Info</strong><br>Account Name :<br>Account No :<br>Branch Name :</div>')


        var ID = "Paymentinfo";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });


    //$('#TermscondtnAdd').click( function () {

    //    $('#TermscondtnAdd').css('display', 'none');
    //    $('#TermscondtnRemove').css('display', 'block');
    //    $('#' + Side).append('<div id="Termscondtn" class="element" style="color:black;  width:200px; height:200px;" ><div id=""><strong>Terms and Conditions</strong><br><div  class="multiline"> 1.By accessing or using this website, you agree to comply with and be bound by these Terms and Conditions.If you do not agree to these Terms and Conditions, please do not use this website.2. Use of the Website2.1.You are granted a limited, non - exclusive, and non - transferable license to access and use this website for personal and non - commercial purposes.</div ></div ></div >')


    //    var ID = "Paymentinfo";
    //    if (SelectedIdArray.length > 0) {
    //        SelectedIdArray.length = 0;
    //    }
    //    SelectedIdArray.push(ID);
    //    // SelectedId = ID;
    //});

    $('#pVerticalLineAdd').click(function () {
        debugger
        $('#pVerticalLineAdd').css('display', 'none');
        $('#pVerticalLineRemove').css('display', 'block');
        $('#' + Side).append('<div id="pVerticalLine" class="element vertical-line " style="color:black; top:20px ;position: absolute; height: 100px; left:100px" ></div >')


        var ID = "pVerticalLine";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });
    $('#pBoxAdd').click(function () {
        debugger
        $('#pBoxAdd').css('display', 'none');
        $('#pBoxRemove').css('display', 'block');
        $('#' + Side).append('<div id="pBox" class="element pbox " style="color:black; top:20px ; height: 100px; left:100px; white-space: pre-wrap;" ></div >')
        var ID = "pBox";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });
    $('#ptableMarkerStarterAdd').click(function () {
        debugger
        $('#ptableMarkerStarterAdd').css('display', 'none');
        $('#ptableMarkerStarterRemove').css('display', 'block');
        $('#' + Side).append('<div id="ptableMarkerStarter" class="element fa fa-arrow-circle-down " style="color:red; top:20px ; height: 20px; left:100px;" ></div >')


        var ID = "ptableMarkerStarter";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });
    $('#ptable2MarkerStarterAdd').click(function () {
        debugger
        $('#ptable2MarkerStarterAdd').css('display', 'none');
        $('#ptable2MarkerStarterRemove').css('display', 'block');
        $('#' + Side).append('<div id="ptable2MarkerStarter" class="element fa fa-arrow-circle-down " style="color:blue; top:20px ; height: 20px; left:100px;" ></div >')


        var ID = "ptable2MarkerStarter";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });
    $('#ptable3MarkerStarterAdd').click(function () {
        debugger
        $('#ptable3MarkerStarterAdd').css('display', 'none');
        $('#ptable3MarkerStarterRemove').css('display', 'block');
        $('#' + Side).append('<div id="ptable3MarkerStarter" class="element fa fa-arrow-circle-down " style="color:green; top:20px ; height: 20px; left:100px;" ></div >')


        var ID = "ptable3MarkerStarter";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });
    $('#ptable4MarkerStarterAdd').click(function () {
        debugger
        $('#ptable4MarkerStarterAdd').css('display', 'none');
        $('#ptable4MarkerStarterRemove').css('display', 'block');
        $('#' + Side).append('<div id="ptable4MarkerStarter" class="element fa fa-arrow-circle-down " style="color:yellow; top:20px ; height: 20px; left:100px;" ></div >')


        var ID = "ptable4MarkerStarter";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });
    $('#ptable5MarkerStarterAdd').click(function () {
        debugger
        $('#ptable5MarkerStarterAdd').css('display', 'none');
        $('#ptable5MarkerStarterRemove').css('display', 'block');
        $('#' + Side).append('<div id="ptable5MarkerStarter" class="element fa fa-arrow-circle-down " style="color:brown; top:20px ; height: 20px; left:100px;" ></div >')


        var ID = "ptable5MarkerStarter";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });
    $('#ptable6MarkerStarterAdd').click(function () {
        debugger
        $('#ptable6MarkerStarterAdd').css('display', 'none');
        $('#ptable6MarkerStarterRemove').css('display', 'block');
        $('#' + Side).append('<div id="ptable6MarkerStarter" class="element fa fa-arrow-circle-down " style="color:cyan; top:20px ; height: 20px; left:100px;" ></div >')


        var ID = "ptable6MarkerStarter";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });
    $('#ptableMarkerEnderAdd').click(function () {
        debugger
        $('#ptableMarkerEnderAdd').css('display', 'none');
        $('#ptableMarkerEnderRemove').css('display', 'block');
        $('#' + Side).append('<div id="ptableMarkerEnder" class="element fa fa-arrow-circle-up" style="color:red; top:20px ; height: 20px; left:100px;" ></div >')


        var ID = "ptableMarkerStarter";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });
    $('#ptable2MarkerEnderAdd').click(function () {
        debugger
        $('#ptable2MarkerEnderAdd').css('display', 'none');
        $('#ptable2MarkerEnderRemove').css('display', 'block');
        $('#' + Side).append('<div id="ptable2MarkerEnder" class="element fa fa-arrow-circle-up" style="color:blue; top:20px ; height: 20px; left:100px;" ></div >')


        var ID = "ptable2MarkerStarter";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });
    $('#ptable3MarkerEnderAdd').click(function () {
        debugger
        $('#ptable3MarkerEnderAdd').css('display', 'none');
        $('#ptable3MarkerEnderRemove').css('display', 'block');
        $('#' + Side).append('<div id="ptable3MarkerEnder" class="element fa fa-arrow-circle-up" style="color:green; top:20px ; height: 20px; left:100px;" ></div >')


        var ID = "ptable3MarkerStarter";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });
    $('#ptable4MarkerEnderAdd').click(function () {
        debugger
        $('#ptable4MarkerEnderAdd').css('display', 'none');
        $('#ptable4MarkerEnderRemove').css('display', 'block');
        $('#' + Side).append('<div id="ptable4MarkerEnder" class="element fa fa-arrow-circle-up" style="color:yellow; top:20px ; height: 20px; left:100px;" ></div >')


        var ID = "ptable4MarkerStarter";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });
    $('#ptable5MarkerEnderAdd').click(function () {
        debugger
        $('#ptable5MarkerEnderAdd').css('display', 'none');
        $('#ptable5MarkerEnderRemove').css('display', 'block');
        $('#' + Side).append('<div id="ptable5MarkerEnder" class="element fa fa-arrow-circle-up" style="color:brown; top:20px ; height: 20px; left:100px;" ></div >')


        var ID = "ptable5MarkerStarter";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });
    $('#ptable6MarkerEnderAdd').click(function () {
        debugger
        $('#ptable6MarkerEnderAdd').css('display', 'none');
        $('#ptable6MarkerEnderRemove').css('display', 'block');
        $('#' + Side).append('<div id="ptable6MarkerEnder" class="element fa fa-arrow-circle-up" style="color:cyan; top:20px ; height: 20px; left:100px;" ></div >')


        var ID = "ptable6MarkerStarter";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });
    $('#pHorizontalLineAdd').click(function () {
        debugger
        $('#pHorizontalLineAdd').css('display', 'none');
        $('#pHorizontalLineRemove').css('display', 'block');
        $('#' + Side).append('<div id="pHorizontalLine" class="element horizontal-line" style="color:black; left=20px;  top:20px; position: absolute;  width:100px; height: 1px;" ></div >')


        var ID = "pHorizontalLine";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });


    //$('#SubtotalAdd').click(function () {

    //    $('#SubtotalAdd').css('display', 'none');
    //    $('#SubtotalRemove').css('display', 'block');
    //    $('#' + Side).append('<div id="Subtotal" class="element" style="color:black;  width: 200px; height:100px;">Subtotal:1000<br>Discount:1000<br>Tax:1000<br>Total: 1000</div >')


    //    var ID = "Subtotal";
    //    if (SelectedIdArray.length > 0) {
    //        SelectedIdArray.length = 0;
    //    }
    //    SelectedIdArray.push(ID);
    //    // SelectedId = ID;
    //});


    $('#DateAdd').click(function () {

        $('#DateAdd').css('display', 'none');
        $('#DateRemove').css('display', 'block');
        $('#' + Side).append('<div id="Date" class="element" style="color:black;  width: 100px; height:30px;">Date : 10 Jun 2023</div>')


        var ID = "Date";
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
        // SelectedId = ID;
    });

    ///* End  item add Events Section-- * /
    function generateCustomTable1(numColumns, columnNames, columnWidths, tableData) {

        let tableHtml = '<table border="1">';

        // Add column headers
        tableHtml += '<thead><tr>';
        for (let i = 0; i < numColumns; i++) {
            tableHtml += '<th style="width: ' + columnWidths[i] + 'px;">' + columnNames[i] + '</th>';
        }
        tableHtml += '</tr></thead>';

        // Add table body
        tableHtml += '<tbody>';
        for (let i = 0; i < tableData.length; i++) {
            tableHtml += '<tr>';
            for (let j = 0; j < numColumns; j++) {
                tableHtml += '<td>' + tableData[i][j] + '</td>';
            }
            tableHtml += '</tr>';
        }
        tableHtml += '</tbody>';

        tableHtml += '</table>';

        return tableHtml;
    }
    function generateCustomTable(numCols, numRows, colWidths, tableData) {
        debugger
        if (
            //!Array.isArray(colNames) ||
            //colNames.length !== Number(numCols) ||
            (colWidths && colWidths.length !== Number(numCols))
        ) {
            console.error("Invalid input. Please provide arrays of column names and widths matching the number of columns.");
            return '';
        }

        let tableHtml = '<table border="1"><thead><tr>';

        //// Create table headers with optional column widths
        //colNames.forEach((colName, index) => {
        //    const width = colWidths && colWidths[index] ? `style="width:${colWidths[index]}px;"` : '';
        //    tableHtml += `<th ${width}>${colName}</th>`;
        //});

        // Populate table body with data
        for (let i = 0; i < numCols; i++) {
            const width = colWidths && colWidths[i] ? `style="width:${colWidths[i]}px;"` : '';
            tableHtml += `<th ${width} ><div class="column-table">colName ${i+1}</div></th>`;
        }


        tableHtml += '</tr></thead><tbody>';

        // Populate table body with data
        for (let i = 0; i < numRows; i++) {
            tableHtml += '<tr>';
            for (let j = 0; j < numCols; j++) {
                tableHtml += `<td ><div class="column-table">Row ${i + 1}, Col ${j + 1}</div></td>`;
            }
            tableHtml += '</tr>';
        }

        tableHtml += '</tbody></table>';

        return tableHtml;
    }

    //$(document).on('click', '#FrontSide', (event) => {
    //    debugger
    //    console.log(this.id, 'selected id');
    //    //findout the  selected element id index from array
    //   // then it is passed intor every editing case
    //    SelectedId = this.id;

    //    if (event.target.classList.contains("element")) {
    //        // Get the text content of the clicked child div
    //        console.log(event.target)
    //        console.log(event.target.id)
    //        //const clickedDivText = event.target.textContent;

    //        // Display the result
    //       // alert(`Clicked on: ${clickedDivText}`);
    //    }

    //});



    ////push elemts into selected array,change style accoding to set css cordinates
    //$('.elmnt').click( function () {
    //    debugger
    //    $('#ElmWidth').attr('disabled', false);
    //    $('.elmnt').css({ 'background-color': '', 'color': '' });
    //    var ID = $(this).attr('data-id');
    //    $(this).css({ 'background-color': '#86a8d2', 'color': '#ffffff' });

    //    if ($('#' + ID).attr('style') != undefined) {
    //        var emtop = $('#' + ID).attr('style').split('top');

    //        if (emtop.length > 1) {
    //            var emoto = $('#' + ID).css('top').replace('px', '');
    //            if (emoto != 'auto') { $('#ElmTop').val(emoto); } else { $('#ElmTop').val(''); }
    //        } else { $('#ElmTop').val(''); }
    //        var emleft = $('#' + ID).attr('style').split('left');

    //        if (emleft.length > 1) {
    //            var emole = $('#' + ID).css('left').replace('px', '');
    //            if (emole != 'auto') { $('#xCordinates').val(emole); } else { $('#xCordinates').val(''); }
    //        } else { $('#xCordinates').val(''); }

    //        var emopa = $('#' + ID).attr('style').split('opacity');
    //        if (emopa.length > 1) {
    //            var emopaci = $('#' + ID).css('opacity').replace('px', '');
    //            if (emopaci != 'auto') { $('#ElmOpacity').val(emopaci); } else { $('#ElmOpacity').val(''); }
    //        } else { $('#ElmOpacity').val(''); }


    //        var widhattr = $('#' + ID).attr('style').split('width');
    //        if (widhattr.length > 1) {
    //            var emweight = $('#' + ID).css('width').replace('px', '');
    //            if (emweight != 'auto' && emweight != 0) { $('#ElmWidth').val(emweight); } else { $('#ElmWidth').val(''); }

    //        } else { $('#ElmWidth').val(''); }

    //        var heightattr = $('#' + ID).attr('style').split('height');
    //        if (heightattr.length > 1) {


    //            var emheight = $('#' + ID).css('height').replace('px', '');
    //            if (emheight != 'auto' && emheight != 0) { $('#ElmHeight').val(emheight); } else { $('#ElmHeight').val(''); }
    //        } else { $('#ElmHeight').val(''); }

    //    }
    //    else {
    //        $('#ElmTop').val('');
    //        $('#xCordinates').val('');
    //        $('#ElmOpacity').val('');
    //        $('#ElmWidth').val('');
    //        $('#ElmHeight').val('');
    //    }

    //    if (SelectedIdArray.length > 0) {
    //        SelectedIdArray.length = 0;
    //    }

    //    SelectedIdArray.push(ID);

    //    SelectedItems.push(ID);
    //   // SelectedId = ID;

    //});
    var FrontViewElementToString;
    var Template;
    function fn_SaveCommonPrintSettings(els,mode) {
        debugger

        let $thisForm = $(els).closest('[perfect-class="form"]')



        let userAction;
        if (mode == "Save") {
            userAction = 1;
            CheckCommonNameExists();
        } else {
            userAction = 2;
            CheckVal='Save'
        }

        const divElement = document.getElementById('FrontSide');
        const computedStyle = window.getComputedStyle(divElement);
        const backgroundImage = computedStyle.getPropertyValue('background-image');


        if ($thisForm.valid()) {
            $(els).prop('disabled', true);
            if (CheckVal == "Save") {
                if ($('#FrontSide').children().length > 0 || backgroundImage !== 'none') {
                    debugger;

                    //$("#FrontSide").attr("style", "width:" + valwidth + ";height:" + valheight + ";color:#ffffff;background-size:contain;border-style:groove;border-width:1px;");
                    $("#FrontSide").attr("style", "width:" + valwidth + ";height:" + valheight + ";color:#ffffff;background-size:contain;border-style:groove;border-width:1px; ");

                    var FrontElement = document.getElementById("FrontSide");

                    var FrontViewElementToString;

                    if (FrontElement.outerHTML) {
                        FrontViewElementToString = FrontElement.outerHTML;

                    }
                    else if (XMLSerializer) {
                        FrontViewElementToString = new XMLSerializer().serializeToString(FrontElement);

                    }
                    let ID_CommonPrintingSettingsVal = $thisForm.find('[name="ID_CommonPrintingSettings"]').val();


                    var data = {
                        'FrontSide': FrontViewElementToString,
                        'FrntImg': frontImgUrl,
                        'CommonPrintSettingsMode': $('#Module').val(),
                        'SettingsName': $('#SettingNameID').val(),
                        'PageSize': $('#PageOrientation').val(),
                        'UserAction': userAction,
                        'TransMode': '',
                        'ImagePath': '',
                        'ID_CommonPrintingSettings': ID_CommonPrintingSettingsVal,
                        'FK_CommonPrintingSettings': 0

                    };
                    $.ajax({

                        type: 'POST',
                     url: "@Url.Action("UpdateCommonPrintingSettings", "CommonPrintSettings")",
                        data: JSON.stringify(data),
                        contentType: 'application/json',
                        success: function (ajaxOutput) {
                            //debugger

                            console.log(ajaxOutput,'ajaxOutput>>')
                            if (ajaxOutput.IsProcess) {
                                $.each(ajaxOutput.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                });

                                LoadCommonPrintSettingsList();
                                fn_CommonPrintSettings_initialLoad();
                            }
                            else {
                                $.each(ajaxOutput.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }






                        },
                        error: function (xhr, status, error) {

                            NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': '' });

                        },
                        complete: function () {
                            $(els).prop('disabled', false);
                        }
                    })
                }
                else {
                    $(els).prop('disabled', false);
                    NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'Al least one element is needed' });
                }
            } else {
                $(els).prop('disabled', false);
                NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'Settings Name Already Exists' });
            }

        }









        //replace_Data();
    };

    //function Add_Table() {
    //    alert("Add_Table");
    //    debugger
    //    const arr = [];
    //    const num_col = $('#NoColumn').val();
    //    //const num_row = $('#No_Rows').val();

    //    for (let i = 1; i <= num_col; i++) {
    //        const columnValue = $('#Column' + i).val();
    //        arr.push(columnValue);
    //    }
    //    console.log(arr)
    //    //const numColumns = 3;
    //    //const columnNames = ['Column 1', 'Column 2', 'Column 3'];
    //    //const columnWidths = [100, 150, 80];
    //    //const tableData = [
    //    //    ['Row 1, Col 1', 'Row 1, Col 2', 'Row 1, Col 3'],
    //    //    ['Row 2, Col 1', 'Row 2, Col 2', 'Row 2, Col 3'],
    //    //    ['Row 3, Col 1', 'Row 3, Col 2', 'Row 3, Col 3'],
    //    //];

    //   // const tableHtml = generateCustomTable(num_col, num_row, arr);
    //    const tableHtml = generateCustomTable(num_col, 4, arr);

    //    console.log(tableHtml, 'tableHtml');


    //    // Get a reference to the element by its ID
    //    const elementToRemove = document.getElementById("innerTable");

    //    if (elementToRemove) {
    //        // Check if the element exists before attempting to remove it
    //        const parentElement = elementToRemove.parentElement;

    //        if (parentElement) {
    //            // Remove the element from its parent
    //            parentElement.removeChild(elementToRemove);
    //        }
    //    }




    //    $('#' + Side).append(`<div id="innerTable" class="element" style="color:black;  width: ' + valwidth + 'px; height: ' + valheight + 'px;">${tableHtml}</div>`);

    //    $('#innerTableAdd').css('display', 'none');
    //    $('#innerTableRemove').css('display', 'block');

    //    const ID ='innerTable'
    //    SelectedIdArray.push(ID)
    //   // SelectedId = ID;



    //    const headerElement = document.querySelector("#accordion-ten > div > div.accordion__header");


    //    if (headerElement && headerElement.getAttribute("aria-expanded")) {
    //         const isExpanded = headerElement.getAttribute("aria-expanded") === "true";
    //        if (isExpanded) {

    //            const indicatorElement = document.querySelector("#accordion-ten > div > div.accordion__header > span.accordion__header--indicator");

    //            if (indicatorElement) {
    //                indicatorElement.click();
    //            }
    //        }
    //    }

    //}




    //function replace_Table_Data() {
    //    debugger
    //    // Your HTML string
    //  //  var elem = '<div id="FrontSide" style="width: 974px; height: 1123px; color: rgb(255, 255, 255); background-size: contain; border-style: groove; border-width: 1px; background-color: rgb(255, 255, 255); border-color: black;"><label id="NameLabel" style="color:black;font-size:medium;font-weight:bold;">Institution Name</label></div>';
    //    var elem = FrontViewElementToString;
    //    // Create a temporary div element to parse the HTML string
    //    var tempDiv = document.createElement('div');
    //    tempDiv.innerHTML = elem;

    //    // Find the label element by its ID
    //    var labelElement = tempDiv.querySelector('#NameLabel');

    //    // Check if the label element was found
    //    if (labelElement) {
    //        // Update the text content of the label
    //        labelElement.textContent = 'New Institution Name';

    //        // Convert the updated DOM structure back to an HTML string
    //        elem = tempDiv.innerHTML;
    //    }

    //    let table  = tempDiv.querySelector('#innerTable');
    //    const newColumnNames  = ['item','Quantity', 'PricePerunit ', 'Amount',];
    //    const newData = [
    //        { item: 'item 1', Quantity: '2', PricePerunit: '150', Amount: '300' },
    //        { item: 'item 1', Quantity: '2', PricePerunit: '150', Amount: '300' },
    //        { item: 'item 1', Quantity: '2', PricePerunit: '150', Amount: '300' }
    //    ];

    //    const theadcol=$('#innerTable table>thead>tr>th')
    //    for (let i = 0; i < theadcol.length; i++) {
    //        let headerCell = theadcol[i];
    //        headerCell.innerHTML= newColumnNames[i];
    //       // headerCell.textContent = newColumnNames[i];
    //    }

    //    const no_row = $('#innerTable >table>tbody>tr');

    //    for (let i = 0; i < no_row.length; i++) {


    //        const row = no_row[i];
    //        const data = newData[i]
    //        //for (let j = 0; j < row.cells.length; j++) {
    //        //    const cell = row.cells[j];
    //        //    const item = newColumnNames[j];
    //        //    // data[item];
    //        //    console.log(data[item])
    //        //    // columnValues.push(cell.textContent);
    //        //    cell.innerHTML = data[item];
    //        //};

    //        $(row).find('td').each(function (j) {
    //            const item = newColumnNames[j]; // Assuming you have defined newColumnNames elsewhere
    //            //  console.log(item)
    //            debugger
    //            const cell = $(this);
    //            cell.text(data[item]);
    //        });

    //    }




    //   // $('#FrontSide').html(elem);
    //}

    function ResetButton() {
        LoadCommonPrintSettings();
        AddorUpdate1 = 0;
    }



    var CheckVal = '';
    function CheckCommonNameExists() {
        debugger;
      //  var CheckVal = true;
        try {
            $.ajax({
               url: "@Url.Action("CheckCommonNameExists", "CommonPrintSettings")",
                data: { 'SettingsName': $('#SettingNameID').val() },
                cache: false,
                type: 'Get',
                dataType: 'json',
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    debugger;
                    if (data.Process.IsProcess) {
                        CheckVal ="Exists";
                    } else {
                        CheckVal = "Save";
                    }
                    // CheckVal = data.Status;

                },
                error: function (xhr, status, error) {
                    debugger
                    var err = eval('(' + xhr.responseText + ')');
                    alert(err.Message);
                }
            });
        }
        catch (ex) {
            alert(ex + ' Exception FillIDCardType');
        }
    }

    function Create_print() {
        // CommonPrintSettings(Template);
        debugger

        try {
            $.ajax({
                  url: "@Url.Action("GetPrintTemplate", "CommonPrintSettings")",
                data: { 'FK_CommonPrintSettings': $('[name="ID_CommonPrintingSettings"]').val() },
                cache: false,
                type: 'Get',
                dataType: 'json',
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    debugger;
                    if (data.Process.IsProcess) {


                        //PageSizeObj.forEach(item => {
                        //    debugger
                        //    if (item == data.Data[0].PageSize) {
                        //        valheight = item.valheight
                        //        valwidth = item.valwidth
                        //    };
                        //});




                        for (var pageSize in PageSizeObj) {
                            if (pageSize == data.Data[0].pageSize) {
                                if (PageSizeObj.hasOwnProperty(pageSize)) {
                                    var pageSizeData = PageSizeObj[pageSize];
                                    //console.log("Page Size:", pageSize);
                                    //console.log("Value Width:", pageSizeData.valwidth);
                                    //console.log("Value Height:", pageSizeData.valheight);
                                    //console.log("Data Width:", pageSizeData.datawidth);
                                    //console.log("Data Height:", pageSizeData.dataheight);
                                    valheight = pageSizeData.valheight,
                                    valwidth = pageSizeData.valwidth
                                }
                            }

                        };

                        getPrintdata(data.Data[0].FrontSideString, data.Data[0].FrntImg);
                    } else {
                        alert('alert');
                    }
                    // CheckVal = data.Status;

                },
                error: function (xhr, status, error) {
                    debugger
                    var err = eval('(' + xhr.responseText + ')');
                    alert(err.Message);
                }
            });
        }
        catch (ex) {
            alert(ex + ' Exception FillIDCardType');
        }



    };

    function readURL() {

        debugger
                var file = document.getElementById("BackGroundInputFile").files[0];
        var reader = new FileReader();
        reader.onloadend = function () {

            frontImgUrl = reader.result;
            document.getElementById('FrontSide').style.backgroundImage = "url(" + reader.result + ")";
            $('#BackImage').css('display', 'none');
            $('#BackImageRemove').css('display', 'block');
        }
        if (file) {
            reader.readAsDataURL(file);
        } else {
        }
    }


    $('#saveImage').click(function () {

        if (fileValid) {
            $('#squarespaceModal').modal('hide');
            readURL();
        };

    });

    var $TEMPLATE;




    function getWidth1(ch) {
        var text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. ...";

        // Get the hidden element
        var measureElement = document.getElementById("hiddenMeasureElement");

        // Set the text content to the string you want to measure
        measureElement.textContent = text;

        // Measure the width of the hidden element
        var width = measureElement.offsetWidth;

        console.log("Width required for the string: " + width + " pixels");
    };

    function getWidth(num){
        debugger
        if (typeof(num) == 'number') {

            var text = 'M';
            for (let i = 1; i < num; i++) {
                text += 'M';
            };
            var measureElement = document.getElementById("hiddenMeasureElement");
            measureElement.textContent = text;


            let fontstyleelm = $('#ElmntFontStyle :selected').css('font-family');
            let FontSize = $('#ElmntFont').val();

            if (FontSize != "" && FontSize != undefined) {
                //document.getElementById(ID).style.fontSize = FontSize + "px";
                measureElement.style.fontSize = FontSize + "px";
            }

            if (fontstyleelm != "Rubik-Regular, sans-serif" && fontstyleelm != undefined) {
                //document.getElementById(ID).style.fontFamily = fontstyleelm;
                measureElement.style.fontFamily = fontstyleelm;
            }

            //measureElement.style.fontSize = '16px';
            //measureElement.style.fontFamily = 'Arial, sans-serif';


            var width = measureElement.offsetWidth;
            return width;

        } else {
            console.warn('Number passed to getWidth funtion should be Number');
            return null;
        }
    };
    function getNumofcharonbox(id) {
        const div = document.getElementById(id);
        const width = div.clientWidth;
        const height = div.clientHeight;
        const fontSize = parseInt(window.getComputedStyle(div).fontSize);
        const lineHeight = parseInt(window.getComputedStyle(div).lineHeight);

        const charPerLine = Math.floor(width / fontSize);
        const lines = Math.floor(height / lineHeight);
        const totalChars = charPerLine * lines;
        return totalChars;
    }
    function getNumofcharonLine(id) {
        debugger
        const div = document.getElementById(id);
        const width = div.clientWidth;
        const height = div.clientHeight;
        const fontSize = parseInt(window.getComputedStyle(div).fontSize);
        const lineHeight = parseInt(window.getComputedStyle(div).lineHeight);

        const charPerLine = Math.floor(width / fontSize);
        //const lines = Math.floor(height / lineHeight);
        //const totalChars = charPerLine * lines;
        return charPerLine;
    }
    $('#MuttipleElement').change(function () {
        debugger
        const val = $('#MuttipleElement').val();
        document.querySelector("#active-header_collapseTen > div > ul").append('<li >< a href = "#" class= "list-group-item  elmnt" data - id="logoImage2" style = "padding-right:0px;" >Image2< span class= "pull-right btn btn-xs btn-primary" id = "logoImageAdd" style = "margin-top: -5px; display: none;" > Add</span ><span class="pull-right btn btn-xs btn-default" id="logoImageRemove" style="margin-right: 16px; display: block;">X</span></a ></li >')
    });


    //---  ---?// New Line of Code
    $('#PRHeaderAdd').click(() => {
        Side = 'FrontSide';
        $('#' + Side).append('<div id="PRHeader" class="element pSection " style="color:black ; height: 150px; width:100%;  white-space: pre-wrap;  position:absolute; top:0px" ></div >');
        $('#PRHeaderAdd').css('display', 'none');
        $('#PRHeaderRemove').css('display', 'block');
        var ID = 'PRHeader';
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);


    });
    $('#PRHeaderRemove').click(() => {

        var div = document.getElementById('PRHeader');
        div.remove();

        $('#PRHeaderAdd').css('display', 'block');
        $('#PRHeaderRemove').css('display', 'none');
        return true;
    })

    $('#PRFooterAdd').click(() => {
        Side = 'FrontSide';
        $('#' + Side).append('<div id="PRFooter" class="element pSection " style="color:black;  height: 200px; width:100%;  white-space: pre-wrap; bottom: 0px; position:absolute;" ></div >');
        $('#PRFooterAdd').css('display', 'none');
        $('#PRFooterRemove').css('display', 'block');
        var ID = 'PRFooter';
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);
    });
    $('#PRFooterRemove').click(() => {

        var div = document.getElementById('PRFooter');
        div.remove();

        $('#PRFooterAdd').css('display', 'block');
        $('#PRFooterRemove').css('display', 'none');
        return true;
    })


    $('.sec_elmnt').click(function () {
        debugger

        $('#ElmWidth').attr('disabled', true);
        $('.sec_elmnt').css({ 'background-color': '', 'color': '' });
        var ID = $(this).attr('data-id');
        Side = ID;   //
        $(this).css({ 'background-color': '#86a8d2', 'color': '#ffffff' });

        if ($('#' + ID).attr('style') != undefined) {
            var emtop = $('#' + ID).attr('style').split('top');

            if (emtop.length > 1) {
                var emoto = $('#' + ID).css('top').replace('px', '');
                if (emoto != 'auto') { $('#ElmTop').val(emoto); } else { $('#ElmTop').val(''); }
            } else { $('#ElmTop').val(''); }
            var emleft = $('#' + ID).attr('style').split('left');

            if (emleft.length > 1) {
                var emole = $('#' + ID).css('left').replace('px', '');
                if (emole != 'auto') { $('#xCordinates').val(emole); } else { $('#xCordinates').val(''); }
            } else { $('#xCordinates').val(''); }

            var emopa = $('#' + ID).attr('style').split('opacity');
            if (emopa.length > 1) {
                var emopaci = $('#' + ID).css('opacity').replace('px', '');
                if (emopaci != 'auto') { $('#ElmOpacity').val(emopaci); } else { $('#ElmOpacity').val(''); }
            } else { $('#ElmOpacity').val(''); }


            var widhattr = $('#' + ID).attr('style').split('width');
            if (widhattr.length > 1) {
                var emweight = $('#' + ID).css('width').replace('px', '');
                if (emweight != 'auto' && emweight != 0) { $('#ElmWidth').val(emweight); } else { $('#ElmWidth').val(''); }

            } else { $('#ElmWidth').val(''); }

            var heightattr = $('#' + ID).attr('style').split('height');
            if (heightattr.length > 1) {


                var emheight = $('#' + ID).css('height').replace('px', '');
                if (emheight != 'auto' && emheight != 0) { $('#ElmHeight').val(emheight); } else { $('#ElmHeight').val(''); }
            } else { $('#ElmHeight').val(''); }

        }
        else {
            $('#ElmTop').val('');
            $('#xCordinates').val('');
            $('#ElmOpacity').val('');
            $('#ElmWidth').val('');
            $('#ElmHeight').val('');
        }

        //if (SecletdSectionsArray.length > 0) {
        //    SecletdSectionsArray.length = 0;
        //}

        //SecletdSectionsArray.push(ID);

        //SelectedItems.push(ID);
        // SelectedId = ID;


        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }

        SelectedIdArray.push(ID);

        SelectedItems.push(ID);

    });

    //PP
    $('#PPHeaderAdd').click(() => {
        Side = 'FrontSide';
        $('#' + Side).append('<div id="PPHeader" class="element pSection " style="color:black; height: 150px; width:100%;white-space: pre-wrap; position:absolute;" ></div >');
        $('#PPHeaderAdd').css('display', 'none');
        $('#PPHeaderRemove').css('display', 'block');
        var ID = 'PPHeader';
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);


    });
    $('#PPHeaderRemove').click(() => {

        var div = document.getElementById('PPHeader');
        div.remove();

        $('#PPHeaderAdd').css('display', 'block');
        $('#PPHeaderRemove').css('display', 'none');
        return true;
    })

    $('#PPFooterAdd').click(() => {
        Side = 'FrontSide';
        $('#' + Side).append('<div id="PPFooter" class="element pSection " style="color:black;  height: 150px; width:100%;  white-space: pre-wrap; position:absolute; " ></div >');
        $('#PPFooterAdd').css('display', 'none');
        $('#PPFooterRemove').css('display', 'block');
        var ID = 'PPFooter';
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);


    });
    $('#PPFooterRemove').click(() => {

        var div = document.getElementById('PPFooter');
        div.remove();

        $('#PPFooterAdd').css('display', 'block');
        $('#PPFooterRemove').css('display', 'none');
        return true;
    })


    //Body

    $('#PBodyAdd').click(() => {
        Side = 'FrontSide';
        $('#' + Side).append('<div id="PBody" class="element pSection " style="color:black;  height: 150px; width:100%;  white-space: pre-wrap; position:absolute;" ></div >');
        $('#PBodyAdd').css('display', 'none');
        $('#PBodyRemove').css('display', 'block');
        var ID = 'PPFooter';
        if (SelectedIdArray.length > 0) {
            SelectedIdArray.length = 0;
        }
        SelectedIdArray.push(ID);


    });
    $('#PBodyRemove').click(() => {

        var div = document.getElementById('PBody');
        div.remove();

        $('#PBodyAdd').css('display', 'block');
        $('#PBodyRemove').css('display', 'none');
        return true;
    })



    // === Section 2 ===
        // This is code for section 2 related to Print Settings

    //function replace_element() {
    //    debugger
    //    var addressobj = {
    //        Address1: "Spectrum Solar",
    //        Address2: "Hi lite ,bussiness park",
    //        Address3: "kannur,670010"
    //    };
    //    var tableData = [
    //        {
    //            "Item": "1",
    //            "Description": "Product A",
    //            "Quantity": "5",
    //            "Unit Price": "$100.00",
    //            "Total": "$500.00"
    //        },
    //        {
    //            "Item": "2",
    //            "Description": "Product B",
    //            "Quantity": "2",
    //            "Unit Price": "$50.00",
    //            "Total": "$100.00"
    //        }
    //    ];

    //    const newColumnNames = ['item', 'Quantity', 'PricePerunit ', 'Amount'];
    //    const newData = [
    //        { item: 'item 1', Quantity: '2', PricePerunit: '150', Amount: '300' },
    //        { item: 'item 1', Quantity: '2', PricePerunit: '150', Amount: '300' },
    //        { item: 'item 1', Quantity: '2', PricePerunit: '150', Amount: '300' }
    //    ];




    //    var template = document.createElement('div');
    //    template.innerHTML = '<div id="FrontSide" style="width:974px;height:1123px;color:#ffffff;background-size:contain;border-style:groove;border-width:1px;">                                      <img id="logoImage" src="/Assets/images/avatar/avatar2.png" style="max-width: 200px; width: 100px; height: 100px; left: 800px; top: 10px; position: absolute;"><div id="Date" class="element" style="color:black;"><div id="">Date : 10 Jun 2023</div></div><label id="NameLabel" style="color:black;font-size:medium;font-weight:bold;">Tittle</label><div id="InsAddress" class="element" style="color:black;"><div id=""><strong>Address, Ins.</strong><br>Address line 1<br>Address line 2<br>Address line 3</div></div><div id="Paymentinfo" class="element" style="color:black;"><div id=""><strong>Payment Info</strong><br>Account Name :<br>Account No :<br>Branch Name :</div></div><label id="InvoiceNo" style="color:black;font-size:medium;">ID Card No   :10054</label><div id="Termscondtn" class="element" style="color:black;"><div id=""><strong>Terms and Conditions</strong><br><div class="multiline"> 1.By accessing or using this website, you agree to comply with and be bound by these Terms and Conditions.If you do not agree to these Terms and Conditions, please do not use this website.2. Use of the Website2.1.You are granted a limited, non - exclusive, and non - transferable license to access and use this website for personal and non - commercial purposes.</div></div></div><div id="innerTable" style="color:black;"><table border="1"><thead><tr><th>colName 1</th><th>colName 2</th><th>colName 3</th><th>colName 4</th></tr></thead><tbody><tr><td>Row 1, Col 1</td><td>Row 1, Col 2</td><td>Row 1, Col 3</td><td>Row 1, Col 4</td></tr><tr><td>Row 2, Col 1</td><td>Row 2, Col 2</td><td>Row 2, Col 3</td><td>Row 2, Col 4</td></tr></tbody></table></div><div id="Subtotal" class="element" style="color: rgb(219, 20, 20); top: 930px; position: absolute; left: 800px; font-family: &quot;Times New Roman&quot;;"><div id=""><strong>Subtotal&nbsp;&nbsp;&nbsp; :1000</strong><br><strong>Discount&nbsp;&nbsp;&nbsp;:1000</strong><br><strong>Tax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:1000</strong><br><strong>Total&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : 1000</strong></div></div></div>';


    //    //change the table headername
    //    const theadcol = template.querySelectorAll('#innerTable table thead th');
    //    for (let i = 0; i < theadcol.length; i++) {
    //        let headerCell = theadcol[i];
    //        headerCell.innerHTML = newColumnNames[i];
    //        // headerCell.textContent = newColumnNames[i];
    //    }

    //    //change body value
    //    const no_row = template.querySelectorAll('#innerTable table tbody tr');
    //    for (let i = 0; i < no_row.length; i++) {


    //        const row = no_row[i];
    //        const data = newData[i]
    //        //for (let j = 0; j < row.cells.length; j++) {
    //        //    const cell = row.cells[j];
    //        //    const item = newColumnNames[j];
    //        //    // data[item];
    //        //    console.log(data[item])
    //        //    // columnValues.push(cell.textContent);
    //        //    cell.innerHTML = data[item];
    //        //};

    //        $(row).find('td').each(function (j) {
    //            const item = newColumnNames[j]; // Assuming you have defined newColumnNames elsewhere
    //            //  console.log(item)
    //            debugger
    //            const cell = $(this);
    //            cell.text(data[item]);
    //        });

    //    }






    //    //replace image logo
    //    var logoImage = template.querySelector("#logoImage");
    //    logoImage.src = "https://img.freepik.com/free-vector/bird-colorful-logo-gradient-vector_343694-1365.jpg";

    //    // Select the label element by its ID
    //    var nameLabel = template.querySelector("#NameLabel");
    //    nameLabel.textContent = "New Label Text";

    //    var nameLabel = template.querySelector("#Date");
    //    nameLabel.textContent = "Date : 21 feb 2024";

    //    var InsAddress = template.querySelector('#InsAddress');
    //    InsAddress.innerHTML = `<div id=""><strong>Address, Ins.</strong><br>${addressobj.Address1}<br>${addressobj.Address2}<br>${addressobj.Address3}</div>`;

    //    //var innerTable = document.getElementById('innerTable');
    //    //innerTable.
    //    $TEMPLATE = template;
    //    return template;
    //}

    function getPrint(layout){
      //  debugger
        let backgroundImageUrl = EditFrntImg;
        var IdcardWidth = "794px";
        var IdcardHeight = "1124px";
        //var IdcardWidth = "419px";
        //var IdcardHeight = "558px";
        var ICW = '210mm';
        var ICH = '297mm';
        //var ICW = '148mm';
        //var ICH = '210mm';


        var styles = {
            'A4P': `
                @@page {
                    size: A4 portrait;
                    margin: 10mm;

                }
            `,
            'A4L': `
                @@page {
                    size: A4 landscape;
                    margin: 0mm;
                    size1: '297mm 210mm',
                }
            `,
            'A5P': `
                @@page {
                    size: A5 portrait;
                    margin: 10mm;
                }
            `,
            'A5L': `
                @@page {
                    size: A5 landscape;
                    margin: 10mm;
                }
            `
        };




        var printWindow = window.open('', '', 'width=400mm,height=570mm');
        printWindow.document.write('<html><head>');
        printWindow.document.write('<style>' + styles[layout] + '</style>');
        printWindow.document.write('<link rel="stylesheet" href="@Url.Content("~/Assets/css/CommonPrintTemplate.css")" >');
        //printWindow.document.write('<style>@@media print {  * {-webkit-print-color-adjust:exact;} @@page { -webkit-print-color-adjust: exact;size: ' + ICW + ' ' + ICH + ';margin:0;    }   }   </style >');

        //printWindow.document.write('<style>table { border-collapse: collapse;   } tr,th, td { border: 1px solid black; text-align: left; }</style>');
        printWindow.document.write('</head><body style="margin:0px;max-width:' + IdcardWidth + 'px;max-height:' + IdcardHeight + ' ">');
      //  printWindow.document.write('</head><body style="margin:0px;max-width:' + styles[layout].size + ';max-height:' + styles[layout].size + ' ">');
       //// printWindow.document.write('<div id="FrontIDCard" style="background-image: url(\'' + backgroundImageUrl + '\');">');

        printWindow.document.write(document.getElementById("FrontSideParent").innerHTML);
      ////  printWindow.document.write('</div>');
        printWindow.document.write('</body></html>');
        printWindow.document.close(); // necessary for IE >= 10
        printWindow.focus(); // necessary for IE >= 10*/

    };

    function getPrintdata(layout) {

        var FrontSideString = $('#FrontSide').html;
        var divElement = document.getElementById('FrontSide');

        // Get the HTML content inside the div
        var htmlContent = divElement.innerHTML;

        var styles = {
            'A4-Portrait': `
                @@page {
                    size: A4 portrait;
                    margin: 10mm;
                }
            `,
            'A4-Landscape': `
                @@page {
                    size: A4 landscape;
                    margin: 0mm;
                }
            `,
            'A5-Portrait': `
                @@page {
                    size: A5 portrait;
                    margin: 10mm;
                }
            `,
            'A5-Landscape': `
                @@page {
                    size: A5 landscape;
                    margin: 10mm;
                }
            `
        };

        // Open a new tab or window

        let mywindow = window.open('', 'PRINT', 'height=' + valheight + ',width=' + valwidth);
        // Check if the new tab was successfully opened
        if (mywindow) {
            mywindow.document.write('<html><head>');
            mywindow.document.write('<style>' + styles[layout] + '</style>');
            mywindow.document.write('<style><link href="/Assets/css/bootstrap.min.css" rel="stylesheet" /></style>');
            mywindow.document.write('</head><body style="margin:0px;max-width:' + 204 + 'px;max-height:' + 204 + '">');
            mywindow.document.write('</head><body style="margin:0px;max-width:' + (parseInt(204) + 4) + 'px;max-height:' + ((parseInt(204) * 2) + 4) + '">');
            mywindow.document.write(htmlContent);
            mywindow.document.write('</body></html>');

            mywindow.document.close(); // necessary for IE >= 10
            mywindow.focus();

        } else {
            // If the new tab couldn't be opened (e.g., due to pop-up blockers), display an error message
            alert("A new tab could not be opened. Please check your browser settings.");
        };


    };
    function generatePDF() {
        debugger
        const divToConvert = document.getElementById('FrontSide');
        //const doc = new jsPDF();
        //doc.autoTable({ html: '#FrontSide' });
        //doc.save('table.pdf');
        // Use html2canvas to capture the content as an image
        html2canvas(divToConvert, {
            scale: 2, dpi: 300,
        }).then(function (canvas) {
            const imgData = canvas.toDataURL('image/jpeg'); // Convert the canvas to a data URL
            // Create a jsPDF instance
            const pdf = new jsPDF();
            // Add the captured image to the PDF
            pdf.addImage(imgData, 'JPEG', 0, 0, 210, 297); // You can adjust the position and size as needed
            // Save or display the PDF
            pdf.save('generated.pdf');
        });
    }
    //used to bind data into printlayout
    function BindData() {
        try {

            var template = $('#FrontSide')[0];

            $.ajax({
                url: "@Url.Action("GetPrintTemplate", "CommonPrintSettings")",
                data: { 'FK_CommonPrintSettings': $('[name="ID_CommonPrintingSettings"]').val() },
                cache: false,
                type: 'Get',
                dataType: 'json',
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    debugger;
                    console.log(data, 'data')
                    if (data.Process.IsProcess) {

                        const Logoimage = data.Data[0].Logo_image;
                        const Tittle = data.Data[0].Tittle;
                        //const Terms_and_conditions = data.Data[0].Terms_and_conditions;
                        const newColumnNames = JSON.parse(data.Data[0].Table_column);
                        //const Tabledata = JSON.parse(data.Data[0].Table_data);
                        //const Image = data.Data[0].Logo_image;
                        //const addressobj = JSON.parse(data.Data[0].Address);
                        //const PaymentInfo = JSON.parse(data.Data[0].PaymentInfo);
                        //const Subtotal = JSON.parse(data.Data[0].Subtotal);
                        const InvoiceNo = data.Data[0].Invoice_No;
                        //change the table headername
                        //const theadcol = template.querySelectorAll('#innerTable table thead th');
                        //for (let i = 0; i < theadcol.length; i++) {
                        //    let headerCell = theadcol[i].querySelector('div');
                        //    headerCell.innerHTML = newColumnNames[i];
                        //    // headerCell.textContent = newColumnNames[i];
                        //}

                        //change body value
                        //const no_row = template.querySelectorAll('#innerTable table tbody tr');
                        //for (let i = 0; i < no_row.length; i++) {


                        //    const row = no_row[i];
                        //    const data = Tabledata[i]


                        //    $(row).find('td').each(function (j) {
                        //        const item = newColumnNames[j]; // Assuming you have defined newColumnNames elsewhere
                        //        //  console.log(item)
                        //        //debugger
                        //        const cell = $(this).find('div');
                        //        cell.text(data[item]);
                        //    });

                        //}
                        // image logo
                        var logoImage = template.querySelector("#logoImage");
                        //logoImage.src = "https://img.freepik.com/free-vector/bird-colorful-logo-gradient-vector_343694-1365.jpg";
                        if (logoImage) {
                            logoImage.src = Logoimage;
                        }


                        // Tittle
                        var nameLabel = template.querySelector("#NameLabel");
                        if (nameLabel) {
                            nameLabel.textContent = data.Data[0].Tittle;
                        }


                        //Date
                        var Date1 = template.querySelector("#Date");
                        const date = new Date();
                        const formattedDate = date.toLocaleDateString('en-GB', {
                            day: 'numeric', month: 'short', year: 'numeric'
                        }).replace(/ /g, '-');
                       // console.log(formattedDate);

                        if (Date1) {
                            Date1.textContent = `Date : ${formattedDate}`;
                        }

                        //Address
                        //var InsAddress = template.querySelector('#InsAddress');



                        ////Paymentinfo
                        //const PaymentInfoElem = $('#Paymentinfo');
                        //const InsAddressElem = $('#InsAddress');
                        //const SubtotalElem = $('#Subtotal');

                        //if (PaymentInfoElem) {
                        //    if (PaymentInfoElem[0]) {
                        //        replaceTextInElementwithkey(PaymentInfoElem, PaymentInfo);
                        //    };
                        //};

                        //if (InsAddressElem) {
                        //    if (InsAddressElem[0]) {
                        //        replaceTextInElementwithoutkey(InsAddressElem, addressobj);
                        //    };
                        //}

                         //SubTotal
                        if (SubtotalElem) {

                            if (SubtotalElem[0]) {

                                for (var key in Subtotal) {
                                    if (Subtotal.hasOwnProperty(key)) {
                                        var value = Subtotal[key];
                                        console.log("Key: " + key + ", Value: " + value);
                                        replaceLabelValueRecursively(SubtotalElem, key, value);
                                        // You can perform any action you want with the key and value here
                                    }
                                }

                            };
                        }


                        //Invoice N0
                        let InvoiceNom = template.querySelector('#InvoiceNo');
                        if (InvoiceNom) {
                            InvoiceNom.textContent = `Invoice No   :${data.Data[0].Invoice_No}`;
                        }



                        //// termsAnd Service
                        //const TermsAndService = template.querySelector('#Termscondtn');
                        //if (TermsAndService) {
                        //    let TermsAndService1 = TermsAndService.querySelector('.multiline');
                        //    TermsAndService1.textContent = Terms_and_conditions;
                        //}


                        //box data
                        let Box_data = template.querySelector('#pBox');
                        if (Box_data) {
                            Box_data.textContent = data.Data[0].Box_data;
                        }


                    }
                    else
                    {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                },
            });
        }
        catch (ex) {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': ex.Message });
        }
    }
    function replaceTextInElementwithkey(element, replacements) {
        debugger
        for (var key in replacements) {
            var textNodes = element[0].childNodes;
            for (var i = 0; i < textNodes.length; i++) {
                if (textNodes[i].nodeType === Node.TEXT_NODE) {
                   // textNodes[i].textContent = textNodes[i].textContent.replace(key, key + ': ' + replacements[key]);
                    var newText = textNodes[i].textContent.replace(key, key + ': ' + replacements[key]);
                    newText = newText.replace(/:\s*$/, ''); // Remove the last colon and any whitespace after it
                    textNodes[i].textContent = newText;
                }
            }
        }
    }
    function replaceTextInElementwithoutkey(element, replacements) {
        debugger
        for (var key in replacements) {
            var textNodes = element[0].childNodes;
            for (var i = 0; i < textNodes.length; i++) {
                if (textNodes[i].nodeType === Node.TEXT_NODE) {
                    textNodes[i].textContent = textNodes[i].textContent.replace(key, replacements[key]);
                }
            }
        }
    }
    function replaceLabelValueRecursively(element, label, newValue) {
        debugger
        var textNodes = element[0].childNodes;
        for (var i = 0; i < textNodes.length; i++) {
            if (textNodes[i].nodeType === Node.TEXT_NODE) {
                var textContent = textNodes[i].textContent;
                if (textContent.indexOf(label + ':') !== -1) {
                    textNodes[i].textContent = label + ': ' + newValue;
                }
            }
            //else if (textNodes[i].nodeType === Node.ELEMENT_NODE) {
            //    // Recursively process sub-elements
            //    replaceLabelValueRecursively(textNodes[i], label, newValue);
            //}
        }
    }

    // === End of Section 2 ===
    function Binddata__into() {
        //#region Data
        debugger
         //var Data = {
        //    PBillDate: "03 Jun 2024",
        //    table1Data: [
        //        { sl: 1, ProductName: "ABC ABC ABC ABC ABC ", Quantity: "3", HSNCode: "300045", TotalAmount: "155525.5", image: "https://upload.wikimedia.org/wikipedia/commons/b/b6/Image_created_with_a_mobile_phone.png" },
        //        { sl: 1, ProductName: "Pending ", Quantity: "", HSNCode: "", TotalAmount: "", image: "",subline:true },
        //        { sl: 2, ProductName: "ABC ", Quantity: "3", HSNCode: "300045", TotalAmount: "155525.5", image: "https://upload.wikimedia.org/wikipedia/commons/b/b6/Image_created_with_a_mobile_phone.png" },
        //        { sl: 3, ProductName: "ABC ", Quantity: "3", HSNCode: "300045", TotalAmount: "155525.5", image: "https://upload.wikimedia.org/wikipedia/commons/b/b6/Image_created_with_a_mobile_phone.png" },
        //        { sl: 4, ProductName: "ABC ", Quantity: "3", HSNCode: "300045", TotalAmount: "155525.5", image: "https://upload.wikimedia.org/wikipedia/commons/b/b6/Image_created_with_a_mobile_phone.png" },
        //        { sl: 5, ProductName: "ABC ", Quantity: "3", HSNCode: "300045", TotalAmount: "155525.5", image: "https://upload.wikimedia.org/wikipedia/commons/b/b6/Image_created_with_a_mobile_phone.png"},
        //        { sl: 6, ProductName: "ABC ", Quantity: "3", HSNCode: "300045", TotalAmount: "155525.5", image: "https://upload.wikimedia.org/wikipedia/commons/b/b6/Image_created_with_a_mobile_phone.png"},
        //        { sl: 6, ProductName: "ABC ", Quantity: "3", HSNCode: "300045", TotalAmount: "155525.5", image: "https://upload.wikimedia.org/wikipedia/commons/b/b6/Image_created_with_a_mobile_phone.png"}
        //    ],
        //    table2Data: [
        //        { sl: 1, GSTType: "CGST ", Quantity: "3", IGST2: "300045", Amount: "155525.5"},
        //        { sl: 1, GSTType: "CGST ", Quantity: "3", IGST2: "300045", Amount: "155525.5" },
        //        { sl: 1, GSTType: "CGST ", Quantity: "3", IGST2: "300045", Amount: "155525.5" },
        //        { sl: 1, GSTType: "CGST ", Quantity: "3", IGST2: "300045", Amount: "155525.5" },
        //        { sl: 1, GSTType: "CGST ", Quantity: "3", IGST2: "300045", Amount: "155525.5" },
        //        { sl: 1, GSTType: "CGST ", Quantity: "3", IGST2: "300045", Amount: "155525.5" },
        //        { sl: 1, GSTType: "CGST ", Quantity: "3", IGST2: "300045", Amount: "155525.5" },
        //    ]
        //};

        //#regionend
        let pageDiv = document.getElementById("FrontSide");
        const childElements = pageDiv.querySelectorAll('[id]');
        console.log(childElements, 'childElements');
        // Separate IDs based on the "PT_" prefix
        const ptPrefixIds = [];
        const otherIds = [];

        childElements.forEach(child => {
            if (child.id.startsWith('PT_')) {
                ptPrefixIds.push(child.id);
            } else {
                otherIds.push(child.id);
            }
        });

        // Display the separated lists
        console.log('IDs with "PT_" prefix:', ptPrefixIds);
        console.log('IDs without "PT_" prefix:', otherIds);

        ptPrefixIdsArray2 = [];
        ptPrefixIds.forEach((d, i) => {
            const targetElement = pageDiv.querySelector("#"+d);
            const leftPosition = targetElement.offsetLeft;
            const elementWidth = targetElement.offsetWidth;
            ptPrefixIdsArray2.push({ id: d, left: leftPosition, width: elementWidth});
            if (targetElement) {
                pageDiv.removeChild(targetElement);
            };

        })
        console.log(ptPrefixIdsArray2, 'ptPrefixIdsArray2---');
        const idsToRemove = ["ptableMarkerStarter", "ptableMarkerEnder", "ptable2MarkerStarter", "ptable2MarkerEnder", "ptable3MarkerStarter", "ptable3MarkerEnder", "ptable4MarkerStarter", "ptable4MarkerEnder", "ptable5MarkerStarter", "ptable5MarkerEnder", "ptable6MarkerStarter", "ptable6MarkerEnder"];
        otherIds.forEach((data, index) => {
           // debugger
            let element = pageDiv.querySelector("#" + data);
            if (data == "ptableMarkerStarter" || data == "ptableMarkerEnder" || data == "ptable2MarkerStarter" || data == "ptable2MarkerEnder" || data == "ptable3MarkerStarter" || data == "ptable3MarkerEnder" || data == "ptable4MarkerStarter" || data == "ptable4MarkerEnder" || data == "ptable5MarkerStarter" || data == "ptable5MarkerEnder" || data == "ptable6MarkerStarter" || data == "ptable6MarkerEnder")
            {

            } else {
                element.innerText = Data[data];
            }
        });
        let startPoint= pageDiv.querySelector("#ptableMarkerStarter");
        let startEnd = pageDiv.querySelector("#ptableMarkerEnder");
        let startPoint2 = pageDiv.querySelector("#ptable2MarkerStarter");
        let startEnd2 = pageDiv.querySelector("#ptable2MarkerEnder");
        let startPoint3 = pageDiv.querySelector("#ptable3MarkerStarter");
        let startEnd3 = pageDiv.querySelector("#ptable3MarkerEnder");
        let startPoint4 = pageDiv.querySelector("#ptable4MarkerStarter");
        let startEnd4 = pageDiv.querySelector("#ptable4MarkerEnder");
        let startPoint5 = pageDiv.querySelector("#ptable5MarkerStarter");
        let startEnd5 = pageDiv.querySelector("#ptable5MarkerEnder");
        let startPoint6 = pageDiv.querySelector("#ptable6MarkerStarter");
        let startEnd6 = pageDiv.querySelector("#ptable6MarkerEnder");
       // debugger
        let Starter_Top_Position = 0; let Ender_Top_Position = 0; let Starter_Top_Position2 = 0; let Ender_Top_Position2 = 0; let Starter_Top_Position3 = 0;
        let Ender_Top_Position3 = 0; let Starter_Top_Position4 = 0; let Ender_Top_Position4 = 0; let Starter_Top_Position5 = 0; let Ender_Top_Position5 = 0;
        let Starter_Top_Position6 = 0; let Ender_Top_Position6 = 0;
        if (startPoint)  Starter_Top_Position = startPoint.offsetTop;
        if (startEnd) Ender_Top_Position = startEnd.offsetTop;
        if (startPoint2) Starter_Top_Position2 = startPoint2.offsetTop;
        if (startEnd2) Ender_Top_Position2 = startEnd2.offsetTop;
        if (startPoint3) Starter_Top_Position3 = startPoint3.offsetTop;
        if (startEnd3) Ender_Top_Position3 = startEnd3.offsetTop;
        if (startPoint4) Starter_Top_Position4 = startPoint4.offsetTop;
        if (startEnd4) Ender_Top_Position4 = startEnd4.offsetTop;
        if (startPoint5) Starter_Top_Position5 = startPoint5.offsetTop;
        if (startEnd5) Ender_Top_Position5 = startEnd5.offsetTop;
        if (startPoint6) Starter_Top_Position6 = startPoint6.offsetTop;
        if (startEnd6) Ender_Top_Position6 = startEnd6.offsetTop;
       // if (idsToRemove.length > 0) {
            idsToRemove.forEach(id => {
               // debugger
                const elementToRemove = pageDiv.querySelector("#" + id);
                if (elementToRemove) {
                    pageDiv.removeChild(elementToRemove);
                };
            });
       // }
        if (ptPrefixIdsArray2.length > 0) {


            if (Data.table1Data.length > 0) {
                let html = "";
                let topPosition = 0;
                Data.table1Data.forEach((data, i) => {
                    debugger;
                    if (i == 0) {
                        topPosition += Starter_Top_Position ;
                    } else {
                        if (data.subline) { topPosition += 13 } else { topPosition += 20 }
                    };
                    ptPrefixIdsArray2.forEach((data2, i2) => {
                        const newId = data2.id.substring(3);
                      //  let topPosition = Starter_Top_Position + i * 20; // Adjust the increment based on your layout
                       // if (data.subline) topPosition -= 10;
                        //const leftPosition = 50 + i2 * 100; // Adjust the increment based on your layout
                        const leftPosition = data2.left;
                        const ElementWidth = data2.width;
                        if (data[newId]) {
                            if (topPosition >= Ender_Top_Position) {
                            } else {
                                if (newId == "image") {
                                    html +=`<img src="${data[newId]}" alt="Your Image" class="custom-image" style="position: absolute; top: ${topPosition}px; left: ${leftPosition}px; width:10mm;height:10mm;>`;
                                } else {
                                    html += `<p style="position: absolute; top: ${topPosition}px; left: ${leftPosition}px;color: black; width:${ElementWidth}px; overflow: hidden;">${data[newId]}</p>`;
                                }
                            }
                        }

                    });
                });
                console.log(html, 'html>>>---');
                pageDiv.insertAdjacentHTML('beforeend', html);
            };

            if (Data.table2Data.length > 0) {
                let html = "";
                let topPosition = 0;
                Data.table2Data.forEach((data, i) => {
                    if (i == 0) {
                        topPosition += Starter_Top_Position2;
                    } else {
                        if (data.subline) { topPosition += 13 } else { topPosition += 20 }
                    };
                    ptPrefixIdsArray2.forEach((data2, i2) => {
                       // debugger;

                        const newId = data2.id.substring(3);
                       // let topPosition = Starter_Top_Position2 + i * 20; // Adjust the increment based on your layout
                        if (data.subline) topPosition -= 10;
                        //const leftPosition = 50 + i2 * 100; // Adjust the increment based on your layout
                        const leftPosition = data2.left;
                        if (data[newId]) {
                            if (topPosition >= Ender_Top_Position2) {
                            } else {
                                if (newId == "image") {
                                    html += `<img src="${data[newId]}" alt="Your Image" class="custom-image" style="position: absolute; top: ${topPosition}px; left: ${leftPosition}px; width:10mm;height:10mm;>`;
                                } else {

                                    html += `<p style="position: absolute; top: ${topPosition}px; left: ${leftPosition}px;color: black;">${data[newId]}</p>`;
                                }
                            }
                        }

                    });
                });
                console.log(html, 'html>>>---');
                pageDiv.insertAdjacentHTML('beforeend', html);
            };
            if (Data.table3Data.length > 0) {
                let html = "";
                let topPosition = 0;
                Data.table3Data.forEach((data, i) => {
                    if (i == 0) {
                        topPosition += Starter_Top_Position3;
                    } else {
                        if (data.subline) { topPosition += 13 } else { topPosition += 20 }
                    }
                    ptPrefixIdsArray2.forEach((data2, i2) => {
                        //debugger;

                        const newId = data2.id.substring(3);
                       // let topPosition = Starter_Top_Position3 + i * 20; // Adjust the increment based on your layout
                        //const leftPosition = 50 + i2 * 100; // Adjust the increment based on your layout
                        if (data.subline) topPosition -= 10;
                        const leftPosition = data2.left;
                        if (data[newId]) {
                            if (topPosition >= Ender_Top_Position3) {
                            } else {
                                if (newId == "image") {
                                    html += `<img src="${data[newId]}" alt="Your Image" class="custom-image" style="position: absolute; top: ${topPosition}px; left: ${leftPosition}px; width:10mm;height:10mm;>`;
                                } else {
                                    html += `<p style="position: absolute; top: ${topPosition}px; left: ${leftPosition}px;color: black;">${data[newId]}</p>`;
                                }
                            }
                        }

                    });
                });
                console.log(html, 'html>>>---');
                pageDiv.insertAdjacentHTML('beforeend', html);
            };

            if (Data.table4Data.length > 0) {
                let html = "";
                let topPosition = 0;
                Data.table4Data.forEach((data, i) => {
                    if (i == 0) {
                        topPosition += Starter_Top_Position4;
                    } else {
                        if (data.subline) { topPosition += 13 } else { topPosition += 20 }
                    }
                    ptPrefixIdsArray2.forEach((data2, i2) => {
                        //debugger;

                        const newId = data2.id.substring(3);
                        // let topPosition = Starter_Top_Position3 + i * 20; // Adjust the increment based on your layout
                        //const leftPosition = 50 + i2 * 100; // Adjust the increment based on your layout
                        if (data.subline) topPosition -= 10;
                        const leftPosition = data2.left;
                        if (data[newId]) {
                            if (topPosition >= Ender_Top_Position4) {
                            } else {
                                if (newId == "image") {
                                    html += `<img src="${data[newId]}" alt="Your Image" class="custom-image" style="position: absolute; top: ${topPosition}px; left: ${leftPosition}px; width:10mm;height:10mm;>`;
                                } else {
                                    html += `<p style="position: absolute; top: ${topPosition}px; left: ${leftPosition}px;color: black;">${data[newId]}</p>`;
                                }
                            }
                        }

                    });
                });
                console.log(html, 'html>>>---');
                pageDiv.insertAdjacentHTML('beforeend', html);
            };
            if (Data.table5Data.length > 0) {
                let html = "";
                let topPosition = 0;
                Data.table5Data.forEach((data, i) => {
                    if (i == 0) {
                        topPosition += Starter_Top_Position5;
                    } else {
                        if (data.subline) { topPosition += 13 } else { topPosition += 20 }
                    }
                    ptPrefixIdsArray2.forEach((data2, i2) => {
                        //debugger;

                        const newId = data2.id.substring(3);
                        // let topPosition = Starter_Top_Position3 + i * 20; // Adjust the increment based on your layout
                        //const leftPosition = 50 + i2 * 100; // Adjust the increment based on your layout
                        if (data.subline) topPosition -= 10;
                        const leftPosition = data2.left;
                        if (data[newId]) {
                            if (topPosition >= Ender_Top_Position5) {
                            } else {
                                if (newId == "image") {
                                    html += `<img src="${data[newId]}" alt="Your Image" class="custom-image" style="position: absolute; top: ${topPosition}px; left: ${leftPosition}px; width:10mm;height:10mm;>`;
                                } else {
                                    html += `<p style="position: absolute; top: ${topPosition}px; left: ${leftPosition}px;color: black;">${data[newId]}</p>`;
                                }
                            }
                        }

                    });
                });
                console.log(html, 'html>>>---');
                pageDiv.insertAdjacentHTML('beforeend', html);
            };
            if (Data.table6Data.length > 0) {
                let html = "";
                let topPosition = 0;
                Data.table6Data.forEach((data, i) => {
                    if (i == 0) {
                        topPosition += Starter_Top_Position6;
                    } else {
                        if (data.subline) { topPosition += 13 } else { topPosition += 20 }
                    }
                    ptPrefixIdsArray2.forEach((data2, i2) => {
                        //debugger;

                        const newId = data2.id.substring(3);
                        // let topPosition = Starter_Top_Position3 + i * 20; // Adjust the increment based on your layout
                        //const leftPosition = 50 + i2 * 100; // Adjust the increment based on your layout
                        if (data.subline) topPosition -= 10;
                        const leftPosition = data2.left;
                        if (data[newId]) {
                            if (topPosition >= Ender_Top_Position6) {
                            } else {
                                if (newId == "image") {
                                    html += `<img src="${data[newId]}" alt="Your Image" class="custom-image" style="position: absolute; top: ${topPosition}px; left: ${leftPosition}px; width:10mm;height:10mm;>`;
                                } else {
                                    html += `<p style="position: absolute; top: ${topPosition}px; left: ${leftPosition}px;color: black;">${data[newId]}</p>`;
                                }
                            }
                        }

                    });
                });
                console.log(html, 'html>>>---');
                pageDiv.insertAdjacentHTML('beforeend', html);
            };
        };
    };
    var fileValid = true;
    function validateFileSize() {

        var fileInput = document.getElementById('BackGroundInputFile');
        var fileSize = fileInput.files[0].size; // in bytes
        var maxSizeInBytes = 2 * 1024 * 1024; // 1 MB (adjust the value as needed)
        var fileSizeError = document.getElementById('Id_Upload_bg_img');
        if (fileSize > maxSizeInBytes) {
            fileSizeError.innerText = 'File size exceeds the maximum allowed size (2 MB).';
            // Optionally, you can clear the file input to prevent submission
            fileValid = false;
            fileInput.value = '';
            $('#saveImage').prop('disabled', true);
        } else {
            fileSizeError.innerText = '';
            fileValid = true;
            $('#saveImage').prop('disabled', false);
        }
    }
    function onModalClose() {
        var fileSizeError = document.getElementById('Id_Upload_bg_img');
        if (fileSizeError) fileSizeError.innerText = '';
    }
    function Element_load(e) {
        // alert();
        //console.log(e.value);
      
       // $thisForm.find('[name="Module"]').val();
        return new Promise(function (resolve) {
            console.log(resolve);
            var PurchaseTransMode = e.value;
            console.log(PurchaseTransMode);
            var TransMode = "";
            switch (PurchaseTransMode) {
                case "1":
                    // Code to execute if myVariable equals "value1"
                    TransMode = "INSL";
                    break;
                case "2":
                    TransMode = "PRQU";
                    break;
                case "3":
                    TransMode = "INSL";
                    break;
                case "4":
                    TransMode = "PRPB";
                    break;
                case "5":
                    TransMode = "ACAT";
                    break;
                case "6":
                    TransMode = "INSO";
                    break;
                default:
                    TransMode = "INSL";
                  
            }
            let inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                'TransMode': TransMode
            }
            $.ajax({
                url: "@Url.Action("GetCommonPrintElements", "CommonPrintSettings")",
                cache: false,
                type: 'post',
                dataType: 'json',
                data: JSON.stringify(inputData),
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    debugger;
                    console.log(data, 'data');
                    if (data.Process.IsProcess) {
                        if (data != null && data.BranchList != 0) {

                            data.BranchList.forEach((i) => {

                                var html = '<li>';
                                html += '<a href="#" class="list-group-item elmnt" data-id="' + i.Id + '" style="padding-right: 0px; ">' + i.ElementName;
                                html += ' <span class="pull-right btn btn-xs btn-primary" id="' + i.Id + 'Add" style="margin-top:-5px;">Add</span>';
                                html += '<span class="pull-right btn btn-xs btn-default" id="' + i.Id + 'Remove" style="margin-right:16px;display:none;">X</span>';
                                html += '</a></li>';


                                $('#MoreElemetsId').append(html);

                                var temp1 = AddorUpdate1;
                                if (temp1 == 1) {
                                    var eleid = i.Id;
                                    ViewChildElement = parentElement_test;
                                    $.each(ViewChildElement, function (index, value) {

                                        var ViewChildElementID = value.id;
                                        if (ViewChildElementID && ViewChildElementID == eleid) {
                                            console.log(ViewChildElementID, 'ViewChildElementID');
                                            console.log(eleid, 'eleid');
                                            const idAdd = '#' + eleid + 'Add';
                                            const idRemove = '#' + eleid + 'Remove';
                                            $(idAdd).css('display', 'none');
                                            $(idRemove).css('display', 'block');


                                        }

                                        SelectedIdArray.push(eleid);
                                    });


                                }

                                //Add Event
                                $('#' + i.Id + 'Add').click(function () {


                                    $('#' + Side).append(i.Html)

                                    $('#' + i.Id + 'Add').css('display', 'none');
                                    $('#' + i.Id + 'Remove').css('display', 'block');

                                    var ID = i.Id;
                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }


                                    SelectedIdArray.push(ID);

                                    // }
                                    // SelectedId = ID;

                                });

                                // Remove Title
                                $('#' + i.Id + 'Remove').click(function () {
                                    var div = document.getElementById(i.Id);
                                    div.remove();
                                    $('#' + i.Id + 'Add').css('display', 'block');
                                    $('#' + i.Id + 'Remove').css('display', 'none');
                                    return true;
                                });


                                $('.elmnt').click(function () {

                                    $('#ElmWidth').attr('disabled', false);
                                    $('.elmnt').css({ 'background-color': '', 'color': '' });
                                    var ID = $(this).attr('data-id');
                                    $(this).css({ 'background-color': '#86a8d2', 'color': '#ffffff' });

                                    if ($('#' + ID).attr('style') != undefined) {
                                        var emtop = $('#' + ID).attr('style').split('top');

                                        if (emtop.length > 1) {
                                            var emoto = $('#' + ID).css('top').replace('px', '');
                                            if (emoto != 'auto') { $('#ElmTop').val(emoto); } else { $('#ElmTop').val(''); }
                                        } else { $('#ElmTop').val(''); }
                                        var emleft = $('#' + ID).attr('style').split('left');

                                        if (emleft.length > 1) {
                                            var emole = $('#' + ID).css('left').replace('px', '');
                                            if (emole != 'auto') { $('#xCordinates').val(emole); } else { $('#xCordinates').val(''); }
                                        } else { $('#xCordinates').val(''); }

                                        var emopa = $('#' + ID).attr('style').split('opacity');
                                        if (emopa.length > 1) {
                                            var emopaci = $('#' + ID).css('opacity').replace('px', '');
                                            if (emopaci != 'auto') { $('#ElmOpacity').val(emopaci); } else { $('#ElmOpacity').val(''); }
                                        } else { $('#ElmOpacity').val(''); }


                                        var widhattr = $('#' + ID).attr('style').split('width');
                                        if (widhattr.length > 1) {
                                            var emweight = $('#' + ID).css('width').replace('px', '');
                                            if (emweight != 'auto' && emweight != 0) { $('#ElmWidth').val(emweight); } else { $('#ElmWidth').val(''); }

                                        } else { $('#ElmWidth').val(''); }

                                        var heightattr = $('#' + ID).attr('style').split('height');
                                        if (heightattr.length > 1) {


                                            var emheight = $('#' + ID).css('height').replace('px', '');
                                            if (emheight != 'auto' && emheight != 0) { $('#ElmHeight').val(emheight); } else { $('#ElmHeight').val(''); }
                                        } else { $('#ElmHeight').val(''); }

                                    }
                                    else {
                                        $('#ElmTop').val('');
                                        $('#xCordinates').val('');
                                        $('#ElmOpacity').val('');
                                        $('#ElmWidth').val('');
                                        $('#ElmHeight').val('');
                                    }
                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }
                                    SelectedIdArray.push(ID);
                                    SelectedItems.push(ID);
                                    PRevElem.push(ID);
                                });
                            })

                        }
                        else {
                            $(".MoreElement").hide();
                        }
                        if (data != null && data.DetailsSection1 != 0) {
                            data.DetailsSection1.forEach((i) => {

                                var html = '<li>';
                                html += '<a href="#" class="list-group-item elmnt" data-id="' + i.Id + '" style="padding-right: 0px; ">' + i.ElementName;
                                html += ' <span class="pull-right btn btn-xs btn-primary" id="' + i.Id + 'Add" style="margin-top:-5px;">Add</span>';
                                html += '<span class="pull-right btn btn-xs btn-default" id="' + i.Id + 'Remove" style="margin-right:16px;display:none;">X</span>';
                                html += '</a></li>';


                                $('#DetailsSection1').append(html);

                                var temp2 = AddorUpdate1;
                                if (temp2 == 1) {
                                    var eleid = i.Id;
                                    ViewChildElement = parentElement_test;
                                    $.each(ViewChildElement, function (index, value) {

                                        var ViewChildElementID = value.id;
                                        if (ViewChildElementID && ViewChildElementID == eleid) {
                                            console.log(ViewChildElementID, 'ViewChildElementID');
                                            console.log(eleid, 'eleid');
                                            const idAdd = '#' + eleid + 'Add';
                                            const idRemove = '#' + eleid + 'Remove';
                                            $(idAdd).css('display', 'none');
                                            $(idRemove).css('display', 'block');
                                        }
                                        SelectedIdArray.push(eleid);
                                    });




                                }
                                //Add Event
                                $('#' + i.Id + 'Add').click(function () {
                                    $('#' + Side).append(i.Html)
                                    $('#' + i.Id + 'Add').css('display', 'none');
                                    $('#' + i.Id + 'Remove').css('display', 'block');
                                    var ID = i.Id;
                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }
                                    SelectedIdArray.push(ID);

                                });

                                // Remove Title
                                $('#' + i.Id + 'Remove').click(function () {
                                    var div = document.getElementById(i.Id);
                                    div.remove();
                                    $('#' + i.Id + 'Add').css('display', 'block');
                                    $('#' + i.Id + 'Remove').css('display', 'none');
                                    return true;
                                });


                                $('.elmnt').click(function () {

                                    $('#ElmWidth').attr('disabled', false);
                                    $('.elmnt').css({ 'background-color': '', 'color': '' });
                                    var ID = $(this).attr('data-id');
                                    $(this).css({ 'background-color': '#86a8d2', 'color': '#ffffff' });

                                    if ($('#' + ID).attr('style') != undefined) {
                                        var emtop = $('#' + ID).attr('style').split('top');

                                        if (emtop.length > 1) {
                                            var emoto = $('#' + ID).css('top').replace('px', '');
                                            if (emoto != 'auto') { $('#ElmTop').val(emoto); } else { $('#ElmTop').val(''); }
                                        } else { $('#ElmTop').val(''); }
                                        var emleft = $('#' + ID).attr('style').split('left');

                                        if (emleft.length > 1) {
                                            var emole = $('#' + ID).css('left').replace('px', '');
                                            if (emole != 'auto') { $('#xCordinates').val(emole); } else { $('#xCordinates').val(''); }
                                        } else { $('#xCordinates').val(''); }

                                        var emopa = $('#' + ID).attr('style').split('opacity');
                                        if (emopa.length > 1) {
                                            var emopaci = $('#' + ID).css('opacity').replace('px', '');
                                            if (emopaci != 'auto') { $('#ElmOpacity').val(emopaci); } else { $('#ElmOpacity').val(''); }
                                        } else { $('#ElmOpacity').val(''); }


                                        var widhattr = $('#' + ID).attr('style').split('width');
                                        if (widhattr.length > 1) {
                                            var emweight = $('#' + ID).css('width').replace('px', '');
                                            if (emweight != 'auto' && emweight != 0) { $('#ElmWidth').val(emweight); } else { $('#ElmWidth').val(''); }

                                        } else { $('#ElmWidth').val(''); }

                                        var heightattr = $('#' + ID).attr('style').split('height');
                                        if (heightattr.length > 1) {


                                            var emheight = $('#' + ID).css('height').replace('px', '');
                                            if (emheight != 'auto' && emheight != 0) { $('#ElmHeight').val(emheight); } else { $('#ElmHeight').val(''); }
                                        } else { $('#ElmHeight').val(''); }

                                    }
                                    else {
                                        $('#ElmTop').val('');
                                        $('#xCordinates').val('');
                                        $('#ElmOpacity').val('');
                                        $('#ElmWidth').val('');
                                        $('#ElmHeight').val('');
                                    }

                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }

                                    SelectedIdArray.push(ID);

                                    SelectedItems.push(ID);




                                    // SelectedId = ID;
                                });
                            });
                        }
                        else {
                            $(".Section1").hide();
                        }
                        if (data != null && data.TaxDetailColoumWise != 0) {
                            data.TaxDetailColoumWise.forEach((i) => {

                                var html = '<li>';
                                html += '<a href="#" class="list-group-item elmnt" data-id="' + i.Id + '" style="padding-right: 0px; ">' + i.ElementName;
                                html += ' <span class="pull-right btn btn-xs btn-primary" id="' + i.Id + 'Add" style="margin-top:-5px;">Add</span>';
                                html += '<span class="pull-right btn btn-xs btn-default" id="' + i.Id + 'Remove" style="margin-right:16px;display:none;">X</span>';
                                html += '</a></li>';


                                $('#DetailsTaxDetColoum').append(html);
                                var temp3 = AddorUpdate1;
                                if (temp3 == 1) {
                                    var eleid = i.Id;
                                    ViewChildElement = parentElement_test;
                                    $.each(ViewChildElement, function (index, value) {

                                        var ViewChildElementID = value.id;
                                        if (ViewChildElementID && ViewChildElementID == eleid) {
                                            console.log(ViewChildElementID, 'ViewChildElementID');
                                            console.log(eleid, 'eleid');
                                            const idAdd = '#' + eleid + 'Add';
                                            const idRemove = '#' + eleid + 'Remove';
                                            $(idAdd).css('display', 'none');
                                            $(idRemove).css('display', 'block');
                                        }
                                        SelectedIdArray.push(eleid);
                                    });




                                }
                                //Add Event
                                $('#' + i.Id + 'Add').click(function () {


                                    $('#' + Side).append(i.Html)

                                    $('#' + i.Id + 'Add').css('display', 'none');
                                    $('#' + i.Id + 'Remove').css('display', 'block');

                                    var ID = i.Id;
                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }
                                    SelectedIdArray.push(ID);

                                    // }
                                    // SelectedId = ID;

                                });

                                // Remove Title
                                $('#' + i.Id + 'Remove').click(function () {
                                    //if (confirm("Are you sure you want to remove this") == true) {

                                    var div = document.getElementById(i.Id);
                                    div.remove();

                                    $('#' + i.Id + 'Add').css('display', 'block');
                                    $('#' + i.Id + 'Remove').css('display', 'none');
                                    return true;
                                    //}
                                });


                                $('.elmnt').click(function () {

                                    $('#ElmWidth').attr('disabled', false);
                                    $('.elmnt').css({ 'background-color': '', 'color': '' });
                                    var ID = $(this).attr('data-id');
                                    $(this).css({ 'background-color': '#86a8d2', 'color': '#ffffff' });

                                    if ($('#' + ID).attr('style') != undefined) {
                                        var emtop = $('#' + ID).attr('style').split('top');

                                        if (emtop.length > 1) {
                                            var emoto = $('#' + ID).css('top').replace('px', '');
                                            if (emoto != 'auto') { $('#ElmTop').val(emoto); } else { $('#ElmTop').val(''); }
                                        } else { $('#ElmTop').val(''); }
                                        var emleft = $('#' + ID).attr('style').split('left');

                                        if (emleft.length > 1) {
                                            var emole = $('#' + ID).css('left').replace('px', '');
                                            if (emole != 'auto') { $('#xCordinates').val(emole); } else { $('#xCordinates').val(''); }
                                        } else { $('#xCordinates').val(''); }

                                        var emopa = $('#' + ID).attr('style').split('opacity');
                                        if (emopa.length > 1) {
                                            var emopaci = $('#' + ID).css('opacity').replace('px', '');
                                            if (emopaci != 'auto') { $('#ElmOpacity').val(emopaci); } else { $('#ElmOpacity').val(''); }
                                        } else { $('#ElmOpacity').val(''); }


                                        var widhattr = $('#' + ID).attr('style').split('width');
                                        if (widhattr.length > 1) {
                                            var emweight = $('#' + ID).css('width').replace('px', '');
                                            if (emweight != 'auto' && emweight != 0) { $('#ElmWidth').val(emweight); } else { $('#ElmWidth').val(''); }

                                        } else { $('#ElmWidth').val(''); }

                                        var heightattr = $('#' + ID).attr('style').split('height');
                                        if (heightattr.length > 1) {


                                            var emheight = $('#' + ID).css('height').replace('px', '');
                                            if (emheight != 'auto' && emheight != 0) { $('#ElmHeight').val(emheight); } else { $('#ElmHeight').val(''); }
                                        } else { $('#ElmHeight').val(''); }

                                    }
                                    else {
                                        $('#ElmTop').val('');
                                        $('#xCordinates').val('');
                                        $('#ElmOpacity').val('');
                                        $('#ElmWidth').val('');
                                        $('#ElmHeight').val('');
                                    }

                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }

                                    SelectedIdArray.push(ID);

                                    SelectedItems.push(ID);


                                    // SelectedId = ID;
                                });
                            });

                        }
                        else {
                            $(".TaxDetColoum").hide();
                        }
                        if (data != null && data.DetailsSection2 != 0) {
                        data.DetailsSection2.forEach((i) => {

                            var html = '<li>';
                            html += '<a href="#" class="list-group-item elmnt" data-id="' + i.Id + '" style="padding-right: 0px; ">' + i.ElementName;
                            html += ' <span class="pull-right btn btn-xs btn-primary" id="' + i.Id + 'Add" style="margin-top:-5px;">Add</span>';
                            html += '<span class="pull-right btn btn-xs btn-default" id="' + i.Id + 'Remove" style="margin-right:16px;display:none;">X</span>';
                            html += '</a></li>';


                            $('#DetailsSection2').append(html);
                            var temp3 = AddorUpdate1;
                            if (temp3 == 1) {
                                var eleid = i.Id;
                                ViewChildElement = parentElement_test;
                                $.each(ViewChildElement, function (index, value) {

                                    var ViewChildElementID = value.id;
                                    if (ViewChildElementID && ViewChildElementID == eleid) {
                                        console.log(ViewChildElementID, 'ViewChildElementID');
                                        console.log(eleid, 'eleid');
                                        const idAdd = '#' + eleid + 'Add';
                                        const idRemove = '#' + eleid + 'Remove';
                                        $(idAdd).css('display', 'none');
                                        $(idRemove).css('display', 'block');
                                    }
                                    SelectedIdArray.push(eleid);
                                });




                            }
                            //Add Event
                            $('#' + i.Id + 'Add').click(function () {


                                $('#' + Side).append(i.Html)

                                $('#' + i.Id + 'Add').css('display', 'none');
                                $('#' + i.Id + 'Remove').css('display', 'block');

                                var ID = i.Id;
                                if (SelectedIdArray.length > 0) {
                                    SelectedIdArray.length = 0;
                                }
                                SelectedIdArray.push(ID);

                                // }
                                // SelectedId = ID;

                            });

                            // Remove Title
                            $('#' + i.Id + 'Remove').click(function () {
                                //if (confirm("Are you sure you want to remove this") == true) {

                                var div = document.getElementById(i.Id);
                                div.remove();

                                $('#' + i.Id + 'Add').css('display', 'block');
                                $('#' + i.Id + 'Remove').css('display', 'none');
                                return true;
                                //}
                            });


                            $('.elmnt').click(function () {

                                $('#ElmWidth').attr('disabled', false);
                                $('.elmnt').css({ 'background-color': '', 'color': '' });
                                var ID = $(this).attr('data-id');
                                $(this).css({ 'background-color': '#86a8d2', 'color': '#ffffff' });

                                if ($('#' + ID).attr('style') != undefined) {
                                    var emtop = $('#' + ID).attr('style').split('top');

                                    if (emtop.length > 1) {
                                        var emoto = $('#' + ID).css('top').replace('px', '');
                                        if (emoto != 'auto') { $('#ElmTop').val(emoto); } else { $('#ElmTop').val(''); }
                                    } else { $('#ElmTop').val(''); }
                                    var emleft = $('#' + ID).attr('style').split('left');

                                    if (emleft.length > 1) {
                                        var emole = $('#' + ID).css('left').replace('px', '');
                                        if (emole != 'auto') { $('#xCordinates').val(emole); } else { $('#xCordinates').val(''); }
                                    } else { $('#xCordinates').val(''); }

                                    var emopa = $('#' + ID).attr('style').split('opacity');
                                    if (emopa.length > 1) {
                                        var emopaci = $('#' + ID).css('opacity').replace('px', '');
                                        if (emopaci != 'auto') { $('#ElmOpacity').val(emopaci); } else { $('#ElmOpacity').val(''); }
                                    } else { $('#ElmOpacity').val(''); }


                                    var widhattr = $('#' + ID).attr('style').split('width');
                                    if (widhattr.length > 1) {
                                        var emweight = $('#' + ID).css('width').replace('px', '');
                                        if (emweight != 'auto' && emweight != 0) { $('#ElmWidth').val(emweight); } else { $('#ElmWidth').val(''); }

                                    } else { $('#ElmWidth').val(''); }

                                    var heightattr = $('#' + ID).attr('style').split('height');
                                    if (heightattr.length > 1) {


                                        var emheight = $('#' + ID).css('height').replace('px', '');
                                        if (emheight != 'auto' && emheight != 0) { $('#ElmHeight').val(emheight); } else { $('#ElmHeight').val(''); }
                                    } else { $('#ElmHeight').val(''); }

                                }
                                else {
                                    $('#ElmTop').val('');
                                    $('#xCordinates').val('');
                                    $('#ElmOpacity').val('');
                                    $('#ElmWidth').val('');
                                    $('#ElmHeight').val('');
                                }

                                if (SelectedIdArray.length > 0) {
                                    SelectedIdArray.length = 0;
                                }

                                SelectedIdArray.push(ID);

                                SelectedItems.push(ID);
                                debugger;

                                // SelectedId = ID;
                            });
                        });
                        }
                        else {
                            $(".Section2").hide();
                        }
                      
                        //Payment
                        if (data != null && data.PaymentMode != 0) {
                            data.PaymentMode.forEach((i) => {

                                var html = '<li>';
                                html += '<a href="#" class="list-group-item elmnt" data-id="' + i.Id + '" style="padding-right: 0px; ">' + i.ElementName;
                                html += ' <span class="pull-right btn btn-xs btn-primary" id="' + i.Id + 'Add" style="margin-top:-5px;">Add</span>';
                                html += '<span class="pull-right btn btn-xs btn-default" id="' + i.Id + 'Remove" style="margin-right:16px;display:none;">X</span>';
                                html += '</a></li>';


                                $('#DetailsPaymentMode').append(html);
                                var temp3 = AddorUpdate1;
                                if (temp3 == 1) {
                                    var eleid = i.Id;
                                    ViewChildElement = parentElement_test;
                                    $.each(ViewChildElement, function (index, value) {

                                        var ViewChildElementID = value.id;
                                        if (ViewChildElementID && ViewChildElementID == eleid) {
                                            console.log(ViewChildElementID, 'ViewChildElementID');
                                            console.log(eleid, 'eleid');
                                            const idAdd = '#' + eleid + 'Add';
                                            const idRemove = '#' + eleid + 'Remove';
                                            $(idAdd).css('display', 'none');
                                            $(idRemove).css('display', 'block');
                                        }
                                        SelectedIdArray.push(eleid);
                                    });




                                }
                                //Add Event
                                $('#' + i.Id + 'Add').click(function () {


                                    $('#' + Side).append(i.Html)

                                    $('#' + i.Id + 'Add').css('display', 'none');
                                    $('#' + i.Id + 'Remove').css('display', 'block');

                                    var ID = i.Id;
                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }
                                    SelectedIdArray.push(ID);

                                    // }
                                    // SelectedId = ID;

                                });

                                // Remove Title
                                $('#' + i.Id + 'Remove').click(function () {
                                    //if (confirm("Are you sure you want to remove this") == true) {

                                    var div = document.getElementById(i.Id);
                                    div.remove();

                                    $('#' + i.Id + 'Add').css('display', 'block');
                                    $('#' + i.Id + 'Remove').css('display', 'none');
                                    return true;
                                    //}
                                });


                                $('.elmnt').click(function () {

                                    $('#ElmWidth').attr('disabled', false);
                                    $('.elmnt').css({ 'background-color': '', 'color': '' });
                                    var ID = $(this).attr('data-id');
                                    $(this).css({ 'background-color': '#86a8d2', 'color': '#ffffff' });

                                    if ($('#' + ID).attr('style') != undefined) {
                                        var emtop = $('#' + ID).attr('style').split('top');

                                        if (emtop.length > 1) {
                                            var emoto = $('#' + ID).css('top').replace('px', '');
                                            if (emoto != 'auto') { $('#ElmTop').val(emoto); } else { $('#ElmTop').val(''); }
                                        } else { $('#ElmTop').val(''); }
                                        var emleft = $('#' + ID).attr('style').split('left');

                                        if (emleft.length > 1) {
                                            var emole = $('#' + ID).css('left').replace('px', '');
                                            if (emole != 'auto') { $('#xCordinates').val(emole); } else { $('#xCordinates').val(''); }
                                        } else { $('#xCordinates').val(''); }

                                        var emopa = $('#' + ID).attr('style').split('opacity');
                                        if (emopa.length > 1) {
                                            var emopaci = $('#' + ID).css('opacity').replace('px', '');
                                            if (emopaci != 'auto') { $('#ElmOpacity').val(emopaci); } else { $('#ElmOpacity').val(''); }
                                        } else { $('#ElmOpacity').val(''); }


                                        var widhattr = $('#' + ID).attr('style').split('width');
                                        if (widhattr.length > 1) {
                                            var emweight = $('#' + ID).css('width').replace('px', '');
                                            if (emweight != 'auto' && emweight != 0) { $('#ElmWidth').val(emweight); } else { $('#ElmWidth').val(''); }

                                        } else { $('#ElmWidth').val(''); }

                                        var heightattr = $('#' + ID).attr('style').split('height');
                                        if (heightattr.length > 1) {


                                            var emheight = $('#' + ID).css('height').replace('px', '');
                                            if (emheight != 'auto' && emheight != 0) { $('#ElmHeight').val(emheight); } else { $('#ElmHeight').val(''); }
                                        } else { $('#ElmHeight').val(''); }

                                    }
                                    else {
                                        $('#ElmTop').val('');
                                        $('#xCordinates').val('');
                                        $('#ElmOpacity').val('');
                                        $('#ElmWidth').val('');
                                        $('#ElmHeight').val('');
                                    }

                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }

                                    SelectedIdArray.push(ID);

                                    SelectedItems.push(ID);


                                    // SelectedId = ID;
                                });
                            });

                        }
                        else {
                            $(".PaymentMode").hide();
                        }
                        //BankDetails
                        if (data != null && data.BankDetails != 0) {
                            data.BankDetails.forEach((i) => {

                                var html = '<li>';
                                html += '<a href="#" class="list-group-item elmnt" data-id="' + i.Id + '" style="padding-right: 0px; ">' + i.ElementName;
                                html += ' <span class="pull-right btn btn-xs btn-primary" id="' + i.Id + 'Add" style="margin-top:-5px;">Add</span>';
                                html += '<span class="pull-right btn btn-xs btn-default" id="' + i.Id + 'Remove" style="margin-right:16px;display:none;">X</span>';
                                html += '</a></li>';


                                $('#DetailsBankSection').append(html);
                                var temp3 = AddorUpdate1;
                                if (temp3 == 1) {
                                    var eleid = i.Id;
                                    ViewChildElement = parentElement_test;
                                    $.each(ViewChildElement, function (index, value) {

                                        var ViewChildElementID = value.id;
                                        if (ViewChildElementID && ViewChildElementID == eleid) {
                                            console.log(ViewChildElementID, 'ViewChildElementID');
                                            console.log(eleid, 'eleid');
                                            const idAdd = '#' + eleid + 'Add';
                                            const idRemove = '#' + eleid + 'Remove';
                                            $(idAdd).css('display', 'none');
                                            $(idRemove).css('display', 'block');
                                        }
                                        SelectedIdArray.push(eleid);
                                    });




                                }
                                //Add Event
                                $('#' + i.Id + 'Add').click(function () {


                                    $('#' + Side).append(i.Html)

                                    $('#' + i.Id + 'Add').css('display', 'none');
                                    $('#' + i.Id + 'Remove').css('display', 'block');

                                    var ID = i.Id;
                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }
                                    SelectedIdArray.push(ID);

                                    // }
                                    // SelectedId = ID;

                                });

                                // Remove Title
                                $('#' + i.Id + 'Remove').click(function () {
                                    //if (confirm("Are you sure you want to remove this") == true) {

                                    var div = document.getElementById(i.Id);
                                    div.remove();

                                    $('#' + i.Id + 'Add').css('display', 'block');
                                    $('#' + i.Id + 'Remove').css('display', 'none');
                                    return true;
                                    //}
                                });


                                $('.elmnt').click(function () {

                                    $('#ElmWidth').attr('disabled', false);
                                    $('.elmnt').css({ 'background-color': '', 'color': '' });
                                    var ID = $(this).attr('data-id');
                                    $(this).css({ 'background-color': '#86a8d2', 'color': '#ffffff' });

                                    if ($('#' + ID).attr('style') != undefined) {
                                        var emtop = $('#' + ID).attr('style').split('top');

                                        if (emtop.length > 1) {
                                            var emoto = $('#' + ID).css('top').replace('px', '');
                                            if (emoto != 'auto') { $('#ElmTop').val(emoto); } else { $('#ElmTop').val(''); }
                                        } else { $('#ElmTop').val(''); }
                                        var emleft = $('#' + ID).attr('style').split('left');

                                        if (emleft.length > 1) {
                                            var emole = $('#' + ID).css('left').replace('px', '');
                                            if (emole != 'auto') { $('#xCordinates').val(emole); } else { $('#xCordinates').val(''); }
                                        } else { $('#xCordinates').val(''); }

                                        var emopa = $('#' + ID).attr('style').split('opacity');
                                        if (emopa.length > 1) {
                                            var emopaci = $('#' + ID).css('opacity').replace('px', '');
                                            if (emopaci != 'auto') { $('#ElmOpacity').val(emopaci); } else { $('#ElmOpacity').val(''); }
                                        } else { $('#ElmOpacity').val(''); }


                                        var widhattr = $('#' + ID).attr('style').split('width');
                                        if (widhattr.length > 1) {
                                            var emweight = $('#' + ID).css('width').replace('px', '');
                                            if (emweight != 'auto' && emweight != 0) { $('#ElmWidth').val(emweight); } else { $('#ElmWidth').val(''); }

                                        } else { $('#ElmWidth').val(''); }

                                        var heightattr = $('#' + ID).attr('style').split('height');
                                        if (heightattr.length > 1) {


                                            var emheight = $('#' + ID).css('height').replace('px', '');
                                            if (emheight != 'auto' && emheight != 0) { $('#ElmHeight').val(emheight); } else { $('#ElmHeight').val(''); }
                                        } else { $('#ElmHeight').val(''); }

                                    }
                                    else {
                                        $('#ElmTop').val('');
                                        $('#xCordinates').val('');
                                        $('#ElmOpacity').val('');
                                        $('#ElmWidth').val('');
                                        $('#ElmHeight').val('');
                                    }

                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }

                                    SelectedIdArray.push(ID);

                                    SelectedItems.push(ID);


                                    // SelectedId = ID;
                                });
                            });

                        }
                        else {
                            $(".BankSection").hide();
                        }

                        if (data != null && data.DetailsSection7 != 0) {
                            data.DetailsSection7.forEach((i) => {

                                var html = '<li>';
                                html += '<a href="#" class="list-group-item elmnt" data-id="' + i.Id + '" style="padding-right: 0px; ">' + i.ElementName;
                                html += ' <span class="pull-right btn btn-xs btn-primary" id="' + i.Id + 'Add" style="margin-top:-5px;">Add</span>';
                                html += '<span class="pull-right btn btn-xs btn-default" id="' + i.Id + 'Remove" style="margin-right:16px;display:none;">X</span>';
                                html += '</a></li>';


                                $('#DetailsSection7').append(html);
                                var temp3 = AddorUpdate1;
                                if (temp3 == 1) {
                                    var eleid = i.Id;
                                    ViewChildElement = parentElement_test;
                                    $.each(ViewChildElement, function (index, value) {

                                        var ViewChildElementID = value.id;
                                        if (ViewChildElementID && ViewChildElementID == eleid) {
                                            console.log(ViewChildElementID, 'ViewChildElementID');
                                            console.log(eleid, 'eleid');
                                            const idAdd = '#' + eleid + 'Add';
                                            const idRemove = '#' + eleid + 'Remove';
                                            $(idAdd).css('display', 'none');
                                            $(idRemove).css('display', 'block');
                                        }
                                        SelectedIdArray.push(eleid);
                                    });




                                }
                                //Add Event
                                $('#' + i.Id + 'Add').click(function () {


                                    $('#' + Side).append(i.Html)

                                    $('#' + i.Id + 'Add').css('display', 'none');
                                    $('#' + i.Id + 'Remove').css('display', 'block');

                                    var ID = i.Id;
                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }
                                    SelectedIdArray.push(ID);

                                    // }
                                    // SelectedId = ID;

                                });

                                // Remove Title
                                $('#' + i.Id + 'Remove').click(function () {
                                    //if (confirm("Are you sure you want to remove this") == true) {

                                    var div = document.getElementById(i.Id);
                                    div.remove();

                                    $('#' + i.Id + 'Add').css('display', 'block');
                                    $('#' + i.Id + 'Remove').css('display', 'none');
                                    return true;
                                    //}
                                });


                                $('.elmnt').click(function () {

                                    $('#ElmWidth').attr('disabled', false);
                                    $('.elmnt').css({ 'background-color': '', 'color': '' });
                                    var ID = $(this).attr('data-id');
                                    $(this).css({ 'background-color': '#86a8d2', 'color': '#ffffff' });

                                    if ($('#' + ID).attr('style') != undefined) {
                                        var emtop = $('#' + ID).attr('style').split('top');

                                        if (emtop.length > 1) {
                                            var emoto = $('#' + ID).css('top').replace('px', '');
                                            if (emoto != 'auto') { $('#ElmTop').val(emoto); } else { $('#ElmTop').val(''); }
                                        } else { $('#ElmTop').val(''); }
                                        var emleft = $('#' + ID).attr('style').split('left');

                                        if (emleft.length > 1) {
                                            var emole = $('#' + ID).css('left').replace('px', '');
                                            if (emole != 'auto') { $('#xCordinates').val(emole); } else { $('#xCordinates').val(''); }
                                        } else { $('#xCordinates').val(''); }

                                        var emopa = $('#' + ID).attr('style').split('opacity');
                                        if (emopa.length > 1) {
                                            var emopaci = $('#' + ID).css('opacity').replace('px', '');
                                            if (emopaci != 'auto') { $('#ElmOpacity').val(emopaci); } else { $('#ElmOpacity').val(''); }
                                        } else { $('#ElmOpacity').val(''); }


                                        var widhattr = $('#' + ID).attr('style').split('width');
                                        if (widhattr.length > 1) {
                                            var emweight = $('#' + ID).css('width').replace('px', '');
                                            if (emweight != 'auto' && emweight != 0) { $('#ElmWidth').val(emweight); } else { $('#ElmWidth').val(''); }

                                        } else { $('#ElmWidth').val(''); }

                                        var heightattr = $('#' + ID).attr('style').split('height');
                                        if (heightattr.length > 1) {


                                            var emheight = $('#' + ID).css('height').replace('px', '');
                                            if (emheight != 'auto' && emheight != 0) { $('#ElmHeight').val(emheight); } else { $('#ElmHeight').val(''); }
                                        } else { $('#ElmHeight').val(''); }

                                    }
                                    else {
                                        $('#ElmTop').val('');
                                        $('#xCordinates').val('');
                                        $('#ElmOpacity').val('');
                                        $('#ElmWidth').val('');
                                        $('#ElmHeight').val('');
                                    }

                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }

                                    SelectedIdArray.push(ID);

                                    SelectedItems.push(ID);


                                    // SelectedId = ID;
                                });
                            });

                        }
                        else {
                            $(".Section7").hide();
                        }
                        if (data != null && data.DetailsSection8 != 0) {
                            data.DetailsSection8.forEach((i) => {

                                var html = '<li>';
                                html += '<a href="#" class="list-group-item elmnt" data-id="' + i.Id + '" style="padding-right: 0px; ">' + i.ElementName;
                                html += ' <span class="pull-right btn btn-xs btn-primary" id="' + i.Id + 'Add" style="margin-top:-5px;">Add</span>';
                                html += '<span class="pull-right btn btn-xs btn-default" id="' + i.Id + 'Remove" style="margin-right:16px;display:none;">X</span>';
                                html += '</a></li>';


                                $('#DetailsSection8').append(html);
                                var temp3 = AddorUpdate1;
                                if (temp3 == 1) {
                                    var eleid = i.Id;
                                    ViewChildElement = parentElement_test;
                                    $.each(ViewChildElement, function (index, value) {

                                        var ViewChildElementID = value.id;
                                        if (ViewChildElementID && ViewChildElementID == eleid) {
                                            console.log(ViewChildElementID, 'ViewChildElementID');
                                            console.log(eleid, 'eleid');
                                            const idAdd = '#' + eleid + 'Add';
                                            const idRemove = '#' + eleid + 'Remove';
                                            $(idAdd).css('display', 'none');
                                            $(idRemove).css('display', 'block');
                                        }
                                        SelectedIdArray.push(eleid);
                                    });




                                }
                                //Add Event
                                $('#' + i.Id + 'Add').click(function () {


                                    $('#' + Side).append(i.Html)

                                    $('#' + i.Id + 'Add').css('display', 'none');
                                    $('#' + i.Id + 'Remove').css('display', 'block');

                                    var ID = i.Id;
                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }
                                    SelectedIdArray.push(ID);

                                    // }
                                    // SelectedId = ID;

                                });

                                // Remove Title
                                $('#' + i.Id + 'Remove').click(function () {
                                    //if (confirm("Are you sure you want to remove this") == true) {

                                    var div = document.getElementById(i.Id);
                                    div.remove();

                                    $('#' + i.Id + 'Add').css('display', 'block');
                                    $('#' + i.Id + 'Remove').css('display', 'none');
                                    return true;
                                    //}
                                });


                                $('.elmnt').click(function () {

                                    $('#ElmWidth').attr('disabled', false);
                                    $('.elmnt').css({ 'background-color': '', 'color': '' });
                                    var ID = $(this).attr('data-id');
                                    $(this).css({ 'background-color': '#86a8d2', 'color': '#ffffff' });

                                    if ($('#' + ID).attr('style') != undefined) {
                                        var emtop = $('#' + ID).attr('style').split('top');

                                        if (emtop.length > 1) {
                                            var emoto = $('#' + ID).css('top').replace('px', '');
                                            if (emoto != 'auto') { $('#ElmTop').val(emoto); } else { $('#ElmTop').val(''); }
                                        } else { $('#ElmTop').val(''); }
                                        var emleft = $('#' + ID).attr('style').split('left');

                                        if (emleft.length > 1) {
                                            var emole = $('#' + ID).css('left').replace('px', '');
                                            if (emole != 'auto') { $('#xCordinates').val(emole); } else { $('#xCordinates').val(''); }
                                        } else { $('#xCordinates').val(''); }

                                        var emopa = $('#' + ID).attr('style').split('opacity');
                                        if (emopa.length > 1) {
                                            var emopaci = $('#' + ID).css('opacity').replace('px', '');
                                            if (emopaci != 'auto') { $('#ElmOpacity').val(emopaci); } else { $('#ElmOpacity').val(''); }
                                        } else { $('#ElmOpacity').val(''); }


                                        var widhattr = $('#' + ID).attr('style').split('width');
                                        if (widhattr.length > 1) {
                                            var emweight = $('#' + ID).css('width').replace('px', '');
                                            if (emweight != 'auto' && emweight != 0) { $('#ElmWidth').val(emweight); } else { $('#ElmWidth').val(''); }

                                        } else { $('#ElmWidth').val(''); }

                                        var heightattr = $('#' + ID).attr('style').split('height');
                                        if (heightattr.length > 1) {


                                            var emheight = $('#' + ID).css('height').replace('px', '');
                                            if (emheight != 'auto' && emheight != 0) { $('#ElmHeight').val(emheight); } else { $('#ElmHeight').val(''); }
                                        } else { $('#ElmHeight').val(''); }

                                    }
                                    else {
                                        $('#ElmTop').val('');
                                        $('#xCordinates').val('');
                                        $('#ElmOpacity').val('');
                                        $('#ElmWidth').val('');
                                        $('#ElmHeight').val('');
                                    }

                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }

                                    SelectedIdArray.push(ID);

                                    SelectedItems.push(ID);


                                    // SelectedId = ID;
                                });
                            });

                        }
                        else {
                            $(".Section8").hide();
                        }

                        if (data != null && data.DetailsSection9 != 0) {
                            data.DetailsSection9.forEach((i) => {

                                var html = '<li>';
                                html += '<a href="#" class="list-group-item elmnt" data-id="' + i.Id + '" style="padding-right: 0px; ">' + i.ElementName;
                                html += ' <span class="pull-right btn btn-xs btn-primary" id="' + i.Id + 'Add" style="margin-top:-5px;">Add</span>';
                                html += '<span class="pull-right btn btn-xs btn-default" id="' + i.Id + 'Remove" style="margin-right:16px;display:none;">X</span>';
                                html += '</a></li>';


                                $('#DetailsSection9').append(html);
                                var temp3 = AddorUpdate1;
                                if (temp3 == 1) {
                                    var eleid = i.Id;
                                    ViewChildElement = parentElement_test;
                                    $.each(ViewChildElement, function (index, value) {

                                        var ViewChildElementID = value.id;
                                        if (ViewChildElementID && ViewChildElementID == eleid) {
                                            console.log(ViewChildElementID, 'ViewChildElementID');
                                            console.log(eleid, 'eleid');
                                            const idAdd = '#' + eleid + 'Add';
                                            const idRemove = '#' + eleid + 'Remove';
                                            $(idAdd).css('display', 'none');
                                            $(idRemove).css('display', 'block');
                                        }
                                        SelectedIdArray.push(eleid);
                                    });




                                }
                                //Add Event
                                $('#' + i.Id + 'Add').click(function () {


                                    $('#' + Side).append(i.Html)

                                    $('#' + i.Id + 'Add').css('display', 'none');
                                    $('#' + i.Id + 'Remove').css('display', 'block');

                                    var ID = i.Id;
                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }
                                    SelectedIdArray.push(ID);

                                    // }
                                    // SelectedId = ID;

                                });

                                // Remove Title
                                $('#' + i.Id + 'Remove').click(function () {
                                    //if (confirm("Are you sure you want to remove this") == true) {

                                    var div = document.getElementById(i.Id);
                                    div.remove();

                                    $('#' + i.Id + 'Add').css('display', 'block');
                                    $('#' + i.Id + 'Remove').css('display', 'none');
                                    return true;
                                    //}
                                });


                                $('.elmnt').click(function () {

                                    $('#ElmWidth').attr('disabled', false);
                                    $('.elmnt').css({ 'background-color': '', 'color': '' });
                                    var ID = $(this).attr('data-id');
                                    $(this).css({ 'background-color': '#86a8d2', 'color': '#ffffff' });

                                    if ($('#' + ID).attr('style') != undefined) {
                                        var emtop = $('#' + ID).attr('style').split('top');

                                        if (emtop.length > 1) {
                                            var emoto = $('#' + ID).css('top').replace('px', '');
                                            if (emoto != 'auto') { $('#ElmTop').val(emoto); } else { $('#ElmTop').val(''); }
                                        } else { $('#ElmTop').val(''); }
                                        var emleft = $('#' + ID).attr('style').split('left');

                                        if (emleft.length > 1) {
                                            var emole = $('#' + ID).css('left').replace('px', '');
                                            if (emole != 'auto') { $('#xCordinates').val(emole); } else { $('#xCordinates').val(''); }
                                        } else { $('#xCordinates').val(''); }

                                        var emopa = $('#' + ID).attr('style').split('opacity');
                                        if (emopa.length > 1) {
                                            var emopaci = $('#' + ID).css('opacity').replace('px', '');
                                            if (emopaci != 'auto') { $('#ElmOpacity').val(emopaci); } else { $('#ElmOpacity').val(''); }
                                        } else { $('#ElmOpacity').val(''); }


                                        var widhattr = $('#' + ID).attr('style').split('width');
                                        if (widhattr.length > 1) {
                                            var emweight = $('#' + ID).css('width').replace('px', '');
                                            if (emweight != 'auto' && emweight != 0) { $('#ElmWidth').val(emweight); } else { $('#ElmWidth').val(''); }

                                        } else { $('#ElmWidth').val(''); }

                                        var heightattr = $('#' + ID).attr('style').split('height');
                                        if (heightattr.length > 1) {


                                            var emheight = $('#' + ID).css('height').replace('px', '');
                                            if (emheight != 'auto' && emheight != 0) { $('#ElmHeight').val(emheight); } else { $('#ElmHeight').val(''); }
                                        } else { $('#ElmHeight').val(''); }

                                    }
                                    else {
                                        $('#ElmTop').val('');
                                        $('#xCordinates').val('');
                                        $('#ElmOpacity').val('');
                                        $('#ElmWidth').val('');
                                        $('#ElmHeight').val('');
                                    }

                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }

                                    SelectedIdArray.push(ID);

                                    SelectedItems.push(ID);


                                    // SelectedId = ID;
                                });
                            });

                        }
                        else {
                            $(".Section9").hide();
                        }

                        if (data != null && data.DetailsSection9 != 0) {
                            data.DetailsSection10.forEach((i) => {

                                var html = '<li>';
                                html += '<a href="#" class="list-group-item elmnt" data-id="' + i.Id + '" style="padding-right: 0px; ">' + i.ElementName;
                                html += ' <span class="pull-right btn btn-xs btn-primary" id="' + i.Id + 'Add" style="margin-top:-5px;">Add</span>';
                                html += '<span class="pull-right btn btn-xs btn-default" id="' + i.Id + 'Remove" style="margin-right:16px;display:none;">X</span>';
                                html += '</a></li>';


                                $('#DetailsSection10').append(html);
                                var temp3 = AddorUpdate1;
                                if (temp3 == 1) {
                                    var eleid = i.Id;
                                    ViewChildElement = parentElement_test;
                                    $.each(ViewChildElement, function (index, value) {

                                        var ViewChildElementID = value.id;
                                        if (ViewChildElementID && ViewChildElementID == eleid) {
                                            console.log(ViewChildElementID, 'ViewChildElementID');
                                            console.log(eleid, 'eleid');
                                            const idAdd = '#' + eleid + 'Add';
                                            const idRemove = '#' + eleid + 'Remove';
                                            $(idAdd).css('display', 'none');
                                            $(idRemove).css('display', 'block');
                                        }
                                        SelectedIdArray.push(eleid);
                                    });




                                }
                                //Add Event
                                $('#' + i.Id + 'Add').click(function () {


                                    $('#' + Side).append(i.Html)

                                    $('#' + i.Id + 'Add').css('display', 'none');
                                    $('#' + i.Id + 'Remove').css('display', 'block');

                                    var ID = i.Id;
                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }
                                    SelectedIdArray.push(ID);

                                    // }
                                    // SelectedId = ID;

                                });

                                // Remove Title
                                $('#' + i.Id + 'Remove').click(function () {
                                    //if (confirm("Are you sure you want to remove this") == true) {

                                    var div = document.getElementById(i.Id);
                                    div.remove();

                                    $('#' + i.Id + 'Add').css('display', 'block');
                                    $('#' + i.Id + 'Remove').css('display', 'none');
                                    return true;
                                    //}
                                });


                                $('.elmnt').click(function () {

                                    $('#ElmWidth').attr('disabled', false);
                                    $('.elmnt').css({ 'background-color': '', 'color': '' });
                                    var ID = $(this).attr('data-id');
                                    $(this).css({ 'background-color': '#86a8d2', 'color': '#ffffff' });

                                    if ($('#' + ID).attr('style') != undefined) {
                                        var emtop = $('#' + ID).attr('style').split('top');

                                        if (emtop.length > 1) {
                                            var emoto = $('#' + ID).css('top').replace('px', '');
                                            if (emoto != 'auto') { $('#ElmTop').val(emoto); } else { $('#ElmTop').val(''); }
                                        } else { $('#ElmTop').val(''); }
                                        var emleft = $('#' + ID).attr('style').split('left');

                                        if (emleft.length > 1) {
                                            var emole = $('#' + ID).css('left').replace('px', '');
                                            if (emole != 'auto') { $('#xCordinates').val(emole); } else { $('#xCordinates').val(''); }
                                        } else { $('#xCordinates').val(''); }

                                        var emopa = $('#' + ID).attr('style').split('opacity');
                                        if (emopa.length > 1) {
                                            var emopaci = $('#' + ID).css('opacity').replace('px', '');
                                            if (emopaci != 'auto') { $('#ElmOpacity').val(emopaci); } else { $('#ElmOpacity').val(''); }
                                        } else { $('#ElmOpacity').val(''); }


                                        var widhattr = $('#' + ID).attr('style').split('width');
                                        if (widhattr.length > 1) {
                                            var emweight = $('#' + ID).css('width').replace('px', '');
                                            if (emweight != 'auto' && emweight != 0) { $('#ElmWidth').val(emweight); } else { $('#ElmWidth').val(''); }

                                        } else { $('#ElmWidth').val(''); }

                                        var heightattr = $('#' + ID).attr('style').split('height');
                                        if (heightattr.length > 1) {


                                            var emheight = $('#' + ID).css('height').replace('px', '');
                                            if (emheight != 'auto' && emheight != 0) { $('#ElmHeight').val(emheight); } else { $('#ElmHeight').val(''); }
                                        } else { $('#ElmHeight').val(''); }

                                    }
                                    else {
                                        $('#ElmTop').val('');
                                        $('#xCordinates').val('');
                                        $('#ElmOpacity').val('');
                                        $('#ElmWidth').val('');
                                        $('#ElmHeight').val('');
                                    }

                                    if (SelectedIdArray.length > 0) {
                                        SelectedIdArray.length = 0;
                                    }

                                    SelectedIdArray.push(ID);

                                    SelectedItems.push(ID);


                                    // SelectedId = ID;
                                });
                            });

                        }
                        else {
                            $(".Section10").hide();
                        }
                    var temp5 = AddorUpdate1;

                    if (temp5 == 1) {
                        $.each(ViewChildElement, function (index, value) {

                            var ViewChildElementID = value.id;
                            console.log(ViewChildElementID, 'ViewChildElementID');
                            if (ViewChildElementID) {
                                const idAdd = '#' + ViewChildElementID + 'Add';
                                const idRemove = '#' + ViewChildElementID + 'Remove';
                                $(idAdd).css('display', 'none');
                                $(idRemove).css('display', 'block');
                            }
                            SelectedIdArray.push(ViewChildElementID);

                        });

                    }
                }
                },
                error: function (error) {
                    console.log('An error occurred:', error);
                },
                complete: function () {
                    resolve();
                }
            });
        });
    };

    function showCharacterLengthContainer() {
        document.getElementById("characterLengthContainer").style.display = "block";
    }

    // Function to hide the character length container
    function hideCharacterLengthContainer() {
        document.getElementById("characterLengthContainer").style.display = "none";
    }

    document.getElementById("ISMaxLength").addEventListener("change", function () {
        if (this.checked) {
            showCharacterLengthContainer();
        } else {
            hideCharacterLengthContainer();
        }
    });
    function removeSpaces(input) {
        // Remove spaces at the beginning and end
        input.value = input.value.replace(/^\s+/, '');
        input.value = input.value.replace(/[|*;?<>:!#^~_`$="'{}&]/g, '');
    }
</script>

