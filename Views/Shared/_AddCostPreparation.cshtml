@*----------------------------------------------------------------------
    Created By	: Santhisree
    Created On	: 19/07/2022
    Purpose		: Cost Preparation
    -------------------------------------------------------------------------
    Modification
    On			By					OMID/Remarks
    -------------------------------------------------------------------------
    -------------------------------------------------------------------------*@
@model PerfectWebERP.Models.CostPreparationModel.CostPreparationListModel


<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">@ViewBag.PageTitle</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="row">
                <div class="col-sm-12">
                    <div class="default-tab">
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="Todolist" data-toggle="tab" href="#MainScreen"><i class="las la-tasks  mr-2"></i> Cost Preparation &nbsp;&nbsp;<span><label id="todobadge" class="badge badge-circle badge-info"></label></span> </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="OverdueList" data-toggle="tab" href="#Customerinfo" onclick="fn_LeadManagementFollowup_loadLeadMgtFollowupForm(this)"><i class="las la-book-reader mr-2"></i> Lead Info&nbsp;&nbsp;<label id="overduebadge" class="badge badge-circle badge-primary"></label></a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="UpcomingList" data-toggle="tab" href="#History" onclick="fn_LeadManagement_History(this)"><i class="las la-history mr-2"></i>History&nbsp;&nbsp;<label id="tasksbadge" class="badge badge-circle badge-success"></label></a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="SiteVisitList" data-toggle="tab" href="#SiteVisit" onclick="fn_SiteVisit_Details(this)"><i class="las la-tasks mr-2"></i>Site Visit Details&nbsp;&nbsp;<label id="tasksbadge" class="badge badge-circle badge-success"></label></a>
                            </li>

                        </ul>
                        <div><label></label></div>
                        <div class="tab-content">
                            <div class="tab-pane fade active show" role="tabpanel" id="MainScreen">

                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Import From</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="hidden" name="FK_Branch" value="@ViewBag.FK_Branch" />
                                                    <select class="form-control" id="ImportFrom" name="ImportFrom" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                        <option value="0">Please Select </option>

                                                        <option value="1">Quotation</option>

                                                    </select>

                                                    <div class="input-group-append">
                                                        @*<button id="addcountry-jq-searchButton3" data-toggle="tooltip" data-placement="top" data-html="true" title="Import from Quotation" class="btn btn-primary" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this, 174, 'Quotation List', [], ['FK_BranchType', 'FK_BranchMode', 'CustomeName', 'ID_Branch', 'MobileNo', 'FK_Salesorder', 'FK_CustomerOthers', 'FK_Customer', 'SoAddnAmount', 'SoDownPayment', 'TransMode', 'FK_Quotation', 'Othercharge'], CostPreperationTransMode);" Criterea1="0" Criterea2="FK_Branch" Criterea3="" Criterea4="" Function="4"><i class="las la-file-import la-lg"></i></button>*@
                                                        <input type="hidden" name="FK_Quotation" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                        <button id="addcountry-jq-searchButton3" PERFECT-ONCLICK-CHECK="FALSE" data-toggle="tooltip " data-placement="top" data-html="true"  class="btn btn-primary" type="button" perfect-css="button" onclick="fn_Import(this)" Criterea1="0" Criterea2="FK_Branch" Criterea3="" Criterea4="" Function="4"><i class="las la-file-import la-lg"></i></button>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4 DivLeadNo">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">

                                                <span perfect-class="formGroupLabel">Lead No</span>
                                                <span class="text-danger">*</span>

                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="date" name="LeadDates" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" hidden />
                                                    <input type="text" class="form-control perfectValidate_numeric Ledger" name="LeadNo" data-id="LeadNo-error" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" placeholder="Select Lead Number" disabled />
                                                    <input type="hidden" name="FK_Lead" class="form-control perfectValidate_numeric Ledger" data-id="LeadNo-error" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <div class="input-group-append">
                                                        @*<button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,33,'Lead List',[],['FK_Lead','ID_LeadGenerate','CustomeName', 'MobileNo','Address','FK_Customer','FK_CustomerOthers'])" Criterea1="0" Criterea2="0" BindName="Lead" BindVal="LeadNo"></button>*@
                                                        <button id="LeadBtID" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,138,'Lead List',[],['FK_Lead','ID_LeadGenerate','CustomeName','LeadDates', 'MobileNo','Address','FK_Customer','FK_CustomerOthers'])" Criterea1="0" Criterea2="0" Function="3" BindName="LeadNo" BindVal="FK_Lead"></button>
                                                    </div>


                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Prepared On</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="date" id="PrepareDate" class="form-control" name="PrepareDate" perfect-class="formGroupControl" perfect-ctype="date" max="2050-01-01" perfect-css="date" onchange="checkdatewithLDdate(this)" />
                                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                                                <div id="PrepareDate-error" class="Custominvalid animated fadeInUp PrepareDateerror" style="display: none;">Prepare Date sholud be greater than or equal to Lead Date</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Category</span>

                                            </label>
                                            <div class="col-sm-8">
                                                <select class="form-control" name="CategoryID" perfect-selectButtonAction="testing" perfect-class="formGroupControl" @*onchange="GetProductDetails(this)"*@ onchange="GetBomList(this,0,0)" perfect-ctype="select" perfect-css="select">
                                                    <option value="0">Please Select </option>
                                                    @*<option value="1"></option>*@

                                                    @if (!(Model.CategoryList is null))
                                                    {
                                                        foreach (var cat in Model.CategoryList)
                                                        {
                                                            <option value="@cat.CategoryID">@cat.CategoryName</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">BOM</span>

                                            </label>
                                            <div class="col-sm-8">
                                                <select class="form-control" name="ID_BOMProject" perfect-selectButtonAction="testing" perfect-class="formGroupControl" onchange="GetProductDetails(this)" perfect-ctype="select" perfect-css="select">
                                                    <option value="0">Please Select </option>


                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">

                                        <div id="accordion-Two" class="accordion accordion-active-header">


                                            <div class="accordion__header collapsed" id="EmployeeDetails" data-target="#active-header_collapseTwo" aria-expanded="true">
                                                <span class="accordion__header--icon"></span>
                                                <span class="accordion__header--text">Employee Details</span>

                                            </div>
                                            <div id="active-header_collapseTwo" class="collapse accordion__body" data-parent="#accordion-Two">
                                                <div class="accordion__body--text">
                                                    <div class="row">
                                                        <div class="col-sm-12 " perfect-class="TempTableProduct">
                                                            <br />
                                                            <div class="row">

                                                                <div class="col-sm-3 PerError">
                                                                    <div class="form-group row" perfect-class="formGroup">

                                                                        <label class="col-sm-5 col-form-label">
                                                                            <span perfect-class="formGroupLabel" name="lblDept">Department</span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>

                                                                        <div class="col-sm-7">
                                                                            <div class="input-group">
                                                                                <select class="form-control " perfect-tempTable-EmployeeDetailsTable="Department" name="Department" perfect-selectButtonAction="testing" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="ClearEmployeeDetailsOnchange(this)">
                                                                                    <option value="">Please Select </option>

                                                                                    @if (!(Model.DepartmentList is null))
                                                                                    {
                                                                                        foreach (var DepartmentModule in Model.DepartmentList)
                                                                                        {
                                                                                            <option value="@DepartmentModule.DepartmentID">@DepartmentModule.DepartmentName </option>
                                                                                        }
                                                                                    }
                                                                                </select>
                                                                            </div>
                                                                            <div class="text-danger temptableError"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-4">
                                                                    <div class="form-group row" perfect-class="formGroup">
                                                                        <label class="col-sm-3 col-form-label">
                                                                            <span perfect-class="formGroupLabel" name="lblEmployee">Employee</span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>
                                                                        <div class="col-sm-6">
                                                                            <div class="input-group">
                                                                                <input type="text" class="form-control " name="Employee" perfect-tempTable-EmployeeDetailsTable="Employee" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                                                <input type="hidden" name="EmployeeID" perfect-tempTable-EmployeeDetailsTable="EmployeeID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                                <div class="input-group-append">
                                                                                    <button id="addemployee-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,6,'Employee List',[],['DepartmentID','Department'])" criterea1="Department" bindname="Employee" bindval="EmployeeID"></button>
                                                                                </div>
                                                                            </div>
                                                                            <div class="text-danger temptableError"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-3">
                                                                    <div class="form-group row" perfect-class="formGroup">
                                                                        <label class="col-sm-5 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Employee Type</span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>
                                                                        <div class="col-sm-7 ">
                                                                            <div class="input-group">
                                                                                <select class="form-control " name="EmployeeType" perfect-tempTable-EmployeeDetailsTable="EmployeeType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">

                                                                                    <option value="">Please Select </option>

                                                                                    @if (!(Model.EmployeeTypeList is null))
                                                                                    {
                                                                                        foreach (var employeeTypeList in Model.EmployeeTypeList)
                                                                                        {
                                                                                            <option value="@employeeTypeList.ID_Mode">@employeeTypeList.ModeName</option>
                                                                                        }

                                                                                    }

                                                                                </select>
                                                                            </div>
                                                                            <div class="text-danger temptableError"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                                <div class="col-sm-2">

                                                                    @*<button class="btn btn-primary1" style="margin-top: 4px;" type="button" onclick="createatable(this,'EmployeeDetailsTable',['EmployeeID'])">Add</button>*@
                                                                    <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Employee" onclick="createatable(this,'EmployeeDetailsTable',['EmployeeID'])"><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                                                                    @*<button type="button" class="btn btn-primary mr-3" perfect-css="button" onclick="addToTempTable(this,'ProductType')" name="reset">Add</button>*@
                                                                    <button class="btn btn-light1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="EmployeeDetailsclear(this,'EmployeeDetailsTable')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">

                                                <div class="table-responsive" perfect-tempTable="EmployeeDetailsTable" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                                @*<div class="table-responsive" perfect-ProductType="ProductType"></div>*@
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">

                                        <div id="accordion-Two" class="accordion accordion-active-header">


                                            <div class="accordion__header collapsed" id="MaterialDetails" data-target="#active-header_collapseTwo1" aria-expanded="true">
                                                <span class="accordion__header--icon"></span>
                                                <span class="accordion__header--text">Material Details</span>

                                            </div>
                                            <div id="active-header_collapseTwo1" class="collapse accordion__body" data-parent="#accordion-Two">
                                                <div class="accordion__body--text">
                                                    <div class="row">
                                                        <div class="col-sm-12 " perfect-class="TempTableProduct">
                                                            <br />
                                                            <div class="row">
                                                                <div class="col-sm-4">
                                                                    <div class="form-group row" perfect-class="formGroup">
                                                                        <label name="lblProduct" class="col-sm-4 col-form-label">Product/Project&nbsp;<span class="text-danger">*</span></label>
                                                                        <div class="col-sm-8">
                                                                            <div class="input-group">
                                                                                <input type="text" class="form-control " perfect-tempTable-MaterialDetailsTable="Product" name="Product" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                                                <input type="hidden" name="ProductID" perfect-tempTable-MaterialDetailsTable="ProductID" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                                <input type="hidden" name="StockId" perfect-tempTable-MaterialDetailsTable="StockId" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                                <div class="input-group-append">
                                                                                    @*<button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" onclick="GetCmnPopUpSearchValAssign(this, 32, 'Product Details', [], ['MRPs', 'SalePrice', 'StockId'])" function="2" BindName="Product" BindVal="ProductID" perfect-css="button"></button>*@
                                                                                    <button id="addEmployee-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,122,'Product Details',[],[])" Criterea1="0" Criterea2="0" BindName="Product" BindVal="ProductID" Function="2"></button>
                                                                                </div>
                                                                            </div>
                                                                            <div class="text-danger temptableError"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                                <div class="col-sm-3">
                                                                    <div class="form-group row" perfect-class="formGroup">
                                                                        <label class="col-sm-5 col-form-label">Quantity&nbsp;<span class="text-danger">*</span></label>
                                                                        <div class="col-sm-7">
                                                                            <input type="text" class="form-control text-right" perfect-tempTable-MaterialDetailsTable="Quantity" name="Quantity" id="Quantity" perfect-class="formGroupControl" oninput="decimalpnt(this,'Quantity',4)" onfocus="this.oldvalue = this.value;" perfect-ctype="input" perfect-css="input" onchange="calcsalpttl(this)" maxlength="13" />
                                                                            <div class="text-danger temptableError"></div>
                                                                        </div>
                                                                        <div id="FldId-error" class="Custominvalid animated fadeInUp producterror" style="display: none;">Please Enter Quantity</div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-3">
                                                                    <div class="form-group row" perfect-class="formGroup">
                                                                        <label class="col-sm-5 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Amount</span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>
                                                                        <div class="col-sm-7">
                                                                            <input type="hidden" class="form-control" name="SalePrice" perfect-tempTable-MaterialDetailsTable="SalePrice" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                                            <input type="text" class="form-control text-right " perfect-tempTable-MaterialDetailsTable="Amount" name="Amount" perfect-class="formGroupControl" id="Amount" oninput="decimalpnt(this,'Amount',3)" onfocus="this.oldvalue = this.value;" perfect-ctype="input" perfect-css="input" maxlength="13" />
                                                                            <div class="text-danger temptableError"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                                <div class="col-sm-2">

                                                                    @*<button class="btn btn-primary1" style="margin-top: 4px;" type="button" onclick="createatable(this,'MaterialDetailsTable',['ProductID'])">Add</button>*@
                                                                    <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Material" onclick="createatable(this,'MaterialDetailsTable',['ProductID'])"><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                                                                    @*<button type="button" class="btn btn-primary mr-3" perfect-css="button" onclick="addToTempTable(this,'ProductType')" name="reset">Add</button>*@
                                                                    <button class="btn btn-light1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="MaterialDetailsclear(this,'MaterialDetailsTable')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">

                                                <div class="table-responsive" perfect-tempTable="MaterialDetailsTable" id="Material" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                                @*<div class="table-responsive" perfect-ProductType="ProductType"></div>*@
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">

                                        <div id="accordion-Two" class="accordion accordion-active-header">


                                            <div class="accordion__header collapsed" id="WorkDetails" data-target="#active-header_collapseTwo2" aria-expanded="true">
                                                <span class="accordion__header--icon"></span>
                                                <span class="accordion__header--text">Work Details</span>

                                            </div>
                                            <div id="active-header_collapseTwo2" class="collapse accordion__body" data-parent="#accordion-Two">
                                                <div class="accordion__body--text">
                                                    <div class="row">
                                                        <div class="col-sm-12 " perfect-class="TempTableProduct">
                                                            <br />
                                                            <div class="row">
                                                                <div class="col-sm-3 PerError">
                                                                    <div class="form-group row" perfect-class="formGroup">
                                                                        <label class="col-sm-5 col-form-label">
                                                                            <span perfect-class="formGroupLabel" name="lblWork">Work Type</span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>

                                                                        <div class="col-sm-7">
                                                                            <div class="input-group">
                                                                                <select class="form-control " perfect-tempTable-WorkDetailsTable="WorkType" name="WorkType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">

                                                                                    <option value="">Please Select </option>

                                                                                    @if (!(Model.WorkTypeList is null))
                                                                                    {
                                                                                        foreach (var workTypeList in Model.WorkTypeList)
                                                                                        {
                                                                                            <option value="@workTypeList.WorkTypeID">@workTypeList.WorkType</option>
                                                                                        }

                                                                                    }

                                                                                </select>
                                                                            </div>
                                                                            <div class="text-danger temptableError"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>



                                                                <div class="col-sm-3">
                                                                    <div class="form-group row" perfect-class="formGroup">
                                                                        <label class="col-sm-5 col-form-label">
                                                                            <span perfect-class="formGroupLabel" name="lblDurationType">Duration Type</span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>
                                                                        <div class="col-sm-7">
                                                                            <div class="input-group">
                                                                                <select class="form-control " name="DurationType" perfect-tempTable-WorkDetailsTable="DurationType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">

                                                                                    <option value="">Please Select </option>

                                                                                    @if (!(Model.DurationTypeList is null))
                                                                                    {
                                                                                        foreach (var durationTypeList in Model.DurationTypeList)
                                                                                        {
                                                                                            <option value="@durationTypeList.ID_Mode">@durationTypeList.ModeName</option>
                                                                                        }

                                                                                    }

                                                                                </select>
                                                                            </div>
                                                                            <div class="text-danger temptableError"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group row" perfect-class="formGroup">
                                                                        <label class="col-sm-5 col-form-label">
                                                                            <span perfect-class="formGroupLabel" name="lblDuration">Duration</span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>
                                                                        <div class="col-sm-7">
                                                                            @*<input type="hidden" class="form-control" name="SalePrice" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />*@
                                                                            <input type="text" class="form-control text-right " perfect-tempTable-WorkDetailsTable="Duration" name="Duration" id="Duration" perfect-class="formGroupControl" oninput="decimalpnt(this,'Duration',3)" onfocus="this.oldvalue = this.value;" perfect-ctype="input" perfect-css="input" maxlength="13" />
                                                                            <div class="text-danger temptableError"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group row" perfect-class="formGroup">
                                                                        <label class="col-sm-5 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Amount</span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>
                                                                        <div class="col-sm-7">
                                                                            <input type="hidden" class="form-control" name="SalePrice" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                                            <input type="text" class="form-control text-right " perfect-tempTable-WorkDetailsTable="WorkAmount" name="WorkAmount" id="WorkAmount" onchange="calcsalpttl(this)" perfect-class="formGroupControl" oninput="decimalpnt(this,'WorkAmount',3)" onfocus="this.oldvalue = this.value;" perfect-ctype="input" perfect-css="input" maxlength="13" />
                                                                            <div class="text-danger temptableError"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">

                                                                    @*<button class="btn btn-primary1" style="margin-top: 4px;" type="button" onclick="createatable(this,'WorkDetailsTable',['Name'])">Add</button>*@
                                                                    <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Work" onclick="createatable(this,'WorkDetailsTable',['WorkType'])"><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                                                                    <button class="btn btn-light1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="WorkDetailsclear(this,'WorkDetailsTable')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>

                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">

                                                <div class="table-responsive" perfect-tempTable="WorkDetailsTable" id="Work" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                                @*<div class="table-responsive" perfect-ProductType="ProductType"></div>*@
                                            </div>
                                        </div>
                                    </div>
                                    <hr style="width:100%" />
                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-5 col-form-label">
                                                <span perfect-class="formGroupLabel">Other Charges</span>

                                            </label>

                                            <div class="input-group col-sm-7">

                                                <input type="text" class="form-control text-right" name="OtherCharge" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="calcsalpttl(this)" readonly />

                                                <div class="input-group-append">
                                                    <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-credit-card" type="button" perfect-css="button" onclick="ShowOtherCharges(this,0)"></button>
                                                    <div class="modal fade" perfect-class="formGroupModalOtherCharge" id="formGroupModalOtherCharge">
                                                        <div class="modal-dialog modal-dialog-centered" role="document">
                                                            <div class="modal-content  rounded-0">
                                                                <div class="modal-header border-0">
                                                                    <h5 class="modal-title">Other Charge Details</h5>
                                                                    <button type="button" class="close" data-dismiss="modal">
                                                                        <span>&times;</span>
                                                                    </button>
                                                                </div>
                                                                <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                                                                    @*<div class="table-responsive" style="max-height: 100%; height: 80%; overflow: auto;">*@
                                                                    <table id="zero_configOthercharge" class="table mb-0  table-striped  text-black">
                                                                        <thead class="bg-primary text-white">
                                                                            <tr>
                                                                                <th class="t-head">SlNo</th>
                                                                                <th class="t-head" style="display:none">ID_OtherChargeType</th>
                                                                                <th class="t-head">Type</th>
                                                                                <th class="t-head">Trans Type</th>
                                                                                <th class="t-head">Amount</th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody class="modal-body" id="formGroupModalOtherChargebody"></tbody>
                                                                        <tfoot>
                                                                        </tfoot>
                                                                    </table>
                                                                    @*</div>*@
                                                                    @*<div class="modal-body" id="formGroupModalTaxbody">
                                        </div>*@
                                                                    <div class="modal-footer">
                                                                        @*<button type="button" onclick="CreateProductCheckDescription(this);" class="btn btn-primary">Add</button>*@

                                                                        <button type="button" class="btn btn-primary1" data-dismiss="modal" onclick="BindOtherChargeAmount(this)">Apply</button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Additional Amount</span>

                                            </label>
                                            <div class="col-sm-7">
                                                <input type="hidden" class="form-control" name="SalePrice" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                <input type="text" class="form-control text-right " name="AddAmount" onchange="BindTotalAmount(this)" perfect-class="formGroupControl" id="AddAmount" oninput="decimalpnt(this,'AddAmount',3)" onfocus="this.oldvalue = this.value;" perfect-ctype="input" perfect-css="input" maxlength="13" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-5 col-form-label">
                                                <span perfect-class="formGroupLabel">Total Amount</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-7">
                                                <input type="hidden" class="form-control" name="SalePrice" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                <input type="text" class="form-control text-right perfectValidate_decimal" name="TotAmount" onchange="calcsalpttl(this)" perfect-class="formGroupControl" oninput="decimalpnt(this,'TotAmount',3)" perfect-ctype="input" perfect-css="input" readonly />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Remarks</span>

                                            </label>
                                            <div class="col-sm-7">
                                                <textarea rows="4" name="CPRemarks" class="form-control" perfect-ctype="input" maxlength="250"oninput="removeSpaces(this)"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="form-group row" perfect-class="formGroup">

                                            <div class="col-sm-8">
                                                <button type="button" class="btn btn-rounded btn-success" onclick="ImageLoad(this)">
                                                    <span class="btn-icon-left text-success">
                                                        <i class="fa fa-upload color-success"></i>
                                                    </span>Image Upload
                                                </button>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-sm-12" id="Image-form">

                                    </div>
                                </div>
                                <div class="card-footer text-right" perfect-class="formFooter">
                                    @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                                    {
                                        <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="updateCostPreparation(this)"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                                    }
                                    @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                                    {
                                        <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="AddCostPreparation(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                                    }
                                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                                </div>
                            </div>
                            <div id="Customerinfo" class="tab-pane">
                                <div class="row" style="margin-top:1.5rem;">
                                    <div class="col-sm-6" name="Leadinfodetails">
                                    </div>
                                    <div class="col-sm-6" name="divDetails">
                                    </div>

                                    <div class="card-body">
                                        <h4>Product Details</h4>
                                        <div class="table-responsive">
                                            <table class="table  table-striped" id="ProductDett">
                                                <thead class="thead-primary">
                                                    <tr>
                                                        <th>Sl No.</th>
                                                        <th>Product</th>
                                                        <th>Qty</th>
                                                        <th>Category</th>
                                                        <th>Priority</th>
                                                        <th>Status</th>
                                                        <th>Action</th>
                                                        <th>Action Type</th>
                                                        @*<th>Customer Reamrks</th>*@
                                                        @*<th>Agent Remarks</th>*@
                                                        <th>Followe up Dt</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="ProductDet">
                                                    <tr id="0">
                                                        <td colspan="9" style="text-align:center;">No Records...</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="History" class="tab-pane">
                                <br />
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group col-md-6">
                                            <div class="form-check mb-2">
                                                <input type="checkbox" class="form-check-input" id="Mode" name="ViewAll" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" onchange="fn_LeadManagement_History(this)" />
                                                <label class="form-check-label" for="check1">View All Products</label>
                                            </div>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <table class="table  table-striped" id="Product">
                                                    <thead class="thead-primary">
                                                        <tr>
                                                            @*<th>Product</th>*@
                                                            <th>Enquiry About</th>
                                                            @*<th>Description</th>*@
                                                            <th>Action</th>
                                                            <th>Action Date</th>
                                                            <th>Status</th>
                                                            @*<th>Customer Reamrks</th>*@
                                                            <th>Agent Remarks</th>
                                                            <th>Followed By</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="ProductTbody">
                                                        <tr id="0">
                                                            <td colspan="9" style="text-align:center;">No Records...</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12" name="divHistory">
                                    </div>
                                </div>
                            </div>
                            <div id="SiteVisit" class="tab-pane">
                                <div class="row" style="margin-top:1.5rem;">
                                    <div class="col-sm-6" name="divSVDetails">
                                    </div>
                                    <div class="col-sm-6" name="divSVDetails1">
                                    </div>

                                    <div class="card-body">
                                        <h4>Employee Details</h4>
                                        <div class="table-responsive">
                                            <table class="table  table-striped" id="ProductDett">
                                                <thead class="thead-primary">
                                                    <tr>
                                                        <th>Sl No.</th>
                                                        <th>Department</th>
                                                        <th>Employee</th>
                                                        <th>Role</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="EmployeeDet">
                                                    <tr id="0">
                                                        <td colspan="9" style="text-align:center;">No Records...</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <div class="card-body">
                                        <h4>Measurement Details</h4>
                                        <div class="table-responsive">
                                            <table class="table  table-striped" id="ProductDett">
                                                <thead class="thead-primary">
                                                    <tr>
                                                        <th>Sl No.</th>
                                                        <th>Work Type</th>
                                                        <th>Measurement Type</th>
                                                        <th>Value</th>
                                                        <th>Unit</th>
                                                        <th>Remarks</th>

                                                    </tr>
                                                </thead>
                                                <tbody id="MeasurementDet">
                                                    <tr id="0">
                                                        <td colspan="9" style="text-align:center;">No Records...</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <input type="hidden" id="ID_LeadGenerateActionhdns" />
            </div>
        </form>

    </div>


</div>


<script>
    (function () {
        //jQuery('form').validate();//<-----  Validate/initialize our form on page load

    })();

    $(document).ready(function () {

        initFunctions('form');
        $('#MeasurementDetails').removeClass('collapsed');
        $('#active-header_collapseTwo').addClass('collapse');
        $('#active-header_collapseTwo').addClass('show');
        $('#MasterProjectDetails').attr('aria-expanded', "true");
        $('#active-header_collapseTwo1').addClass('collapse');
        $('#active-header_collapseTwo1').addClass('show');
        $('#active-header_collapseTwo2').addClass('collapse');
        $('#active-header_collapseTwo2').addClass('show');

    });
    var tableOptionsTempOut = {
        iconButton: {
            buttons: [
                
                {
                  icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';
                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');

                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else if (inputType == 'date') {
                                    console.log('datess', savedData)
                                    console.log('datess', savedData[pf_name])
                                    // $thisNode.val(moment(savedData[pf_name]).format('YYYY-DD-MM'));
                                    $thisNode.val(savedData[pf_name]);
                                }
                                else {

                                    $thisNode.val(savedData[pf_name]);
                                }

                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }


                        });



                    }
                },
                {
                  icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                       
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            //$thistbl.dataTable({ paging: true, searchbtn: false });
                        }
                        else {
                            $thistbl.remove();
                        }
                        let $thisItem = $('[perfect-class="TempTableProduct"]');
                        $thisItem.find('[perfect-ctype="input"]').val('');
                        $thisItem.find('[perfect-ctype="hidden"]').val('');
                        $thisItem.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                        let $thisForm = $('[perfect-class="form"]');
                        $thisForm.find('[name=prdbtn]').removeAttr("disabled", "disabled");

                        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tkey + '"]');
                        $tblcontainer.attr('perfect-tempTable-action', 0);
                        
                        BindTotalAmount(this);
                    }
                },
            ]
        },

        

        onlyShowColumn: ["Department_d", "Employee", "EmployeeType_d", "Amount", "Product","Quantity","WorkType_d","DurationType_d","Duration","WorkAmount"],
        hideColumn: [ "EmployeeTypeID", "MeasurementTypeID","MeasurementUnitID"],
        serialNo: true,
        renameHeader: {
            "Quantity": "Quantity1R", "EmployeeType_d": "Employeee Type", "WorkType_d": "Work Type", "DurationType_d": "Duration Type", "Amount": "Amount1R", "WorkAmount": "Amount1R", "Duration": "Duration1R", "Product":"Product/Model"},
        rowAttribute: [],
        isCheckType: [],
        isDateType: ["NextActionDate"],
    };

    var Subimg = "";
    function Getsubimg(dataimg) {
        Subimg = dataimg;
    }
    var $imgContainer = $('#Image-form');
    function ImageLoad(ele) {
        debugger
        $imgContainer.load('@Url.Action("LoadImageForm", "CostPreparation")', function () {
            getcase('Company');
 
            if (Subimg != "") {
                $.each(Subimg, function (key, value) {

                    var Mode = value.ImgMode;
                    console.log('Mode', Mode);
                    var imgal = value.ImgValue;
                    var ModeName = value.ModeName;
                    Getimgcntrl1(ele, "data:image/;base64," + imgal, Subimg, ModeName, Mode, value.ImgName)
                });
            }


        });
    }
    function GetProductDetails(ele) {
        
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let CategoryID = $thisForm.find('[name=CategoryID]').val();
        let ID_BOMProject = $thisForm.find('[name=ID_BOMProject]').val();
        //for clear the material details grid if ID_BOMProject==0;
        if (ID_BOMProject == 0 || ID_BOMProject == "") {
            let tablekey = 'MaterialDetailsTable';
            let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tablekey + '"]');
            $tblcontainer.attr('perfect-tempTable-action', 0);
            $tblcontainer.empty();
        }

        $.ajax({
            url: "@Url.Action("GetProductDetails", "CostPreparation")",
            type: "POST",
            data: JSON.stringify({ FK_Category: CategoryID, ID_BOMProject: ID_BOMProject }),
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                console.log(ajaxOutput);
                if (ajaxOutput.Process.IsProcess) {

                    let table = JSON.parse(ajaxOutput.Data);
                    fillgrid('MaterialDetailsTable', PotableOptionsTempOut, $thisForm, table.dtable);
                    BindTotalAmount(ele);
                    //BindBilldetails(ele);
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        //NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': "Please Verify the BOM Product's Rate" });
                    });
                    let tablekey = 'MaterialDetailsTable';
                    let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tablekey + '"]');
                    $tblcontainer.attr('perfect-tempTable-action', 0);
                    $tblcontainer.empty();
                }
            }

        });


    }
		function fillgrid(tablk, wartableOptionsTempOut, $thisForm, data) {
		console.log(data,'gdfg');
        let tableOptionsTemp = wartableOptionsTempOut;
		console.log(wartableOptionsTempOut,'gdfg');
        let insertData = [];
        let tableKey = tablk;
        let indexname = tableKey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
		console.log($tblcontainer,'New');
        $.each(data, function (keyOne, valOne) {
            let pData = {};
            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])
            //---

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                console.log('name', valOne[nameAttr])
                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {
                        tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTemp.hideColumn.push(nameAttr);
                        //displat text of select
                        pData[nameAttr + '_d'] = $this.find('[value="' + valOne[nameAttr] + '"]').text();
                        pData[nameAttr] = valOne[nameAttr];
                        console.log('select', $this.find('options[value="' + valOne[nameAttr] + '"]').text());

                    }
                    else if ($this.is('input')) {

                        pData[nameAttr] = valOne[nameAttr];

                    }

                }

            });

            insertData.push(pData);
            console.log('pData', pData)
            console.log('insertData', insertData)
            //----
			

        });
        $tblcontainer.empty();
        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTemp));
		

    }
		var PotableOptionsTempOut = {
        iconButton: {
            buttons: [
                
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';
                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {

                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }

                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }

							
                        });
                       
                    

                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            //$thistbl.dataTable({ paging: false,  ordering: false });

                        }
                        else {
                            $thistbl.remove();
                        }
                        //CalculateTotal($tablecontainer, 1);
                        //RoundOffCalc(this, 1);
                        //RemoveTaxArray(this, savedData.UID);
                        BindTotalAmount(this);
                    }
                },
            ]
        },
        onlyShowColumn: ["Department_d", "Employee", "EmployeeType_d", "Amount", "Product","Quantity","WorkType_d","DurationType_d","Duration","WorkAmount"],
        hideColumn: [ "EmployeeTypeID", "MeasurementTypeID","MeasurementUnitID"],
        serialNo: true,
            renameHeader: { "Quantity": "Quantity1R", "EmployeeType_d": "Employeee Type", "WorkType_d": "Work Type", "DurationType_d": "Duration Type", "Amount": "Amount1R", "WorkAmount": "Amount1R", "Duration": "Duration1R"},
        rowAttribute: [],
        isCheckType: [],
        isDateType: ["NextActionDate"],
       
    };
    function getEmployee(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

               //console.log("Input data",inputData)

                $.ajax({
                 url: '@Url.Action("GetEmployeeList", "Branch")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                    type: "GET",


                dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var employeeModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['EmployeeID'] });
                            employeeModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=EmployeeID]').val(ret.EmployeeID);
                                    $thisForm.find('[name=Employee]').val(ret.Employee);

                                   //-----
                                    $.ajax({
                                        url: "@Url.Action("GetEmployeeBaseInfo", "ServiceMapping")",
                                        type: "POST",
                                        data: { employeeID: ret.EmployeeID, __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),},
                                        dataType: "json",
                                        contentType: "application/x-www-form-urlencoded; charset=utf-8",
                                        success: function (ajaxOutEmp) {
                                            //code to make table
                                            //fill table
                                            //show
                                            if (ajaxOutEmp.Process.IsProcess) {

                                                let $tbl = $thisForm.find('.jq_serviceMap_empdetails');

                                                $tbl.find('.jq_serviceMap_empdetails_name').text(ajaxOutEmp.Data[0].EmployeeName);
                                                $tbl.find('.jq_serviceMap_empdetails_num').text(ajaxOutEmp.Data[0].Number);
                                                $tbl.find('.jq_serviceMap_empdetails_dsgn').text(ajaxOutEmp.Data[0].EmployeeDesignation);
                                                $tbl.find('.jq_serviceMap_empdetails_dept').text(ajaxOutEmp.Data[0].EmployeeDepartment);
                                                $tbl.removeClass('d-none');
                                            }

                                        }
                                    });

                                    //------

                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }





                },


            });


    }

      function ShowOtherCharges(ele,mode) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');

        if ($thisForm.data('pOthrChgData')) {

            if ($thisForm.data('pOthrChgData').length > 0) {

                othrchargelst = $thisForm.data('pOthrChgData');
            }

        }

        BindChargeDetails(ele, mode)


     }

    var othrchargelst = [];
       function BindChargeDetails(ele, mode) {

        var InputData =
        {
            TransMode: CostPreperationTransMode,
        }


        $.ajax({
            url: "@Url.Action("GetOtherCharges", "CostPreparation")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                if (ajaxOutput.OtherCharges.Process.IsProcess) {
                         var CheckListHTML = '';

                         if (ajaxOutput.OtherCharges.Data.length > 0) {

                             $.each(ajaxOutput.OtherCharges.Data, function (i, value) {

                                 let options = ''
                                     if (othrchargelst != '') {

                                         $.each(othrchargelst, function (key, value1) {

                                             if (value1.ID_OtherChargeType == value.ID_OtherChargeType) {

                                                 value.OctyAmount = value1.OctyAmount;
                                                 $.each(ajaxOutput.Transtypelist.Data, function (i, valuea) {
                                                     if (valuea.TransTypeID.toString() == value1.OctyTransType) {

                                                         options += '<option value=' + valuea.TransTypeID + ' selected="selected">' + valuea.TransType + '</option>'
                                                     }
                                                     else {
                                                         options += '<option value=' + valuea.TransTypeID + '>' + valuea.TransType + '</option>'
                                                     }
                                                 });
                                             }


                                         });

                                     }
                                     else
                                     {

                                         $.each(ajaxOutput.Transtypelist.Data, function (i, valuea) {
                                             options += '<option value=' + valuea.TransTypeID + '>' + valuea.TransType + '</option>'
                                         });
                                         //---

                                     }
                                 console.log('optionsl', options)
                                 let $dropdown = '<select class="form-control"name="selector" id="selector" >' + options + '</select>';
                                 CheckListHTML += "<tr>";
                                 CheckListHTML += "<td>" + value.SlNo + "</td>";
                                 CheckListHTML += "<td Class='jq_ID_OtherChargeType_td' Style='Display:none'>" + value.ID_OtherChargeType + "</td>";
                                 CheckListHTML += "<td Class='jq_Type_td' style='width:150px;'>" + value.OctyName + "</td>";
                                 CheckListHTML += "<td class='jq_TransType_td' style='width:150px;'>" + $dropdown + "</td>";
                                 CheckListHTML += "<td class='jq_OtherChagAmnt_td' style='width:150px;'><input min='0'  class='form-control text-right' type='number' onkeypress='return isNumberKey(event)'  value='" + value.OctyAmount + "' ' /></td> /></td>";

                                 CheckListHTML += "</tr>";
                             })
                         }
                         else {
                             CheckListHTML += "<div class='form-group col-md-6'>";
                             CheckListHTML += "<div class='form-check mb-2'>";
                             CheckListHTML += "<label class='form-check-label' for='check1'>No Records...</label>";
                             CheckListHTML += "</div></div>"
                         }
                        

                    $("#formGroupModalOtherChargebody").html(CheckListHTML)

                    if (mode == 0) {
                        $('#formGroupModalOtherCharge').modal({ backdrop: 'static', keyboard: false })
                     $('#formGroupModalOtherCharge').modal('show');
                    }
                    else {

                       $('#formGroupModalOtherCharge').modal('hide');
                    }


                     }
                else {

                    $.each(ajaxOutput.OtherCharges.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                  //  $('select').selectpicker('refresh');
                }
            });
            }

   
    var otherchgcalled = 0;
    function BindOtherChargeAmount(ele) {

        otherchgcalled == 1;
        console.log('inside binddatat fn')
        let $modal = $(ele).closest('.modal');
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let sum = 0;
        othrchargelst = [];
        $modal.find('table tbody').find('tr').each(function () {

            let value = parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val());;
            if ($(this).find('.jq_OtherChagAmnt_td').find('input').val() == '' || $(this).find('.jq_OtherChagAmnt_td').find('input').val() == null) {
                value = 0;
            }

            if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 0) {
                value = value * 0;
            }
            else if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 1) {
                value = value * -1;
            }
            else {
                value = value *  1;
            }
            sum = sum + value;

            let othrcharge = {
                ID_OtherChargeType: $(this).find('.jq_ID_OtherChargeType_td').text(),
                OctyTransType: $(this).find('.jq_TransType_td').find('select').val(),
                OctyAmount: parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val()) || 0

            };
            othrchargelst.push(othrcharge);
            $thisForm.data({ pOthrChgData: othrchargelst });
            console.log('othrchargelst', othrchargelst)

        });

        $thisForm.find('[name=OtherCharge]').val(sum);
        //roundof(ele);
        BindTotalAmount(ele);
    }

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 46 || charCode > 57))
            return false;

        return true;
    }

    function createatable(ele, tkey, uniq = []) {
	debugger;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';

        //make index
        console.log('check 1');

        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;
        if (thisactionIndex > 0) {
            //means update
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            //insert
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }//
      
        if (tableKey == 'EmployeeDetailsTable') {
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeID"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeID"]').val == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeID"]').val == '') {
                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select Employee');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Department"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Department"]').val == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="Department"]').val == '') {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Department"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Department');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Department"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeType"]').val() == null) {

            isValid = false;
            console.log('false');
            $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Employee Type');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
        }

        if (tableKey == "MaterialDetailsTable" ) {
		   
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Product');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Quantity');
            }
            else if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val() <= 0) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Quantity Should be Greater than Zero ');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Amount');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

        }
        if (tableKey == "WorkDetailsTable") {
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select WorkType');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="DurationType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="DurationType"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="DurationType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Duration Type');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="DurationType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Duration"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Duration"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Duration"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Duration');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Duration"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="WorkAmount"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkAmount"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter WorkAmount');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

        }
       
        let upperlimit = $thisForm.find('[name="RegDate"]').val();
        let lowerlimit = $thisForm.find('[name="NextActionDate"]').val();
        var enqDate = new Date(upperlimit);
        var nxtDate = new Date(lowerlimit);
        var today = new Date();

      
        if (tableKey == "WorkDetailsTable") {
                let prevData = [];
                $tblcontainer.find('table > tbody').find('tr').each(function () {
                    if (isNew) {
                        prevData.push($(this).data('pData'));
                    }
                    else {
                        if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                            prevData.push($(this).data('pData'));
                        }

                    }

                })

                unique.forEach(function (key, i) {
                    console.log('unid -> key:' + key + "| index :" + i);
                    let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                    let headerEleName = "";

                    let atname = $thisEle.attr('name');
                    let cvalue;
                    headerEleName = headerEleName.replace('*', '');

                    //console.log('len')
                    if ($thisEle.length != 0) {
                        console.log('len', $thisEle)
                        let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                        let errmessage = headerEleName + " Already Exists"

                        //getting current value in cval
                        if ($thisEle.is('select')) {
                            cvalue = $thisEle.val();
                            //alert(cvalue);
                        }
                        else if ($thisEle.is('input')) {

                            let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                            if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                            else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                            else { cvalue = $thisEle.val(); }
                        }
                        else { cvalue = $thisEle.val(); }

                        // console.log('cvalue ->' + cvalue);

                        //searching in previous data
                        if (prevData.find(a => a[atname] == cvalue)) {
                            // console.log('Search =>' + cvalue + '| attr :' + atname)
                            $errorElement.text(errmessage);
                            isValid = false;
                        }
                    }
                });
        }
        else {
            if (unique.length > 0) {
                //getting previous data
                let prevData = [];
                $tblcontainer.find('table > tbody').find('tr').each(function () {
                    if (isNew) {
                        prevData.push($(this).data('pData'));
                    }
                    else {
                        if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                            prevData.push($(this).data('pData'));
                        }

                    }

                })
                console.log('previous data', prevData);

                unique.forEach(function (key, i) {
                    console.log('unid -> key:' + key + "| index :" + i);
                    let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                    let headerEleName = "";
                    if (tableKey == "MaterialDetailsTable") {
                        headerEleName = "MaterialDetailsTable" ? $thisForm.find('[name="lblProduct"]').text() : $thisForm.find('[name="lblEmployee"]').text();
                    }
                    else if (tableKey == "EmployeeDetailsTable") {

                        headerEleName = "EmployeeDetailsTable" ? $thisForm.find('[name="lblEmployee"]').text() : $thisForm.find('[name="lblDept"]').text();
                    }
                    //else {
                    //    if (unique[0] == "WorkType") {
                    //        headerEleName = tableKey == "WorkDetailsTable" ? $thisForm.find('[name="lblWork"]').text() : $thisForm.find('[name="lblDuration"]').text();
                    //    }
                    //    else {
                    //        headerEleName = tableKey == "WorkDetailsTable" ? $thisForm.find('[name="lblDurationType"]').text() : $thisForm.find('[name="lblDuration"]').text();

                    //    }
                    //}
                    // let headerEleName = tableKey == "MaterialDetailsTable" ? $thisForm.find('[name="lblProduct"]').text() : $thisForm.find('[name="lblEmployee"]').text() ;
                    let atname = $thisEle.attr('name');
                    let cvalue;
                    headerEleName = headerEleName.replace('*', '');

                    //console.log('len')
                    if ($thisEle.length != 0) {
                        console.log('len', $thisEle)
                        let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                        let errmessage = headerEleName + " Already Exists"

                        //getting current value in cval
                        if ($thisEle.is('select')) {
                            cvalue = $thisEle.val();
                            //alert(cvalue);
                        }
                        else if ($thisEle.is('input')) {

                            let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                            if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                            else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                            else { cvalue = $thisEle.val(); }
                        }
                        else { cvalue = $thisEle.val(); }

                        // console.log('cvalue ->' + cvalue);

                        //searching in previous data
                        if (prevData.find(a => a[atname] == cvalue)) {
                            // console.log('Search =>' + cvalue + '| attr :' + atname)
                            $errorElement.text(errmessage);
                            isValid = false;
                        }
                    }
                });

            }
        }
        console.log('isValid', isValid);

        if (isValid) {

            console.log('check 4.1');
            // this section make table column data
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('nameAttr', nameAttr);
                console.log('headerName', headerName);
					 if (headerName.trim() == "EmployeeType") {
                            headerName = "Employee Type";
                        }
						if (headerName.trim() == "WorkType") {
                            headerName = "Work Type";
                        }
						if (headerName.trim() == "DurationType") {
                            headerName = "Duration Type";
                        }
						
						
                if ($this.is('select')) {

                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    //displat text of select
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    //tableOptionsTemp.onlyShowColumn.push(nameAttr + '_d')
                    insertData[nameAttr] = $this.val();
                    //insertData[nameAttr] = $this.val();
                    if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Action"]').val() != 0) { }



                    if ($thisForm.find('[name="FK_NetAction"]').val() == $this.val()) { }
                    else if ($thisForm.find('[name="FK_ActionType"]').val() == $this.val()) { }
                    else if ($thisForm.find('[name="BranchTypeID"]').val() == $this.val()) { }
                    else if ($thisForm.find('[name="BranchID"]').val() == $this.val()) { }
                    else if ($thisForm.find('[name="FK_Departement"]').val() == $this.val()) { }
                    else { $this.val('').selectpicker('refresh'); }


                }
                else if ($this.is('input')) {

                    let inputType = $this.attr('type').toLocaleLowerCase();

                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp.isCheckType.push(nameAttr)
                        //clear field
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {

                        tableOptionsTemp.hideColumn.push(nameAttr)
                        insertData[nameAttr] = $this.val();

                        if ($thisForm.find('[name="FK_Employee"]').val() == $this.val()) { }

                        else { $this.val(''); }

                        //clear field

                    }
                    else if (inputType == 'date') {


                        if ($this.val() == '') {

                            insertData[nameAttr] = null;
                        }
                        else {

                            insertData[nameAttr] = $this.val();
                        }

                        //clear field
                        // $this.val('');
                    }

                    else {
                        insertData[nameAttr] = $this.val();
                        //$this.val() == "" ? "''" : $this.val();
                        //clear field

                        if ($thisForm.find('[name="AssignEmp"]').val() == $this.val()) {

                        }
                        else { $this.val(''); }
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();
                    if ($thisForm.find('[name="AssignEmp"]').val() == $this.val()) { }
                    else { $this.val(''); }
                }




            });
            console.log('check 4.2', insertData);
            console.log('check 4.2 tableoption', tableOptionsTemp);
            if (isNew) {
                console.log('check 4.2.1');
                //this section nake table.table row
                if ($tblcontainer.find('table').length == 0) {
                    console.log('check 4.2.3');
                    console.log(insertData);
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                    //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false });
                }
                else {
                    console.log('check 4.2.1');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);


                    //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false});
                    //   $tblcontainer.DataTable().draw();
                    //  table.ajax.reload();
                }
                console.log('check 4.2.1');
            }
            else {
                console.log('check 4.3');
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                console.log('check 4.4');
                console.log('table', $tblcontainer.find('table'))
                console.log('check 4.5');
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);


                // $tblcontainer.find('table').dataTable({ paging: false,ordering:false });
            }

            console.log(insertData);
            //alert(1);
            // resetting the edit value
            $tblcontainer.attr('perfect-tempTable-action', 0);
        }
        BindTotalAmount(ele);
        console.log('check 5');
    }

    //function createWorktable(ele, tkey, uniq = []) {
    //    debugger;
    //    let $thisForm = $(ele).closest('[perfect-class="form"]');
    //    let tableKey = tkey;
    //    let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

    //    let insertData = {};
    //    let tableOptionsTemp = tableOptionsTempOut;

    //    let unique = (uniq) ? uniq : [];

    //    let isValid = true;
    //    let errorClass = '.temptableError';

    //    //make index
    //    console.log('check 1');

    //    let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
    //    let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
    //    let indexname = tkey + 'index';
    //    tableOptionsTemp.rowAttribute.push(indexname);
    //    tableOptionsTemp.hideColumn.push(indexname);
    //    let updateCond = '';
    //    let isNew = true;
    //    if (thisactionIndex > 0) {
    //        //means update
    //        insertData[indexname] = thisactionIndex;
    //        updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
    //        isNew = false;
    //    }
    //    else {
    //        //insert
    //        insertData[indexname] = lastIndex + 1;
    //        $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
    //        isNew = true;
    //    }//

       
    //    if (tableKey == "WorkDetailsTable") {
    //        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').val() == null) {

    //            isValid = false;
    //            console.log('false');
    //            $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select WorkType');
    //        }
    //        else {
    //            $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
    //        }
    //        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="DurationType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="DurationType"]').val() == null) {

    //            isValid = false;
    //            console.log('false');
    //            $thisForm.find('[perfect-tempTable-' + tableKey + '="DurationType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Duration Type');
    //        }
    //        else {
    //            $thisForm.find('[perfect-tempTable-' + tableKey + '="DurationType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
    //        }
    //        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Duration"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Duration"]').val() == null) {

    //            isValid = false;
    //            console.log('false');
    //            $thisForm.find('[perfect-tempTable-' + tableKey + '="Duration"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Duration');
    //        }
    //        else {
    //            $thisForm.find('[perfect-tempTable-' + tableKey + '="Duration"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
    //        }
    //        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="WorkAmount"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkAmount"]').val() == null) {

    //            isValid = false;
    //            console.log('false');
    //            $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter WorkAmount');
    //        }
    //        else {
    //            $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
    //        }

    //    }

    //    let upperlimit = $thisForm.find('[name="RegDate"]').val();
    //    let lowerlimit = $thisForm.find('[name="NextActionDate"]').val();
    //    var enqDate = new Date(upperlimit);
    //    var nxtDate = new Date(lowerlimit);
    //    var today = new Date();
    //    var key = "";
    //    var headerEleName = "";
    //    var atname = "";
    //    var cvalue="";
    //    var $errorElement = "";
    //    var errmessage = "";

    //    if (tableKey == "WorkDetailsTable") {
    //        debugger;
    //        if (unique.length > 0) {
    //            let prevData = [];
    //            $tblcontainer.find('table > tbody').find('tr').each(function () {
    //                if (isNew) {
    //                    prevData.push($(this).data('pData'));
    //                }
    //                else {
    //                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
    //                        prevData.push($(this).data('pData'));
    //                    }

    //                }

    //            })

    //            unique.forEach(function (key, i) {
    //                debugger;
    //                console.log('unid -> key:' + key + "| index :" + i);
                   
    //                 $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');              
                    
                   
    //                // atname = $thisEle.attr('name');
    //                 cvalue;
    //                headerEleName = headerEleName.replace('*', '');

    //                //console.log('len')
                   
    //            });
    //            if ($thisEle.length != 0) {
    //                debugger;
                  
    //                //if ((unique[0] == "WorkType") && (unique[1] == "DurationType")) {
    //                //    if (unique[0] == "WorkType") {
    //                //        atname = "WorkType";
    //                //    }
    //                //    if (unique[1] == "DurationType") {
    //                //        atname = "DurationType";
    //                //    }

    //                    console.log('len', $thisEle);
    //                     $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
    //                     errmessage = headerEleName + " Already Exists"

    //                    //getting current value in cval
    //                    if ($thisEle.is('select')) {
    //                        cvalue = $thisEle.val();
    //                        //alert(cvalue);
    //                    }
    //                    else if ($thisEle.is('input')) {

    //                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

    //                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
    //                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
    //                        else { cvalue = $thisEle.val(); }
    //                    }
    //                    else { cvalue = $thisEle.val(); }

    //                    //if (unique[0] == "WorkType") {
    //                    //    if (prevData.find(a => a[atname] == cvalue)) {
    //                    //        // console.log('Search =>' + cvalue + '| attr :' + atname)
    //                    //        $errorElement.text(errmessage);
    //                    //        isValid = false;
    //                    //    }
    //                    //}
    //                    //if (unique[1] == "DurationType") {
    //                    //    if (prevData.find(a => a[atname] == cvalue)) {
    //                    //        // console.log('Search =>' + cvalue + '| attr :' + atname)
    //                    //        $errorElement.text(errmessage);
    //                    //        isValid = false;
    //                    //    }
    //                    //}

    //                //}
    //            //}
    //        }
    //    }
    //    else {
    //        if (unique.length > 0) {
    //            //getting previous data
    //            let prevData = [];
    //            $tblcontainer.find('table > tbody').find('tr').each(function () {
    //                if (isNew) {
    //                    prevData.push($(this).data('pData'));
    //                }
    //                else {
    //                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
    //                        prevData.push($(this).data('pData'));
    //                    }

    //                }

    //            })
    //            console.log('previous data', prevData);
    //            var $thisEle = "";
    //            unique.forEach(function (key, i) {
    //                debugger;
    //                console.log('unid -> key:' + key + "| index :" + i);
    //                 $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');                
                   
    //                let cvalue;
    //                headerEleName = headerEleName.replace('*', '');

    //                //console.log('len')
                   
    //            });
    //            if ($thisEle.length != 0) {
    //                debugger;
    //                console.log('len', $thisEle)
    //                if ((unique[0] == "WorkType") && (unique[1] == "DurationType")) {
    //                     $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
    //                     errmessage = headerEleName + " Already Exists"

    //                    //getting current value in cval
    //                    if ($thisEle.is('select')) {
    //                        cvalue = $thisEle.val();
    //                        //alert(cvalue);
    //                    }
    //                    else if ($thisEle.is('input')) {

    //                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

    //                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
    //                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
    //                        else { cvalue = $thisEle.val(); }
    //                    }
    //                    else { cvalue = $thisEle.val(); }

    //                    // console.log('cvalue ->' + cvalue);

    //                    //searching in previous data
    //                    if (prevData.find(a => a[atname] == cvalue)) {
    //                        // console.log('Search =>' + cvalue + '| attr :' + atname)
    //                        $errorElement.text(errmessage);
    //                        isValid = false;
    //                    }
    //                }
    //            }

    //        }
    //    }
    //    console.log('isValid', isValid);

    //    if (isValid) {

    //        console.log('check 4.1');
    //        // this section make table column data
    //        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
    //            let $this = $(this);
    //            let headerName = $this.attr('perfect-tempTable-' + tableKey);
    //            let nameAttr = $this.attr('name');
    //            //console.log('nameAttr', nameAttr);
    //            console.log('headerName', headerName);

    //            if ($this.is('select')) {

    //                tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
    //                tableOptionsTemp.hideColumn.push(nameAttr)
    //                //displat text of select
    //                if ($this.val() != null) {
    //                    let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
    //                    insertData[nameAttr + '_d'] = selectText;
    //                }
    //                else {
    //                    let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
    //                    insertData[nameAttr + '_d'] = selectText;
    //                }
    //                //tableOptionsTemp.onlyShowColumn.push(nameAttr + '_d')
    //                insertData[nameAttr] = $this.val();
    //                //insertData[nameAttr] = $this.val();
    //                if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Action"]').val() != 0) { }



    //                if ($thisForm.find('[name="FK_NetAction"]').val() == $this.val()) { }
    //                else if ($thisForm.find('[name="FK_ActionType"]').val() == $this.val()) { }
    //                else if ($thisForm.find('[name="BranchTypeID"]').val() == $this.val()) { }
    //                else if ($thisForm.find('[name="BranchID"]').val() == $this.val()) { }
    //                else if ($thisForm.find('[name="FK_Departement"]').val() == $this.val()) { }
    //                else { $this.val('').selectpicker('refresh'); }


    //            }
    //            else if ($this.is('input')) {

    //                let inputType = $this.attr('type').toLocaleLowerCase();

    //                if (inputType == 'checkbox') {

    //                    insertData[nameAttr] = $this.is(':checked');

    //                    tableOptionsTemp.isCheckType.push(nameAttr)
    //                    //clear field
    //                    $this.prop('checked', false);

    //                }
    //                else if (inputType == 'hidden') {

    //                    tableOptionsTemp.hideColumn.push(nameAttr)
    //                    insertData[nameAttr] = $this.val();

    //                    if ($thisForm.find('[name="FK_Employee"]').val() == $this.val()) { }

    //                    else { $this.val(''); }

    //                    //clear field

    //                }
    //                else if (inputType == 'date') {


    //                    if ($this.val() == '') {

    //                        insertData[nameAttr] = null;
    //                    }
    //                    else {

    //                        insertData[nameAttr] = $this.val();
    //                    }

    //                    //clear field
    //                    // $this.val('');
    //                }

    //                else {
    //                    insertData[nameAttr] = $this.val();
    //                    //$this.val() == "" ? "''" : $this.val();
    //                    //clear field

    //                    if ($thisForm.find('[name="AssignEmp"]').val() == $this.val()) {

    //                    }
    //                    else { $this.val(''); }
    //                }
    //            }
    //            else {
    //                insertData[nameAttr] = $this.val();
    //                if ($thisForm.find('[name="AssignEmp"]').val() == $this.val()) { }
    //                else { $this.val(''); }
    //            }




    //        });
    //        console.log('check 4.2', insertData);
    //        console.log('check 4.2 tableoption', tableOptionsTemp);
    //        if (isNew) {
    //            console.log('check 4.2.1');
    //            //this section nake table.table row
    //            if ($tblcontainer.find('table').length == 0) {
    //                console.log('check 4.2.3');
    //                console.log(insertData);
    //                $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
    //                //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false });
    //            }
    //            else {
    //                console.log('check 4.2.1');
    //                let table = $tblcontainer.find('table').DataTable()
    //                table.destroy()
    //                pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);


    //                //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false});
    //                //   $tblcontainer.DataTable().draw();
    //                //  table.ajax.reload();
    //            }
    //            console.log('check 4.2.1');
    //        }
    //        else {
    //            console.log('check 4.3');
    //            let table = $tblcontainer.find('table').DataTable()
    //            table.destroy()
    //            console.log('check 4.4');
    //            console.log('table', $tblcontainer.find('table'))
    //            console.log('check 4.5');
    //            pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);


    //            // $tblcontainer.find('table').dataTable({ paging: false,ordering:false });
    //        }

    //        console.log(insertData);
    //        //alert(1);
    //        // resetting the edit value
    //        $tblcontainer.attr('perfect-tempTable-action', 0);
    //    }
    //    BindTotalAmount(ele)
    //    console.log('check 5');
    //}

    function EmployeeDetailsclear(ele, tableKey) {
     
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val(''); 
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');

    }

    function MaterialDetailsclear(ele, tableKey) {
      
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');

    }
    function WorkDetailsclear(ele, tableKey) {
       
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');

    }
    

         function ResetButton(ele) {

             CostPreparationInitialLoad();
    }
    function getfunctionAssign(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let saleprice = ($thisForm.find('[name="SalePrice"]').val() == "" || $thisForm.find('[name="SalePrice"]').val() == undefined) ? "0" : $thisForm.find('[name="SalePrice"]').val();

        //$thisForm.find('[name=Amount]').val(parseFloat(saleprice).toFixed(2));
        $thisForm.find('[name=Quantity]').val(0);
        
    }

    // Function to add new CostPreparation

     function fn_selectSubcategory(ele) {



        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $placeDropdown = $thisForm.find('[name=SubCategotyID]');//<--- Will give place select html element
        $placeDropdown.empty();
        $placeDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');

        let CategoryID = $(ele).val();


        // let ModeDropdown = $thisForm.find('[name=Mode]')
         //if ($thisForm.find('[name=Mode]').val() == "") {
         //    $thisForm.find('[name=Mode]').val(0);
         //}
         //alert($thisForm.find('[name=Mode]').val())
         $.ajax({
                 url: "@Url.Action("GetSubcategory", "CostPreparation")",
                type: "POST",

             data: JSON.stringify({ CategoryID: CategoryID}),
                dataType: "json",
                contentType: "application/json",
             success: function (ajaxOutput) {



                 if (ajaxOutput.Process.IsProcess) {

                             $.each(ajaxOutput.Data, function (key, value) {
                                 $placeDropdown.append($('<option/>', { "value": value.ID_SubCategory }).text(value.SubCatName)).selectpicker('refresh')
                                 });


                     }
                     else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             //NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': value });
                         });
                     }
                     }

                 });


    }
      function AddCostPreparation(ele) {
     

        let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability

        let PrepareDate = $thisForm.find('[name=PrepareDate]').val();
        let leaddate = $thisForm.find('[name=LeadDates]').val();
        if (PrepareDate < leaddate) {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Prepare Date should greater than Lead Date' });
        }
        else {
            //$(ele).find('i').removeClass();

            console.log('> Add CostPreparation form IS valid', $thisForm.valid())
           

                    let $modal2 = $thisForm.find('#zero_configOthercharge');

                    let OtherCharge = [];
                    $modal2.find('tbody').find('tr').each(function () {

                        let OtChargeinfo = {};
                        OtChargeinfo['ID_OtherChargeType'] = $(this).find('.jq_ID_OtherChargeType_td').text();

                        OtChargeinfo['OctyTransType'] = $(this).find('.jq_TransType_td').find('select').val();
                        OtChargeinfo['OctyName'] = $(this).find('.jq_Type_td').text();
                        //OtChargeinfo['OctyAmount'] = $(this).find('.jq_OtherChagAmnt_td').find('input').val();
                        OtChargeinfo['OctyAmount'] = $(this).find('.jq_OtherChagAmnt_td').find('input').val() == "" ? 0 : $(this).find('.jq_OtherChagAmnt_td').find('input').val();

                        console.log('OtChargeinfo', OtChargeinfo);

                        OtherCharge.push(OtChargeinfo);

                    });


                    let EmployeeDetails = [];
                    $thisForm.find('[perfect-tempTable="EmployeeDetailsTable"]').find('tbody').find('tr').each(function () {
                        EmployeeDetails.push($(this).data('pData'));
                    })
                    let MaterialDetails = [];
                    $thisForm.find('[perfect-tempTable="MaterialDetailsTable"]').find('tbody').find('tr').each(function () {
                        MaterialDetails.push($(this).data('pData'));
                    })
                    let WorkDetails = [];
                    $thisForm.find('[perfect-tempTable="WorkDetailsTable"]').find('tbody').find('tr').each(function () {
                        WorkDetails.push($(this).data('pData'));
                    })


                    Images = [];
                    $('#imagediv .imagedivd').each(function (index, ele) {
                      
                        var id = $(ele).attr("id").split("div")[1];
                        var imgbyte1 = $("#img" + id).attr("src");
                        var mode = { SVImgMode: id, SVImgValue: imgbyte1 };
                        Images.push(mode);
                    });
                    let Amount = 0;
                    let WorkAmount = 0;
                    $('#Material').find('tbody tr').each(function (index, ele) {
                        Amount = Amount + parseFloat($(ele).find('.Amount').text());

                    });
                    $('#Work').find('tbody tr').each(function (index, ele) {
                        WorkAmount = WorkAmount + parseFloat($(ele).find('.WorkAmount').text());

                    });


                    if (EmployeeDetails.length > 0) {
                        if (MaterialDetails.length > 0) {
                            if (WorkDetails.length > 0) {

                                if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                                    if (checkdatewithLDdate(ele)) {
                                        $(ele).prop('disabled', true); // avoiding form submit the double click
                                var inputData = {//<---- Input Json : this is the variable we pass to controller
                                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                    LeadGenerationID: $thisForm.find('[name=FK_Lead]').val().trim(),
                                    VisitDate: $thisForm.find('[name=PrepareDate]').val().trim(),
                                    FK_Category: $thisForm.find('[name=CategoryID]').val(),
                                    FK_BOMProject: $thisForm.find('[name=ID_BOMProject]').val(),
                                    MaterialCost: Amount,
                                    WorkCost: WorkAmount,
                                    OtherCharges: $thisForm.find('[name=OtherCharge]').val(),
                                    AdditionalCost: $thisForm.find('[name=AddAmount]').val(),
                                    TotalAmount: $thisForm.find('[name=TotAmount]').val(),
                                    Remarks: $thisForm.find('[name=CPRemarks]').val(),
                                    TransMode: CostPreperationTransMode,
                                    'OtherChgDetails': OtherCharge,
                                    'EmployeeDetails': EmployeeDetails,
                                    'MaterialDetails': MaterialDetails,
                                    'WorkDetails': WorkDetails,
                                    LastID: LastID_CostPreperation,
                                    ImportFrom: $thisForm.find('[name=ImportFrom]').val(),
                                };
                                clearSessionValue(LastIDSessionKey);

                                console.log('> Add CostPreparation ajax input', inputData);


                                $.ajax({
                                    url: "@Url.Action("AddNewCostPreparationDetails", "CostPreparation")",
                                    type: "POST",

                                    data: inputData,//<---- Input json : data passed to controller
                                    dataType: "json",
                                    contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                                        if (ajaxOutput.Process.IsProcess) {

                                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                                //toastr.success(value, "Success");
                                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                            });
                                            $thisForm.find('[perfect-ctype="input"]').val('');
                                            $thisForm.find('[perfect-ctype="number"]').val('');



                                            let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                            if (onSuccess) {
                                                window[onSuccess]();
                                            }

                                            //---------- Do stuff if success

                                            console.log('> Add new CostPreparation success data', ajaxOutput);
                                        }
                                        else {
                                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                                //toastr.warning(value, "Error");
                                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                            });
                                        }
                                    },
                                    complete: function () {
                                        $(ele).prop('disabled', false);
                                    }

                                });

                            }
                           
                        }
                       
                    }

                            else {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Enter Atleast One Work Details  !!!' });

                            }

                        }
                        else {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Enter Atleast One Material Details  !!!' });

                        }


            }

                    else {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Enter Atleast One Employee Details  !!!' });

                    }
        }
    }

    // Function to update a customer
    //$('.addcompany-jq-addnewuserUpdate').on('click',
        function updateCostPreparation(ele) {
            debugger;

            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability

            //perfectCRMvalidation.init($thisForm);
            let PrepareDate = $thisForm.find('[name=PrepareDate]').val();
            console.log("LeadDate", $thisForm.find('[name=LeadDates]').val())
            let leaddate = $thisForm.find('[name=LeadDates]').val();
            if (PrepareDate < leaddate) {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Prepare Date should greater than or equal to Lead Date' });
            }
            else {
              

                        let pdata = $thisForm.data('pData');

                        console.log('> Update CostPreparation form data saved', pdata);

                        let $modal2 = $thisForm.find('#zero_configOthercharge');

                    
                        othrchargelst;
                        let OtherCharge = [];
                        if (otherchgcalled == 1) {
                            $modal2.find('tbody').find('tr').each(function () {

                                let OtChargeinfo = {};
                                OtChargeinfo['ID_OtherChargeType'] = $(this).find('.jq_ID_OtherChargeType_td').text();

                                OtChargeinfo['OctyTransType'] = $(this).find('.jq_TransType_td').find('select').val();
                                OtChargeinfo['OctyName'] = $(this).find('.jq_Type_td').text();
                                OtChargeinfo['OctyAmount'] = $(this).find('.jq_OtherChagAmnt_td').find('input').val();
                                console.log('OtChargeinfo', OtChargeinfo);

                                OtherCharge.push(OtChargeinfo);

                            });
                        }
                        else {
                            OtherCharge = OtherCharge.concat(othrchargelst);
                        }


                        let EmployeeDetails = [];
                        $thisForm.find('[perfect-tempTable="EmployeeDetailsTable"]').find('tbody').find('tr').each(function () {
                            EmployeeDetails.push($(this).data('pData'));
                        })
                        let MaterialDetails = [];
                        $thisForm.find('[perfect-tempTable="MaterialDetailsTable"]').find('tbody').find('tr').each(function () {
                            MaterialDetails.push($(this).data('pData'));
                        })
                        let WorkDetails = [];
                        $thisForm.find('[perfect-tempTable="WorkDetailsTable"]').find('tbody').find('tr').each(function () {
                            WorkDetails.push($(this).data('pData'));
                        })


                       
                        let Amount = 0;
                        let WorkAmount = 0;
                        $('#Material').find('tbody tr').each(function (index, ele) {
                            Amount = Amount + parseFloat($(ele).find('.Amount').text());

                        });
                        $('#Work').find('tbody tr').each(function (index, ele) {
                            WorkAmount = WorkAmount + parseFloat($(ele).find('.WorkAmount').text());

                        });


                        if (EmployeeDetails.length > 0) {
                            if (MaterialDetails.length > 0) {
                                if (WorkDetails.length > 0) {
                                    if ($thisForm.valid()) {
                                        if (checkdatewithLDdate(ele)) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                                            $(ele).prop('disabled', true);
                                    var inputData = {//<---- Input Json : this is the variable we pass to controller
                                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                        LeadGenerationID: $thisForm.find('[name=FK_Lead]').val().trim(),
                                        VisitDate: $thisForm.find('[name=PrepareDate]').val().trim(),
                                        MaterialCost: Amount,
                                        WorkCost: WorkAmount,
                                        OtherCharges: $thisForm.find('[name=OtherCharge]').val(),
                                        AdditionalCost: $thisForm.find('[name=AddAmount]').val(),
                                        TotalAmount: $thisForm.find('[name=TotAmount]').val(),
										FK_Category: $thisForm.find('[name=CategoryID]').val(),
                                        FK_BOMProject: $thisForm.find('[name=ID_BOMProject]').val(),
                                        Remarks: $thisForm.find('[name=CPRemarks]').val(),
                                        'OtherChgDetails': OtherCharge,
                                        'EmployeeDetails': EmployeeDetails,
                                        'MaterialDetails': MaterialDetails,
                                        'WorkDetails': WorkDetails,
                                        TransMode: CostPreperationTransMode,
                                        LastID: LastID_CostPreperation,
                                        ImportFrom: $thisForm.find('[name=ImportFrom]').val(),
                                        CostPreparationID: pdata["CostPreparationID"]
                                    };

                                    clearSessionValue(LastIDSessionKey);
                                    if (EmployeeDetails.length > 0) {

                                        console.log('> Update state ajax input', inputData);
                                        $.ajax({
                                            url: "@Url.Action("UpdateCostPreparationDetails", "CostPreparation")",
                                            type: "POST",

                                            data: inputData,
                                            dataType: "json",
                                            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                            success: function (ajaxOutput) { //<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                                                if (ajaxOutput.Process.IsProcess) {

                                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                                        //toastr.success(value, "Success");
                                                        NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                                    });


                                                    let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                                    if (onSuccess) {
                                                        window[onSuccess]();
                                                    }

                                                    //---------- Do stuff if success
                                                    //toastr.success("Inside success", "Confirmation Box in table");

                                                    console.log('> update new CostPreparation success data', ajaxOutput);
                                                }
                                                else {
                                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                                        //toastr.warning(value, "Error");
                                                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                    });
                                                }


                                            },
                                            complete: function () {
                                                $(ele).prop('disabled', false);
                                            }

                                        });

                                    }
                                }
                               
                            }
                           
                                }

                                else {
                                    


                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Enter Atleast One Work Details  !!!' });
                                }
                       
                            }
                            else {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Enter Atleast One Material Details  !!!' });
                            }


                }


                        else {
                           
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Enter Atleast One Employee Details  !!!' });
                        }


            }
    }


                function BindTotalAmount(ele) {
                    debugger
                    let $thisForm = $('[perfect-class="form"]');
                    let Amount = 0;
                    let WorkAmount = 0;                    
                    let totAmount = 0;
                    let addAmount = 0;
                    let Othercharg = 0;
                  
                    Othercharg = ($thisForm.find('[name="OtherCharge"]').val() == "" || $thisForm.find('[name="OtherCharge"]').val() == undefined) ? "0.00" : $thisForm.find('[name="OtherCharge"]').val();

                    $('#Material').find('tbody tr').each(function (index, ele) {

                        let amount_ele = $(ele).find('.Amount').text();
                        if (amount_ele=='') {
                            amount_ele = 0;
                        }

                        Amount = Amount + parseFloat(amount_ele);

                    });
                    $('#Work').find('tbody tr').each(function (index, ele) {
                        let workAmount_ele = $(ele).find('.WorkAmount').text();
                        if (workAmount_ele == '') {
                            workAmount_ele = 0;
                        }

                        WorkAmount = WorkAmount + parseFloat(workAmount_ele);

                    });
                    
                    addAmount = ($thisForm.find('[name="AddAmount"]').val() == "" || $thisForm.find('[name="AddAmount"]').val() == undefined) ? "0.00" : $thisForm.find('[name=AddAmount]').val();
                    totAmount = Amount + WorkAmount + parseFloat(Othercharg) + parseFloat(addAmount)
                    $thisForm.find('[name=TotAmount]').val(totAmount.toFixed(2));

                }
                function calcsalpttl(ele) {
                    let $thisForm = $(ele).closest('[perfect-class="form"]');
                    let Spric = ($thisForm.find('[name="SalePrice"]').val() == "" || $thisForm.find('[name="SalePrice"]').val() == undefined) ? "0.000" : $thisForm.find('[name="SalePrice"]').val();
                    let qtys = ($thisForm.find('[name="Quantity"]').val() == "" || $thisForm.find('[name="Quantity"]').val() == undefined )? "0.000" : $thisForm.find('[name="Quantity"]').val();
                    $thisForm.find('[name=Amount]').val(parseFloat(Spric) * parseFloat(qtys));
                }



                //////New change///

                function fn_LeadManagementFollowup_loadLeadMgtFollowupForm(ele) {


                    let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability
                    let $formFolowDivContainer = $(this).closest('[perfect-class="form"]').closest('.jq_leadgeneration_body').find('.jq_leadgeneration_followup_status');
                    const leadstr = $thisForm.find('[name="FK_Lead"]').val().trim();
                    const leadnum = Number(leadstr.replace(/[^0-9]/g, ''));
                    let inputData = {
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        LeadGenerateID: leadnum
                    };
                    console.log(inputData);
                    if ($thisForm.find('[name=FK_Lead]').val().trim() != '' || $thisForm.find('[name=FK_Lead]').val().trim() != 0) {
                        $.ajax({
                url: "@Url.Action("GetLeadGenInfo", "SiteVisit")",
                            type: "POST",
                            // headers: { "token_key": "1234" },
                            data: inputData,
                            dataType: "json",
                            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                            success: function (ajaxOutput) {
                                console.log('sss', ajaxOutput)
                                //$formFolowDivContainer.load('@Url.Action("LoadLeadGenerateAction", "LeadManagement")', function () {
                                //    let $thisForm = $(this).find('[perfect-class="form"]');

                                //    $thisForm.attr('perfect-onFormSuccess', 'fn_LeadManagementActionFormClear');



                                //if (ajaxOutput.FoUpDetails.Process.IsProcess) {
                                //process is success
                                initFunctions($thisForm);
                                //console.log('sss', $thisForm)

                                //   $thisForm.data({ pData: ajaxOutput.FoUpDetails.Data[0] });           //FK_Product0
                                // Fill fields

                                let strHtml = "";

                                let LeadinfoHtml = "";




                                strHtml += "<div class='card'><div class='card-body pb-0'>";
                                strHtml += "<ul class='list-group list-group-flush'>";
                                strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Customer</strong><span class='mb-0'>" + ajaxOutput.prInfo.Data[0]['LgCusName'] + "</span></li>";
                                strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Address</strong><span class='mb-0'>" + ajaxOutput.prInfo.Data[0]['LgCusAddress'] + "</span></li>";
                                strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Mobile Number</strong><span class='mb-0'>" + ajaxOutput.prInfo.Data[0]['LgCusMobile'] + "</span></li>";
                                //strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Target Date</strong><span class='mb-0'>" + moment(ajaxOutput.prInfo.Data[0]['NextActionDate']).format('DD-MM-YYYY') + "</span></li>";
                                if (ajaxOutput.prInfo.Data[0]['NextActionDate'] == null) {
                                    nextdate = '';

                                }
                                else {
                                    nextdate = moment(ajaxOutput.prInfo.Data[0]['NextActionDate']).format('DD-MM-YYYY');

                                }

                                strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Target Date</strong><span class='mb-0'>" + nextdate + "</span></li>";
                                strHtml += "</ul></div>";




                                $('#Followupuser').html("<b>" + ajaxOutput.prInfo.Data[0]['LgCusName'] + "</b>" + "/" + "<b>" + ajaxOutput.prInfo.Data[0]['LeadNo'] + "</b>");
                                $thisForm.find('[name=divDetails]').html(strHtml);



                                $thisForm.find('[name="LeadNo"]').text();
                                $thisForm.find('[name="ProductCategory"]').text(ajaxOutput.prInfo.Data[0]['CatName']);
                                $thisForm.find('[name="lblfollowuptype"]').text(ajaxOutput.prInfo.Data[0]['ActnTypeName']);

                                LeadinfoHtml += "<div class='card'><div class='card-body pb-0'>";
                                LeadinfoHtml += "<ul class='list-group list-group-flush'>";
                                LeadinfoHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Lead No.</strong><span class='mb-0'>" + ajaxOutput.prInfo.Data[0]['LgLeadNo'] + "</span></li>";
                                LeadinfoHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Lead Date</strong><span class='mb-0'>" + moment(ajaxOutput.prInfo.Data[0]['LeadDate']).format('DD-MM-YYYY') + "</span></li>";
                                LeadinfoHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Email</strong><span class='mb-0'>" + ajaxOutput.prInfo.Data[0]['LgCusEmail'] + "</span></li>";
                                LeadinfoHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Collected By</strong><span class='mb-0'>" + ajaxOutput.prInfo.Data[0]['LgCollectedBy'] + "</span></li>";

                                LeadinfoHtml += "</ul></div>";
                                $thisForm.find('[name=Leadinfodetails]').html(LeadinfoHtml);

                                var $ProductHtml = '';
                                if (ajaxOutput != null) {
                                    $('#ProductDet').empty();
                                    var ProductData = ajaxOutput.subproduct.Data;
                                    if (ProductData) {
                                        $.each(ProductData, function (i, value) {
                                            let rowCount = (i + 1);
                                            $ProductHtml += "<tr id=" + rowCount + ">";
                                            $ProductHtml += "<td style='width:10%;'>" + rowCount + "</td>";
                                            $ProductHtml += "<td style='width:20%;'>" + value.ProdName + "</td>";
                                            $ProductHtml += "<td>" + value.LgpPQuantity + "</td>";
                                            $ProductHtml += "<td>" + value.CatName + "</td>";
                                            $ProductHtml += "<td >" + value.PriorityName + "</td>";
                                            $ProductHtml += "<td >" + value.Status + "</td>";
                                            $ProductHtml += "<td >" + value.NxtActnName + "</td>";
                                            $ProductHtml += "<td >" + value.ActnTypeName + "</td>";
                                            //$ProductHtml += "<td>" + value.ActnTypeName + "</td>";

                                            if (value.NextActionDate != null)
                                                $ProductHtml += "<td style='width:20%;'>" + moment(value.NextActionDate).format('DD/MM/YYYY') + "</td>";

                                            $ProductHtml += "</tr>";
                                        });
                                    }
                                    else {
                                        $ProductHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                                    }
                                    $thisForm.find('#ProductDet').append($ProductHtml);
                                }
                                else {
                                    $ProductHtml += "<tr id='0'><td colspan='8' style'text-align:center'>No Records..</td></tr>";
                                    $thisForm.find('#ProductDet').append($ProductHtml);
                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                    });
                                }

                                //}

                                //});
                            }
                        });
                    }


                }


                function fn_LeadManagement_History(ele) {
                    ;
                    //
                    // var $thisForm = $(ele).closest('[perfect-class="form-Assign"]');
                    let $thisForm = $(ele).closest('[perfect-class="form"]');
                    let prdOnly = true;;
                    if ($thisForm.find('[name=ViewAll]').is(":checked")) {
                        prdOnly = false;
                    }
                    let inputData = {            //
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        'LeadGenerateProduct': $thisForm.find('[name="FK_Lead"]').val(),
                        'PrductOnly': prdOnly
                    };


                    $.ajax({
                        url: '@Url.Action("GetLeadActionHistoryList", "SiteVisit")',
                        type: "POST",
                        data: inputData,
                        dataType: "json",
                        contentType: "application/x-www-form-urlencoded;charset=utf-8",
                        success: function (ajaxOutput) {
                            var $ProductHtml = '';
                            if (ajaxOutput != null) {
                                $('#ProductTbody').empty();
                                var ProductData = ajaxOutput.Data;
                                if (ProductData) {
                                    $.each(ProductData, function (i, value) {
                                        let rowCount = (i + 1);
                                        $ProductHtml += "<tr id=" + rowCount + ">";
                                        //  $ProductHtml += "<td style='width:20%;'>" + value.Product + "</td>";
                                        $ProductHtml += "<td style='width:20%;'>" + value.EnquiryAbout + "</td>";
                                        // $ProductHtml += "<td>" + value.LgpDescription + "</td>";
                                        $ProductHtml += "<td >" + value.Action + "</td>";
                                        $ProductHtml += "<td style='width:20%;'>" + (value.ActionDate) + "</td>";
                                        $ProductHtml += "<td>" + value.Status + "</td>";
                                        // $ProductHtml += "<td>" + value.CustomerReamrks + "</td>";
                                        $ProductHtml += "<td>" + value.Agentremarks + "</td>";
                                        $ProductHtml += "<td>" + value.FollowedBy + "</td>";
                                        $ProductHtml += "</tr>";
                                    });
                                }
                                else {
                                    $ProductHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                                }
                                $thisForm.find('#ProductTbody').append($ProductHtml);
                            }
                            else {
                                $ProductHtml += "<tr id='0'><td colspan='8' style'text-align:center'>No Records..</td></tr>";
                                $thisForm.find('#ProductTbody').append($ProductHtml);
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                        },
                        complete: function () {
                            $(ele).prop('disabled', false);
                        }

                    });

                    $(document).on('click', '.CloseEmpModal', function () {
                        $(this).closest('.modal').modal('hide');
                    });
                };

                function fn_SiteVisit_Details(ele) {


                    let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability
                    let $formFolowDivContainer = $(this).closest('[perfect-class="form"]').closest('.jq_leadgeneration_body').find('.jq_leadgeneration_followup_status');
                    let inputData = {
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        LeadGenerateID: $thisForm.find('[name=FK_Lead]').val().trim()
                    };
                    console.log(inputData);
                    $.ajax({
                        url: "@Url.Action("GetSiteVisitInfo", "CostPreparation")",
                        type: "POST",
                        // headers: { "token_key": "1234" },
                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (ajaxOutput) {

                            console.log('sss', ajaxOutput)

                            if (ajaxOutput.siteVisitId != 0) {
                                let strHtml = "";

                                let LeadinfoHtml = "";




                                strHtml += "<div class='card'><div class='card-body pb-0'>";
                                strHtml += "<ul class='list-group list-group-flush'>";
                                strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Site Visit Date</strong><span class='mb-0'>" + moment(ajaxOutput.SiteVisitDetails.Data[0].VisitDate).format('DD-MM-YYYY') + "</span></li>";

                                strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Site Visit Time</strong><span class='mb-0'>" + moment(ajaxOutput.SiteVisitDetails.Data[0].VisitTime, 'HH:mm').format('hh:mm A') + "</span></li>";

                                strHtml += "</ul></div>";




                                //$('#Followupuser').html("<b>" + ajaxOutput.prInfo.Data[0]['LgCusName'] + "</b>" + "/" + "<b>" + ajaxOutput.prInfo.Data[0]['LeadNo'] + "</b>");
                                $thisForm.find('[name=divSVDetails]').html(strHtml);



                                LeadinfoHtml += "<div class='card'><div class='card-body pb-0'>";
                                LeadinfoHtml += "<ul class='list-group list-group-flush'>";
                                LeadinfoHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Inspection Note1</strong><div class='col-10'><span class='mb-0'>" + ajaxOutput.SiteVisitDetails.Data[0]['Note1'] + "</span></div></li>";
                                LeadinfoHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Inspection Note2</strong><div class='col-10'><span class='mb-0'>" + ajaxOutput.SiteVisitDetails.Data[0]['Note2'] + "</span></div></li>";
                                LeadinfoHtml += "</ul></div>";

                                $thisForm.find('[name=divSVDetails1]').html(LeadinfoHtml);

                                var $EmployeeHtml = '';
                                var $MeasurementHtml = '';
                                if (ajaxOutput != null) {
                                    $('#EmployeeDet').empty();
                                    var EmployeeData = ajaxOutput.EmployeeDetails.Data;
                                    if (EmployeeData) {
                                        $.each(EmployeeData, function (i, value) {
                                            let rowCount = (i + 1);
                                            $EmployeeHtml += "<tr id=" + rowCount + ">";
                                            $EmployeeHtml += "<td style='width:20%;'>" + rowCount + "</td>";
                                            $EmployeeHtml += "<td>" + value.DepartmentName + "</td>";
                                            $EmployeeHtml += "<td>" + value.Employee + "</td>";
                                            $EmployeeHtml += "<td>" + value.EmployeeTypeName + "</td>";

                                            $EmployeeHtml += "</tr>";
                                        });
                                    }
                                    else {
                                        $EmployeeHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                                    }
                                    $thisForm.find('#EmployeeDet').append($EmployeeHtml);


                                    $('#MeasurementDet').empty();
                                    var MeasurementData = ajaxOutput.MeasurementDetails.Data;
                                    if (MeasurementData) {
                                        $.each(MeasurementData, function (i, value) {
                                            let rowCount = (i + 1);
                                            $MeasurementHtml += "<tr id=" + rowCount + ">";
                                            $MeasurementHtml += "<td style='width:20%;'>" + rowCount + "</td>";
                                            $MeasurementHtml += "<td style='width:20%;'>" + value.WorkTypeName + "</td>";
                                            $MeasurementHtml += "<td>" + value.MeasurementTypeName + "</td>";
                                            $MeasurementHtml += "<td style='text-align: right'>" + value.MeasurementValue + "</td>";
                                            $MeasurementHtml += "<td>" + value.MeasurementUnitName + "</td>";
                                            $MeasurementHtml += "<td>" + value.MDRemarks + "</td>";
                                            $MeasurementHtml += "</tr>";
                                        });
                                    }
                                    else {
                                        $MeasurementHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                                    }
                                    $thisForm.find('#MeasurementDet').append($MeasurementHtml);
                                }
                                else {
                                    $EmployeeHtml += "<tr id='0'><td colspan='8' style'text-align:center'>No Records..</td></tr>";
                                    $thisForm.find('#EmployeeDet').append($EmployeeHtml);
                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                    });

                                    $MeasurementHtml += "<tr id='0'><td colspan='8' style'text-align:center'>No Records..</td></tr>";
                                    $thisForm.find('#MeasurementDet').append($MeasurementHtml);
                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                    });
                                }

                                //}

                                //});
                            }
                            else {
                                let strHtml = "";

                                strHtml += "<div class='card'><div class='card-body pb-0'>";
                                strHtml += "<ul class='list-group list-group-flush'>";
                                // strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><span class='mb-0'><strong>No Records</strong>  </span></li>";

                                strHtml += "</ul></div>";

                                $thisForm.find('[name=divSVDetails]').html(strHtml);
                                $thisForm.find('[name=divSVDetails1]').html(strHtml);
                                $('#MeasurementDet').empty();
                                $('#EmployeeDet').empty();
                                $MeasurementHtml = "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";

                                $thisForm.find('#MeasurementDet').append($MeasurementHtml);
                                $EmployeeHtml = "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";

                                $thisForm.find('#EmployeeDet').append($EmployeeHtml);

                            }
                        }

                    });

                }

                //////

                //Changes by anson
                function ClearEmployeeDetailsOnchange(ele) {
                    let $thisForm = $(ele).closest('[perfect-class="form"]');

                    $thisForm.find('[name=Employee]').val('');
                    $thisForm.find('[name=EmployeeID]').val('');
                    $thisForm.find('[name=EmployeeType]').val('').selectpicker('refresh');
                }
                ////
                function checkdatewithLDdate(ele) {

                    debugger;
                    let test = LeadDates;
                    let $thisForm = $(ele).closest('[perfect-class="form"]');
                    console.log('Ldate', $thisForm.find('[name=LeadDates]').val());
                    console.log('Lead', test);
                    let PrepareDate = $thisForm.find('[name=PrepareDate]').val();
                    let leaddate = $thisForm.find('[name=LeadDates]').val();
                    if (PrepareDate < leaddate) {
                        $thisForm.find('[name="PrepareDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Prepare Date sholud be greater than or equal to Lead Date');
                        return false;

                    }
                    else {

                        $thisForm.find('[name="PrepareDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
                        return true;
                    }



                }
            
    function decimalpnt(ele, id, range) {
        debugger
        let input = $('#' + id);

        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;

        $(document).on('keydown', '#' + id, function (event) {

            if (ele.value.includes('.')) {

            }
            else if (ele.value === '.' && (event.key === '.' || event.keyCode === 190)) {
                ele.value = '0.00'; // Change the value to '0.00' if only a dot is entered
                // Prevent the dot from being entered in the input field
            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.indexOf('.') < 0 && ele.value.indexOf('.') !== 9 && ele.value.length > 8) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }


    function GetBomList(ele, CategoryID, Bomval) {
        debugger
        let inputdata = 0;

        let $thisForm = $(ele).closest('[perfect-class="form"]');    

        let tablekey = 'MaterialDetailsTable';
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tablekey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);
        $tblcontainer.empty();
        if (CategoryID == 0) {
            inputdata = {
                FK_Category: $thisForm.find('[name="CategoryID"]').val(),
            }
        }
        else {
            inputdata = {
                FK_Category: CategoryID,
            }
        }
             
        
        $.ajax({
            url: '@Url.Action("GetBOMList", "CostPreparation")',
            type: "POST",
            data: inputdata,//<---- Input json : data passed to controller
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded;charset=utf-8',
            success: function (ajaxOutput) { 


                let $menuDropdown = $thisForm.find('[name=ID_BOMProject]');//<--- Will give place select html element
                
                $menuDropdown.empty().selectpicker('refresh');
                $menuDropdown.append($('<option/>', { "value": "" }).text("Please Select")).selectpicker('refresh')
                if (ajaxOutput.Process.IsProcess) {

                    $.each(ajaxOutput.Data, function (key, value) {
                        $menuDropdown.append($('<option/>', { "value": value.ID_BOMProject }).text(value.BOMName)).selectpicker('refresh')
                    });

                    if ($menuDropdown.attr('perfect-onloadSelect')) {
                        $menuDropdown.val($menuDropdown.attr('perfect-onloadSelect')).selectpicker('refresh');
                        $menuDropdown.attr('perfect-onloadSelect', '');
                    }
                    if (Bomval != 0) {
                        $thisForm.find('[name="ID_BOMProject"]').val(Bomval).selectpicker('refresh');
                    }
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {

                        //NotificationMessage({ 'type': 'warning', 'heading': 'warning', 'message': 'BOM Records not found' });
                    });
                }
            },
            complete: function () {


            }
        });

    }
   
    function getfunctionAssignchnage(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        switch (parseInt($thisForm.find('[name="ImportFrom"]').val())) {
            case 1:
                console.log('qoutation:', $thisForm.find('[name="FK_Quotation"]').val());


                let FK_Masterval = $thisForm.find('[name="FK_Quotation"]').val();
                console.log('FK_Master:', FK_Masterval);

                $.ajax({
                    url: "@Url.Action("GetLeadProjectQuotationFill", "CostPreparation")",
                    type: "Get",
                    data: { FK_Masterval },
                    dataType: "json",
                    contentType: "application/json",
                    success: function (ajaxOutput) {
                        if (ajaxOutput.datresponse != null) {
                            if (ajaxOutput.datresponse.Process.IsProcess) {


                                let table = JSON.parse(ajaxOutput.datresponse.Data);
                                let tablekey = 'MaterialDetailsTable';
                                let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tablekey + '"]');
                                $tblcontainer.attr('perfect-tempTable-action', 0);
                                $tblcontainer.empty();

                                fillTable($thisForm, 'MaterialDetailsTable', table.dtable, tableOptionsTempOut);
                                BindTotalAmount(ele);
                                $thisForm.find('[name="LeadNo"]').val(ajaxOutput.leaddata.Data[0].LeadNo);
                                $thisForm.find('[name="LeadDates"]').val(ajaxOutput.leaddata.Data[0].LeadDates);
                                $thisForm.find('[name="FK_Lead"]').val(ajaxOutput.leaddata.Data[0].LeadGenerationID);

                            }

                        }
                    },
                    complete: function () {
                        $(ele).prop('disabled', false);
                    }
                });
                break;
            default:
                NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': 'Please Select Import From' });
                break;
      

        }
      
   }
    function fn_Import(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');




        switch (parseInt($thisForm.find('[name="ImportFrom"]').val())) {
            case 1:
              
                GetCmnPopUpSearchValAssign(ele, 174, 'Quotation List', [], ['FK_BranchType', 'FK_BranchMode', 'CustomeName', 'ID_Branch', 'MobileNo', 'FK_Salesorder', 'FK_CustomerOthers', 'FK_Customer', 'SoAddnAmount', 'SoDownPayment', 'TransMode', 'FK_Quotation', 'Othercharge'], CostPreperationTransMode);

                break;
           
            default:
                NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': 'Please Select Import From' });
                break;
        }
    }
    function removeSpaces(input) {
        // Remove spaces at the beginning and end
        input.value = input.value.replace(/^\s+/, '');
        input.value = input.value.replace(/[|*;?<>:!#^~_`$="'{}&]/g, '');
    }
</script>



