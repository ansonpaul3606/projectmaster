
@model PerfectWebERP.Models.CustomerProductMappingModel.CustomerProductMappingViewList


<div class="card ">
    <div class="card-header">
        <h4 class="card-title col-12">@ViewBag.PageTitle</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>

    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="col-sm-12">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Contact No</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text fa fa-phone bg-primary text-white"></span>
                                    </div>
                                    <input type="hidden" name="ID_CustomerWiseProductDetails" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <input type="hidden" name="GroupID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <input type="text" class="form-control perfectValidate_mobile" placeholder="" name="CusPhnNo" onchange="GetCustDtlByMobile(this)" BindName="CusPhnNo" BindVal="FK_Customer" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" autofocus oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" maxlength="15"/>
                                    <input type="hidden" name="FK_Customer" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <input type="hidden" name="LastID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Reference No</span>

                            </label>

                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_specialCharName_nm" id="CusReferenceNoid" placeholder="" name="CusReferenceNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="150" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Customer Name</span>
                                <span class="text-danger">*</span>
                            </label>

                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_specialCharName" id="CustomerNameid" placeholder="" name="CustomerName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="150" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Company Name</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_string_nm" placeholder="" id="Companyid" name="Company" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="150" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Contact Address</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_string_nm" placeholder="Enter Address" id="CusAddress1id" name="CusAddress1" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Branch Type</span>

                            </label>
                            <div class="col-sm-8">


                                <select class="form-control perfectValidate_string_nm" name="BranchTypeID" perfect-tempTable-ProductType="BranchTypeID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" onchange="fn_selectBranch(this)">

                                    <option value="">Please Select </option>

                                    @if (!(Model.BranchTypelists is null))
                                    {
                                        foreach (var branchtypeList in Model.BranchTypelists)
                                        {
                                            <option value="@branchtypeList.BranchTypeID" BranchMode="@branchtypeList.BranchModeID">@branchtypeList.BranchType</option>
                                        }

                                    }

                                </select>

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel" id="SelctName" name="SltName">Branch</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <select class="form-control perfectValidate_string_nm" name="BranchID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">

                                        <option value="">Please Select </option>

                                        @if (!(Model.BranchList is null))
                                        {
                                            foreach (var branchList in Model.BranchList)
                                            {
                                                <option value="@branchList.BranchID">@branchList.Branch</option>
                                            }

                                        }

                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">PinCode</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="number" class="form-control" id="PinCodeid" name="PinCode" placeholder="Type here and search" perfect-class="formGroupControl" onchange="ResetPin(this)" perfect-ctype="input" perfect-css="input" />
                                    <div class="input-group-append">
                                        <button id="addpincode-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="searchbtn(this)"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Country</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control" name="Country" id="Country" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="CountryID" id="CountryID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,9,'Country List',['','','States','StatesID','DistrictID','District','Post','PostID'],CustomerProductTransMode)" Criterea1="0" Criterea2="0" BindName="Country" BindVal="CountryID"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">State</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control perfectValidate_string_nm" name="States" id="States" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="StatesID" id="StatesID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        <button id="addstates-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,10,'State List',['CountryID','Country','DistrictID','District','Post','PostID'],CustomerProductTransMode)" Criterea1="CountryID" Criterea2="0" BindName="States" BindVal="StatesID"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">District</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control perfectValidate_string_nm" name="District" id="District" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="DistrictID" id="DistrictID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        <button id="adddistrict-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,11,'District List',['StatesID','State','Post','PostID'],CustomerProductTransMode)" Criterea1="StatesID" Criterea2="0" BindName="District" BindVal="DistrictID"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Area</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control perfectValidate_string_nm " name="AreaName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="AreaID" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">

                                        <button id="addarea-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" Form="form" onclick="GetCmnPopUpSearchVal(this,14,'Area List',['DistrictID','District','PlaceID','Place','Post','PostID',CustomerProductTransMode])" Criterea1="DistrictID" Criterea2="0" BindName="AreaName" BindVal="AreaID"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Post</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control perfectValidate_string_nm" name="Post" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="PostID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        <button id="addpost-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,13,'Post List',['AreaID','Area','PlaceID','Place'],CustomerProductTransMode)" Criterea1="AreaID" Criterea2="" BindName="Post" BindVal="PostID"></button>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-12">
                        <div class="row">
                            <div class="col-sm-4">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Land Mark</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control perfectValidate_string_nm" maxlength="150" id="Landmarkid" placeholder="Enter Land mark" name="Landmark" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Invoice No.</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control perfectValidate_string_nm" placeholder="" name="InvoiceNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="18" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Invoice Date</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="date" id="InvDate" class="form-control" name="InvDate" perfect-class="formGroupControl" perfect-ctype="date" max="2050-01-01" onchange="datecheck(this)" perfect-css="date" />
                                        <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="col-sm-12">

                        <div class="row" id="needtotransfr" style="display:none">
                            <div class="col-sm-12 " perfect-class="TempTableProduct">
                                <br />


                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Branch Type</span>

                                            </label>

                                            <div class="col-sm-8">
                                                <select class="form-control perfectValidate_string_nm" name="BranchTypeID" perfect-tempTable-ProductType="BranchTypeID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" onchange="fn_selectBranch(this)">

                                                    <option value="">Please Select </option>

                                                    @if (!(Model.BranchTypelists is null))
                                                    {
                                                        foreach (var branchtypeList in Model.BranchTypelists)
                                                        {
                                                            <option value="@branchtypeList.BranchTypeID" BranchMode="@branchtypeList.BranchModeID">@branchtypeList.BranchType</option>
                                                        }

                                                    }

                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Branch</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <select class="form-control perfectValidate_string_nm" name="BranchID" perfect-tempTable-ProductType="BranchID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">

                                                    <option value="">Please Select </option>

                                                    @if (!(Model.BranchList is null))
                                                    {
                                                        foreach (var branchList in Model.BranchList)
                                                        {
                                                            <option value="@branchList.BranchID">@branchList.Branch</option>
                                                        }

                                                    }

                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>


                <div class="modal fade" perfect-class="formGroupModalwarranty" id="formGroupModalwarranty">
                    @*<div class="modal-dialog modal-dialog-centered modal-xl" role="document">*@
                    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                        <div class="modal-content">
                            <div class="modal-header border-0">
                                <h5 class="modal-title">Warranty Details</h5>
                                <button type="button" class="close" data-dismiss="modal">
                                    <span>&times;</span>
                                </button>
                            </div>
                            <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="default-tab">

                                            <ul class="nav nav-tabs" role="tablist">
                                                <li class="nav-item">

                                                    <a class="nav-link active" data-toggle="tab" id="warrantyid" href="#warranty"><i class="las la-file-invoice mr-2"></i>Warranty</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link" data-toggle="tab" href="#prdimg"><i class="lab la-product-hunt mr-2"></i> Product Images</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link" data-toggle="tab" href="#amcdetails"><i class="fa fa-wrench mr-2"></i>AMC Details</a>
                                                </li>

                                            </ul>


                                            <div class="tab-content">
                                                <div id="warranty" class="tab-pane active">

                                                    <div class="row" style="margin-top:1.5rem;">

                                                        <div class="col-sm-6">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-5 col-form-label">Sub Product</label>
                                                                <div class="col-sm-7">
                                                                    <div class="input-group">
                                                                        <input type="hidden" perfect-tempTable-Warranty="prodtid" name="prodtid" readonly perfect-ctype="hidden" />
                                                                        <input type="text" class="form-control" perfect-tempTable-Warranty="subProName" name="subProName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                                        <input type="hidden" name="subProductID" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" perfect-tempTable-Warranty="subProductID" />
                                                                        <div class="input-group-append">
                                                                            <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this, 23, 'Sub Product Details', ['ProductID','Product'], [],CustomerProductTransMode)" BindName="subProName" BindVal="subProductID" Criterea1="ProductID"></button>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-5 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Type</span>
                                                                    <span class="text-danger">*</span>
                                                                </label>
                                                                <div class="col-sm-7">

                                                                    <div class="input-group">
                                                                        <select class="form-control" name="WarrantyType" perfect-tempTable-Warranty="WarrantyType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="AMCWarranty(this)">
                                                                            <option value="">Please Select </option>


                                                                            @if (!(Model.Warrantytype is null))
                                                                            {
                                                                                foreach (var Module in Model.Warrantytype)
                                                                                {
                                                                                    <option value="@Module.WarrantyTypeID">@Module.WarrantyName</option>
                                                                                }
                                                                            }
                                                                        </select>
                                                                        <div class="text-danger temptableError"></div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-6">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-5 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Replace WTY Dt</span>
                                                                    <span class="text-danger">*</span>
                                                                </label>
                                                                <div class="col-sm-7">
                                                                    <div class="input-group">
                                                                        <input type="date" class="form-control" perfect-tempTable-Warranty="Replcwardt" name="Replcwardt" perfect-class="formGroupControl" max="2050-01-01" perfect-ctype="date" perfect-css="date" />
                                                                        <div class="text-danger temptableError"></div>

                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-6">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-5 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Service WTY Dt</span>
                                                                    <span class="text-danger">*</span>
                                                                </label>
                                                                <div class="col-sm-7">
                                                                    <div class="input-group">
                                                                        <input type="date" class="form-control" name="Serwardt" perfect-tempTable-Warranty="Serwardt" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" />
                                                                        <div class="text-danger temptableError"></div>

                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">

                                                        </div>
                                                        <div class="col-sm-6">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <div class="col-sm-8">
                                                                    <div class="input-group">


                                                                    </div>

                                                                </div>
                                                                <div class="col-sm-4">
                                                                    <div class="input-group">

                                                                        <div class="input-group-append">
                                                                            <div>
                                                                                <button type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add Warranty" class="btn btn-primary1" onclick="createtable(this,'Warranty',['WarrantyType'],wartableOptionsTempOut)"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                                                <button class="btn btn-light1" type="button"id="btnResetwrtydata" data-toggle="tooltip" data-placement="top" onclick="productclear(this, 'Warranty')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                                                            </div>
                                                                        </div>
                                                                    </div>

                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-12">
                                                            <div class="form-group row" perfect-class="formGroup">

                                                                <div class="table-responsive" perfect-tempTable="Warranty" id="Warrantydetailhd" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>

                                                                @*<div class="table-responsive" perfect-ProductType="ProductType"></div>*@
                                                            </div>
                                                        </div>



                                                    </div>

                                                </div>
                                                <div id="prdimg" class="tab-pane">

                                                    <div class="row" style="margin-top:1.5rem;">
                                                        <div class="col-sm-1">

                                                        </div>

                                                        <div class="col-sm-4">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-4 col-form-label">Add Files&nbsp;</label>
                                                                <div class="col-sm-8">
                                                                    <div class="input-group">

                                                                        <div class="input-group-append">
                                                                            &nbsp;<button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-plus" type="button" perfect-css="button" onclick="ImageLoad(this)"></button>

                                                                        </div>
                                                                    </div>

                                                                </div>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                                <div id="amcdetails" class="tab-pane">

                                                    <div class="row" style="margin-top:1.5rem;">

                                                        <div class="col-sm-6">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-5 col-form-label">
                                                                    <span perfect-class="formGroupLabel">AMC Type</span>
                                                                    <span class="text-danger">*</span>
                                                                </label>
                                                                <div class="col-sm-7">

                                                                    <div class="input-group">
                                                                        <select class="form-control" name="AMCType" perfect-tempTable-AMC="AMCType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="AMCWarrantyAMC(this,2)">
                                                                            <option value="">Please Select </option>


                                                                            @if (!(Model.AMCtype is null))
                                                                            {
                                                                                foreach (var Amc in Model.AMCtype)
                                                                                {
                                                                                    <option value="@Amc.AMCTypeID">@Amc.AMCName</option>
                                                                                }
                                                                            }
                                                                        </select>

                                                                    </div>
                                                                    @*<div class="text-danger temptableError"></div>*@
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-5 col-form-label">
                                                                    <span perfect-class="formGroupLabel">No.Of Service</span>
                                                                </label>
                                                                <div class="col-sm-7">
                                                                    <div class="input-group">
                                                                        <input type="text" class="form-control text-right" id="NoOfServices" name="NoOfServices" perfect-tempTable-AMC="NoOfServices" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" maxlength="12" readonly />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-5 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Due Date</span>
                                                                    <span class="text-danger">*</span>
                                                                </label>
                                                                <div class="col-sm-7">
                                                                    <div class="input-group">
                                                                        <input type="date" class="form-control" perfect-tempTable-AMC="AMCDuedate" name="AMCDuedate" perfect-class="formGroupControl" max="2050-01-01" perfect-ctype="date" perfect-css="date" />


                                                                    </div>
                                                                    <div class="text-danger temptableError"></div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-6">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-5 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Renew Due Date</span>
                                                                    <span class="text-danger">*</span>
                                                                </label>
                                                                <div class="col-sm-7">
                                                                    <div class="input-group">
                                                                        <input type="date" class="form-control" name="AMCRenewduedate" perfect-tempTable-AMC="AMCRenewduedate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" />

                                                                    </div>
                                                                    <div class="text-danger temptableError"></div>

                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-6" style="display:none">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-5 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Remarks</span>
                                                                </label>
                                                                <div class="col-sm-7">
                                                                    <div class="input-group">
                                                                        <input type="text" class="form-control perfectValidate_string_nm" id="AmRemarks" name="AmRemarks" perfect-tempTable-AMC="AmRemarks" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-5 col-form-label">Add Files&nbsp;</label>
                                                                <div class="col-sm-7">
                                                                    <div class="input-group">

                                                                        <div class="input-group-append">
                                                                            &nbsp;<button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-plus" type="button" perfect-css="button" onclick="ImageLoadAMC(this)"></button>

                                                                        </div>
                                                                    </div>

                                                                </div>
                                                            </div>
                                                        </div>


                                                    </div>

                                                </div>

                                            </div>
                                        </div>


                                    </div>






                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-primary light" onclick="warrantydet(this)">Apply</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>



                <div class="md-2 modal fade" perfect-class="formGroupModalwarrantyimg" id="formGroupModalwarrantyimg">
                    <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
                        <div class="modal-content">
                            <div class="modal-header border-0">
                                <h5 class="modal-title">Documents</h5>
                                <button type="button" class="close" data-dismiss="modal">
                                    <span>&times;</span>
                                </button>
                            </div>
                            <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                                <div class="row">

                                    <div class="col-sm-12" id="Image-img">

                                    </div>


                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12">
                        <div class="accordion__item">
                            <div class="accordion__header collapsed" id="MasterProjectDetails" data-target="#active-header_collapseTwo">
                                <span class="accordion__header--icon"></span>
                                <span class="accordion__header--text">Product Details</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-3 col-form-label">
                                <span perfect-class="formGroupLabel" name="lblProName">Product</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control" name="ProductName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" perfect-tempTable-CustomerWiseProduct="ProductName" readonly />
                                    <input type="hidden" name="ProductID" perfect-tempTable-CustomerWiseProduct="ProductID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />


                                    <div class="input-group-append">

                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,122,'Product List',[],CustomerProductTransMode)" Criterea1="0" Criterea2="0" BindName="ProductName" BindVal="ProductID" Function="1"></button>
                                    </div>
                                    <div class="text-danger temptableError"></div>
                                </div>

                            </div>

                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-3 col-form-label">
                                <span perfect-class="formGroupLabel">Model No.</span>
                            </label>
                            <div class="col-sm-5">
                                <input type="text" class="form-control" perfect-tempTable-CustomerWiseProduct="CWPDModelNo" name="CWPDModelNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="20" />
                            </div>
                            <div class="col-sm-2">
                                <input type="checkbox" class="form-check-input" name="CWPDStandby" perfect-tempTable-CustomerWiseProduct="CWPDStandby" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" style="margin-top: 11px;margin-left:1%;">
                                <label style="margin-top: 8px;margin-left:20px;">Standby</label>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-3 col-form-label">
                                <span perfect-class="formGroupLabel" name="lblQty">Quantity</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-7">
                                <input type="text" class="form-control text-right" placeholder="" id="idquantity" name="CWPDSalQuantity" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" perfect-tempTable-CustomerWiseProduct="CWPDSalQuantity" onfocus="this.oldvalue = this.value;" oninput="decimalpnt(this,'idquantity',4)" maxlength="12" />
                                <input type="hidden" name="CWPDSalActualQuantity" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                <div class="input-group-append">
                                    <span class="invalid-feedback animated fadeInUp d-block temptableError"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3" style="display:none">
                        <input type="text" class="form-control text-right" perfect-tempTable-CustomerWiseProduct="AMCFK_Master" name="AMCFK_Master" id="AMCFK_Master" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                        <input type="text" class="form-control text-right" perfect-tempTable-CustomerWiseProduct="AMCMType" name="AMCMType" id="AMCMType" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                        <input type="text" class="form-control text-right" perfect-tempTable-CustomerWiseProduct="AMCNoOfServices" name="AMCNoOfServices" id="AMCNoOfServices" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                        <input type="date" class="form-control" perfect-tempTable-CustomerWiseProduct="AMCMDuedate" name="AMCMDuedate" id="AMCMDuedate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" />
                        <input type="date" class="form-control" perfect-tempTable-CustomerWiseProduct="AMCMRenewduedate" name="AMCMRenewduedate" id="AMCMRenewduedate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" />
                        <input type="text" class="form-control text-right" perfect-tempTable-CustomerWiseProduct="AMCRemarks" name="AMCRemarks" id="AMCRemarks" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                    </div>


                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">Warranty/AMC</label>
                            <div class="col-sm-3">
                                <div class="input-group">
                                    <div class="input-group-append">
                                        <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-outdent" type="button" perfect-css="button" title="Add Warranty Details" onclick="GetWarrantylists(this,0)"></button>

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-5">
                                <div class="input-group">
                                    <div class="input-group-append">
                                        <div>

                                            <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Product" onclick="createtable(this,'CustomerWiseProduct',[],ProducttableOptionsTempOut)"><i class="fa fa-plus" aria-hidden="true"></i></button>

                                            <button class="btn btn-light1" id="btnResetpdtdata" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="productclear(this,'CustomerWiseProduct'),productclear(this,'Warranty')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-2">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">&nbsp;</label>
                            <div class="col-sm-8">

                            </div>
                        </div>

                    </div>


                </div>


                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group row" perfect-class="formGroup">
                            <div class="table-responsive" perfect-tempTable="CustomerWiseProduct" perfect-tempTable-lastindex="0" perfect-tempTable-action="0">
                            </div>
                        </div>
                    </div>
                </div>


            </div>


            <div class="card-footer text-right" perfect-class="formFooter">

                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="SaveCustomerProductMapping(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                {
                    <button id="" type="button" class="btn btn-warning mr-3 addcompany-jq-addnewuserUpdate" name="delete" perfect-css="button" onclick="deleteCustomerProduct(this)"><i class="fa fa-refresh fa-spin loaderClass"></i>Delete</button>
                }
                <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>

            </div>
        </form>
    </div>
</div>
<script>
 $(document).ready(function ()
 {

     initFunctions('form');

     let $thisform = $('[perfect-class="form"]');

     if ($thisform.find('[name="add"]').is(":visible")) {

     }
     var today = new Date().toISOString().split('T')[0];
     $('#InvDate').attr('max', today);


    });

    var $thisForm = "";
        function GetCustDtlByMobile(ele) {
            //debugger;
         $thisForm = $(ele).closest('[perfect-class="form"]');
            $thisForm.find('[name=FK_Customer]').val('');
            let CusPhnNo = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                CusPhnNo: $thisForm.find('[name="CusPhnNo"]').val()
        };
        $.ajax({
            url: '@Url.Action("GetCusDtlByMob", "CustomerProductMapping")',
            type: "POST",
            data: CusPhnNo,
            dataType: "json",
            contentType: "application/x-www-form-urlencoded;charset=utf-8",
            success: function (ajaxOutput) {
                debugger

                if (ajaxOutput.Data == null) {

                    var ID_Customer = 0;

                    $thisForm.find('[name=CustomerName]').val('');
                    $('#CustomerNameid').prop('disabled', false);

                    $thisForm.find('[name=CusReferenceNo]').val('');
                    $('#CusReferenceNoid').prop('disabled', false);

                    $('#CusAddress1id').prop('disabled', false);
                    $('#addpincode-jq-searchButton3').prop('disabled', false);
                    $('#PinCodeid').prop('disabled', false);
                    $('#Companyid').prop('disabled', false);
                    $('#addcountry-jq-searchButton3').prop('disabled', false);
                    $('#addstates-jq-searchButton3').prop('disabled', false);
                    $('#adddistrict-jq-searchButton3').prop('disabled', false);
                    $('#addpost-jq-searchButton3').prop('disabled', false);
                    $('#addarea-jq-searchButton3').prop('disabled', false);
                    $('#Landmarkid').prop('disabled', false);

                    $thisForm.find('[name=CusAddress1]').val('');
                    $thisForm.find('[name=PinCode]').val('');
                    $thisForm.find('[name="Company"]').val('');
                    $thisForm.find('[name="CountryID"]').val('@ViewBag.ID_Country');
                    $thisForm.find('[name="Country"]').val('@ViewBag.CountryName');
                    $thisForm.find('[name="DistrictID"]').val('@ViewBag.ID_District');
                    $thisForm.find('[name="District"]').val('@ViewBag.DistrictName');
                    $thisForm.find('[name="StatesID"]').val('@ViewBag.ID_State');
                    $thisForm.find('[name="States"]').val('@ViewBag.StateName');
                    $thisForm.find('[name="PostID"]').val(0);
                    $thisForm.find('[name="Post"]').val('');
                    $thisForm.find('[name="AreaID"]').val(0);
                    $thisForm.find('[name="AreaName"]').val('');
                    $thisForm.find('[name=Landmark]').val('');
                    //$thisForm.find('[name="ProductID"]').val('');
                    //$thisForm.find('[name="ProductName"]').val('');
                    //$thisForm.find('[name="CWPDSalQuantity"]').val('');
                    //$thisForm.find('[name="CWPDModelNo"]').val('');
                    }

               if (ajaxOutput.Data != null) {
                   if (ajaxOutput.Data.length > 1) {


                        var stateModel = createSelectList({
                            data: ajaxOutput.Data,
                            renameHeader: { "CusAddress1": "Customer Address",  "CusName": "Name"},
                            hideColumn: ['ID_Customer', 'CountryID', 'StatesID', 'DistrictID', 'PostID','AreaID', 'Company', 'CusPhnNo', 'StName', 'DtName', 'PostName','AreaName', 'CusEmail','CntryName'], headingText: 'Customer Details'
                        });
                      //  stateModel.then(function (ret) {
                            if (ret) {

                                console.log('>_ Search button > list click', ret);
                                $thisForm.find('[name=CustomerName]').val(ret.CustomerName);
                                //if (ret.CusReferenceNo!=0) {
                                    $thisForm.find('[name=CusReferenceNo]').val(ret.CusReferenceNo);
                                    $('#CusReferenceNoid').prop('disabled', true);
                                //}
                                //else {
                                //    $thisForm.find('[name=CusReferenceNo]').val(ret.CusReferenceNo);
                                //    $('#CusReferenceNoid').prop('disabled', false);
                                //}

                                $thisForm.find('[name=FK_Customer]').val(ret.ID_Customer);
                                $thisForm.find('[name=CusAddress1]').val(ret.CusAddress1);
                                $thisForm.find('[name=PinCode]').val(ret.PinCode);
                                $thisForm.find('[name="Company"]').val(ret.Company);
                                $thisForm.find('[name="CountryID"]').val(ret.CountryID);
                                $thisForm.find('[name="StatesID"]').val(ret.StatesID);
                                $thisForm.find('[name="DistrictID"]').val(ret.DistrictID);
                                $thisForm.find('[name="PostID"]').val(ret.PostID);
                                $thisForm.find('[name="AreaID"]').val(ret.AreaID);
                                $thisForm.find('[name="AreaName"]').val(ret.AreaName);
                                $thisForm.find('[name="Country"]').val(ret.CntryName);
                                $thisForm.find('[name="States"]').val(ret.StName);
                                $thisForm.find('[name="District"]').val(ret.DtName);
                                $thisForm.find('[name="Post"]').val(ret.PostName);
                                $thisForm.find('[name="ProductID"]').val(ret.ProductID);
                                $thisForm.find('[name="ProductName"]').val(ret.ProductName);
                                $thisForm.find('[name="CWPDSalQuantity"]').val(ret.Quantity);
                                $thisForm.find('[name="CWPDModelNo"]').val(ret.CWPDModelNo);
                                $thisForm.find('[name=Landmark]').val(ret.Landmark);
                            }
                            else {

                                console.log("Data", ret);
                            }
                      //  });
                    }
                    else {

                       $thisForm.find('[name=CustomerName]').val(ajaxOutput.Data[0].CustomerName);
                       $('#CustomerNameid').prop('disabled', true);


                       console.log('refno', ajaxOutput.Data[0].CusReferenceNo);
                       //if (ajaxOutput.Data[0].CusReferenceNo != 0) {
                           $thisForm.find('[name=CusReferenceNo]').val(ajaxOutput.Data[0].CusReferenceNo);
                           $('#CusReferenceNoid').prop('disabled', true);
                       //}
                       //else {
                       //    $thisForm.find('[name=CusReferenceNo]').val(ajaxOutput.Data[0].CusReferenceNo);
                       //    $('#CusReferenceNoid').prop('disabled', false);
                       //}

                       $thisForm.find('[name=FK_Customer]').val(ajaxOutput.Data[0].ID_Customer);

                       $thisForm.find('[name=CusAddress1]').val(ajaxOutput.Data[0].CusAddress1);
                       $('#CusAddress1id').prop('disabled', true);
                       $thisForm.find('[name=PinCode]').val(ajaxOutput.Data[0].PinCode);
                       $('#addpincode-jq-searchButton3').prop('disabled', true);
                       $('#PinCodeid').prop('disabled', true);

                       $thisForm.find('[name="Company"]').val(ajaxOutput.Data[0].Company);
                       $('#Companyid').prop('disabled', true);
                       $thisForm.find('[name="CountryID"]').val(ajaxOutput.Data[0].CountryID);
                       $('#addcountry-jq-searchButton3').prop('disabled', true);
                       $thisForm.find('[name="StatesID"]').val(ajaxOutput.Data[0].StatesID);
                       $('#addstates-jq-searchButton3').prop('disabled', true);
                       $thisForm.find('[name="DistrictID"]').val(ajaxOutput.Data[0].DistrictID);
                       $('#adddistrict-jq-searchButton3').prop('disabled', true);
                       $thisForm.find('[name="PostID"]').val(ajaxOutput.Data[0].PostID);
                       $('#addpost-jq-searchButton3').prop('disabled', true);
                       $thisForm.find('[name="AreaID"]').val(ajaxOutput.Data[0].AreaID);
                       $('#addarea-jq-searchButton3').prop('disabled', true);
                        $thisForm.find('[name="AreaName"]').val(ajaxOutput.Data[0].AreaName);
                        $thisForm.find('[name="Country"]').val(ajaxOutput.Data[0].CntryName);
                        $thisForm.find('[name="States"]').val(ajaxOutput.Data[0].StName);
                        $thisForm.find('[name="District"]').val(ajaxOutput.Data[0].DtName);
                        $thisForm.find('[name="Post"]').val(ajaxOutput.Data[0].PostName);
                        $thisForm.find('[name="ProductID"]').val(ajaxOutput.Data[0].ProductID);
                        $thisForm.find('[name="ProductName"]').val(ajaxOutput.Data[0].ProductName);
                        $thisForm.find('[name="CWPDSalQuantity"]').val(ajaxOutput.Data[0].Quantity);
                        $thisForm.find('[name="CWPDModelNo"]').val(ajaxOutput.Data[0].CWPDModelNo);
                       $thisForm.find('[name="Landmark"]').val(ajaxOutput.Data[0].Landmark);
                       $('#Landmarkid').prop('disabled', true);
                    }
                }

            }
        });
       }

     function fn_selectBranch(ele)
    {
       // var BranchTypeModeID = $(ele).val();

         $thisForm = $(ele).closest('[perfect-class="form"]');
        let branchmodeid = { BranchModeID: $thisForm.find('[name=BranchModeID]').val() }
        let branchtypeid = { BranchTypeID: $thisForm.find('[name=BranchTypeID]').val() }

//let branchmodeid1 = $thisForm.find('[name="BranchTypeID"]').children(":selected").attr('BranchMode')


         let $branchDropdown = $thisForm.find('[name=BranchID]');//<--- Will give place select html element

         $branchDropdown.empty();
         $branchDropdown.append($('<option/>', { value: '' }).text("Please Select")).selectpicker('refresh')

         $.ajax({
                 url: "@Url.Action("GetBranchList", "Users")",
                type: "POST",
                data: branchtypeid,
                dataType: "json",
                contentType: "application/x-www-form-urlencoded;charset=utf-8",
                success: function (ajaxOutput) {




                 if (ajaxOutput.Process.IsProcess) {




                             $.each(ajaxOutput.Data, function (key, value) {
                             $branchDropdown.append($('<option/>', {value:value.BranchID}).text(value.Branch)).selectpicker('refresh')
                                 });


                     //if ($branchDropdown.attr('perfect-onSelectLoad')) {
                     //    $branchDropdown.val($branchDropdown.attr('perfect-onSelectLoad')).selectpicker('refresh');
                     //    $branchDropdown.attr('perfect-onSelectLoad');
                     //}
                     if ($branchDropdown.attr('perfect-onloadSelect')) {
                         $branchDropdown.val($branchDropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                         $branchDropdown.removeAttr('perfect-onloadSelect')
                     }
                     }
                     else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                         NotificationMessage({ 'type': 'warning', 'heading': 'warning', 'message': value });
                         });
                     }
                     }

         });


    }

     function datecheck(ele) {
               //debugger
                $thisForm = $(ele).closest('[perfect-class="formGroup"]');
         let Visitdate = $thisForm.find('[name="InvDate"]').val();
               var enqDate = new Date(Visitdate);
               enqDate.setHours(0, 0, 0, 0)
               var today = new Date();
               today.setHours(0, 0, 0, 0)
               let errorClass4 = '.temptableErrors';
               if (enqDate > today) {
                   $thisForm.find('[name="InvDate"]').closest('[perfect-class="formGroup"]').find(errorClass4).attr("style", "display:block");
                   $thisForm.find('[name="InvDate"]').closest('[perfect-class="formGroup"]').find(errorClass4).text('Future Date Not Allowed');
               }
               else if (enqDate < today) {
                   $thisForm.find('[name="InvDate"]').closest('[perfect-class="formGroup"]').find(errorClass4).attr("style", "display:none");
                   $thisForm.find('[name="InvDate"]').closest('[perfect-class="formGroup"]').find(errorClass4).text('');
               }
           }

        function ServiceMappingDetailsTable_create(ele, tkey, uniq = []) {

                $thisForm = $(ele).closest('[perfect-class="form"]');
               let tableKey = tkey;
               let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
               let insertData = {};
             //  let insertData = {};
               let tableOptionsTemp = tableOptionsTempOut;
               let unique = (uniq) ? uniq : [];
               let isValid = true;
               let errorClass = '.temptableError';

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').val() == "") {
                isValid = false;
                $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Product');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').val() == "") {
                isValid = false;
                $thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter CWPDSalQuantity');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
               let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
               let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
               let indexname = tkey + 'index';
               tableOptionsTemp.rowAttribute.push(indexname);
               tableOptionsTemp.hideColumn.push(indexname);
               let updateCond = '';
               let isNew = true;
               if (thisactionIndex > 0) {
                   insertData[indexname] = thisactionIndex;
                   updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
                   isNew = false;
               }
               else {
                   insertData[indexname] = lastIndex + 1;
                   $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
                   isNew = true;
               }
               console.log('check 3');
               $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                   let $this = $(this);
                   let headerName = $this.attr('perfect-tempTable-' + tableKey);
                   let nameAttr = $this.attr('name');
                   let $errorElement = $this.closest('[perfect-class="formGroup"]').find(errorClass);
                   if ($this.is('select')) {
                       if ($this.val().length > 0) {
                           $errorElement.text('');
                       }
                       else {
                           isValid = false;
                           $errorElement.text('Please select ' + headerName);
                       }
                   }
                   else if ($this.is('input')) {
                       let inputType = $this.attr('type').toLocaleLowerCase();
                       if (inputType == 'checkbox') {
                       }
                       else if (inputType == 'hidden') {
                       }
                       else {
                           if ($this.val().length > 0) {
                               $errorElement.text('');
                           }
                           else {

                               isValid = false;
                               $errorElement.text('Please select ' + headerName);
                           }
                       }
                   }
               });
               if (unique.length > 0) {
                   let prevData = [];
                   $tblcontainer.find('table > tbody').find('tr').each(function () {
                       if (isNew) {
                           prevData.push($(this).data('pData'));
                       }
                       else {
                           if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                               prevData.push($(this).data('pData'));
                           }
                       }
                   })

                   unique.forEach(function (key, i) {

                       let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                       let headerEleName = $thisEle.attr('perfect-tempTable-' + tableKey);
                       let atname = $thisEle.attr('name');
                       let cvalue;
                       if ($thisEle.length != 0) {
                           let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                           let errmessage = headerEleName + " Already exits"
                           if ($thisEle.is('select')) {
                               cvalue = $thisEle.val();
                           }
                           else if ($thisEle.is('input')) {
                               let inputEleType = $thisEle.attr('type').toLocaleLowerCase();
                               if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                               else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                               else { cvalue = $thisEle.val(); }
                           }
                           else {
                               cvalue = $thisEle.val();
                           }
                           if (prevData.find(a => a[atname] == cvalue)) {
                               $errorElement.text(errmessage);
                               isValid = false;
                           }
                       }
                   });
               }

            if (isValid) {

                $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                    let $this = $(this);
                    let headerName = $this.attr('perfect-tempTable-' + tableKey);
                    let nameAttr = $this.attr('name');
                    if ($this.is('select')) {
                        tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTemp.hideColumn.push(nameAttr)
                        if ($this.val() != null) {
                            let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        else {
                            let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        insertData[nameAttr] = $this.val();
                        $this.val('').selectpicker('refresh');
                    }
                    else if ($this.is('input')) {
                        let inputType = $this.attr('type').toLocaleLowerCase();
                        if (inputType == 'checkbox') {
                            insertData[nameAttr] = $this.is(':checked');
                            tableOptionsTemp.isCheckType.push(nameAttr)
                            $this.prop('checked', false);
                        }
                        else if (inputType == 'hidden') {
                            tableOptionsTemp.hideColumn.push(nameAttr)
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                        else if (inputType == 'date') {
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                        else {
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                    }
                    else {
                        insertData[nameAttr] = $this.val();
                        $this.val('');
                    }
                });

                if (isNew) {

                    if ($tblcontainer.find('table').length == 0) {

                        $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                    }
                    else {

                        let table = $tblcontainer.find('table').DataTable()
                        table.destroy()
                        pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                    }

                }
                else {

                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()

                    pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
                }

                $tblcontainer.attr('perfect-tempTable-action', 0);

            }

           }

    var tableOptionsTempOut = {
               iconButton: {
                   buttons: [
                       {
                             icon: "fa fa-pencil btnPerfectGridEdit",
                           action: function () {

                               let Saveddata = $(this).closest('tr').data('pData');
                               let $tablecontainer = $(this).closest('[perfect-tempTable]');
                               let tableKey = $tablecontainer.attr('perfect-tempTable');
                                $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                               let indexname = tableKey + 'index';
                               let rindex = $(this).closest('tr').attr(indexname);
                               $tablecontainer.attr('perfect-tempTable-action', rindex);

                               $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                                   let $thisNode = $(this);
                                   let pf_name = $thisNode.attr('name');
                                   if ($thisNode.is('select')) {
                                       $thisNode.val(Saveddata[pf_name]).selectpicker('refresh');
                                   }
                                   else if ($thisNode.is('input')) {

                                       if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                           $thisNode.prop('checked', Saveddata[pf_name]);
                                       }
                                       else {
                                           $thisNode.val(Saveddata[pf_name]);
                                       }
                                   }
                                   else {
                                       $thisNode.val(Saveddata[pf_name]);
                                   }
                               });
                           }
                       },
                       {
                            icon: "fa fa-trash btnPerfectGridDelete",
                           action: function () {
                               let $thistbl = $(this).closest('table');
                               let table = $thistbl.DataTable();
                               table.destroy();
                               if ($(this).closest('tbody').find('tr').length > 1) {
                                   $(this).closest('tr').remove();
                                   pft_table_slreset($thistbl);
                               }
                               else {
                                   $thistbl.remove();
                               }
                           }
                       },

                   ]
               },
        onlyShowColumn: ["ProductName", "CWPDSalQuantity","CWPDModelNo"],
               hideColumn: ["SlNo","FK_Product","ID_CustomerWiseProductDetails"],
               serialNo: true,
        renameHeader: { "ProductName": "Product", "CWPDSalQuantity": "Quantity","CWPDModelNo":"Model No"},
               rowAttribute: [],
               isCheckType: []
           };



    function ResetButton(ele) {
        fn_CustomerProuctMap_initialLoad();
        let $thisform = $('[perfect-class="form"]');
        if ($thisform.find('[name="add"]').is(":visible")) {
            $thisform.find('[name="CountryID"]').val('@ViewBag.ID_Country');
            $thisform.find('[name="Country"]').val('@ViewBag.CountryName');
            $thisform.find('[name="DistrictID"]').val('@ViewBag.ID_District');
            $thisform.find('[name="District"]').val('@ViewBag.DistrictName');
            $thisform.find('[name="StatesID"]').val('@ViewBag.ID_State');
            $thisform.find('[name="States"]').val('@ViewBag.StateName');
        }
    }


      function GetDefaultBranchName() {
          $thisForm = $('[perfect-class="form"]');
                $.ajax({
                url: '@Url.Action("GetDefaultBranchName", "CustomerProductMapping")',
                type: "Get",
                dataType: "json",
                contentType: "application/json",
                success: function (ajaxOutput) {

                 if (ajaxOutput.Process.IsProcess) {

                     $.each(ajaxOutput.Data, function (key, value) {


                         $thisForm.find('[name=ID_LeadFrom]').val(value.ID_BranchMode).selectpicker('refresh');
                         $thisForm.find('[name=LeadBy]').val(value.BrName);
                         $thisForm.find('[name=FK_LeadBy]').val(value.ID_Branch);
                         $thisForm.find('[name=BranchTypeID]').val(value.ID_BranchType).selectpicker('refresh');
                         $thisForm.find('[name=BranchID]').val(value.ID_Branch).selectpicker('refresh');
                         $thisForm.find('[name=FK_Departement]').val(value.FK_Department).selectpicker('refresh');
                         $thisForm.find('[name=BranchModeID]').val(value.ID_BranchMode).selectpicker('refresh');
                         $thisForm.find('[name= LgCollectedBy]').val(value.EmpFName);
                         $thisForm.find('[name= FK_LgCollectedBy]').val(value.ID_Employee);
                         $thisForm.find('[name= AssignEmp]').val(value.EmpFName).selectpicker('refresh');
                         $thisForm.find('[name= FK_Employee]').val(value.ID_Employee).selectpicker('refresh');

                         $thisForm.find('[name="RegDate"]').val(moment().format('YYYY-MM-DD'));


                        let branchtypeid = { BranchTypeID: $thisForm.find('[name=BranchTypeID]').val() }
                         let masterid = ajaxOutput.Data[0].ID_Branch;
                         getbranchlist(branchtypeid, masterid, $thisForm);



                     });
                 }
                 else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                         NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                     });
                 }

             },


         });


     }

    function GetBranchType(ele) {

         $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[name=LeadBy]').val('');
        $thisForm.find('[name=FK_LeadBy]').val('');
        let name = $thisForm.find('[name="ID_LeadFrom"] option:selected').text();
        if (name != 'Please select') {
            $thisForm.find('[name="SltName"]').text(name + ' Name')
        }
    }

           function GetBranchName(ele)
           {

                  $thisForm = $(ele).closest('[perfect-class="form"]');
               let ID_LeadFrom = {
             __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                   ID_LeadFrom: $thisForm.find('[name="ID_LeadFrom"]').val()
                 };
                $.ajax({
            url: '@Url.Action("GetBranchNameList", "CustomerProductMapping")',
                type: "POST",
                    data: ID_LeadFrom ,
                  dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {

                        if (ajaxOutput.Process.IsProcess) {
                            let table = JSON.parse(ajaxOutput.Data);
                            let name = $thisForm.find('[name="ID_LeadFrom"] option:selected').text();
                            var stateModel = createSelectList({ data: table.dtable, hideColumn: ['ID_FIELD'], headingText: name + ' Details' });
                            stateModel.then(function (ret) {
                                if (ret) {

                                    $thisForm.find('[name=FK_LeadBy]').val(ret.ID_FIELD);
                                    $thisForm.find('[name=LeadBy]').val(ret.Name);
                                }
                                else {

                                }
                            });
                        }
                     else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                 },
            });
    }



    function getbranchlist(branchtypeid, masterid, $thisForm) {
             $.ajax({
                                 url: "@Url.Action("GetBranchList", "Users")",
                                type: "POST",
                                data: branchtypeid,
                                dataType: "json",
                                contentType: "application/x-www-form-urlencoded;charset=utf-8",
                                success: function (ajaxOutput) {

                                     let $branchDropdown = $thisForm.find('[name=BranchID]');

                                 $branchDropdown.empty().selectpicker('refresh');
                                 $branchDropdown.append($('<option/>', { "value": "" }).text("Please Select")).selectpicker('refresh')


                                    if (ajaxOutput.Process.IsProcess) {

                                             $.each(ajaxOutput.Data, function (key, value) {
                                                 $branchDropdown.append($('<option/>', { "value": value.BranchID }).text(value.Branch)).selectpicker('refresh')
                                                 $branchDropdown.val(masterid).selectpicker('refresh');
                                                 });

                                     }
                                     else {
                                     $.each(ajaxOutput.Process.Message, function (key, value) {
                                         NotificationMessage({ 'type': 'warning', 'heading': 'warning', 'message': value });
                                         });
                                     }
                                     }

                         });

    }
    function searchbtn(ele) {


        $thisForm = $(ele).closest('[perfect-class="form"]');
        let searchPin = {
            Pincode: $thisForm.find('[name="PinCode"]').val()
        };
        if ($thisForm.find('[name="PinCode"]').val() != "") {
            $.ajax({
                url: '@Url.Action("GetPinCodedetails", "CustomerProductMapping")',
                type: "POST",
                data: searchPin,
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxOutput) {

                    if (ajaxOutput.Process.IsProcess) {
                        var selectedList = createSelectList({ data: ajaxOutput.Data, hideColumn: ["StatesID", "DistrictID", "CountryID", "PostID", "AreaID"], settings: { size: "modal-lg" }, headingText: 'Pincode List', renameHeader: { "AreaName": "Area" }});
                        selectedList.then(function (ret) {
                            if (ret) {
                                $thisForm.find('[name="CountryID"]').val(ret['CountryID']);
                                $thisForm.find('[name="Country"]').val(ret['Country']);
                                $thisForm.find('[name="StatesID"]').val(ret['StatesID']);
                                $thisForm.find('[name="States"]').val(ret['States']);
                                $thisForm.find('[name="DistrictID"]').val(ret['DistrictID']);
                                $thisForm.find('[name="District"]').val(ret['District']);
                                $thisForm.find('[name="PostID"]').val(ret['PostID']);
                                $thisForm.find('[name="Post"]').val(ret['Post']);
                                $thisForm.find('[name="AreaID"]').val(ret['AreaID']);
                                $thisForm.find('[name="AreaName"]').val(ret['AreaName']);
                                $thisForm.find('[name="PinCode"]').val(ret['PinCode']);
                            }
                            else {

                            }
                        });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                },
                complete: function () {
                }
            });
        }
        else {
            GetCmnPopUpSearchValAssign(ele, 76, 'Post List', [], ['PinCode', 'StatesID', 'States', 'CountryID', 'Country', 'DistrictID', 'District', 'AreaID', 'Area', 'PostID', 'Post',]);
        }

    }



    function SaveCustomerProductMapping(ele) {


        let CustomerWiseProductDetails = [];
        let warrantysave = [];
         $thisForm = $(ele).closest('[perfect-class="form"]');


        if ($thisForm.valid()) {
            $(ele).prop('disabled', true);
            $thisForm.find('[perfect-tempTable="CustomerWiseProduct"]').find('tbody').find('tr').each(function () {
                CustomerWiseProductDetails.push($(this).data('pData'));
            })
            if (CustomerWiseProductDetails.length > 0) {
                warrantysave = $thisForm.data('pwarranty');

                let imagesave = [];
                imagesave = $thisForm.data('addpImageselect')
                if (imagesave != null) {
                    warrantyimagecon(imagesave);
                }
                var FK_Customer = $thisForm.find('[name=FK_Customer]').val();
                var inputData = {
                    ID_CustomerWiseProductDetails: 0,
                    FK_Customer: FK_Customer,
                    FK_Sales: 0,
                    FK_EMIPlan: 0,
                    CWPDTotalAmount: 0,
                    CWPDInstalmentAmount: 0,
                    CWPDSalFreeQuantity: 0,
                    CWPDProductStatus: 0,
                    CWPDSalActualQuantity: CustomerWiseProductDetails[0].CWPDSalQuantity,
                    CWPDModelNo: CustomerWiseProductDetails[0].CWPDModelNo,
                    BillNo: $thisForm.find('[name="InvoiceNo"]').val().trim(),
                    CWPDSalesDate: $thisForm.find('[name="InvDate"]').val(),
                    CusPhnNo: $thisForm.find('[name=CusPhnNo]').val(),
                    CustomerName: $thisForm.find('[name=CustomerName]').val().trim(),
                    Company: $thisForm.find('[name=Company]').val().trim(),
                    Address1: $thisForm.find('[name=CusAddress1]').val().trim(),
                    CusReferenceNo:$thisForm.find('[name=CusReferenceNo]').val().trim(),
                    PinCode: $thisForm.find('[name=PinCode]').val().trim(),
                    CountryID: $thisForm.find('[name=CountryID]').val().trim(),
                    StatesID: $thisForm.find('[name=StatesID]').val().trim(),
                    DistrictID: $thisForm.find('[name=DistrictID]').val().trim(),
                    PostID: $thisForm.find('[name=PostID]').val().trim(),
                    AreaID: $thisForm.find('[name=AreaID]').val().trim(),
                    BranchID: $thisForm.find('[name=BranchID]').val().trim(),
                    Landmark: $thisForm.find('[name=Landmark]').val().trim(),
                    CustomerWiseProductDetails: CustomerWiseProductDetails,
                    ProductID: CustomerWiseProductDetails[0].ProductID,
                    //WarrantyDetails: warrantysave,
                    WarrantyDetails: gridWarrantyDetails,
                    LastID: $thisForm.find('[name=LastID]').val().trim(),
                    'TransMode': CustomerProductTransMode

                };

                console.log('inputData', inputData);

                $.ajax({
                    url: '@Url.Action("SaveCustomerProductMapping", "CustomerProductMapping")',
                    type: "POST",
                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                    success: function (ajaxOutput) {
                        if (ajaxOutput.Process.IsProcess) {

                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                            });

                            $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                            $thisForm.find('[perfect-ctype="input"]').val('');
                            $thisForm.find('[perfect-ctype="date"]').val('');


                            let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                            if (onSuccess) {
                                window[onSuccess]();
                            }
                        }
                        else {
                            $(ele).prop('disabled', false);
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }
                    },
                    complete: function () {
                        $(ele).prop('disabled', false);
                    }

                });

            }
            else {
                $(ele).prop('disabled', false);
                NotificationMessage({ 'type': 'error', 'heading': 'Success', 'message': "Enter Atleast One Product" });
            }
        }

    }






    function createtable(ele, tkey, uniq = [], tableOptionsTempOut) {
        debugger

                let $thisForm = $(ele).closest('[perfect-class="form"]');
                let tableKey = tkey;
                let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

                let insertData = {};
                let tableOptionsTemp = tableOptionsTempOut;

                let unique = (uniq) ? uniq : [];

                let isValid = true;


                let errorClass = '.temptableError';
                if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').val() == "") {
                    isValid = false;
                    $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Product');
                }
                else {
                    $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
                }

                if ($thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').val() == "") {
                    isValid = false;
                    $thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Quantity');
                }
                else {
                    $thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
                }



                let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
                let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
                let indexname = tkey + 'index';
                tableOptionsTemp.rowAttribute.push(indexname);
                tableOptionsTemp.hideColumn.push(indexname);

                let updateCond = '';
                let isNew = true;

                if (thisactionIndex > 0) {

                    insertData[indexname] = thisactionIndex;
                    updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
                    isNew = false;
                }
                else {

                    insertData[indexname] = lastIndex + 1;
                    $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
                    isNew = true;
                }

                if (tableKey == 'Warranty') {

                    isValid = validwartdetail(ele, tableKey, errorClass, isValid);
                }

                else if (tableKey == 'CustomerWiseProduct') {
                    isValid = validProductdetail(ele, tableKey, errorClass, isValid);
                }



                    let prevData = [];
                    $tblcontainer.find('table > tbody').find('tr').each(function () {
                        if (isNew) {
                            prevData.push($(this).data('pData'));
                        }
                        else {
                            if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                                prevData.push($(this).data('pData'));
                            }

                        }

        })



        if (prevData.find(a => a['ProductID'] == $('[name=ProductID]').val() && a['CWPDModelNo'] == $('[name=CWPDModelNo]').val())) {

            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Already Exists' });
            isValid = false;
        }
        if (tableKey == 'Warranty') {
            if (prevData.find(a => a['WarrantyType'] == $('[name=WarrantyType]').val())) {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="WarrantyType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Type Already Exists');
                isValid = false;
            }
        }




                if (isValid) {



                    $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                        let $this = $(this);
                        let headerName = $this.attr('perfect-tempTable-' + tableKey);
                        let nameAttr = $this.attr('name');



                        if ($this.is('select')) {


                            tableOptionsTemp.hideColumn.push(nameAttr)

                            if ($this.val() != null) {
                                let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                                insertData[nameAttr + '_d'] = selectText;
                            }
                            else {
                                let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                                insertData[nameAttr + '_d'] = selectText;
                            }

                            insertData[nameAttr] = $this.val();


                            $this.val('').selectpicker('refresh');


                        }
                        //else if ($this.is('input')) {

                        //    insertData[nameAttr] = $this.val();
                        //    console.log('insertData[nameAttr]', insertData[nameAttr])
                        //    if (nameAttr == "prodtid") { }

                        //    else {
                        //        $this.val('');
                        //    }
                        //}
                        else if ($this.is('input')) {
                            let inputType = $this.attr('type').toLocaleLowerCase();
                            if (inputType == 'checkbox') {
                                 
                                insertData[nameAttr] = $this.is(':checked');
                                tableOptionsTemp.isCheckType.push(nameAttr)
                                $this.prop('checked', false);
                            } else {
                                insertData[nameAttr] = $this.val();
                            }

                            if (nameAttr == "prodtid") { }
                            else if (nameAttr == "stkid") { }
                            else {
                                $this.val('');
                            }
                        }
                        else {
                            insertData[nameAttr] = $this.val();

                            $this.val('');
                        }
                    });

                    if (isNew) {

                        if ($tblcontainer.find('table').length == 0) {

                            $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));

                        }
                        else {

                            let table = $tblcontainer.find('table').DataTable()
                            table.destroy()
                            pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);


                        }

                    }
                    else {

                        let table = $tblcontainer.find('table').DataTable()
                        table.destroy()

                        pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);

                    }



                    $tblcontainer.attr('perfect-tempTable-action', 0);

                   if (tableKey == 'CustomerWiseProduct') {
                        $thisForm.find('[name=prdbtn]').removeAttr("disabled", "disabled")

                        $thisForm.data({ pwarranty: warrantydetails });

                        $thisForm.data({ addpImageselect: $thisForm.data('pImageselect') });



                   }
                    $thisForm.data({ amcdatadata: '' });
                }

            }


    function validwartdetail(ele, tableKey, errorClass, isValid) {
         $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="WarrantyType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="WarrantyType"]').val() == null) {

            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="WarrantyType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Type');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="WarrantyType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Replcwardt"]').val() == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="Replcwardt"]').val() == '') {

            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="Replcwardt"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Replace Warranty Date');
        }
        else {

            let repldt = $thisForm.find('[name=Replcwardt]').val();
            repldt = new Date(repldt);
            repldt.setHours(0, 0, 0, 0)

            let today = new Date();
            today.setHours(0, 0, 0, 0)


            if (today > repldt) {
                isValid = false;
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Replcwardt"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Replace Warranty date should be greater than or equal to todays date');

            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Replcwardt"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }


        }
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Serwardt"]').val() == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="Serwardt"]').val() == '') {

            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="Serwardt"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Service Warranty Date');
        }
        else {
            let servcdt = $thisForm.find('[name=Serwardt]').val();
            servcdt = new Date(servcdt);
            servcdt.setHours(0, 0, 0, 0)

            let today = new Date();
            today.setHours(0, 0, 0, 0)

            if (today > servcdt) {
                isValid = false;
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Serwardt"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Service Warranty date should be greater than or equal to todays date');

            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Serwardt"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }


        }

        return isValid;
    }


    function ImageLoad(ele) {
        debugger


        $thisForm = $(ele).closest('[perfect-class="form"]');
        let subPrdctID = $thisForm.find('[name="subProductID"]').val();

        if ($thisForm.find('[name="ProductID"]').val() == '' || $thisForm.find('[name="ProductID"]').val() == null) {
                    NotificationMessage({ 'message': 'Please Select Product' });
        }

        else {
            $('#formGroupModalwarrantyimg').modal({ backdrop: 'static', keyboard: false })
            $('#formGroupModalwarrantyimg').modal('show');
            let prdid = $thisForm.find('[name="ProductID"]').val();
            let PrdctId = $thisForm.find('[name="ProductID"]').val();
            let $pimgContainer = $('#Image-img');

                    $pimgContainer.load('@Url.Action("LoadMultipleImageForm", "CommonPopupSearch", new { mode = 26 })', function () {
                        wartype = 0;
                        debugger
                        if ($thisForm.data('pImageselect')) {

                            WarProductImagelst = [];
                            if ($thisForm.data('pImageselect').length > 0) {

                                WarProductImagelst = $thisForm.data('pImageselect');

                                for (var i = 0; i < WarProductImagelst.length; i++) {
                                    if (!WarProductImagelst[i].ProdImage.includes("data:image/;base64,")) {
                                        WarProductImagelst[i].ProdImage = "data:image/;base64," + WarProductImagelst[i].ProdImage;
                                    }

                                }


                            }
                        }
                        uStockId = prdid;
                        uproductid = prdid;
                        imagemode = 2;
                    });
               }
    }

    var warrantydetails = [];

    function GetWarrantylists(ele, mode) {
     debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');


        productclear(ele, 'Warranty');
        if ($thisForm.find('[name="ProductID"]').val() == '' || $thisForm.find('[name="ProductID"]').val() == null) {
            NotificationMessage({ 'message': 'Please Select Product' });
        }
        else {
            let prdid = $thisForm.find('[name="ProductID"]').val();
            $thisForm.find('[name="prodtid"]').val(prdid);
            var warobject = [];
            var imageobject = [];

            //if ($thisForm.data('pwarranty')) {

            //    if ($thisForm.data('pwarranty').length > 0) {
            //        console.log('WARRANTY CHECK', $thisForm.data('pwarranty'))
            //        console.log("warrantydetailsedold", warrantydetails)
            //        warrantydetails = [];
            //        let tempArr = $thisForm.data('pwarranty')
            //        if (parseInt(tempArr.length) > 0) {
            //            tempArr.map(val => {
            //                let warrantyInfo = {};
            //                warrantyInfo['Replcwardt'] = val.Replcwardt;
            //                warrantyInfo['Serwardt'] = val.Serwardt;
            //                warrantyInfo['WarrantyType'] = val.WarrantyType;
            //                warrantyInfo['WarrantyType_d'] = val.WarrantyType_d;
            //                warrantyInfo['prodtid'] = val.prodtid;
            //                warrantyInfo['subProName'] = val.subProName;
            //                warrantyInfo['subProductID'] = val.subProductID;
            //                warrantydetails.push(warrantyInfo);
            //            });
            //           // $thisForm.data({ pOthrChgData: othrchargelst });
            //        }


            //        //warrantydetails = $thisForm.data('pwarranty');

            //        console.log("warrantydetailsed", warrantydetails)
            //    }
            //}
            if (warrantydetails != null) {
               // warobject = warrantydetails.filter(obj => obj.prodtid.toString() === prdid.toString());
                warobject = gridWarrantyDetails.filter(obj => obj.prodtid.toString() === prdid.toString());
            }

            $('#formGroupModalwarranty').modal({ backdrop: 'static', keyboard: false })

            if (mode == 0) {
                $('#formGroupModalwarranty').modal('show');
            }
            else {
                $('#formGroupModalwarranty').modal('hide');
            }

            if (warobject != null) {
                if (warobject.length > 0) {
                    if (warobject[0]['prodtid'] == prdid) {
                        fillgrid('Warranty', wartableOptionsTempOut, $thisForm, warobject);
                    }
                } else {
                    $thisForm.find('[perfect-tempTable= "Warranty"]').empty();;
                }
            }
            let AMCdet = $thisForm.data('amcdatadata');
            if (AMCdet) {
                if (AMCdet[0]['FK_Master'] == prdid) {
                    if ($thisForm.data('amcdatadata')) {
                        $.each(AMCdet, function (key, value1) {
                            $thisForm.find('[name="AMCFK_Master"]').val(value1.FK_Master);
                            $thisForm.find('[name="AMCType"]').val(value1.AMCType).selectpicker('refresh');
                            $thisForm.find('[name="NoOfServices"]').val(value1.NoOfServices);
                            $thisForm.find('[name="AMCDuedate"]').val(value1.AMCDuedate);
                            $thisForm.find('[name="AMCRenewduedate"]').val(value1.AMCRenewduedate);
                            $thisForm.find('[name="AmRemarks"]').val(value1.AmRemarks);
                        });
                    }
                }
            }
            else {
                $thisForm.find('[name="AMCFK_Master"]').val('');
                $thisForm.find('[name="AMCType"]').val('').selectpicker('refresh');
                $thisForm.find('[name="NoOfServices"]').val('');
                $thisForm.find('[name="AMCDuedate"]').val('');
                $thisForm.find('[name="AMCRenewduedate"]').val('');
                $thisForm.find('[name="AmRemarks"]').val('');
            }
        }

    }

    function fillgrid(tablk, wartableOptionsTempOut, $thisForm, data) {

        let tableOptionsTemp = wartableOptionsTempOut;
        let insertData = [];
        let tableKey = tablk;
        let indexname = tableKey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $.each(data, function (keyOne, valOne) {
            let pData = {};
            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])


            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');

                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {

                        tableOptionsTemp.hideColumn.push(nameAttr);

                        pData[nameAttr + '_d'] = $this.find('[value="' + valOne[nameAttr] + '"]').text();
                        pData[nameAttr] = valOne[nameAttr];

                    }
                    else if ($this.is('input')) {

                        pData[nameAttr] = valOne[nameAttr];

                    }

                }

            });

            insertData.push(pData);

        });
        $tblcontainer.empty();
        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTemp));

    }

    function createtable2(ele, tkey, uniq = [], tableOptionsTempOut) {



         $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').val() == "") {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Product');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').val() == "") {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Quantity');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }


        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
       let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {

            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {

            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }
        //
        if (tableKey == 'Warranty') {

            isValid = validwartdetail(ele, tableKey, errorClass, isValid);
        }
        else if (tableKey == 'CustomerWiseProduct') {
            isValid = validProductdetail(ele, tableKey, errorClass, isValid);
        }

        if (unique.length > 0) {

            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }

                }

            })
            console.log('previous data', prevData);

            unique.forEach(function (key, i) {
                console.log('unid -> key:' + key + "| index :" + i);
                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');

                let atname = $thisEle.attr('name');
                let cvalue;
                console.log('atname', atname);
                console.log('$thisEle.length', $thisEle.length);
                if ($thisEle.length != 0) {
                    console.log('len', $thisEle)
                    let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    let errmessage = key + " Already exits"


                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();

                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                        if (inputEleType == 'checkbox') {
                            cvalue = $thisEle.is(':checked');



                        }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); console.log('cvalue ->', cvalue); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else { cvalue = $thisEle.val(); }


                    if (prevData.find(a => a[atname] == cvalue)) {

                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });

        }

        console.log('isValid', isValid);

        if (isValid) {

            console.log('check 4.1');

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');

                console.log('headerName', headerName);

                if ($this.is('select')) {

                    tableOptionsTemp.hideColumn.push(nameAttr)

                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    insertData[nameAttr] = $this.val();


                    $this.val('').selectpicker('refresh');


                }
                else if ($this.is('input')) {

                    insertData[nameAttr] = $this.val();
                    console.log('insertData[nameAttr]', insertData[nameAttr])
                    if (nameAttr == "ProductID") { }

                    else {
                        $this.val('');
                    }
                }

            });
            console.log('check 4.2', insertData);
            console.log('check 4.2 tableoption', tableOptionsTemp);
            if (isNew) {
                console.log('check 4.2.1');

                if ($tblcontainer.find('table').length == 0) {
                    console.log('check 4.2.3');
                    console.log(insertData);
                    console.log(',tableOptionsTemp', tableOptionsTemp)
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));


                }
                else {
                    console.log('check 4.2.1');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);


                }

            }
            else {

                let table = $tblcontainer.find('table').DataTable()
                table.destroy()

                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);

            }

            console.log(insertData);

            $tblcontainer.attr('perfect-tempTable-action', 0);

            if (tableKey == 'Warranty') {

            }
            else if (tableKey == 'CustomerWiseProduct') {
                $thisForm.find('[name=prdbtn]').removeAttr("disabled", "disabled")
                $thisForm.data({ pwarranty: warrantydetails });
                console.log('check 123', $thisForm.data('pwarranty'));
                $thisForm.data({ addpImageselect: $thisForm.data('pImageselect') });
                console.log('addpImageselect', $thisForm.data('addpImageselect'))
            }

        }

        console.log('check 5');
    }


    function validProductdetail(ele, tableKey, errorClass, isValid) {

         $thisForm = $(ele).closest('[perfect-class="form"]');


        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').val() == "" || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').val() == undefined) {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Product');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').val() == "") {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Quantity');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="CWPDSalQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        return isValid;
    }

     @*function ImageLoad(ele) {
                 $thisForm = $(ele).closest('[perfect-class="form"]');

                if ($thisForm.find('[name="ProductID"]').val() == '' || $thisForm.find('[name="ProductID"]').val() == null) {
                    NotificationMessage({ 'message': 'Please Select Product' });
                }
                else {
                    $('#formGroupModalwarrantyimg').modal({ backdrop: 'static', keyboard: false })
                    $('#formGroupModalwarrantyimg').modal('show');
                    let prdid = $thisForm.find('[name="ProductID"]').val();

                    let $pimgContainer = $('#Image-img');


                    $pimgContainer.load('@Url.Action("MultipleImageLoadForm", "CommonPopupSearch", new { mode = 26 })', function () {
                        wartype = 0;
                        if ($thisForm.data('pImageselect')) {

                            WarrantyProductImagelst = [];
                            if ($thisForm.data('pImageselect').length > 0) {

                                WarrantyProductImagelst = $thisForm.data('pImageselect');
                                console.log("WarrantyProductImagelst", WarrantyProductImagelst)
                                for (var i = 0; i < WarrantyProductImagelst.length; i++) {
                                    if (!WarrantyProductImagelst[i].ProdImage.includes("data:image/;base64,")) {
                                        WarrantyProductImagelst[i].ProdImage = "data:image/;base64," + WarrantyProductImagelst[i].ProdImage;
                                    }

                                }


                            }
                        }
                        uproductid = prdid;
                        imagemode = 2;
                    });
                }
    }*@

    function warrantydet(ele) {
        debugger;
        $thisForm = $(ele).closest('[perfect-class="form"]');
        let prdid = $thisForm.find('[name="ProductID"]').val();
        let subprdid = $thisForm.find('[name="subProductID"]').val();

        let AMCType = $thisForm.find('[name="AMCType"]').val();
        let NoOfServices = $thisForm.find('[name="NoOfServices"]').val();
        let AMCDuedate = $thisForm.find('[name="AMCDuedate"]').val();
        let AMCRenewduedate = $thisForm.find('[name="AMCRenewduedate"]').val();
        let AmRemarks = $thisForm.find('[name="AmRemarks"]').val();


        var uwarobject = [];
        //if (warrantydetails != null) {
        //    uwarobject = warrantydetails.filter(obj => obj.prodtid === prdid.toString());
        //    const indexOfObject = warrantydetails.findIndex(object => {
        //        return object.prodtid === prdid.toString();
        //    });

        //    warrantydetails.splice(indexOfObject, uwarobject.length);
        //}
        if (gridWarrantyDetails != null) {
            uwarobject = gridWarrantyDetails.filter(obj => obj.prodtid === prdid.toString());
            const indexOfObject = gridWarrantyDetails.findIndex(object => {
                return object.prodtid === prdid.toString();
            });

            gridWarrantyDetails.splice(indexOfObject, uwarobject.length);
        }

        console.log("gridWarrantyDetails 2325", gridWarrantyDetails)
        let tempArr = []
        $thisForm.find('[perfect-tempTable="Warranty"]').find('tbody').find('tr').each(function () {
            //warrantydetails.push($(this).data('pData'));
            tempArr.push($(this).data('pData'));
        })

        if (parseInt(tempArr.length) > 0) {
            tempArr.map(val => {
                let warrantyInfo = {};
                warrantyInfo['Replcwardt'] = val.Replcwardt;
                warrantyInfo['Serwardt'] = val.Serwardt;
                warrantyInfo['WarrantyType'] = val.WarrantyType;
                warrantyInfo['WarrantyType_d'] = val.WarrantyType_d;
                warrantyInfo['prodtid'] = val.prodtid;
                warrantyInfo['subProName'] = val.subProName;
                warrantyInfo['subProductID'] = val.subProductID;
                gridWarrantyDetails.push(warrantyInfo);
            });
        }
        var AMC = [];
        let Amcdetails = {
            FK_Master: prdid,
            AMCType: AMCType,
            NoOfServices: NoOfServices,
            AMCDuedate: AMCDuedate,
            AMCRenewduedate: AMCRenewduedate,
            AmRemarks: AmRemarks
        }
        AMC.push(Amcdetails);
        console.log('Amcdetails', Amcdetails);

        $thisForm.data({ amcdatadata: AMC });

        let AMCdet = $thisForm.data('amcdatadata');
        if ($thisForm.data('amcdatadata')) {
            $.each(AMCdet, function (key, value1) {
                $thisForm.find('[name="AMCFK_Master"]').val(value1.FK_Master);
                $thisForm.find('[name="AMCMType"]').val(value1.AMCType).selectpicker();
                $thisForm.find('[name="AMCNoOfServices"]').val(value1.NoOfServices);
                $thisForm.find('[name="AMCMDuedate"]').val(moment(value1.AMCDuedate).format('YYYY-MM-DD'));
                $thisForm.find('[name="AMCMRenewduedate"]').val(moment(value1.AMCRenewduedate).format('YYYY-MM-DD'));
                $thisForm.find('[name="AMCRemarks"]').val(value1.AmRemarks);
            });
        }

        console.log('warrantydetails', warrantydetails)
        $('#formGroupModalwarranty').modal('hide');
    }









    function fn_fillProducts(ele, tkey, data, ProducttableOptionsTempOut) {

        console.log("data", data)
         $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableOptionsTempfill = ProducttableOptionsTempOut;
        let insertData = []
        let tableKey = tkey;
        let indexname = tkey + 'index';
        tableOptionsTempfill.rowAttribute.push(indexname);
        tableOptionsTempfill.hideColumn.push(indexname);
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $.each(data, function (keyOne, valOne) {

            let ProductInfo = {};

            ProductInfo[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', ProductInfo[indexname])

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');

                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {

                        tableOptionsTempfill.hideColumn.push(nameAttr);

                        ProductInfo[nameAttr + '_d'] = $this.find('[value="' + valOne[nameAttr] + '"]').text();
                        ProductInfo[nameAttr] = valOne[nameAttr];
                        console.log('select', $this.find('options[value="' + valOne[nameAttr] + '"]').text());

                    }
                    else if ($this.is('input')) {

                        let inputType = $this.attr('type').toLocaleLowerCase();
                        console.log(inputType)


                        if (inputType == 'date') {

                            if (valOne[nameAttr] == null) {
                                ProductInfo[nameAttr] = valOne[nameAttr];
                            }
                            else {
                                ProductInfo[nameAttr] = moment(valOne[nameAttr]).format('YYYY-MM-DD');
                            }

                        }
                        else  if (inputType == 'checkbox') {
                            ProductInfo[nameAttr] = valOne[nameAttr];
                            tableOptionsTempfill.isCheckType.push(nameAttr)
                            $this.prop('checked', false);
                        }
                        else {

                            ProductInfo[nameAttr] = valOne[nameAttr];


                        }
                    }
                    else {
                        ProductInfo[nameAttr] = valOne[nameAttr];


                    }
                }

                ProductInfo["ProductID"] = valOne["ProductID"];
                ProductInfo["CWPDModelNo"] = valOne["CWPDModelNo"];

            });

            insertData.push(ProductInfo);
            console.log("insertData", insertData);

        });
        $tblcontainer.empty();
        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTempfill));


    }



    var ProducttableOptionsTempOut = {
        iconButton: {
            buttons: [

                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                       // debugger;
                        let Saveddata = $(this).closest('tr').data('pData');
                        let SaveDatas = $(this).closest('tr').data('pDataProduct');
                        let ProductID = Saveddata.ProductID;
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                         $thisForm = $tablecontainer.closest('[perfect-class="form"]');

                        let indexname = tableKey + 'index';
                        console.log('indexname', indexname);
                        $thisForm.find('[name=prdbtn]').attr("disabled", "disabled")

                        let rindex = $(this).closest('tr').attr(indexname);
                        console.log('rindex', rindex);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', Saveddata);
                        console.log('SaveData', SaveDatas);

                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(Saveddata[pf_name]).selectpicker('refresh');

                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', Saveddata[pf_name]);
                                }

                                else {

                                    $thisNode.val(Saveddata[pf_name]);
                                }

                            }
                            else {
                                $thisNode.val(Saveddata[pf_name]);
                            }
                        });

                        $thisForm.data({ amcdatadata: '' });
                        fillamcdetails(this);

                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let Saveddata = $(this).closest('tr').data('pData')
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                        }
                        else {
                            $thistbl.remove();
                        }
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                         $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        let prdid;
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if (pf_name == "ProductID") {
                                prdid = Saveddata[pf_name];
                            }
                        });
                        let dwarobject = [];

                        if (gridWarrantyDetails != null) {
                            dwarobject = gridWarrantyDetails.filter(obj => obj.prodtid.toString() === prdid.toString());
                            const dindexOfObject = gridWarrantyDetails.findIndex(object => {
                                return object.prodtid.toString() === prdid.toString();
                            });

                            gridWarrantyDetails.splice(dindexOfObject, dwarobject.length);
                            $thisForm.data({ pwarranty: gridWarrantyDetails });
                        }
                        console.log("Warranty deatils", gridWarrantyDetails)
                        let dWarProductImagelst = [];
                        let dWarrantyProduct = [];
                        dWarProductImagelst = JSON.parse(localStorage.getItem('WarProductImage'));

                        if (dWarProductImagelst != null) {
                            dWarrantyProduct = dWarProductImagelst.filter(obj => obj.ProductID.toString() === prdid.toString());
                            const dpindexOfObject = dWarProductImagelst.findIndex(object => {
                                return object.ProductID.toString() === prdid.toString();
                            });
                            console.log('dWarrantyProduct', dWarrantyProduct)
                            dWarProductImagelst.splice(dpindexOfObject, dWarrantyProduct.length);

                            localStorage.setItem('WarProductImage', JSON.stringify(dWarProductImagelst));

                            $thisForm.data({ pImageselect: dWarProductImagelst });
                        }
                        $("#btnResetpdtdata").click();

                    }
                },
            ]
        },

        rowAttribute: [],
        renameHeader: {
            "ProductName": "Product", "CWPDSalQuantity": "Quantity", "CWPDModelNo": "Model", "CWPDStandby":"Standby"},
        hideColumn: ['ProductID', 'AMCMType', 'AMCMDuedate', 'AMCMRenewduedate', 'AMCNoOfServices','AMCFK_Master', 'AMCRemarks'],
        serialNo: true,
        isCheckType: []

    };
        var wartableOptionsTempOut = {

                iconButton: {
                    buttons: [
                        {
                            icon: "fa fa-image btnPerfectGridImage",
                            title: "Add images",

                            action: function () {

                                let Saveddata = $(this).closest('tr').data('pData')
                                $('#formGroupModalwarrantyimg').modal({ backdrop: 'static', keyboard: false })
                                $('#formGroupModalwarrantyimg').modal('show');
                                let $imgContainer = $('#Image-img');
                                let $tablecontainer = $(this).closest('[perfect-tempTable]');
                                let tableKey = $tablecontainer.attr('perfect-tempTable');
                                let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                                var wartyp;
                                $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                                    let $thisNode = $(this);
                                    let pf_name = $thisNode.attr('name');
                                    if (pf_name == "WarrantyType") {
                                        wartyp = Saveddata[pf_name];
                                        console.log('WarrantyTypename', pf_name)
                                    }
                                });
                                $imgContainer.load('@Url.Action("LoadMultipleImageForm", "CommonPopupSearch", new { mode = 26 })', function () {

                                    wartype = wartyp;
                                      if ($thisForm.data('pImageselect')) {
                                          console.log("pImageselect", $thisForm.data('pImageselect'))
                                          WarProductImagelst = [];
                                          if ($thisForm.data('pImageselect').length > 0) {

                                              WarProductImagelst = $thisForm.data('pImageselect');

                                              for (var i = 0; i < WarProductImagelst.length; i++) {
                                                  if (!WarProductImagelst[i].ProdImage.includes("data:image/;base64,")) {
                                                      WarProductImagelst[i].ProdImage = "data:image/;base64," + WarProductImagelst[i].ProdImage;
                                                  }

                                              }
                                          }
                                      }

                                    uStockId = $thisForm.find('[name="ProductID"]').val();
                                    uproductid = $thisForm.find('[name="ProductID"]').val();
                                    imagemode = 1;
                                });
                            }
                        },

                        {
                              icon: "fa fa-pencil btnPerfectGridEdit",
                            action: function () {
                                debugger;
                                let Saveddata = $(this).closest('tr').data('pData')
                                let $tablecontainer = $(this).closest('[perfect-tempTable]');
                                let tableKey = $tablecontainer.attr('perfect-tempTable');
                                 $thisForm = $tablecontainer.closest('[perfect-class="form"]');

                                let indexname = tableKey + 'index';

                                let rindex = $(this).closest('tr').attr(indexname);

                                $tablecontainer.attr('perfect-tempTable-action', rindex);

                                console.log('Editclick', Saveddata);
                                $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                                    let $thisNode = $(this);
                                    let pf_name = $thisNode.attr('name');
                                    if ($thisNode.is('select')) {

                                        $thisNode.val(Saveddata[pf_name]).selectpicker('refresh');

                                    }
                                    else if ($thisNode.is('input')) {
                                        let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                        if (inputType == 'checkbox') {

                                            $thisNode.prop('checked', Saveddata[pf_name]);
                                        }

                                        else {

                                            $thisNode.val(Saveddata[pf_name]);
                                        }

                                    }
                                    else {
                                        $thisNode.val(Saveddata[pf_name]);
                                    }


                                });



                            }
                        },
                        {
                             icon: "fa fa-trash btnPerfectGridDelete",
                            action: function () {

                                let Saveddata = $(this).closest('tr').data('pData')
                                let $tablecontainer = $(this).closest('[perfect-tempTable]');
                                let tableKey = $tablecontainer.attr('perfect-tempTable');
                                let $thistbl = $(this).closest('table');
                                let table = $thistbl.DataTable();
                                table.destroy();
                                if ($(this).closest('tbody').find('tr').length > 1) {
                                    $(this).closest('tr').remove();
                                    pft_table_slreset($thistbl);
                                }
                                else {
                                    $thistbl.remove();
                                }


                                 $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                                let dprdid;
                                let prdid;
                                let dwartyp;
                                $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                                    let $thisNode = $(this);
                                    let pf_name = $thisNode.attr('name');
                                    console.log('pf_name', pf_name)
                                    if (pf_name == "WarrantyType") {
                                        dwartyp = Saveddata[pf_name];
                                        console.log('WarrantyTypename', pf_name)
                                    }
                                });
                                debugger
                                prdid = $thisForm.find('[name="ProductID"]').val();
                                console.log('dwartyp', dwartyp)
                                let dWarProductImagelst = [];
                                let subwarproduct = [];
                                let dwarproduct = [];
                                dWarProductImagelst = JSON.parse(localStorage.getItem('WarProductImage'));
                                console.log('dWarrantyProductImagelst', dWarProductImagelst)
                                if (dWarProductImagelst != null) {
                                    dwarproduct = dWarProductImagelst.filter(obj => obj.ProductID.toString() === prdid.toString());
                                    subwarproduct = dwarproduct.filter(obj => obj.WarrantyType.toString() === dwartyp.toString());
                                    const dwindexOfObject = dwarproduct.findIndex(object => {
                                        return object.WarrantyType.toString() === dwartyp.toString();
                                    });

                                    dWarProductImagelst.splice(dwindexOfObject, subwarproduct.length);

                                    localStorage.setItem('WarProductImage', JSON.stringify(dWarProductImagelst));
                                    console.log('dWarrantyProductImagelst1', dWarProductImagelst)
                                    $thisForm.data({ pImageselect: dWarProductImagelst });



                                }
                                $("#btnResetwrtydata").click();
                            }
                        },
                    ]
                },

        rowAttribute: ['WarrantyTaxAmount', 'WarrantyAmount'],
        renameHeader: { "subProName": "Sub Product", "Replcwardt": "Replace WTY Dt", "Serwardt": "Service WTY Dt", "WarrantyType_d": " Type", "WarrantyNetAmount": "NetAmount" },
        hideColumn: ['subProductID', 'prodtid', 'WarrantyTaxAmount', 'WarrantyAmount'],
        serialNo: true,
        isDateType: ["Replcwardt", "Serwardt"],

    };

    function validwartdetail1(ele, tableKey, errorClass, isValid) {
         $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="WarrantyType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="WarrantyType"]').val() == null) {

            isValid = false;
            console.log('false');
            $thisForm.find('[perfect-tempTable-' + tableKey + '="WarrantyType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Type');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="WarrantyType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        return isValid;

    }


    function productclear(ele, tableKey) {
        $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);
        if (tableKey == 'CustomerWiseProduct') { $thisForm.data({ amcdatadata: '' });}
        //let $tblcontainers = $thisForm.find('[perfect-tempTable="Warranty"]');
        //$tblcontainers.empty();
    }

            function AMCWarranty(ele,type) {
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            var InputData =
            {
                Mode: 1,
                FK_Type: $thisForm.find('[name="WarrantyType"]').val(),
                Date: $thisForm.find('[name="InvDate"]').val(),
                Quantity: $thisForm.find('[name="CWPDSalQuantity"]').val(),
            }



                    $.ajax({
                    url: "@Url.Action("GetAMCWarrantydetails", "Sales")",
                    type: "POST",
                    data: InputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (ajaxOutput) {
                            if (ajaxOutput.Process.IsProcess) {
                                if (ajaxOutput.Data[0].ErrCode != -100) {
                                    $thisForm.find('[name="Replcwardt"]').val(moment(ajaxOutput.Data[0].ReplaceWarrantyDate).format('YYYY-MM-DD'));
                                    $thisForm.find('[name="Serwardt"]').val(moment(ajaxOutput.Data[0].ServiceWarrantyDate).format('YYYY-MM-DD'));
                                    //$thisForm.find('[name="WarrantyAmount"]').val(Number(ajaxOutput.Data[0].Amount).toFixed(2));
                                    //$thisForm.find('[name="WarrantyTaxAmount"]').val(Number(ajaxOutput.Data[0].TaxAmount).toFixed(2));
                                    //$thisForm.find('[name="WarrantyNetAmount"]').val(Number(ajaxOutput.Data[0].NetAmount).toFixed(2));
                                }
                                else {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': ajaxOutput.Data[0].ErrMsg });
                                    $thisForm.find('[name="Replcwardt"]').val(moment('').format('YYYY-MM-DD'));
                                    $thisForm.find('[name="Serwardt"]').val(moment('').format('YYYY-MM-DD'));
                                    //$thisForm.find('[name="WarrantyAmount"]').val('');
                                    //$thisForm.find('[name="WarrantyTaxAmount"]').val('');
                                    //$thisForm.find('[name="WarrantyNetAmount"]').val('');
                                }
                            }

                        },
                        complete: function () {
                            $(ele).prop('disabled', false);

                        }
                    });

        }

         function AMCWarrantyAMC(ele,type) {
            let $thisForm = $(ele).closest('[perfect-class="form"]');
             var InputData =
             {
                 Mode: 2,
                 FK_Type: $thisForm.find('[name="AMCType"]').val(),
                 Date: $thisForm.find('[name="InvDate"]').val(),
                 Quantity: $thisForm.find('[name="CWPDSalQuantity"]').val(),
             }


                    $.ajax({
                    url: "@Url.Action("GetAMCWarrantydetails", "Sales")",
                    type: "POST",
                    data: InputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (ajaxOutput) {
                            if (ajaxOutput.Process.IsProcess) {
                                if (ajaxOutput.Data[0].ErrCode != -100) {
                                    $thisForm.find('[name="NoOfServices"]').val(ajaxOutput.Data[0].NoOfServices);
                                    $thisForm.find('[name="AMCDuedate"]').val(moment(ajaxOutput.Data[0].AMCDuedate).format('YYYY-MM-DD'));
                                    $thisForm.find('[name="AMCRenewduedate"]').val(moment(ajaxOutput.Data[0].AMCRenewduedate).format('YYYY-MM-DD'));
                                    $thisForm.find('[name="AmcAmount"]').val(Number(ajaxOutput.Data[0].AmcAmount).toFixed(2));
                                    $thisForm.find('[name="AMCTaxAmount"]').val(Number(ajaxOutput.Data[0].AMCTaxAmount).toFixed(2));
                                    $thisForm.find('[name="AMCNetAmount"]').val(Number(ajaxOutput.Data[0].AMCNetAmount).toFixed(2));
                                }
                                else {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': ajaxOutput.Data[0].ErrMsg });
                                    $thisForm.find('[name="NoOfServices"]').val('');
                                    $thisForm.find('[name="AMCDuedate"]').val(moment('').format('YYYY-MM-DD'));
                                    $thisForm.find('[name="AMCRenewduedate"]').val(moment('').format('YYYY-MM-DD'));
                                    $thisForm.find('[name="AmcAmount"]').val('');
                                    $thisForm.find('[name="AMCTaxAmount"]').val('');
                                    $thisForm.find('[name="AMCNetAmount"]').val('');
                                }
                            }

                        },
                        complete: function () {
                            $(ele).prop('disabled', false);

                        }
                    });

    }

            function ImageLoadAMC(ele) {
                let $thisForm = $(ele).closest('[perfect-class="form"]');

                if ($thisForm.find('[name="ProductID"]').val() == '' || $thisForm.find('[name="ProductID"]').val() == null) {
                    NotificationMessage({ 'message': 'Please Select Product' });
                }
                else {
                    $('#formGroupModalwarrantyimg').modal({ backdrop: 'static', keyboard: false })
                    $('#formGroupModalwarrantyimg').modal('show');
                    let prdid = $thisForm.find('[name="ProductID"]').val();

                    let stkid = $thisForm.find('[name="StockId"]').val();
                    let $amcimgContainer = $('#Image-img');


                    $amcimgContainer.load('@Url.Action("LoadMultipleImageForm", "CommonPopupSearch", new { mode = 26 })', function () {
                        wartype = -1;
                        if ($thisForm.data('pImageselect')) {

                            WarProductImagelst = [];
                            if ($thisForm.data('pImageselect').length > 0) {

                                WarProductImagelst = $thisForm.data('pImageselect');
                                console.log("WarProductImagelst", WarProductImagelst)
                                for (var i = 0; i < WarProductImagelst.length; i++) {
                                    if (!WarProductImagelst[i].ProdImage.includes("data:image/;base64,")) {
                                        WarProductImagelst[i].ProdImage = "data:image/;base64," + WarProductImagelst[i].ProdImage;
                                    }

                                }


                            }
                        }
                        uStockId = prdid;
                        uproductid = prdid;
                        imagemode = 5;
                    });
                }
            }
    //function ResetAMCandWarranty2(ele) {
    //    let $thisForm = $(ele).closest('[perfect-class="form"]');
    //    let oldvalue = ele.oldvalue;
    //    let current = ele.value;
    //    let currentqty = $thisForm.find('[name=CWPDSalQuantity]').val();
    //    if ($thisForm.data('amcdatadata') || $thisForm.data('amcdatadata')) {
    //        let confirmationDialogBoxOption = { heading: "Warning", body: "<b>Change Quantity will Reset Warranty and AMC Details.  </b>" + "Do you want to continue? ", cancel: "No", confirm: "Yes" };
    //        var confirmBoxObj = ConfirmDialog(confirmationDialogBoxOption);
    //        debugger
    //        confirmBoxObj.then(function (selectedOption) {
    //            if (selectedOption) {
    //                productclear(ele, 'Warranty');
    //                productclear(ele, 'AMC');
    //                //localStorage.removeItem("WarProductImage");
    //                //warrantydetails = [];
    //                //$thisForm.data({ pwarranty: null });
    //                //$thisForm.data({ pImageselect: null });
    //                $thisForm.data({ amcdatadata: '' });


    //                $thisForm.find('[name="AMCMType"]').val('');
    //                $thisForm.find('[name="AMCNoOfServices"]').val('');
    //                $thisForm.find('[name="AMCMDuedate"]').val('');
    //                $thisForm.find('[name="AMCMRenewduedate"]').val('');
    //                $thisForm.find('[name="AMCRemarks"]').val('');


    //                let Saveddata = $(this).closest('tr').data('pData')
    //                let $tablecontainer = $(this).closest('[perfect-tempTable]');
    //                let tableKey = $tablecontainer.attr('perfect-tempTable');
    //                let $thistbl = $(this).closest('table');
    //                let table = $thistbl.DataTable();
    //                table.destroy();
    //                if ($(this).closest('tbody').find('tr').length > 1) {
    //                    $(this).closest('tr').remove();
    //                    pft_table_slreset($thistbl);
    //                }
    //                else {
    //                    $thistbl.remove();
    //                }

    //                /////////warranty clear//////// product wise
    //                $thisForm = $tablecontainer.closest('[perfect-class="form"]');
    //                let dprdid;
    //                let prdid;
    //                let dwartyp;
    //                $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
    //                    let $thisNode = $(this);
    //                    let pf_name = $thisNode.attr('name');
    //                    console.log('pf_name', pf_name)
    //                    if (pf_name == "WarrantyType") {
    //                        dwartyp = Saveddata[pf_name];
    //                        console.log('WarrantyTypename', pf_name)
    //                    }
    //                });
    //                debugger
    //                prdid = $thisForm.find('[name="ProductID"]').val();
    //                console.log('dwartyp', dwartyp)
    //                let dWarProductImagelst = [];
    //                let subwarproduct = [];
    //                let dwarproduct = [];
    //                dWarProductImagelst = JSON.parse(localStorage.getItem('WarProductImage'));
    //                console.log('dWarrantyProductImagelst', dWarProductImagelst)
    //                if (dWarProductImagelst != null) {
    //                    dwarproduct = dWarProductImagelst.filter(obj => obj.ProductID.toString() === prdid.toString());
    //                    subwarproduct = dwarproduct.filter(obj => obj.WarrantyType.toString() === dwartyp.toString());
    //                    const dwindexOfObject = dwarproduct.findIndex(object => {
    //                        return object.WarrantyType.toString() === dwartyp.toString();
    //                    });

    //                    dWarProductImagelst.splice(dwindexOfObject, subwarproduct.length);

    //                    localStorage.setItem('WarProductImage', JSON.stringify(dWarProductImagelst));
    //                    console.log('dWarrantyProductImagelst1', dWarProductImagelst)
    //                    $thisForm.data({ pImageselect: dWarProductImagelst });

    //                }
    //            }
    //            else {
    //                $thisForm.find('[name=CWPDSalQuantity]').val(ele.oldvalue)
    //            }
    //        });
    //    }
    //    else {

    //    }


    //}


    function ResetAMCandWarranty(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let oldvalue = ele.oldvalue;
        let current = ele.value;
        let currentqty = $thisForm.find('[name=CWPDSalQuantity]').val();

        let prdid = $('[name="ProductID"]').val();
        var wardetails = [];
        var amcdetails = [];
        var warobject = [];
        var amcobject = [];
        debugger
        if ($thisForm.data('amcdatadata') || $thisForm.data('pwarranty')) {
            if ($thisForm.data('pwarranty')) {
                if ($thisForm.data('pwarranty').length > 0) {
                    warrantydetails = $thisForm.data('pwarranty');
                }
                if (warrantydetails != null) {
                    warobject = warrantydetails.filter(obj => obj.ProductID.toString() === prdid.toString());
                }
            }

            if ($thisForm.data('amcdatadata')) {
                if ($thisForm.data('amcdatadata').length > 0) {
                    amcdetails = $thisForm.data('amcdatadata');
                }
                if (amcdetails != null) {
                    amcobject = amcdetails.filter(obj => obj.FK_Master.toString() === prdid.toString());
                }
            }
            if (warobject.length > 0 || amcobject.length>0) {
                let confirmationDialogBoxOption = { heading: "Warning", body: "<b>Change Quantity will Reset Warranty and AMC Details.  </b>" + "Do you want to continue? ", cancel: "No", confirm: "Yes" };
                var confirmBoxObj = ConfirmDialog(confirmationDialogBoxOption);
                debugger
                confirmBoxObj.then(function (selectedOption) {
                    if (selectedOption) {
                        productclear(ele, 'Warranty');
                        productclear(ele, 'AMC');
                        //localStorage.removeItem("WarProductImage");
                        //warrantydetails = [];
                        //$thisForm.data({ pwarranty: null });
                        //$thisForm.data({ pImageselect: null });
                        //$thisForm.data({ amcdatadata: '' });


                        //$thisForm.find('[name="AMCMType"]').val('');
                        //$thisForm.find('[name="AMCNoOfServices"]').val('');
                        //$thisForm.find('[name="AMCMDuedate"]').val('');
                        //$thisForm.find('[name="AMCMRenewduedate"]').val('');
                        //$thisForm.find('[name="AMCRemarks"]').val('');
                        debugger
                        prdtid = $thisForm.find('[name="ProductID"]').val();
                        if (warobject.length > 0) {
                            let dwardata = [];
                            dwardata = warrantydetails.filter(obj => obj.prodtid.toString() === prdtid.toString());
                            const dwindexOfObj = dwardata.findIndex(object => {
                                return object.prodtid.toString() === prdtid.toString();
                            });
                            warrantydetails.splice(dwindexOfObj, dwardata.length);
                            let $tblcontainer = $thisForm.find('[perfect-tempTable="Warranty"]');
                            $tblcontainer.empty();
                        }
                        if (amcobject.length > 0) {
                            $thisForm.find('[name="AMCMType"]').val('');
                            $thisForm.find('[name="AMCNoOfServices"]').val('');
                            $thisForm.find('[name="AMCMDuedate"]').val('');
                            $thisForm.find('[name="AMCMRenewduedate"]').val('');
                            $thisForm.find('[name="AMCRemarks"]').val('');
                        }

                        let Saveddata = $(this).closest('tr').data('pData')
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                        }
                        else {
                            $thistbl.remove();
                        }

                        /////////warranty clear//////// product wise
                        $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        let dprdid;
                        let prdid;
                        let dwartyp;
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            console.log('pf_name', pf_name)
                            if (pf_name == "WarrantyType") {
                                dwartyp = Saveddata[pf_name];
                                console.log('WarrantyTypename', pf_name)
                            }
                        });
                        debugger
                        prdid = $thisForm.find('[name="ProductID"]').val();
                        console.log('dwartyp', dwartyp)
                        let dWarProductImagelst = [];
                        let subwarproduct = [];
                        let dwarproduct = [];
                        dWarProductImagelst = JSON.parse(localStorage.getItem('WarProductImage'));
                        console.log('dWarrantyProductImagelst', dWarProductImagelst)
                        if (dWarProductImagelst != null) {
                            dwarproduct = dWarProductImagelst.filter(obj => obj.ProductID.toString() === prdid.toString());
                            subwarproduct = dwarproduct.filter(obj => obj.WarrantyType.toString() === dwartyp.toString());
                            const dwindexOfObject = dwarproduct.findIndex(object => {
                                return object.WarrantyType.toString() === dwartyp.toString();
                            });
                            dWarProductImagelst.splice(dwindexOfObject, subwarproduct.length);

                            localStorage.setItem('WarProductImage', JSON.stringify(dWarProductImagelst));
                            console.log('dWarrantyProductImagelst1', dWarProductImagelst)
                            $thisForm.data({ pImageselect: dWarProductImagelst });

                        }
                    }
                    else {
                        $thisForm.find('[name=CWPDSalQuantity]').val(ele.oldvalue)
                    }
                });
            }

        }
        else {

        }


    }
    function fillamcdetails(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let Productid = $thisForm.find('[name="ProductID"]').val();
        let Amctype = $thisForm.find('[name="AMCMType"]').val();
        let NoOfServices = $thisForm.find('[name="AMCNoOfServices"]').val();
        let AMCDuedate = $thisForm.find('[name="AMCMDuedate"]').val();
        let AMCRenewduedate = $thisForm.find('[name="AMCMRenewduedate"]').val();
        let AmRemarks = $thisForm.find('[name="AMCRemarks"]').val();

        if (Amctype != 0) {
            var AMC = [];
            let Amcdetails = {
                FK_Master: Productid,
                AMCType: Amctype,
                NoOfServices: NoOfServices,
                AMCDuedate: AMCDuedate,
                AMCRenewduedate: AMCRenewduedate,
                AmRemarks: AmRemarks
            }
            AMC.push(Amcdetails);
            $thisForm.data({ amcdatadata: AMC });
        }
    }
    function getfunction(ele) {
       let $thisForm = $(ele).closest('[perfect-class="form"]');
        var InputData =
        {
            FK_Product: $thisForm.find('[name="ProductID"]').val(),
            TransDate: $thisForm.find('[name="InvDate"]').val()
        }
           $.ajax({
                   url: "@Url.Action("GetWarrantyInfo", "CustomerProductMapping")",
                   type: "POST",
                   data: InputData,
                   dataType: "json",
                   contentType: 'application/x-www-form-urlencoded; charset=utf-8',
               success: function (ajaxOutput) {

                       if (ajaxOutput.warrantyselect.Process.IsProcess) {
                           if (ajaxOutput.warrantyselect.Data.length > 0) {
                              // $thisForm.data({ pwarranty: ajaxOutput.warrantyselect.Data });
                               //warrantydetails.push(ajaxOutput.warrantyselect.Data);

                               //let wartinfos = ajaxOutput.warrantyselect.Data;
                               //warrantydetails = warrantydetails.concat(wartinfos);

                               let tempArr = [];
                               tempArr = ajaxOutput.warrantyselect.Data;
                               if (parseInt(tempArr.length) > 0) {
                                   tempArr.map(val => {
                                       let warrantyInfo = {};
                                       warrantyInfo['Replcwardt'] = val.Replcwardt;
                                       warrantyInfo['Serwardt'] = val.Serwardt;
                                       warrantyInfo['WarrantyType'] = val.WarrantyType;
                                       warrantyInfo['WarrantyType_d'] = val.WarrantyType_d;
                                       warrantyInfo['prodtid'] = val.prodtid;
                                       warrantyInfo['subProName'] = val.subProName;
                                       warrantyInfo['subProductID'] = val.subProductID;
                                       gridWarrantyDetails.push(warrantyInfo);
                                   });
                               }

                               var AMC = []

                           }
                       }
                   },
                   complete: function () {
                   }
        });
        console.log("gridWarrantyDetails",gridWarrantyDetails)
    }
        function ResetPin(ele) {
        let $thisform = $('[perfect-class="form"]');
        if ($thisform.find('[name="add"]').is(":visible")) {
            $thisform.find('[name="CountryID"]').val('@ViewBag.ID_Country');
            $thisform.find('[name="Country"]').val('@ViewBag.CountryName');
            $thisform.find('[name="DistrictID"]').val('@ViewBag.ID_District');
            $thisform.find('[name="District"]').val('@ViewBag.DistrictName');
            $thisform.find('[name="StatesID"]').val('@ViewBag.ID_State');
            $thisform.find('[name="States"]').val('@ViewBag.StateName');
            $thisform.find('[name="PostID"]').val(0);
            $thisform.find('[name="Post"]').val('');
            $thisform.find('[name="AreaID"]').val(0);
            $thisform.find('[name="AreaName"]').val('');
        }
    }

    function decimalpnt(ele, name, range) {

        let input = $('#' + name);
        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
        input.on('keydown', function () {
            if (ele.value.includes('.')) {

            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.length == 10) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }

</script>
