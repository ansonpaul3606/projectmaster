@model PerfectWebERP.Models.CustomerSectorModel.Sortorderlist



<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">Customer Sector</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Name</span>
                                <span class="text-danger">*</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_name" placeholder="" name="Name" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="generateShortName(this)" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Short Name</span>
                                <span class="text-danger">*</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_shortName" placeholder="" name="ShortName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Sort order</span>
                                @*<span class="text-danger">*</span>*@

                            </label>
                            <div class="col-sm-8">
                                <div class=" input-group mb-2">
                                    <input type="number" class="form-control perfectValidate_numeric_nm" placeholder="" name="SortOrder" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="input" value="@Model.SortOrder" min="0" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>


            <div class="card-footer text-right" perfect-class="formFooter">
                @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                {
                    <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="updateCustomerSector(this)"><i class="fa fa-refresh fa-spin  loaderClass"></i>Update</button>
                }
                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="AddCustomerSector(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                </div>
        </form>
    </div>
</div>
<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>


<script>
    (function () {
       // jQuery('form').validate();//<-----  Validate/initialize our form on page load
        jQuery('select').selectpicker();
    })();

         function ResetButton(ele) {
             $('.dataTable tr').removeClass("SelectForDelete");
      

             loadcustomersectorAddForm()
        //let $thisForm = $(ele).closest('[perfect-class="form"]');
        //let pData = $thisForm.data('pData');
        //     if (pData) {

        //         $thisForm.find('[name=Name]').val(pData.Name),
        //             $thisForm.find('[name=ShortName]').val(pData.ShortName),


        //             $thisForm.find('[name=SortOrder]').val(pData.SortOrder)
        //     }
        //     else {

        //    $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
        //    $thisForm.find('[perfect-ctype="input"]').val('');
        //    $thisForm.find('[perfect-ctype="digit"]').val('');

        //}

        //$thisForm.validate().resetForm();
    }


    // Function to add new customersector


    function AddCustomerSector(ele) {


            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability


            //$(ele).find('i').removeClass();

            console.log('> Add CustomerSector form IS valid', $thisForm.valid())
        if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

            $(ele).prop('disabled', true); // avoiding form submit the double click


            var inputData = {//<---- Input Json : this is the variable we pass to controller
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                CustomerSectorID :0,
                Name: $thisForm.find('[name=Name]').val().trim(),
                ShortName: $thisForm.find('[name=ShortName]').val().trim(),
                TransMode: localStorage.getItem("FRM_TRANSMODE"),
                SortOrder: $thisForm.find('[name=SortOrder]').val().trim()
            };

            localStorage.removeItem("FRM_TRANSMODE");
            console.log('> Add Customersector ajax input',inputData);

             $.ajax({
                 url: "@Url.Action("AddNewCustomerSectorDetails", "CustomerSector")",
                type: "POST",

                 data: inputData,//<---- Input json : data passed to controller
                dataType: "json",
                 contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                 success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                     if (ajaxOutput.Process.IsProcess) {

                         $.each(ajaxOutput.Process.Message, function (key, value) {

                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                         });
                         $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                         $thisForm.find('[perfect-ctype="input"]').val('');
                         $thisForm.find('[perfect-ctype="digit"]').val('');



                         let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                         if (onSuccess) {
                             window[onSuccess]();
                         }

                         //---------- Do stuff if success

                         console.log('> Add new Customer Sector success data', ajaxOutput);
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });

        }

        }

    // Function to update a District
    //$('.addcompany-jq-addnewuserUpdate').on('click',



        function updateCustomerSector(ele) {


            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability

            if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                $(ele).prop('disabled', true);

                let pdata = $thisForm.data('pData');

                console.log('pdata fter view click',pdata)
                console.log('> Update CustomerSector form data saved',pdata);
                let inputData = {

                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    CustomerSectorID: pdata.CustomerSectorID,
                    Name: $thisForm.find('[name=Name]').val().trim(),
                    ShortName: $thisForm.find('[name=ShortName]').val().trim(),
                    TransMode: localStorage.getItem("FRM_TRANSMODE"),
                    SortOrder: $thisForm.find('[name=SortOrder]').val().trim()
            };
                localStorage.removeItem("FRM_TRANSMODE");



                console.log('> Update CustomerSector ajax input',inputData);
             $.ajax({
                 url: "@Url.Action("UpdateCustomerSectorDetails", "CustomerSector")",
                type: "POST",
                
                 data: inputData,//<---- Input json : data passed to controller
                dataType: "json",
                 contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                 success: function (ajaxOutput) { //<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                     if (ajaxOutput.Process.IsProcess) {

                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.success(value, "Success");
                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                         });


                         let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                         if (onSuccess) {
                             window[onSuccess]();
                         }

                         //---------- Do stuff if success
                         //toastr.success("Inside success", "Confirmation Box in table");

                         console.log('> update new CustomerSector success data', ajaxOutput);
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }


                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });

        }

        }

    function getCustomerSector(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        $.ajax({
            url: '@Url.Action("GetCustomerSector", "CustomerSector")',
            type: "GET",
            // headers: { "token_key": "1234" },
            //data: JSON.stringify(inputData),//<---- Input json : data passed to controller
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                // console.log("Data", data);

                if (ajaxOutput.Process.IsProcess) {
                    var cussectorModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['CustomerSectorID'] });
                    cussectorModel.then(function (ret) {
                        if (ret) {
                            console.log('>_ Search button > list click', ret);
                            $thisForm.find('[name=CustomerSectorID]').val(ret.CustomerSectorID);
                            $thisForm.find('[name=ID_CustomerSector]').val(ret.ID_CustomerSector);
                            $thisForm.find('[name=Name]').val(ret.CussectyName);
                        }
                        else {
                            console.log(ret);
                        }
                    });
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }

            },

        });
    }

    @*function districtAdding() {
        let $tempModel = createSearchModalDOM().modal;

        $tempModel.find('.modal-title').addClass("d-none");
        $tempModel.show
        $tempModel.find('.modal-dialog').addClass('modal-xl')

        $tempModel.find('.modal-body').load('@Url.Action("LoadStateForm", "State")', function () {
            perfectCRMvalidation.init($(this).find('[perfect-class="form]'));
            initFunctions($(this));

        });
        //alert("thsioAS,DAM,S")*@
 
    function generateShortName(ele) {
        let $form = $(ele).closest('[perfect-class="form"]');
        var fullName = $form.find('[name="Name"]').val();
        var shortName = generateShortNameFromFullName(fullName);
        $form.find('[name="ShortName"]').val(shortName);
    }

</script>