

@model PerfectWebERP.Models.CustomerTicketsModel.Customerlist

<style>
    .Custominvalid {
        display: none;
        width: 100%;
        margin-top: 0.25rem;
        font-size: 80%;
        color: #FF6746;
    }

    /*#ProductionReportList thead th {
        text-transform: unset;
        padding-bottom: 0px !important;
        padding-top: 0px !important;
    }*/
    .btn-export {
        /*//height:10px;*/
        background-color: #2aa2ad;
        color: white;
    }

    .div-export {
        float: right;
        margin-left: 3px;
        /*background-color:red;*/
        height: 41px;
        /*// width:90px;*/
    }

        .div-export:hover {
            color: white !important;
        }

    .btn-export :hover {
        color: white !important;
    }

    #Accountdetails {
        background-color: #CFD8DC;
    }

    #Accountdetailsids {
        margin-bottom: 0px;
    }

    #Accountdetails {
        background-color: #CFD8DC;
    }

    #Gridtransactiondetailsid > thead {
        position: sticky;
        top: 0;
    }

    #R_DTable > thead {
        position: sticky;
        top: 0;
    }

    .tb1 {
        display: none;
    }

    #Accountdetailsids {
        margin-bottom: 0px;
    }       
</style>
<div class="card ">

    <div class="card-header">
        @*<h4 class="card-title col-12">Lead Reports</h4>*@
        <div class="col-xl-4">
            <h4 class="card-title col-12">Lead Reports</h4>
        </div>
        <div class="col-xl-7 text-right">
            <button id="refresh" type="button" class="btn  btn-primary btn-sm" name="Search" perfect-css="button" onclick="fn_Customer_initialLoad()" title="To Refresh"><i class="fa fa-refresh"></i></button>
            <button id="addcompany-jq-addnewuser" type="button" class="btn  btn-primary btn-sm" name="Search" perfect-css="button" onclick="fn_showFiltersearchs()" title="To Filter"><i class="fa fa-filter"></i></button>
            @*<div class="dropdown div-export" id="exppdf" style="display: none;">
                    <button class="btn  dropdown-toggle btn-sm btn-export" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span><i class="fa fa-file-o" style="font-size:16px"></i> </span>
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        <a class="dropdown-item" href="#" onclick="generatePdf(this)">PDF</a>
                        <a class="dropdown-item" href="#" onclick="onExell()">EXCEL </a>
                    </div>
                </div>*@
        </div>
        <div class="col-xl-1 text-right">
            <div class="dropdown div-export" id="exppdf" style="display:none">

                <button class="btn  dropdown-toggle btn-sm btn-export" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span><i class="fa fa-file-o" style="font-size:16px"></i> </span>

                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item" href="#" onclick="generatePdf(this)">PDF</a>
                    <a class="dropdown-item" href="#" onclick="onExell(this)">EXCEL </a>

                </div>
            </div>
        </div>

    </div>
    <div class="card-body Customer_rp">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onformsuccess="AccountsReportInitialLoad" novalidate="novalidate">
            <div class="CustomerReportfilters">
                <div class="">
                    @*@Html.AntiForgeryToken()*@
                    <div class="row">

                        <div class="col-sm-6">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Report Name</span>
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-sm-8 ">
                                    <input type="hidden" id="Companyname" name="Companyname" class="form-control" value="@Model.CompName" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <input type="hidden" id="Admin" name="Admin" class="form-control" value="@ViewBag.Admin" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <input type="hidden" id="Manager" name="Manager" class="form-control" value="@ViewBag.Manager" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <select class="form-control perfectValidate_numeric Action" id="ID_Report" name="ID_Report" data-id="ID_Report-error" perfect-class="formGroupControl" onchange="bindReportField(this)" perfect-ctype="select" perfect-css="select">
                                        <option value="0">Please select</option>
                                        @*<option value="1">Customer Ticket Report</option>*@
                                        <option value="1">Action List</option>
                                        <option value="4">Status List</option>
                                        <option value="2">Follow Up List</option>
                                        <option value="5">New  List</option>
                                        <option value="3">Lead Profile</option>
                                        <option value="6">Product-wise Lead List</option>
                                        <option value="7">Product-wise Lead Closed List</option>
                                        @*<option value="8">Lead Summary</option>*@
                                    </select>

                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6 divBranch">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Branch</span>
                                    <input type="hidden" name="FK_BranchMode" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />

                                </label>
                                <div class="col-sm-8">
                                    <select class="form-control perfectValidate_string_nm" id="BranchID" name="BranchID" perfect-selectButton="Branch" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">

                                        <option value="">Please Select</option>

                                        @if (!(Model.BranchList is null))
                                        {
                                            foreach (var branchList in Model.BranchList)
                                            {
                                                <option value="@branchList.BranchID">@branchList.Branch</option>
                                            }

                                        }

                                    </select>
                                </div>
                            </div>
                        </div>
                        @*<div class="col-sm-6 DivLeadNo">
            <div class="form-group row" perfect-class="formGroup">
                <label class="col-sm-4 col-form-label">
                    <span perfect-class="formGroupLabel">Lead No</span>
                    <span class="text-danger">*</span>
                </label>
                <div class="col-sm-8">
                    <div class="input-group">
                        <input type="number" min="0" class="form-control perfectValidate_numeric Ledger" placeholder="" name="LeadNo" data-id="LeadNo-error" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                    </div>
                </div>
            </div>
        </div>*@
                        <div class="col-sm-6 DivLeadNo">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Lead No</span>


                                </label>
                                <div class="col-sm-8">
                                    <div class="input-group">

                                        <input type="text" class="form-control perfectValidate_numeric Ledger" name="Lead" data-id="LeadNo-error" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" placeholder="Select Lead Number" disabled />
                                        <input type="hidden" name="LeadNo" class="form-control perfectValidate_numeric Ledger" data-id="LeadNo-error" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                        <div class="input-group-append">
                                            <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,30,'Lead Number List',[])" Criterea1=BranchID Criterea2="0" BindName="Lead" BindVal="LeadNo"></button>
                                        </div>


                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6 DivFromDate">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">From Date</span>
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-sm-8">
                                    <input type="date" class="form-control perfectValidate_date FromDate" id="FromDate" onchange="checkLimit(this)" data-id="FromDate-error" name="FromDate" perfect-class="formGroupControl" max="2050-01-01" perfect-ctype="date" perfect-css="date">
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6 DivToDate">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">To Date</span>
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-sm-8">
                                    <input type="date" class="form-control perfectValidate_date ToDate" id="ToDate" data-id="ToDate-error" name="ToDate" perfect-class="formGroupControl" max="2050-01-01" perfect-ctype="date" perfect-css="date" onchange="checkLimit(event)">
                                    <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                                </div>
                            </div>
                        </div>




                        @*<div class="col-sm-6 DivEmployeeName">
            <div class="form-group row" perfect-class="formGroup">
                <label class="col-sm-4 col-form-label">
                    <span perfect-class="formGroupLabel">Employee Name</span>


                </label>
                <div class="col-sm-8">
                    <div class="input-group">


                        <input type="text" class="form-control" name="Employee" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" placeholder="Select Employee" disabled />
                        <input type="hidden" name="Employee_ID" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                        <div class="input-group-append">
                            <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,148,'Employee List',[])" Criterea1="BranchID" Criterea2="0" BindName="Employee" BindVal="Employee_ID"></button>
                        </div>


                    </div>
                </div>
            </div>
        </div>*@

                        @if (ViewBag.Manager || ViewBag.Admin)
                        {
                            <div class="col-sm-6 DivEmployeeName">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label rptfilterfields">
                                        <span perfect-class="formGroupLabel">Employee Name</span>

                                    </label>
                                    <div class="col-sm-8">
                                        <div class="input-group">
                                            <input type="text" class="form-control rptfilters" name="Employee" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" placeholder="Select Employee" disabled />
                                            <input type="hidden" name="Employee_ID" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                            <div class="input-group-append">

                                                <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,148,'Employee List',[])" Criterea1="BranchID" Criterea2="0" BindName="Employee" BindVal="Employee_ID"></button>

                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        }



                        else
                        {
                            <div class="col-sm-6 DivEmployeeName">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label rptfilterfields">
                                        <span perfect-class="formGroupLabel">Employee Name</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <div class="input-group">

                                            <input type="text" class="form-control rptfilters" name="Employee" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" placeholder="Select Employee" value='@ViewBag.Employee' disabled />
                                            <input type="hidden" name="Employee_ID" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" value='@ViewBag.FK_Employee' />

                                            <div class="input-group-append">

                                                <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,148,'Employee List',[])" Criterea1="BranchID" Criterea2="0" BindName="Employee" BindVal="Employee_ID" disabled></button>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                        <div class="col-sm-6 DivCollectedbyName">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Referred By</span>


                                </label>
                                <div class="col-sm-8">
                                    <div class="input-group">

                                        <input type="text" class="form-control" name="Collectedby" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" placeholder="Select Referred By" disabled />
                                        <input type="hidden" name="Collectedby_ID" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                        <div class="input-group-append">
                                            <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,148,'Employee List',[])" Criterea1="BranchID" Criterea2="0" BindName="Collectedby" BindVal="Collectedby_ID"></button>
                                        </div>


                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6 DivCategory">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Category</span>

                                </label>
                                <div class="col-sm-8">
                                    <select class="form-control" name="FK_Category" id="FK_Category" perfect-class="formGroupControl" placeholder="Select Catogory" perfect-ctype="select" perfect-css="select">

                                        <option value="">Please select</option>
                                        @if (!(Model.CategoryList is null))
                                        {
                                            foreach (var category in Model.CategoryList)
                                            {

                                                <option value="@category.ID_Catg">@category.CatgName</option>

                                            }
                                        }
                                    </select>

                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6 DivProduct">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Product</span>

                                </label>
                                <div class="col-sm-8">

                                    @*<select class="form-control " id="ID_Product" name="ID_Product" perfect-selectButton="ProdName" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">

                        <option value="">Please Select </option>

                        @if (!(Model.ProductList is null))
                        {
                            foreach (var producList in Model.ProductList)
                            {
                                <option value="@producList.ID_Product">@producList.ProdName</option>
                            }

                        }

                    </select>*@
                                    <div class="input-group">
                                        <input type="text" class="form-control" id="ProductName" name="ProductName" perfect-class="formGroupControl" placeholder=" Select Product" perfect-ctype="input" perfect-css="input" disabled />
                                        <input type="hidden" name="ID_Product" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                        <div class="input-group-append">
                                            <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,'@ViewBag.ProductMode','Product List',['FK_Category','Catogory'])" Criterea1="FK_Category" Criterea2="0" BindName="ProductName" BindVal="ID_Product"></button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6 DivCollectedbyName">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Area</span>


                                </label>
                                <div class="col-sm-8">
                                    <div class="input-group">

                                        <input type="text" class="form-control" name="Area" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" placeholder="Select Area" disabled />
                                        <input type="hidden" name="Area_ID" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                        <div class="input-group-append">
                                            <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,14,'Area List',[])" Criterea1="0" Criterea2="0" BindName="Area" BindVal="Area_ID"></button>
                                        </div>


                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6 DivFollowUp">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Follow up Action</span>

                                </label>
                                <div class="col-sm-8">
                                    <select class="form-control" id="FK_NetAction" name="FK_NetAction" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                        <option value="">Please select</option>
                                        @if (!(Model.NextActionList is null))
                                        {
                                            foreach (var NextAction in Model.NextActionList)
                                            {
                                                <option value="@NextAction.ID_NextAction">@NextAction.NxtActnName</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6 DivFollowUpType">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Follow up Type</span>

                                </label>
                                <div class="col-sm-8">
                                    <select class="form-control" id="FK_ActionType" name="FK_ActionType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                        <option value="">Please select</option>
                                        @if (!(Model.Actntyplists is null))
                                        {
                                            foreach (var Action in Model.Actntyplists)
                                            {
                                                <option value="@Action.ID_ActionType">@Action.ActnTypeName</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6 DivLeadType">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Priority</span>

                                </label>
                                <div class="col-sm-8 ">
                                    <select class="form-control " id="FK_Priority" name="FK_Priority" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                        <option value="">Please select</option>
                                        <option value="1">Hot</option>
                                        <option value="2">Warm</option>
                                        <option value="3">Cold</option>

                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6 DivStatus">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Status</span>

                                </label>
                                <div class="col-sm-8">

                                    <select class="form-control" id="Status" name="Status" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">

                                        <option value="">Please select</option>
                                        @if (!(Model.StatusList is null))
                                        {
                                            foreach (var Status in Model.StatusList)
                                            {
                                                <option value="@Status.ID_Mode">@Status.ModeName</option>
                                            }
                                        }

                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6" style="display:none">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Report Format</span>
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-sm-8">
                                    <select class="form-control" id="Rptype" name="Rptype" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">

                                        <option value="">Please Select</option>
                                        <option value="1" selected>PDF</option>
                                        <option value="2">Excel</option>

                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6 DivCriteria">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Grouping</span>
                                    <span class="text-danger"></span>
                                </label>
                                <div class="col-sm-8 ">

                                    <select class="form-control" id="Criteria" name="Criteria" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                        <option value="">Please select</option>
                                        @*<option value="1">Customer Ticket Report</option>*@
                                        <option value="1">Branch</option>
                                        <option value="2">Priority</option>
                                        <option value="3">Status</option>
                                        <option value="4">Product</option>
                                        <option value="5">Employee</option>
                                        <option value="6">Referred By</option>
                                        <option value="7">Category</option>
                                        <option value="8">Area</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6 DivCriteriaProdLead">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Grouping</span>
                                    <span class="text-danger"></span>
                                </label>
                                <div class="col-sm-8 ">

                                    <select class="form-control" id="ProdRptCriteria" name="ProdRptCriteria" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                        <option value="">Please select</option>



                                        <option value="1">Category</option>

                                        <option value="2">Employee</option>
                                        <option value="3">Product Type</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        @*<div class="col-sm-6">
            <div class="form-group row" perfect-class="formGroup">
                <label class="col-sm-4 col-form-label">
                    <span perfect-class="formGroupLabel">Employee Name</span>
                    <span class="text-danger">*</span>
                </label>
                <div class="col-sm-8">
                    <div class="input-group">
                        <input type="text" class="form-control perfectValidate_string" name="Employeename" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                        <input type="hidden" id="EmployeeID" name="EmployeeID" class="perfectValidate_numeric" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                        <div class="input-group-append">
                            <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getEmployee(this)"></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@


                        @*<div class="col-sm-6" id="sts">
            <div class="form-group row" perfect-class="formGroup">
                <label class="col-sm-4 col-form-label">
                    <span perfect-class="formGroupLabel">Status</span>

                </label>
                <div class="col-sm-8">
                    <select class="form-control " id="Status" name="Status" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">

                        <option value="">Please select</option>
                        @if (!(Model.StatusList is null))
                        {
                            foreach (var Status in Model.StatusList)
                            {
                                <option value="@Status.ID_Mode">@Status.ModeName</option>
                            }
                        }

                    </select>
                </div>
            </div>
        </div>*@
                        <div class="col-sm-6" style="display:none">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Report Field Type</span>
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-sm-8">
                                    <select class="form-control " id="RpFieldptype" name="RpFieldptype" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">

                                        <option value="2">HeaderLogo + WaterMark + Footer </option>
                                        <option value="3">WaterMark</option>
                                        <option value="4">HeaderLogo + Footer</option>

                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6 DivProductType">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Product Type</span>

                                </label>
                                <div class="col-sm-8 ">
                                    <select class="form-control " id="ProductType" name="ProductType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                        <option value="">Please select</option>
                                        <option value="1">Project</option>
                                        <option value="2">Product</option>


                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6 DivSummaryType">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Summary Type</span>

                                </label>
                                <div class="col-sm-8">
                                    <select class="form-control rptfilters" id="SummMode" name="SummMode" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">

                                        @if (!(Model.summaryLists is null))
                                        {
                                            foreach (var Action in Model.summaryLists)
                                            {
                                                <option value="@Action.ID_Mode">@Action.ModeName</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>

                    </div>


                </div>
                <div class="card-footer text-right" perfect-class="formFooter">
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="ShowReport(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Show</button>
                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this);" name="reset">Clear</button>
                </div>
            </div>


            @*<button type="button" class="btn btn-nt" id="exppdf" style="display:none; float:right;" onclick="generatePdf()" title="Download PDF"><i class="fa fa-file-pdf-o" aria-hidden="true" style="font-size:28px"></i></button>*@


            <br />

            <div class="tb1" id="divLedgerHead">
                <table class="table table-responsive-md" id="Accountdetailsids">
                    <thead class="thead btn-primary" id="ReturnHead">
                        @*<tr>
                                <th scope="col" style="text-align:left" colspan="2">Account Details</th>
                                <th scope="col" style="text-align:left" colspan="2">Address Details</th>
                            </tr>*@
                    <tbody id="Accountdetails">
                        <tr id="0">
                            <td style="text-align:center;" colspan="9">No Records..</td>
                        </tr>
                    </tbody>
                </table>

            </div>

            <div id="divReportSection">
            </div>


            @*<div id="ReportName" class="col-12" style="display:none"></div>
                <div id="CustomerReportTable">

                </div>
                <div class="tab-pane fade" id="Factoryid">
                    <br />
                    <div class="row">

                        <div class="table-responsive col-md-12 SearchLoadDiv" name="SearchLoadDiv" id="test7"></div>

                    </div>
                </div>*@
        </form>
    </div>


</div>
<script>
    head = [];
    var ptableData;
    var item = [];
    var groupby = "";

    var product;
    var stages = "";
    var status = "";
    var grpby = "";
    var jabNo = "";
    var AsDate = "";
    var Material = "";
    var Data
    var comCategory;
    var reportdetaildata;
    var ptableData2 = {};

    function checkLimit(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let Fromdate = $thisForm.find('[name="FromDate"]').val();
        let Todate = $thisForm.find('[name="ToDate"]').val();

        Fromdate = new Date(Fromdate);
        Fromdate.setHours(0, 0, 0, 0)

        Todate = new Date(Todate);
        Todate.setHours(0, 0, 0, 0)

        if (Todate < Fromdate) {
            console.log('inside limit check if')
            $thisForm.find('[name="ToDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('To Date should be greater than From Date')
            return false;
        }
        else {
            console.log('inside limit check else')
            $thisForm.find('[name="ToDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
            return true;
        }

    }
    function bindReportField(ele) {


        let $thisForm = $(ele).closest('[perfect-class="form"]');



        $thisForm.find('[name="FromDate"]').val(moment().format('YYYY-MM-DD'));
        $thisForm.find('[name="ToDate"]').val(moment().format('YYYY-MM-DD'));

           let user = '@ViewBag.Admin';
        let manager = '@ViewBag.Manager';
        if (user == 'True' || manager == 'True') {
            $thisForm.find('[name="Employee"]').val('');
            $thisForm.find('[name="Employee_ID"]').val('');
        }
        else
        {
            $thisForm.find('[name="Employee"]').val('@ViewBag.Employee');
            $thisForm.find('[name="Employee_ID"]').val('@ViewBag.FK_Employee');
        }
    
        $thisForm.find('[name="FK_Category"]').val("");
        $thisForm.find('[name="Area"]').val("");
        $thisForm.find('[name="Area_ID"]').val("");
        $thisForm.find('[name="FK_ActionType"]').val("");
        $thisForm.find('[name="Status"]').val("");
      
        $thisForm.find('[name="Collectedby"]').val("");
        $thisForm.find('[name="Collectedby_ID"]').val("");
        $thisForm.find('[name="ProductName"]').val("");
        $thisForm.find('[name="ID_Product"]').val("");
        $thisForm.find('[name="FK_NetAction"]').val("");
        $thisForm.find('[name="FK_Priority"]').val("");
        $thisForm.find('[name="Criteria"]').val("");
        $thisForm.find('[name="ProdRptCriteria"]').val("");


        $('.divBranch').show();
        $('#divLedgerHead').hide();
        $("#divReportSection").html("");
        if ($("#ID_Report").val() == 3) {
            $('.DivFromDate').hide();
            $('.DivToDate').hide();
            $('.DivEmployeeName').hide();
            $('.DivProduct').hide();
            $('.DivLeadType').hide();
            $('.DivFollowUp').hide();
            $('.DivFollowUpType').hide();
            $('.DivCriteria').hide();
            $('.DivCriteriaProdLead').hide();
            $('.DivStatus').hide();
            $('.DivLeadNo').show();
            $('.DivCollectedbyName').hide();
            $('.DivCategory').hide();
            $('.DivProductType').hide();
            $('#divLedgerHead').show();
            $('.DivSummaryType').hide();


        }
        else if ($("#ID_Report").val() == 4) {
            $('.DivFromDate').show();
            $('.DivToDate').show();
            $('.DivEmployeeName').show();
            $('.DivProduct').show();
            $('.DivLeadType').show();
            $('.DivStatus').show();
            $('.DivCriteria').show();
            $('.DivFollowUp').hide();
            $('.DivFollowUpType').hide();
            $('.DivLeadNo').hide();
            $('.DivCollectedbyName').show();
            $('.DivCategory').show(); $('.DivProductType').hide();

            $('.DivCriteriaProdLead').hide();
            $('.DivSummaryType').hide();
        }
        else if ($("#ID_Report").val() == 5) {
            $('.DivFromDate').show();
            $('.DivToDate').show();
            $('.DivProduct').show();
            $('.DivEmployeeName').show();
            $('.DivCategory').show(); $('.DivProductType').hide();
            $('.DivStatus').hide();
            $('.DivCriteriaProdLead').hide();
            $('.DivSummaryType').hide();
        }
        else if ($("#ID_Report").val() == 6 || $("#ID_Report").val() == 7) {
            $('.DivFromDate').show();
            $('.DivToDate').show();
            $('.DivEmployeeName').show();
            $('.DivProduct').show();
            $('.DivLeadType').hide();
            $('.DivCriteria').hide();
            $('.DivStatus').hide();
            $('.DivFollowUp').hide();
            $('.DivFollowUpType').hide();
            $('.DivLeadNo').hide();
            $('.DivCollectedbyName').hide();
            $('.DivCategory').show();
            $('.DivProductType').show();

            $('.DivCriteriaProdLead').show();
            $('.divBranch').hide();
            $('.DivSummaryType').hide();
        }
        else if ($("#ID_Report").val() == 8) {
            $('.DivFromDate').show();
            $('.DivToDate').show();
            $('.DivEmployeeName').show();
            $('.DivProduct').show();
            $('.DivCategory').show();
            $('.divBranch').show();
            $('.DivLeadType').hide();
            $('.DivFollowUp').hide();
            $('.DivFollowUpType').hide();
            $('.DivCriteria').hide();
            $('.DivCriteriaProdLead').hide();
            $('.DivStatus').hide();
            $('.DivLeadNo').hide();
            $('.DivCollectedbyName').hide
            $('.DivProductType').hide();
            $('#divLedgerHead').hide();
            $('.DivCollectedbyName').hide();
            $('.DivSummaryType').show();
        }
        else {
            $('.DivFromDate').show();
            $('.DivToDate').show();
            $('.DivEmployeeName').show();
            $('.DivProduct').show();
            $('.DivLeadType').show();
            $('.DivFollowUp').show();
            $('.DivFollowUpType').show();
            $('.DivStatus').hide();
            $('.DivCriteria').show();
            $('.DivLeadNo').hide();
            $('.DivCollectedbyName').show();
            $('.DivCategory').show(); $('.DivProductType').hide();
            $('.DivSummaryType').hide();

            $('.DivCriteriaProdLead').hide();
        }
    }
</script>
<script src="~/Scripts/jspdf.min.js"></script>
<script src="~/Scripts/jspdf.plugin.autotable.min.js"></script>
<script src="~/Scripts/exportFile.js"></script>
<script>


    function ShowReport(els) {
        let $thisForm = $(els).closest('[perfect-class="form"]');
        var _html = " <div id='divLeadMngmntReportList'>" +
            " <table id = 'LeadMngmntReportList' class='table table-striped dt-responsive nowrap' style = 'width:100%'>" +
            " <thead class='thead-primary' id='trhd'></thead></table></div>";
        $("#divReportSection").html(_html);

        if ($('select[name="ID_Report"] option:selected').val() != "3") {

            $thisForm.find('[name=Lead]').removeClass("perfectValidate_numeric");
            $thisForm.find('[name=LeadNo]').removeClass("perfectValidate_numeric");
        } else {
            $thisForm.find('[name=FromDate]').removeClass("perfectValidate_date");
            $thisForm.find('[name=FromDate]').removeClass("perfectValidate_date");
        }
        var critria_ = "";
        if ($('select[name="ID_Report"] option:selected').val() == "6" || $('select[name="ID_Report"] option:selected').val() == "7") {

            critria_ = $thisForm.find('[name=ProdRptCriteria]').val();
        }
        else {
            critria_ = $thisForm.find('[name=Criteria]').val();
        }
        if (checkLimit(els)) {
        if ($thisForm.valid()) {

            let columnCount = 0;
            var inputData = ''

            if ($('select[name="ID_Report"] option:selected').val() == "8") {

                inputData = {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    ReportMode: $('select[name="ID_Report"] option:selected').val(),
                    FromDate: $('input[name="FromDate"]').val(),
                    ToDate: $('input[name="ToDate"]').val(),
                    FK_Product: $thisForm.find('[name="ID_Product"]').val(),
                    FK_Branch: $('select[name="BranchID"] option:selected').val(),
                    FK_Employee: $('input[name="Employee_ID"]').val(),
                    FK_Priority: $('#FK_Priority').val(),
                    FollowUpAction: $('#FK_NetAction').val(),
                    FollowUpType: $('#FK_ActionType').val(),
                    FK_CollectedBy: $thisForm.find('[name="Collectedby_ID"]').val(),
                    LeadNo: $thisForm.find('[name="LeadNo"]').val() == "" ? "0" : $thisForm.find('[name="LeadNo"]').val(),
                    Category: $thisForm.find('[name="FK_Category"]').val(),
                    FK_Area: $('select[name="SummMode"] option:selected').val(),
                    Status: $('#Status').val(),
                    ProductType: $('#ProductType').val(),
                    Criteria: critria_,
                };

            }

            else {


                 inputData = {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    //EmployeeID: $('input[name="EmployeeID"]').val(),
                    //ID_Report: $('select[name="ID_Report"] option:selected').val(),
                    //BranchID: $('select[name="BranchID"] option:selected').val(),
                    //FromDate: $('input[name="FromDate"]').val(),
                    //ID_Product: $thisForm.find('[name="ID_Product"]').val(),
                    //FK_Priority:$('#FK_Priority').val(),
                    //ToDate: $('input[name="ToDate"]').val(),
                    //FK_NetAction:$('#FK_NetAction').val(),
                    //followuptype:$('#FK_ActionType').val(),
                    //Companyname:$thisForm.find('[name="Companyname"]').val(),
                    //Collectedby_ID:$thisForm.find('[name="Collectedby_ID"]').val(),
                    //FK_Category:$thisForm.find('[name="FK_Category"]').val(),
                    //Area_ID:$thisForm.find('[name="Area_ID"]').val(),
                    //LeadNo:$thisForm.find('[name="LeadNo"]').val() == "" ? "0" : $thisForm.find('[name="LeadNo"]').val(),
                    //Criteria:$('#Criteria').val(),
                    //Status:$('#Status').val(),
                    //TransMode: 'CTRT',
                    //'pageSize': 15,
                    //'pageIndex': 0
                    ReportMode: $('select[name="ID_Report"] option:selected').val(),
                    FromDate: $('input[name="FromDate"]').val(),
                    ToDate: $('input[name="ToDate"]').val(),
                    FK_Product: $thisForm.find('[name="ID_Product"]').val(),
                    FK_Branch: $('select[name="BranchID"] option:selected').val(),
                    FK_Employee: $('input[name="Employee_ID"]').val(),
                    FK_Priority: $('#FK_Priority').val(),
                    FollowUpAction: $('#FK_NetAction').val(),
                    FollowUpType: $('#FK_ActionType').val(),
                    FK_CollectedBy: $thisForm.find('[name="Collectedby_ID"]').val(),
                    LeadNo: $thisForm.find('[name="LeadNo"]').val() == "" ? "0" : $thisForm.find('[name="LeadNo"]').val(),
                    Category: $thisForm.find('[name="FK_Category"]').val(),
                    FK_Area: $thisForm.find('[name="Area_ID"]').val(),
                    Status: $('#Status').val(),
                    ProductType: $('#ProductType').val(),
                    Criteria: critria_,
                };

            }




                let pageUrl = '@Url.Action("GetReportData", "CustomerTickets")';
                $.ajax({
                    url: pageUrl,
                    type: "POST",
                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                    success: function (ajaxOutput) {
                        debugger
                        Data = ajaxOutput.Data;
                        var _gridColumns, _gridgroupby, _gridOrder = [];
                        var hidecol = [];
                        var type = $('select[name="ID_Report"] option:selected').val();
                        var sumType = $('select[name="SummMode"] option:selected').val();
                        $('#divLeadMngmntReportList').show();
                        $("#LeadMngmntReportList").removeClass("dataTable");
                        if (ajaxOutput.Data != null) {
                            comCategory = ajaxOutput.Data[0].ComCategory;
                            debugger
                            if (type.trim() == "1") {

                                if (ajaxOutput.Data[0].ComCategory == 2) {
                                    _gridColumns = [{ title: "Sl No.", "data": null },
                                    { title: "Lead No.", "data": "LeadNo" },
                                    { title: "Lead Date ", "data": "LeadDate" },
                                    { title: "Customer", "data": "Customer" },
                                    { title: "Destination", "data": "Product" },
                                    { title: "Next Action", "data": "NextAction" },
                                        { title: "Action Taken Date", "data": "NextActionDate" },
                                    { title: "FollowUp Method", "data": "FollowUpMethod" },
                                    { title: "Assigned To", "data": "AssignedTo" },
                                    { title: "Due Days", "data": "DueDays", className: "text-right" },
                                    { title: "Branch", "data": "Branch" },
                                    { title: "Status", "data": "Status" },
                                    { title: "Priority", "data": "Priority" },
                                    { title: "Remarks", "data": "Remarks" },
                                    { title: "Referred By", "data": "LgCollectedBy" },
                                    { title: "Category", "data": "Category" },
                                    { title: "Area", "data": "Area" },
                                    { title: "Mobile", "data": "Mobile" },]
                                }
                                else {
                                    _gridColumns = [

                                        { title: "Sl No.", "data": null },
                                        { title: "Lead No.", "data": "LeadNo" },
                                        { title: "Lead Date ", "data": "LeadDate" },
                                        { title: "Customer", "data": "Customer" },
                                        { title: "Product", "data": "Product" },
                                        { title: "Next Action", "data": "NextAction" },
                                        { title: "Action Taken Date", "data": "NextActionDate" },
                                        { title: "FollowUp Method", "data": "FollowUpMethod" },
                                        { title: "Assigned To", "data": "AssignedTo" },
                                        { title: "Due Days", "data": "DueDays", className: "text-right" },
                                        { title: "criteria", "data": "criteria" },
                                        { title: "Branch", "data": "Branch" },
                                        { title: "Status", "data": "Status" },
                                        { title: "Priority", "data": "Priority" },
                                        { title: "Remarks", "data": "Remarks" },
                                        { title: "Referred By", "data": "LgCollectedBy" },
                                        { title: "Category", "data": "Category" },
                                        { title: "Area", "data": "Area" },
                                        { title: "Mobile", "data": "Mobile" },


                                    ];
                                }
                                columnCount = 18;
                                _gridgroupby = 1;
                                //hidecol = [_gridgroupby];//if no group by then set hidecol=[];
                                _gridOrder = [0];//ORDER columnS BY INDEX

                            }
                            else if (type.trim() == "4") {
                                if (ajaxOutput.Data[0].ComCategory == 2) {
                                    _gridColumns = [

                                        { title: "Sl No.", "data": null },
                                        { title: "Lead No.", "data": "LeadNo" },
                                        { title: "Lead Date ", "data": "LeadDate" },
                                        { title: "Customer", "data": "Customer" },
                                        { title: "Destination", "data": "Product" },
                                        { title: "Next Action", "data": "NextAction" },
                                        { title: "Action Taken Date", "data": "NextActionDate" },
                                        { title: "Follow Up Method", "data": "FollowUpMethod" },
                                        { title: "Assigned To", "data": "AssignedTo" },
                                        { title: "Due Days", "data": "DueDays", className: "text-right" },
                                        { title: "Completed Date", "data": "CompletedDate" },
                                        { title: "Status", "data": "Status" },
                                        { title: "Branch", "data": "Branch" },
                                        { title: "Priority", "data": "Priority" },
                                        { title: "Remarks", "data": "Remarks" },
                                        { title: "Referred By", "data": "LgCollectedBy" },
                                        { title: "Area", "data": "Area" },
                                        { title: "Mobile", "data": "Mobile" },


                                    ];
                                }
                                else {
                                    _gridColumns = [

                                        { title: "Sl No.", "data": null },
                                        { title: "Lead No.", "data": "LeadNo" },
                                        { title: "Lead Date ", "data": "LeadDate" },
                                        { title: "Customer", "data": "Customer" },
                                        { title: "Product", "data": "Product" },
                                        { title: "Next Action", "data": "NextAction" },
                                        { title: "Action Taken Date", "data": "NextActionDate" },
                                        { title: "Follow Up Method", "data": "FollowUpMethod" },
                                        { title: "Assigned To", "data": "AssignedTo" },
                                        { title: "Due Days", "data": "DueDays", className: "text-right" },
                                        { title: "Completed Date", "data": "CompletedDate" },
                                        { title: "Status", "data": "Status" },
                                        { title: "Branch", "data": "Branch" },
                                        { title: "Priority", "data": "Priority" },
                                        { title: "Remarks", "data": "Remarks" },
                                        { title: "Referred By", "data": "LgCollectedBy" },
                                        { title: "Area", "data": "Area" },
                                        { title: "Mobile", "data": "Mobile" },


                                    ];
                                }
                                columnCount = 17;
                                _gridgroupby = 1;
                                hidecol = [_gridgroupby];//if no group by then set hidecol=[];
                                _gridOrder = [0];//ORDER columnS BY INDEX

                            }
                            else if (type.trim() == "2") {
                                if (ajaxOutput.Data[0].ComCategory == 2) {
                                    _gridColumns = [


                                        { title: "Sl No.", "data": null },
                                        { title: "Lead No.", "data": "LeadNo" },
                                        { title: "Lead Date ", "data": "LeadDate" },
                                        { title: "Customer", "data": "Customer" },
                                        { title: "Destination", "data": "Product" },
                                        { title: "Next Action", "data": "NextAction" },
                                        { title: "Action Taken Date", "data": "NextActionDate" },
                                        { title: "FollowUp Method", "data": "FollowUpMethod" },
                                        { title: "Assigned To", "data": "AssignedTo" },
                                        { title: "Completed Date", "data": "CompletedDate" },
                                        { title: "Due Days", "data": "DueDays", className: "text-right" },
                                        { title: "Status", "data": "Status" },
                                        { title: "Branch", "data": "Branch" },
                                        { title: "Priority", "data": "Priority" },
                                        { title: "Remarks", "data": "Remarks" },
                                        { title: "Referred By", "data": "LgCollectedBy" },
                                        { title: "Category", "data": "Category" },
                                        { title: "Area", "data": "Area" },
                                        { title: "Mobile", "data": "Mobile" },


                                    ];
                                }
                                else {
                                    _gridColumns =
                                        [
                                            { title: "Sl No.", "data": null },
                                            { title: "Lead No.", "data": "LeadNo" },
                                            { title: "Lead Date ", "data": "LeadDate" },
                                            { title: "Customer", "data": "Customer" },
                                            { title: "Product", "data": "Product" },
                                            { title: "Next Action", "data": "NextAction" },
                                            { title: "Action Taken Date", "data": "NextActionDate" },
                                            { title: "FollowUp Method", "data": "FollowUpMethod" },
                                            { title: "Assigned To", "data": "AssignedTo" },
                                            { title: "Completed Date", "data": "CompletedDate" },
                                            { title: "Due Days", "data": "DueDays", className: "text-right" },
                                            { title: "Status", "data": "Status" },
                                            { title: "Branch", "data": "Branch" },
                                            { title: "Priority", "data": "Priority" },
                                            { title: "Remarks", "data": "Remarks" },
                                            { title: "Referred By", "data": "LgCollectedBy" },
                                            { title: "Category", "data": "Category" },
                                            { title: "Area", "data": "Area" },
                                            { title: "Mobile", "data": "Mobile" },


                                        ];
                                }
                                columnCount = 17;





                                _gridgroupby = 1; hidecol = [_gridgroupby];
                                _gridOrder = [0];//ORDER columnS BY INDEX

                            }
                            else if (type.trim() == "5") {
                                if (ajaxOutput.Data[0].ComCategory == 2) {
                                    _gridColumns = [
                                        { title: "Sl No.", "data": null },
                                        { title: "Lead No.", "data": "LeadNo" },
                                        { title: "Lead Date", "data": "LeadDate" },
                                        { title: "Customer", "data": "Customer" },
                                        { title: "Destination", "data": "Product" },
                                        { title: "Referred By", "data": "CollectedBy" },
                                        { title: "Priority", "data": "Priority" },
                                        { title: "Current Status", "data": "CurrentStatus" },
                                        { title: "Branch", "data": "Branch" },
                                        { title: "Remarks", "data": "Remarks" },
                                        { title: "Area", "data": "Area" },
                                        { title: "Lead From", "data": "LeadFrom" },
                                        { title: "Lead By Name", "data": "LeadByName" },
                                        { title: "Assigned To", "data": "AssignedTo" },
                                        { title: "Mobile", "data": "Mobile" },

                                    ];
                                } else {
                                    _gridColumns = [
                                        { title: "Sl No.", "data": null },
                                        { title: "Lead No.", "data": "LeadNo" },
                                        { title: "Lead Date", "data": "LeadDate" },
                                        { title: "Customer", "data": "Customer" },
                                        { title: "Product", "data": "Product" },
                                        { title: "Referred By", "data": "CollectedBy" },
                                        { title: "Priority", "data": "Priority" },
                                        { title: "Current Status", "data": "CurrentStatus" },
                                        { title: "Branch", "data": "Branch" },
                                        { title: "Remarks", "data": "Remarks" },
                                        { title: "Area", "data": "Area" },
                                        { title: "Lead From", "data": "LeadFrom" },
                                        { title: "Lead By Name", "data": "LeadByName" },
                                        { title: "Assigned To", "data": "AssignedTo" },
                                        { title: "Mobile", "data": "Mobile" },

                                    ];
                                }
                                columnCount = 14;
                                _gridgroupby = 1; hidecol = [_gridgroupby];
                                _gridOrder = [0];//ORDER columnS BY INDEX

                            }
                            else if (type == "3") {


                                if (ajaxOutput.Process.IsProcess) {


                                    Data = ajaxOutput.Data;
                                    var CheckListHTML1 = '';

                                    if (ajaxOutput.Data.length > 0) {

                                        $('#divLedgerHead').show();
                                        reportdetaildata = ajaxOutput.detailsData;


                                        // GetAccountdetaildata = ajaxOutput.Data;
                                        $.each(ajaxOutput.detailsData, function (i, value) {



                                            CheckListHTML1 += "<tr>";
                                            CheckListHTML1 += "<th style='text-align:left;paddingright:20px'>" + "Cust No:" + "</th>";
                                            CheckListHTML1 += "<td  Class='jq_CusNumber_td' style='text-align:left;font-weight:bold'>" + value.CusNumber + "</td>";
                                            CheckListHTML1 += "<th  style=text-align:left;>" + "Name:" + "</th>";
                                            CheckListHTML1 += "<td  Class='jq_Name_td' style='text-align:left;font-weight:bold'>" + value.CusName + "</td>";
                                            CheckListHTML1 += "</tr>";
                                            CheckListHTML1 += "<tr>";
                                            CheckListHTML1 += "<th style=text-align:left;>" + "Address:" + "</td>";
                                            CheckListHTML1 += "<td  Class='jq_Address_td' style='text-align:left;font-weight:bold'>" + value.CusAddress + "</td>";
                                            CheckListHTML1 += "<th style=text-align:left;>" + "Mobile:" + "</th>";
                                            CheckListHTML1 += "<td  Class='jq_mobile_td' style='text-align:left;font-weight:bold'>" + value.Mobile + "</td>";
                                            CheckListHTML1 += "</tr>";
                                            CheckListHTML1 += "<tr>";
                                            CheckListHTML1 += "<th style=text-align:left;>" + "Email:" + "</td>";
                                            CheckListHTML1 += "<td  Class='jq_Email_td' style='text-align:left;font-weight:bold'>" + value.Email + "</td>";
                                            CheckListHTML1 += "<th style=text-align:left;>" + "LeadNo:" + "</th>";
                                            CheckListHTML1 += "<td  Class='jq_mobile_td' style='text-align:left;font-weight:bold'>" + value.LeadNo + "</td>";
                                            CheckListHTML1 += "</tr>";
                                            CheckListHTML1 += "<tr>";
                                            CheckListHTML1 += "<th style=text-align:left;>" + "Lead Date:" + "</td>";
                                            CheckListHTML1 += "<td  Class='jq_LeadDate_td' style='text-align:left;font-weight:bold'>" + value.LeadDate + "</td>";
                                            CheckListHTML1 += "<th style=text-align:left;>" + "Lead From:" + "</th>";
                                            CheckListHTML1 += "<td  Class='jq_mobile_td' style='text-align:left;font-weight:bold'>" + value.LeadFrom + "</td>";
                                            CheckListHTML1 += "</tr>";
                                            CheckListHTML1 += "<tr>";
                                            CheckListHTML1 += "<th style=text-align:left;>" + "Current Status:" + "</td>";
                                            CheckListHTML1 += "<td  Class='jq_CurrntStatus_td' style='text-align:left;font-weight:bold'>" + value.CurrentStatus + "</td>";
                                            CheckListHTML1 += "<th style=text-align:left;>" + "Referred By:" + "</th>";
                                            CheckListHTML1 += "<td  Class='jq_LgCollectedBy_td' style='text-align:left;font-weight:bold'>" + value.LgCollectedBy + "</td>";
                                            CheckListHTML1 += "</tr>";

                                        });

                                        $("#Accountdetails").html(CheckListHTML1)
                                        if (ajaxOutput.Data[0].ComCategory == 2) {
                                            _gridColumns = [


                                                { title: "Sl No.", "data": null },
                                                { title: "Destination", "data": "Product" },
                                                { title: "Action", "data": "Action" },
                                                { title: "Committed Date", "data": "CommittedDate" },
                                                { title: "Follow Up Through", "data": "FollowUpThrough" },
                                                { title: "Status", "data": "Status" },
                                                { title: "Completed Date", "data": "CompletedDate" },
                                                { title: "Assigned To", "data": "AssignedTo" },
                                                { title: "Due Days", "data": "DueDays", className: "text-right" },
                                                { title: "Remarks", "data": "Remarks" },
                                                { title: "Category", "data": "Category" },


                                            ];
                                        }
                                        else {
                                            _gridColumns =
                                                [
                                                    { title: "Sl No.", "data": null },

                                                    { title: "Product", "data": "Product" },
                                                    { title: "Action", "data": "Action" },
                                                    { title: "Committed Date", "data": "CommittedDate" },
                                                    { title: "Follow Up Through", "data": "FollowUpThrough" },
                                                    { title: "Status", "data": "Status" },
                                                    { title: "Completed Date", "data": "CompletedDate" },
                                                    { title: "Assigned To", "data": "AssignedTo" },
                                                    { title: "Due Days", "data": "DueDays", className: "text-right" },
                                                    { title: "Remarks", "data": "Remarks" },
                                                    { title: "Category", "data": "Category" },


                                                ];
                                        }
                                        columnCount = 17;





                                        _gridgroupby = 1; hidecol = [_gridgroupby];
                                        _gridOrder = [0];//ORDER columnS BY INDEX
                                    }
                                }
                            }
                            else if (type == "6" || type == "7") {
                                if (ajaxOutput.Data[0].ComCategory == 2) {

                                    _gridColumns = [
                                        { title: "Sl No.", "data": null },
                                        { title: "Category", "data": "Category" },
                                        { title: "Destination", "data": "Product" },
                                        { title: "Count", "data": "Count", className: "text-right" },

                                    ];
                                } else {
                                    _gridColumns = [
                                        { title: "Sl No.", "data": null },
                                        { title: "Category", "data": "Category" },
                                        { title: "Product", "data": "Product" },
                                        { title: "Count", "data": "Count", className: "text-right" },
                                        { title: "Criteria", "data": "Criteria" },

                                    ];
                                }
                                columnCount = 4;




                                _gridgroupby = 4; hidecol = [_gridgroupby];
                                _gridOrder = [0];//ORDER columnS BY INDEX
                            }

                            else if (type == "8") {
                                debugger

                                alert(sumType);


                                if (sumType == "0") {
                                    if (ajaxOutput.Data[0].ComCategory == 2) {

                                        _gridColumns = [
                                            { title: "Sl No.", "data": null },
                                            { title: "Employee", "data": "Employee" },
                                            { title: "Lead No", "data": "LeadNo" },
                                            { title: "Lead Date", "data": "LeadDate" },
                                            { title: "Category", "data": "Category" },
                                            { title: "Product", "data": "Product" },
                                            { title: "Quantity", "data": "Quantity", className: "text-right" },
                                            { title: "Next Action", "data": "Nextaction" },
                                            { title: "ActionType", "data": "ActionType" },
                                            { title: "Assigned To", "data": "AssignedTo" },
                                            { title: "Customer", "data": "Customer" },
                                            { title: "Lead Status On", "data": "LeadStatusOn" },
                                            { title: "Lead Status", "data": "LeadStatus" },

                                        ];
                                    } else {
                                        _gridColumns = [
                                            { title: "Sl No.", "data": null },
                                            { title: "Employee", "data": "Employee" },
                                            { title: "Lead No", "data": "LeadNo" },
                                            { title: "Lead Date", "data": "LeadDate" },
                                            { title: "Category", "data": "Category" },
                                            { title: "Product", "data": "Product" },
                                            { title: "Quantity", "data": "Quantity", className: "text-right" },
                                            { title: "Next Action", "data": "Nextaction" },
                                            { title: "ActionType", "data": "ActionType" },
                                            { title: "Assigned To", "data": "AssignedTo" },
                                            { title: "Customer", "data": "Customer" },
                                            { title: "Lead Status On", "data": "LeadStatusOn" },
                                            { title: "Lead Status", "data": "LeadStatus" },

                                        ];
                                    }


                                    columnCount = 12
                                    _gridgroupby = 12; hidecol = [_gridgroupby];
                                    _gridOrder = [0];//ORDER columnS BY INDEX

                                }

                                else if (sumType == "5") {

                                    if (ajaxOutput.Data[0].ComCategory == 2) {

                                        _gridColumns = [
                                            { title: "Sl No.", "data": null },
                                            { title: "Employee", "data": "Employee" },
                                            { title: "New", "data": "New", className: "text-right" },
                                            { title: "Opening", "data": "Opening", className: "text-right" },
                                            { title: "Closed", "data": "Closed", className: "text-right" },
                                            { title: "Lost", "data": "Lost", className: "text-right" },
                                            { title: "Balance", "data": "Balance", className: "text-right" },
                                           

                                        ];
                                    } else {
                                        _gridColumns = [
                                            { title: "Sl No.", "data": null },
                                            { title: "Employee", "data": "Employee" },
                                            { title: "New", "data": "New", className: "text-right" },
                                            { title: "Opening", "data": "Opening", className: "text-right" },
                                            { title: "Closed", "data": "Closed", className: "text-right" },
                                            { title: "Lost", "data": "Lost", className: "text-right" },
                                            { title: "Balance", "data": "Balance", className: "text-right" },
                                            

                                        ];
                                    }


                                    columnCount = 6
                                    _gridgroupby =6 ;
                                    //hidecol = [_gridgroupby];
                                    _gridOrder = [0];//ORDER columnS BY INDEX

                                }

                                else if (sumType == "4") {

                                    if (ajaxOutput.Data[0].ComCategory == 2) {

                                        _gridColumns = [
                                            { title: "Sl No.", "data": null },
                                            { title: "Product", "data": "Product" },
                                            { title: "New", "data": "New", className: "text-right" },
                                            { title: "Opening", "data": "Opening", className: "text-right" },
                                            { title: "Closed", "data": "Closed", className: "text-right" },
                                            { title: "Lost", "data": "Lost", className: "text-right" },
                                            { title: "Balance", "data": "Balance", className: "text-right" },
                                        ];
                                    } else {
                                        _gridColumns = [
                                            { title: "Sl No.", "data": null },
                                            { title: "Product", "data": "Product" },
                                            { title: "New", "data": "New", className: "text-right" },
                                            { title: "Opening", "data": "Opening", className: "text-right" },
                                            { title: "Closed", "data": "Closed", className: "text-right" },
                                            { title: "Lost", "data": "Lost", className: "text-right" },
                                            { title: "Balance", "data": "Balance", className: "text-right" },
                                           

                                        ];
                                    }
                                    columnCount = 6
                                    _gridgroupby = 6;
                                   // hidecol = [_gridgroupby];
                                    _gridOrder = [0];//ORDER columnS BY INDEX
                                }

                                else if (sumType == "7") {

                                    if (ajaxOutput.Data[0].ComCategory == 2) {

                                        _gridColumns = [
                                            { title: "Sl No.", "data": null },
                                            { title: "Category", "data": "Category" },
                                            { title: "New", "data": "New", className: "text-right" },
                                            { title: "Opening", "data": "Opening", className: "text-right" },
                                            { title: "Closed", "data": "Closed", className: "text-right" },
                                            { title: "Lost", "data": "Lost", className: "text-right" },
                                            { title: "Balance", "data": "Balance", className: "text-right" },
                                            

                                        ];
                                    } else {
                                        _gridColumns = [
                                            { title: "Sl No.", "data": null },
                                            { title: "Category", "data": "Category" },
                                            { title: "New", "data": "New", className: "text-right" },
                                            { title: "Opening", "data": "Opening", className: "text-right" },
                                            { title: "Closed", "data": "Closed", className: "text-right" },
                                            { title: "Lost", "data": "Lost", className: "text-right" },
                                            { title: "Balance", "data": "Balance", className: "text-right" },
                                           

                                        ];
                                    }
                                    columnCount = 6
                                    _gridgroupby = 6;
                                   // hidecol = [_gridgroupby];
                                    _gridOrder = [0];//ORDER columnS BY INDEX
                                }


                                else if (sumType == "2") {

                                    if (ajaxOutput.Data[0].ComCategory == 2) {

                                        _gridColumns = [
                                            { title: "Sl No.", "data": null },
                                            { title: "AssignedTo", "data": "AssignedTo" },
                                            { title: "New", "data": "New", className: "text-right" },
                                            { title: "Opening", "data": "Opening", className: "text-right" },
                                            { title: "Closed", "data": "Closed", className: "text-right" },
                                            { title: "Lost", "data": "Lost", className: "text-right" },
                                            { title: "Balance", "data": "Balance", className: "text-right" },
                                           

                                        ];
                                    } else {
                                        _gridColumns = [
                                            { title: "Sl No.", "data": null },
                                            { title: "AssignedTo", "data": "AssignedTo" },
                                            { title: "New", "data": "New", className: "text-right" },
                                            { title: "Opening", "data": "Opening", className: "text-right" },
                                            { title: "Closed", "data": "Closed", className: "text-right" },
                                            { title: "Lost", "data": "Lost", className: "text-right" },
                                            { title: "Balance", "data": "Balance", className: "text-right" },
                                           

                                        ];
                                    }
                                    columnCount = 6
                                    _gridgroupby = 6;
                                    hidecol = [_gridgroupby];
                                    _gridOrder = [0];//ORDER columnS BY INDEX
                                }



                          

                            }
                        }
                        if (ajaxOutput.Process.IsProcess) {
                            ptableData = {
                                columns: _gridColumns,
                                rows: ajaxOutput.Data

                            };
                            console.log(ajaxOutput, "ajaxOutput ---")

                            let x = document.getElementById("exppdf");
                            x.style.display = "block";

                            /*Grid fill*/
                            tableData = $('#LeadMngmntReportList').DataTable({
                                pagination: "bootstrap",
                                filter: true,
                                data: ajaxOutput.Data,
                                destroy: true,
                                paging: false,
                                info: false,
                                searching: false,
                                "columns": _gridColumns,
                                scrollY: 500,
                                scrollX: true,
                                scrollCollapse: true,
                                paging: false,
                                fixedHeader: {
                                    header: true,
                                    footer: true
                                },
                                "order": [[_gridgroupby, "asc"]],
                                "columnDefs": [
                                    { "orderable": false, "targets": _gridOrder },
                                    { "visible": false, "targets": hidecol }
                                ],
                                drawCallback: function (settings) {
                                    if (_gridgroupby > 0) {
                                        var api = this.api();
                                        var rows = api.rows({ page: 'current' }).nodes();
                                        var last = null;
                                        //console.log(api, rows);
                                        api.column(_gridgroupby, { page: 'current' }).data().each(function (group, i) {

                                            if (last !== group) {

                                                $(rows).eq(i).before(

                                                    '<tr class="group"><td colspan="' + columnCount + '" style="BACKGROUND-COLOR:rgb(237, 208, 0);font-weight:700;color:#006232;">' + group + '</td></tr>'
                                                );


                                                last = group;
                                            }
                                        });
                                    }
                                },
                                "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                                    $("td:first", nRow).html(iDisplayIndex + 1);
                                    return nRow;
                                },
                                createdRow: function (row, data, type) {

                                },
                                "footerCallback": function (row, data, start, end, display) {
                                    var api = this.api(), data;

                                },


                            });
                            //$("#LeadMngmntReportList thead tr").remove();
                        }
                        else {
                            //exportfile_toogle = false;


                            //tableData = $('#ProductionReportList').DataTable({
                            //    pagination: "bootstrap",
                            //    filter: true,
                            //    data: [],
                            //    destroy: true,
                            //    paging: false,
                            //    info: false,
                            //    searching: false,
                            //    "columns": _gridColumns,
                            //    "language": {
                            //        "emptyTable": "No data available"
                            //    },
                            //    scrollY: 500,
                            //    scrollX: true,
                            //    scrollCollapse: true,
                            //    paging: false,
                            //    fixedHeader: {
                            //        header: true,
                            //        footer: true
                            //    },
                            //    "order": [],
                            //    "columnDefs": [
                            //        { "orderable": false, "targets": [0, 1] },
                            //        { "visible": false, "targets": [0] }
                            //    ],

                            //    createdRow: function (row, data, type) {

                            //    },
                            //    "footerCallback": function (row, data, start, end, display) {
                            //        var api = this.api(), data;

                            //    },


                            //});

                            //let x = document.getElementById("exppdf");
                            //x.style.display = "none";


                        }

















                    }
                });
            }
        }
    }
    function changeDateFormat(date) {
        /*var date = '2023-06-05';*/

        // Split the date into year, month, and day components
        var dateComponents = date.split('-');

        // Rearrange the components to form the desired format
        var formattedDate = dateComponents[2] + '/' + dateComponents[1] + '/' + dateComponents[0];

        console.log(formattedDate); // Output: 05/06/23
        return formattedDate;
    }
    function ResetButton(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        $thisForm.validate().resetForm();
        fn_Customer_initialLoad();

    }
    function generatePdf(ele) {
     
        var cdata;
        var type = $("#ID_Report").val().trim();
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        var critria_ = "";
        if ($('select[name="ID_Report"] option:selected').val() == "6" || $('select[name="ID_Report"] option:selected').val() == "7") {

            critria_ = $thisForm.find('[name=ProdRptCriteria]').val();
        }
        else {
            critria_ = $thisForm.find('[name=Criteria]').val();
        }
        const obj = {
            //ReportMode: $('select[name="ID_Report"] option:selected').val(),
            FromDate: changeDateFormat( $('input[name="FromDate"]').val()) ,
            ToDate: changeDateFormat(  $('input[name="ToDate"]').val()),
            Product: $('#ProductName').val(),
            Branch: $('select[name="BranchID"] option:selected').text(),
            Employee: $("#Employee").val(),
            Priority: $('#FK_Priority option:selected').text(),
            FollowUpAction: $('#FK_NetAction option:selected').text(),
            FollowUpType: $('#FK_ActionType  option:selected').text(),
            Collectedby: $thisForm.find('[name="Collectedby"]').val(),
            LeadNo: $thisForm.find('[name="LeadNo"]').val(),
            Category: $("#FK_Category option:selected").text(),
            Area: $thisForm.find('select[name="Area_ID"]  option:selected').text(),
            Status: $('#Status option:selected').text(),
            ProductType: $('#ProductType option:selected').text(),
            //Grouping: critria_
        };
      

      
        const obj2 = {

            //Report: $('select[id="ID_Report"] option:selected').text(),

            //"Target Date": $('#reportrange span').html(),
        }




        if (type == 1) {
            //delete obj["As On Date"];
            //delete obj["Status"];
            //delete obj2["Target Date"];
            //delete obj["JobCard No"];
            //delete obj.Material;
            //delete obj.Satages;
            //delete obj.Grouping;
        }
        else if (type == 4) {

            delete obj["FollowUpAction"];

            delete obj["FollowUpType"];

        }
        else if (type == 6||type == 7)
        {        
         
            delete obj.Status;
            delete obj.Area;
            delete obj.LeadNo;
            delete obj.Collectedby;
            delete obj.FollowUpType;
            delete obj.FollowUpAction;
            delete obj.Branch;
            delete obj.Grouping;
            delete obj.Priority;
        }
        //else if (type == 4) {

        //    delete obj["As On Date"];
        //    delete obj["Status"];

        //    delete obj.Material;

        //} else if (type == 5) {

        //    delete obj["Status"];
        //    delete obj["As On Date"];
        //    delete obj.Material;
        //    delete obj.Satages;

        //}


        console.log(obj, '--obj--');
        console.log(obj2, '--obj2--');


        var str = "";
        var str2 = "";
        var num=0
        for (var i in obj) {
            debugger
            if (obj[i] != "" && obj[i] != "Please Select" && obj[i] != 0 && obj[i] != undefined && obj[i] != "Please select" ) {

                if (typeof (obj[i]) == "string") {
                    if (obj[i].trim() != "Please Select" && obj[i].trim() != "") {
                        debugger
                        if (num == 0) {
                            str = "Filter By : ";
                        }

                        str = str + i + ' : ' + obj[i] + ' , ';
                    }

                } else {
                    if (num == 0) {
                        str = "Filter By : ";
                    }

                    str = str + i + ' : ' + obj[i] + ' , ';
                }

                num++;
            }

        };
      
        for (var i in obj2) {
           // debugger
            if (obj2[i] != "" && obj2[i] != undefined) {


                str2 = str2 + i + ' : ' + obj2[i] + ' , ';
            }

        };


        ////Test code end

        $.ajax({
              url: '@Url.Action("GetCompanyDetails", "Home")',
              type: "GET",
              dataType: "json",
              contentType: "application/x-www-form-urlencoded;charset=utf-8",
                 success: function (ajaxOutput) {


                     cdata = ajaxOutput;

                },
                complete: function () {


                    var body = [];
                    var collen = ":";
                    var reportName = "";
                    var upperhead;



                    reportName = $('select[name="ID_Report"] option:selected').text();

                    if (type == 1) {

                        if (comCategory == 2) {
                            head = ["Sl No.", "Lead No.", "Lead Date", "Customer", "Destination", "Next Action", "Action Taken Date", "Follow Up Method", "Assigned To", "Due Days", "Branch", "Status", "Priority", "Remarks", "Referred By", "Category", "Area", "Mobile"];

                        } else {
                            head = ["Sl No.", "Lead No.", "Lead Date", "Customer", "Product", "Next Action", "Action Taken Date", "Follow Up Method", "Assigned To", "Due Days", "Branch", "Status", "Priority", "Remarks", "Referred By", "Category", "Area", "Mobile"];

                        }
                            upperhead = {
                            columnStyles: { 0: { halign: 'left', textColor: "black", fontSize: 14, fillColor: false, } },
                            columnStyles: { 1: { halign: 'left', textColor: "black", fontSize: 11, fillColor: false, } },
                            body: [
                                [
                                    str2 +
                                    '\n' + str
                                ],
                            ],
                            theme: 'plain',
                            styles: {
                                // fillColor: '#3366ff',
                                color: 'black',
                                minCellHeight: 1,// Adjust the row height value to reduce the space between rows
                                cellWidth: 'wrap'
                            },
                            didDrawCell: function (data) {
                                data.cell.styles.lineHeight = 0.2; // Adjust the line height value to your preference
                            }
                        };

                        if (comCategory == 2) {

                            ptableData.columns = [
                                { title: "Lead No.", dataKey: "LeadNo" },
                                { title: "Lead Date ", dataKey: "LeadDate" },
                                { title: "Customer", dataKey: "Customer" },
                                { title: "Destination", dataKey: "Product" },
                                { title: "Next Action", dataKey: "NextAction" },
                                { title: "Action Taken Date", dataKey: "NextActionDate" },
                                { title: "FollowUp Method", dataKey: "FollowUpMethod" },
                                { title: "Assigned To", dataKey: "AssignedTo" },
                                { title: "Due Days", dataKey: "DueDays", className: "text-right" },
                                //{ title: "criteria", dataKey: "criteria" },
                                { title: "Branch", dataKey: "Branch" },
                                { title: "Status", dataKey: "Status" },
                                { title: "Priority", dataKey: "Priority" },
                                { title: "Remarks", dataKey: "Remarks" },
                                { title: "Referred By", dataKey: "LgCollectedBy" },
                                { title: "Category", dataKey: "Category" },
                                { title: "Area", dataKey: "Area" },
                                { title: "Mobile", dataKey: "Mobile" },
                            ];
                        } else {

                            ptableData.columns = [
                                { title: "Lead No.", dataKey: "LeadNo" },
                                { title: "Lead Date ", dataKey: "LeadDate" },
                                { title: "Customer", dataKey: "Customer" },
                                { title: "Product", dataKey: "Product" },
                                { title: "Next Action", dataKey: "NextAction" },
                                { title: "Action Taken Date", dataKey: "NextActionDate" },
                                { title: "FollowUp Method", dataKey: "FollowUpMethod" },
                                { title: "Assigned To", dataKey: "AssignedTo" },
                                { title: "Due Days", dataKey: "DueDays", className: "text-right" },
                                //{ title: "criteria", dataKey: "criteria" },
                                { title: "Branch", dataKey: "Branch" },
                                { title: "Status", dataKey: "Status" },
                                { title: "Priority", dataKey: "Priority" },
                                { title: "Remarks", dataKey: "Remarks" },
                                { title: "Referred By", dataKey: "LgCollectedBy" },
                                { title: "Category", dataKey: "Category" },
                                { title: "Area", dataKey: "Area" },
                                { title: "Mobile", dataKey: "Mobile" },
                            ];
                        }

                    }
                    else if (type == 4) {
                        if (comCategory == 2) {
                            head = ["Sl No.", "Lead No.", "Lead Date", "Customer", "Destination", "Next Action", "Action Taken Date", "Follow Up Method", "Assigned To", "Due Days", "CompletedDate", "Status", "Branch", "Priority", "Remarks", "Referred By", "Area", "Mobile"];
                        } else {
                            head = ["Sl No.", "Lead No.", "Lead Date", "Customer", "Product", "Next Action", "Action Taken Date", "Follow Up Method", "Assigned To", "Due Days", "CompletedDate", "Status", "Branch", "Priority", "Remarks", "Referred By", "Area", "Mobile"];

                        }
                        upperhead = {
                            columnStyles: { 0: { halign: 'left', textColor: "black", fontSize: 14, fillColor: false, } },
                            columnStyles: { 1: { halign: 'left', textColor: "black", fontSize: 11, fillColor: false, } },
                            body: [
                                [
                                    str2 +
                                    '\n' + str
                                ],
                            ],
                            theme: 'plain',
                            styles: {
                                // fillColor: '#3366ff',
                                color: 'black',
                                minCellHeight: 1,// Adjust the row height value to reduce the space between rows
                                cellWidth: 'wrap'
                            },
                            didDrawCell: function (data) {
                                data.cell.styles.lineHeight = 0.2; // Adjust the line height value to your preference
                            }
                        };
                        if (comCategory == 2) {
                            ptableData.columns =
                                [
                                    //{ title: "Sl No.", dataKey: null },
                                    { title: "Lead No.", dataKey: "LeadNo" },
                                    { title: "Lead Date ", dataKey: "LeadDate" },
                                    { title: "Customer", dataKey: "Customer" },
                                    { title: "Destination", dataKey: "Product" },
                                    { title: "Next Action", dataKey: "NextAction" },
                                    { title: "Action Taken Date", dataKey: "NextActionDate" },
                                    { title: "Follow Up Method", dataKey: "FollowUpMethod" },
                                    { title: "Assigned To", dataKey: "AssignedTo" },
                                    { title: "Due Days", dataKey: "DueDays", className: "text-right" },
                                    { title: "Completed Date", dataKey: "CompletedDate" },
                                    { title: "Status", dataKey: "Status" },
                                    { title: "Branch", dataKey: "Branch" },
                                    { title: "Priority", dataKey: "Priority" },
                                    { title: "Remarks", dataKey: "Remarks" },
                                    { title: "Referred By", dataKey: "LgCollectedBy" },
                                    { title: "Area", dataKey: "Area" },
                                    { title: "Mobile", dataKey: "Mobile" },
                                ];
                        }
                        else {
                            ptableData.columns =
                                [
                                    //{ title: "Sl No.", dataKey: null },
                                    { title: "Lead No.", dataKey: "LeadNo" },
                                    { title: "Lead Date ", dataKey: "LeadDate" },
                                    { title: "Customer", dataKey: "Customer" },
                                    { title: "Product", dataKey: "Product" },
                                    { title: "Next Action", dataKey: "NextAction" },
                                    { title: "Follow Up Method", dataKey: "FollowUpMethod" },
                                    { title: "Assigned To", dataKey: "AssignedTo" },
                                    { title: "Due Days", dataKey: "DueDays", className: "text-right" },
                                    { title: "Completed Date", dataKey: "CompletedDate" },
                                    { title: "Status", dataKey: "Status" },
                                    { title: "Branch", dataKey: "Branch" },
                                    { title: "Priority", dataKey: "Priority" },
                                    { title: "Remarks", dataKey: "Remarks" },
                                    { title: "Referred By", dataKey: "LgCollectedBy" },
                                    { title: "Area", dataKey: "Area" },
                                    { title: "Mobile", dataKey: "Mobile" },
                                ];
                        }

                    }
                    else if (type == 2) {
                        if (comCategory == 2) {
                            head = ["Sl No.", "Lead No.", "Lead Date", "Customer", "Destination", "Next Action", "Action Taken Date", "Follow Up Method", "Assigned To", "Completed Date", "Due Days", "Status", "Branch", "Priority", "Remarks", "Referred By", "Category", "Area", "Mobile"];//"Criteria",
                        }
                        else {
                            head = ["Sl No.", "Lead No.", "Lead Date", "Customer", "Product", "Next Action", "Action Taken Date", "Follow Up Method", "Assigned To", "Completed Date", "Due Days", "Status", "Branch", "Priority", "Remarks", "Referred By", "Category", "Area", "Mobile"];//"Criteria",

                        }
                        upperhead = {
                            columnStyles: { 0: { halign: 'left', textColor: "black", fontSize: 14, fillColor: false, } },
                            columnStyles: { 1: { halign: 'left', textColor: "black", fontSize: 11, fillColor: false, } },

                            body: [
                                [
                                    str2 +
                                    '\n' + str
                                ],
                            ],

                            theme: 'plain',
                            styles: {
                                // fillColor: '#3366ff',
                                color: 'black',
                                minCellHeight: 1 // Adjust the row height value to reduce the space between rows
                            },
                            didDrawCell: function (data) {
                                data.cell.styles.lineHeight = 0.2; // Adjust the line height value to your preference
                            }



                        }; if (comCategory == 2) {
                            ptableData.columns =
                                [

                                    { title: "Lead No.", dataKey: "LeadNo" },
                                    { title: "Lead Date ", dataKey: "LeadDate" },
                                    { title: "Customer", dataKey: "Customer" },
                                    { title: "Destination", dataKey: "Product" },
                                    { title: "Next Action", dataKey: "NextAction" },
                                    { title: "Action Taken Date", dataKey: "NextActionDate" },
                                    { title: "FollowUp Method", dataKey: "FollowUpMethod" },
                                    { title: "Assigned To", dataKey: "AssignedTo" },
                                    { title: "Completed Date", dataKey: "CompletedDate" },
                                    { title: "Due Days", dataKey: "DueDays", className: "text-right" },
                                    { title: "Status", dataKey: "Status" },
                                    { title: "Branch", dataKey: "Branch" },
                                    { title: "Priority", dataKey: "Priority" },
                                    { title: "Remarks", dataKey: "Remarks" },
                                    { title: "Referred By", dataKey: "LgCollectedBy" },
                                    { title: "Category", dataKey: "Category" },
                                    { title: "Area", dataKey: "Area" },
                                    { title: "Mobile", dataKey: "Mobile" },


                                ];
                        } else {
                            ptableData.columns =
                                [

                                    { title: "Lead No.", dataKey: "LeadNo" },
                                    { title: "Lead Date ", dataKey: "LeadDate" },
                                    { title: "Customer", dataKey: "Customer" },
                                    { title: "Product", dataKey: "Product" },
                                    { title: "Next Action", dataKey: "NextAction" },
                                    { title: "Action Taken Date", dataKey: "NextActionDate" },
                                    { title: "FollowUp Method", dataKey: "FollowUpMethod" },
                                    { title: "Assigned To", dataKey: "AssignedTo" },
                                    { title: "Completed Date", dataKey: "CompletedDate" },
                                    { title: "Due Days", dataKey: "DueDays", className: "text-right" },
                                    { title: "Status", dataKey: "Status" },
                                    { title: "Branch", dataKey: "Branch" },
                                    { title: "Priority", dataKey: "Priority" },
                                    { title: "Remarks", dataKey: "Remarks" },
                                    { title: "Referred By", dataKey: "LgCollectedBy" },
                                    { title: "Category", dataKey: "Category" },
                                    { title: "Area", dataKey: "Area" },
                                    { title: "Mobile", dataKey: "Mobile" },


                                ];
                        }

                    }
                    else if (type == 5) {



                        if (comCategory == 2) {
                            head = ["Sl No.", "Lead No.", "LeadDate", "Customer", "Destination", "Referred By", "Priority", "Current Status", "Branch", "Remarks", "Area", "Lead From", "Lead By Name", "Assigned To", "Mobile"];
                        }
                        else {
                            head = ["Sl No.", "Lead No.", "LeadDate", "Customer", "Product", "Referred By", "Priority", "Current Status", "Branch", "Remarks", "Area", "Lead From", "Lead By Name", "Assigned To", "Mobile"];
                        }


                        upperhead = {


                            columnStyles: { 0: { halign: 'left', textColor: "black", fontSize: 14, fillColor: false, } },
                            columnStyles: { 1: { halign: 'left', textColor: "black", fontSize: 11, fillColor: false, } },

                            body: [

                                [
                                    str2 +
                                    '\n' + str
                                ],
                            ],

                            theme: 'plain',
                            styles: {
                                // fillColor: '#3366ff',
                                color: 'black',
                                minCellHeight: 1 // Adjust the row height value to reduce the space between rows
                            },
                            didDrawCell: function (data) {
                                data.cell.styles.lineHeight = 0.2; // Adjust the line height value to your preference
                            }



                        };
                        if (comCategory == 2) {
                            ptableData.columns =
                                [

                                    { title: "Lead No.", dataKey: "LeadNo" },
                                    { title: "Lead Date", dataKey: "LeadDate" },
                                    { title: "Customer", dataKey: "Customer" },
                                    { title: "Destination", dataKey: "Product" },
                                    { title: "Referred By", dataKey: "CollectedBy" },
                                    { title: "Priority", dataKey: "Priority" },
                                    { title: "Current Status", dataKey: "CurrentStatus" },
                                    { title: "Branch", dataKey: "Branch" },
                                    { title: "Remarks", dataKey: "Remarks" },
                                    { title: "Area", dataKey: "Area" },
                                    { title: "Lead From", dataKey: "LeadFrom" },
                                    { title: "Lead By Name", dataKey: "LeadByName" },
                                    { title: "Assigned To", dataKey: "AssignedTo" },
                                    { title: "Mobile", dataKey: "Mobile" },


                                ];
                        }
                        else {
                            ptableData.columns =
                                [  { title: "Lead No.", dataKey: "LeadNo" },
                            { title: "Lead Date", dataKey: "LeadDate" },
                            { title: "Customer", dataKey: "Customer" },
                            { title: "Product", dataKey: "Product" },
                            { title: "Referred By", dataKey: "CollectedBy" },
                            { title: "Priority", dataKey: "Priority" },
                            { title: "Current Status", dataKey: "CurrentStatus" },
                            { title: "Branch", dataKey: "Branch" },
                            { title: "Remarks", dataKey: "Remarks" },
                            { title: "Area", dataKey: "Area" },
                            { title: "Lead From", dataKey: "LeadFrom" },
                            { title: "Lead By Name", dataKey: "LeadByName" },
                            { title: "Assigned To", dataKey: "AssignedTo" },
                            { title: "Mobile", dataKey: "Mobile" },]

                        }


                    }
                    else if (type == 3) {
                        if (comCategory == 2) {
                            head = ["Sl No.", "Destination", "Action", "Committed Date", "Follow Up Through", "Status", "Completed Date", "Assigned To", "Due Days", "Remarks", "Category"];
                        } else {     head = ["Sl No.", "Product", "Action", "Committed Date", "Follow Up Through", "Status", "Completed Date", "Assigned To", "Due Days", "Remarks", "Category"];
                        }



                        if (comCategory == 2) {
                            ptableData = {
                                columns: [

                                    { title: "Destination", dataKey: "Product" },
                                    { title: "Action", dataKey: "Action" },
                                    { title: "Committed Date", dataKey: "CommittedDate" },
                                    { title: "Follow Up Through", dataKey: "FollowUpThrough" },
                                    { title: "Status", dataKey: "Status" },
                                    { title: "Completed Date", dataKey: "CompletedDate" },
                                    { title: "Assigned To", dataKey: "AssignedTo" },
                                    { title: "Due Days", dataKey: "DueDays", className: "text-right" },
                                    { title: "Remarks", dataKey: "Remarks" },
                                    { title: "Category", dataKey: "Category" },


                                ],
                                rows: Data

                            };
                        }
                        else {
                            ptableData = {
                                columns: [

                                    { title: "Product", dataKey: "Product" },
                                    { title: "Action", dataKey: "Action" },
                                    { title: "Committed Date", dataKey: "CommittedDate" },
                                    { title: "Follow Up Through", dataKey: "FollowUpThrough" },
                                    { title: "Status", dataKey: "Status" },
                                    { title: "Completed Date", dataKey: "CompletedDate" },
                                    { title: "Assigned To", dataKey: "AssignedTo" },
                                    { title: "Due Days", dataKey: "DueDays", className: "text-right" },
                                    { title: "Remarks", dataKey: "Remarks" },
                                    { title: "Category", dataKey: "Category" },


                                ],
                                rows: Data

                            };

                        }



                        debugger
                        const obj = {

                            startY: 5,
                            head: [/*['Account Details', '', 'Address Details', '']*/],
                            body: [
                                ['Cust No', reportdetaildata[0].CusNumber, 'Name', reportdetaildata[0].CusName],
                                ['Address', reportdetaildata[0].CusAddress, 'Mobile', reportdetaildata[0].Mobile],
                                ['Email', reportdetaildata[0].Email, 'LeadNo', reportdetaildata[0].LeadNo],
                                ['Lead Date', reportdetaildata[0].LeadDate, 'Lead From', reportdetaildata[0].LeadFrom],
                                ['Current Status', reportdetaildata[0].CurrentStatus, 'LeadNo', reportdetaildata[0].LeadNo],
                                ['Email', reportdetaildata[0].Email, 'Referred By', reportdetaildata[0].LgCollectedBy],


                            ],
                            theme: 'striped',
                            styles: {
                                //lineWidth: 0.2,
                                //lineColor: 0,
                                fontSize: 8
                            },
                            headerStyles: {
                                fillColor: '#2aa2ad', // Set the fill color of the header
                                textColor: '#FFFFFF' // Set the text color of the header
                            },
                            showHead: 'everyPage',
                            rowPageBreak: 'avoid',
                            pageBreak: 'auto',
                            margin: { top: 30, bottom: 40 }
                        }

                        const inputdata = {
                            ptitle: reportName,
                            phead: [head],
                            cdata,
                            upperhead,
                            ptableData,
                            filename: reportName,
                            pageSize: "a4",
                            PageOrientation: "l",
                            uppertable: obj

                        }
                        exportPdf2(inputdata);
                    }
                    else if (type == 6 || type == 7) {


                        if (comCategory == 2) {

                            head = ["Sl No.", "Category", "Destination", "Count"];

                        } else {
                            head = ["Sl No.", "Category", "Product", "Count"];
                        }

                        upperhead = {


                            columnStyles: { 0: { halign: 'left', textColor: "black", fontSize: 14, fillColor: false, } },
                            columnStyles: { 1: { halign: 'left', textColor: "black", fontSize: 11, fillColor: false, } },

                            body: [

                                [
                                    str2 +
                                    '\n' + str
                                ],
                            ],

                            theme: 'plain',
                            styles: {
                                // fillColor: '#3366ff',
                                color: 'black',
                                minCellHeight: 1 // Adjust the row height value to reduce the space between rows
                            },
                            didDrawCell: function (data) {
                                data.cell.styles.lineHeight = 0.2; // Adjust the line height value to your preference
                            }



                        };





                        if (comCategory == 2) {



                            ptableData.columns =
                                [
                                //{ title: "Sl No.", dataKey: null },
                                { title: "Category", dataKey: "Category" },
                                { title: "Destination", dataKey: "Product" },
                                { title: "Count", dataKey: "Count" },



                                ];
                        }
                        else {

                            ptableData.columns =
                                [
                                    //{ title: "Sl No.", dataKey: null },
                                    { title: "Category", dataKey: "Category" },
                                { title: "Product", dataKey: "Product" },
                                    { title: "Count", dataKey: "Count" },



                                ];

                        }

                        grpby = "Criteria";
                    }
                    grpby = "Branch";
                    console.log(grpby, 'grpby');
                    alert('grpby');
                    if (type != 3) {
                        exportPdf(reportName, [head], cdata, upperhead, "", ptableData, grpby, reportName, "a4", '', '', 'l');
                    }
                }
         });






        //ptableData.rows=

       // console.log(ptableData,"generatePdf")
        //exportPdf("reportname", head, null, null, null, ptableData, "JobCardNo", "Report", "a4");
    }

    function onExell(ele) {
        debugger


        console.log(ptableData, "ptableData");

        let table_data = [];
        let Reporttype = $("#ID_Report").val();
        let $thisForm = $(ele).closest('[perfect-class="form"]');


        const obj = {
            //ReportMode: $('select[name="ID_Report"] option:selected').val(),
            FromDate: changeDateFormat($('input[name="FromDate"]').val()),
            ToDate: changeDateFormat($('input[name="ToDate"]').val()),
            Product: $thisForm.find('[name="ProductName"]').val(),
            Branch: $('select[name="BranchID"] option:selected').text(),
            Employee: $('input[name="EmployeeID"]').val(),
            Priority: $('#FK_Priority option:selected').text(),
            FollowUpAction: $('#FK_NetAction option:selected').text(),
            FollowUpType: $('#FK_ActionType  option:selected').text(),
            Collectedby: $thisForm.find('[name="Collectedby"]').val(),
            LeadNo: $thisForm.find('[name="LeadNo"]').val(),
            Category: $thisForm.find('[name="FK_Category"] option:selected').text(),
            Area: $thisForm.find('[name="Area_ID"]  option:selected').text(),
            Status: $('#Status option:selected').text(),
            //Grouping: $('select[name="Criteria"] option:selected').text()
        };
        const obj2 = {

            //Report: $('select[id="ID_Report"] option:selected').text(),

            //"Target Date": $('#reportrange span').html(),
        }



        if (Reporttype == 1) {
       }
        else if (Reporttype == 4) {
            delete obj["FollowUpAction"];
            delete obj["FollowUpType"];
        }

        //    else if (Reporttype == 3) {

        //    delete obj["As On Date"];

        //    delete obj.Material;
        //    delete obj.Grouping;

        //} else if (Reporttype == 4) {

        //    delete obj["As On Date"];
        //    delete obj["Status"];

        //    delete obj.Material;


        //} else if (Reporttype == 5) {
        //    delete obj["Status"];
        //    delete obj["As On Date"];
        //    delete obj.Material;
        //    delete obj.Satages;

        //}

        console.log(obj, '--obj--');
        console.log(obj2, '--obj2--');


        var str = "";
        var str2 = "";
        var num = 0
        for (var i in obj) {
            debugger
            if (obj[i] != "" && obj[i] != "Please Select" && obj[i] != 0 && obj[i] != undefined && obj[i] != "Please select") {

                if (typeof (obj[i]) == "string") {
                    if (obj[i].trim() != "Please Select") {
                        if (num == 0) {
                            str = "Filter By : ";
                        }

                        str = str + i + ' : ' + obj[i] + ' , ';
                    }

                } else {
                    if (num == 0) {
                        str = "Filter By : ";
                    }

                    str = str + i + ' : ' + obj[i] + ' , ';
                }

                num++;
            }

        };
        for (var i in obj2) {
            // debugger
            if (obj2[i] != "" && obj2[i] != undefined) {

                //str2 = str2 + i + ' : ' + changeDateFormat(obj2[i]) + ' , ';
                str2 = str2 + i + ' : ' + obj2[i] + ' , ';
            }

        };




        var head = [];

        //*******
         $.ajax({
              url: '@Url.Action("GetCompanyDetails", "Home")',
              type: "GET",
              dataType: "json",
              contentType: "application/x-www-form-urlencoded;charset=utf-8",
                 success: function (ajaxOutput) {


                     cdata = ajaxOutput;

                },
             complete: function () {
                 console.log(cdata, "---cdata----");

                 if (Reporttype == 1) {
                     if (comCategory == 2) {
                         head = [["Sl No.", "Lead No.", "Lead Date", "Customer", "Destination", "Next Action", "Action Taken Date", "Follow Up Method", "Assigned To", "Due Days", "Branch", "Status", "Priority", "Remarks", "Referred By", "Category", "Area", "Mobile"]];//"Criteria",
                     } else {
                         head = [["Sl No.", "Lead No.", "Lead Date", "Customer", "Product", "Next Action", "Action Taken Date", "Follow Up Method", "Assigned To", "Due Days", "Branch", "Status", "Priority", "Remarks", "Referred By", "Category", "Area", "Mobile"]];//"Criteria",
                     }
                     if (comCategory == 2) {

                         ptableData.columns =
                             [

                                 { title: "Lead No.", dataKey: "LeadNo" },
                                 { title: "Lead Date ", dataKey: "LeadDate" },
                                 { title: "Customer", dataKey: "Customer" },
                                 { title: "Destination", dataKey: "Product" },
                                 { title: "Next Action", dataKey: "NextAction" },
                                 { title: "Action Taken Date", dataKey: "NextActionDate" },
                                 { title: "FollowUp Method", dataKey: "FollowUpMethod" },
                                 { title: "Assigned To", dataKey: "AssignedTo" },
                                 { title: "Due Days", dataKey: "DueDays", className: "text-right" },
                                 //{ title: "criteria", dataKey: "criteria" },
                                 { title: "Branch", dataKey: "Branch" },
                                 { title: "Status", dataKey: "Status" },
                                 { title: "Priority", dataKey: "Priority" },
                                 { title: "Remarks", dataKey: "Remarks" },
                                 { title: "Referred By", dataKey: "LgCollectedBy" },
                                 { title: "Category", dataKey: "Category" },
                                 { title: "Area", dataKey: "Area" },
                                 { title: "Mobile", dataKey: "Mobile" },




                             ];
                     }
                     else {
                         ptableData.columns =
                             [

                                 { title: "Lead No.", dataKey: "LeadNo" },
                                 { title: "Lead Date ", dataKey: "LeadDate" },
                                 { title: "Customer", dataKey: "Customer" },
                                 { title: "Product", dataKey: "Product" },
                                 { title: "Next Action", dataKey: "NextAction" },
                                 { title: "Action Taken Date", dataKey: "NextActionDate" },
                                 { title: "FollowUp Method", dataKey: "FollowUpMethod" },
                                 { title: "Assigned To", dataKey: "AssignedTo" },
                                 { title: "Due Days", dataKey: "DueDays", className: "text-right" },
                                 //{ title: "criteria", dataKey: "criteria" },
                                 { title: "Branch", dataKey: "Branch" },
                                 { title: "Status", dataKey: "Status" },
                                 { title: "Priority", dataKey: "Priority" },
                                 { title: "Remarks", dataKey: "Remarks" },
                                 { title: "Referred By", dataKey: "LgCollectedBy" },
                                 { title: "Category", dataKey: "Category" },
                                 { title: "Area", dataKey: "Area" },
                                 { title: "Mobile", dataKey: "Mobile" },




                             ];
                     }
                     grpby = "LeadNo";

                 }
                 else if (Reporttype == 4) {
                     if (comCategory == 2) {
                         head = [["Sl No.", "Lead No.", "Lead Date", "Customer", "Destination", "Next Action", "Action Taken Date", "Follow Up Method", "Assigned To", "Due Days", "Completed Date", "Status", "Branch", "Priority", "Remarks", "Referred By", "Area", "Mobile"]];
                     } else {
                         head = [["Sl No.", "Lead No.", "Lead Date", "Customer", "Product", "Next Action", "Action Taken Date", "Follow Up Method", "Assigned To", "Due Days", "Completed Date", "Status", "Branch", "Priority", "Remarks", "Referred By", "Area", "Mobile"]];

                     }
                     if (comCategory == 2) {

                         ptableData.columns =
                             [

                                 //{ title: "Sl No.", dataKey: null },
                                 { title: "Lead No.", dataKey: "LeadNo" },
                                 { title: "Lead Date ", dataKey: "LeadDate" },
                                 { title: "Customer", dataKey: "Customer" },
                                 { title: "Destination", dataKey: "Product" },
                                 { title: "Next Action", dataKey: "NextAction" },
                                 { title: "Action Taken Date", dataKey: "NextActionDate" },
                                 { title: "Follow Up Method", dataKey: "FollowUpMethod" },
                                 { title: "Assigned To", dataKey: "AssignedTo" },
                                 { title: "Due Days", dataKey: "DueDays", className: "text-right" },
                                 { title: "Completed Date", dataKey: "CompletedDate" },
                                 { title: "Status", dataKey: "Status" },
                                 { title: "Branch", dataKey: "Branch" },
                                 { title: "Priority", dataKey: "Priority" },
                                 { title: "Remarks", dataKey: "Remarks" },
                                 { title: "Referred By", dataKey: "LgCollectedBy" },
                                 { title: "Area", dataKey: "Area" },
                                 { title: "Mobile", dataKey: "Mobile" },

                             ];
                     }
                     else {
                         ptableData.columns =
                             [

                                 //{ title: "Sl No.", dataKey: null },
                                 { title: "Lead No.", dataKey: "LeadNo" },
                                 { title: "Lead Date ", dataKey: "LeadDate" },
                                 { title: "Customer", dataKey: "Customer" },
                                 { title: "Product", dataKey: "Product" },
                                 { title: "Next Action", dataKey: "NextAction" },
                                 { title: "Action Taken Date", dataKey: "NextActionDate" },
                                 { title: "Follow Up Method", dataKey: "FollowUpMethod" },
                                 { title: "Assigned To", dataKey: "AssignedTo" },
                                 { title: "Due Days", dataKey: "DueDays", className: "text-right" },
                                 { title: "Completed Date", dataKey: "CompletedDate" },
                                 { title: "Status", dataKey: "Status" },
                                 { title: "Branch", dataKey: "Branch" },
                                 { title: "Priority", dataKey: "Priority" },
                                 { title: "Remarks", dataKey: "Remarks" },
                                 { title: "Referred By", dataKey: "LgCollectedBy" },
                                 { title: "Area", dataKey: "Area" },
                                 { title: "Mobile", dataKey: "Mobile" },

                             ];
                     }
                     grpby = "LeadNo";

                 }
                 else if (Reporttype == 2) {

                     if (comCategory == 2) {
                         head = [["Sl No.", "Lead No.", "Lead Date", "Customer", "Destination", "Next Action", "Action Taken Date", "Follow Up Method", "Assigned To", "Completed Date", "Due Days", "Status", "Branch", "Priority", "Remarks", "Referred By", "Category", "Area", "Mobile"]];//"Criteria",
                     }
                     else {
                         head = [["Sl No.", "Lead No.", "Lead Date", "Customer", "Product", "Next Action", "Action Taken Date", "Follow Up Method", "Assigned To", "Completed Date", "Due Days", "Status", "Branch", "Priority", "Remarks", "Referred By", "Category", "Area", "Mobile"]];//"Criteria",
                     }
                     if (comCategory == 2) {
                             ptableData.columns =
                                 [

                                     { title: "Lead No.", dataKey: "LeadNo" },
                                     { title: "Lead Date ", dataKey: "LeadDate" },
                                     { title: "Customer", dataKey: "Customer" },
                                     { title: "Destination", dataKey: "Product" },
                                     { title: "Next Action", dataKey: "NextAction" },
                                     { title: "Action Taken Date", dataKey: "NextActionDate" },
                                     { title: "FollowUp Method", dataKey: "FollowUpMethod" },
                                     { title: "Assigned To", dataKey: "AssignedTo" },
                                     { title: "Completed Date", dataKey: "CompletedDate" },
                                     { title: "Due Days", dataKey: "DueDays", className: "text-right" },
                                     { title: "Status", dataKey: "Status" },
                                     { title: "Branch", dataKey: "Branch" },
                                     { title: "Priority", dataKey: "Priority" },
                                     { title: "Remarks", dataKey: "Remarks" },
                                     { title: "Referred By", dataKey: "LgCollectedBy" },
                                     { title: "Category", dataKey: "Category" },
                                     { title: "Area", dataKey: "Area" },
                                     { title: "Mobile", dataKey: "Mobile" },


                                 ];
                         }
                    else {
                             ptableData.columns =
                                 [

                                     { title: "Lead No.", dataKey: "LeadNo" },
                                     { title: "Lead Date ", dataKey: "LeadDate" },
                                     { title: "Customer", dataKey: "Customer" },
                                     { title: "Product", dataKey: "Product" },
                                     { title: "Next Action", dataKey: "NextAction" },
                                     { title: "Action Taken Date", dataKey: "NextActionDate" },
                                     { title: "FollowUp Method", dataKey: "FollowUpMethod" },
                                     { title: "Assigned To", dataKey: "AssignedTo" },
                                     { title: "Completed Date", dataKey: "CompletedDate" },
                                     { title: "Due Days", dataKey: "DueDays", className: "text-right" },
                                     { title: "Status", dataKey: "Status" },
                                     { title: "Branch", dataKey: "Branch" },
                                     { title: "Priority", dataKey: "Priority" },
                                     { title: "Remarks", dataKey: "Remarks" },
                                     { title: "Referred By", dataKey: "LgCollectedBy" },
                                     { title: "Category", dataKey: "Category" },
                                     { title: "Area", dataKey: "Area" },
                                     { title: "Mobile", dataKey: "Mobile" },


                                 ];
                         }
                     grpby = "LeadNo";

                 }
                 else if (Reporttype == 5) {
                     if (comCategory == 2) {
                         head = [["Sl No.", "Lead No.", "LeadDate", "Customer", "Destination", "Referred By", "Priority", "Current Status", "Branch", "Remarks", "Area", "Lead From", "Lead By Name", "Assigned To", "Mobile"]];
                     } else {
                         head = [["Sl No.", "Lead No.", "LeadDate", "Customer", "Product", "Referred By", "Priority", "Current Status", "Branch", "Remarks", "Area", "Lead From", "Lead By Name", "Assigned To", "Mobile"]];
                     } if (comCategory == 2) {
                         ptableData.columns =
                             [

                                 { title: "Lead No.", dataKey: "LeadNo" },
                                 { title: "Lead Date", dataKey: "LeadDate" },
                                 { title: "Customer", dataKey: "Customer" },
                                 { title: "Destination", dataKey: "Product" },
                                 { title: "Referred By", dataKey: "CollectedBy" },
                                 { title: "Priority", dataKey: "Priority" },
                                 { title: "Current Status", dataKey: "CurrentStatus" },
                                 { title: "Branch", dataKey: "Branch" },
                                 { title: "Remarks", dataKey: "Remarks" },
                                 { title: "Area", dataKey: "Area" },
                                 { title: "Lead From", dataKey: "LeadFrom" },
                                 { title: "Lead By Name", dataKey: "LeadByName" },
                                 { title: "Assigned To", dataKey: "AssignedTo" },
                                 { title: "Mobile", dataKey: "Mobile" },


                             ];
                     }
                     else {
                         ptableData.columns =
                             [

                                 { title: "Lead No.", dataKey: "LeadNo" },
                                 { title: "Lead Date", dataKey: "LeadDate" },
                                 { title: "Customer", dataKey: "Customer" },
                                 { title: "Destination", dataKey: "Product" },
                                 { title: "Referred By", dataKey: "CollectedBy" },
                                 { title: "Priority", dataKey: "Priority" },
                                 { title: "Current Status", dataKey: "CurrentStatus" },
                                 { title: "Branch", dataKey: "Branch" },
                                 { title: "Remarks", dataKey: "Remarks" },
                                 { title: "Area", dataKey: "Area" },
                                 { title: "Lead From", dataKey: "LeadFrom" },
                                 { title: "Lead By Name", dataKey: "LeadByName" },
                                 { title: "Assigned To", dataKey: "AssignedTo" },
                                 { title: "Mobile", dataKey: "Mobile" },


                             ];
                     }








                     grpby = "LeadNo";

                 }

                 else if (Reporttype == 6 || Reporttype == 7) {
                     if (comCategory == 2) {
                         head = [["Sl No.", "Category", "Destination", "Count"]];
                     } else {
                         head = [["Sl No.", "Category", "Product", "Count"]];
                     }

                     if (comCategory == 2) {



                         ptableData.columns =
                             [
                                 //{ title: "Sl No.", dataKey: null },
                                 { title: "Category", dataKey: "Category" },
                                 { title: "Destination", dataKey: "Product" },
                                 { title: "Count", dataKey: "Count" },



                             ];
                     }
                     else {

                         ptableData.columns =
                             [
                                 //{ title: "Sl No.", dataKey: null },
                                 { title: "Category", dataKey: "Category" },
                                 { title: "Product", dataKey: "Product" },
                                 { title: "Count", dataKey: "Count" },



                             ];

                     }








                     grpby = "Criteria";

                 }
                 else if (Reporttype == 3) {


                     head = ["Sl No.", "Destination", "Action", "Committed Date", "Follow Up Through", "Status", "Completed Date", "Assigned To", "Due Days", "Remarks", "Category"];
                     ptableData.columns = [

                         { title: "Destination", dataKey: "Product" },
                         { title: "Action", dataKey: "Action" },
                         { title: "Committed Date", dataKey: "CommittedDate" },
                         { title: "Follow Up Through", dataKey: "FollowUpThrough" },
                         { title: "Status", dataKey: "Status" },
                         { title: "Completed Date", dataKey: "CompletedDate" },
                         { title: "Assigned To", dataKey: "AssignedTo" },
                         { title: "Due Days", dataKey: "DueDays", className: "text-right" },
                         { title: "Remarks", dataKey: "Remarks" },
                         { title: "Category", dataKey: "Category" },


                     ];
                         //rows: Data

                     }











                 var mergeRanges = [

                     //{ s: { r: 1, c: 1 }, e: { r: 1, c: 3 } },
                     //{ s: { r: 1, c: 4 }, e: { r: 1, c: 6 } },
                     //{ s: { r: paptableData2.rows.length + 3, c: 2 }, e: { r: paptableData2.rows.length + 3, c: 3 } },
                     //{ s: { r: paptableData2.rows.length + 3, c: 5 }, e: { r: paptableData2.rows.length + 3, c: 6 } },

                 ];

                 let reportName = $("#ID_Report option:selected").text().trim();






                 ReportName = `${cdata.Company} \n${cdata.Branch}\n  Production Report    \n  ${str2} \n ${str} `
                 if (Reporttype == 3) {

                     const inputobj = {
                         ptitle: ReportName,
                         phead: [head],
                         ptableData,
                         filename: `${reportName}`,
                         headertable: {
                             bhead: [],
                             bbody: [
                                 ['Cust No:', '', reportdetaildata[0].CusNumber, '', '', 'Name ', '', reportdetaildata[0].CusName, ''],
                                 ['Address ', '', reportdetaildata[0].CusAddress, '', '', 'Mobile ', '', reportdetaildata[0].Mobile, ''],
                                 ['Email ', '', reportdetaildata[0].Email, '', '', 'LeadNo ', '', reportdetaildata[0].LeadNo,''],
                                 ['LeadDate ', '', reportdetaildata[0].LeadDate, '', '', 'Lead From ', '', reportdetaildata[0].LeadFrom, '',],
                                 ['Current Status ', '', reportdetaildata[0].CurrentStatus, '', '', 'Referred By', '', reportdetaildata[0].LgCollectedBy, ''],

                                  ['', '', '', '', '', '', '', '', '']
                             ]

                         },
                         mergeRangesdata: [

                             //{ s: { r: 1, c: 0 }, e: { r: 1, c: 8 } },
                             //{ s: { r: 2, c: 0 }, e: { r: 2, c: 4 } }, { s: { r: 2, c: 5 }, e: { r: 2, c: 8 } },
                             //{ s: { r: 3, c: 0 }, e: { r: 3, c: 1 } }, { s: { r: 3, c: 2 }, e: { r: 3, c: 4 } }, { s: { r: 3, c: 5 }, e: { r: 3, c: 6 } }, { s: { r: 3, c: 7 }, e: { r: 3, c: 8 } },
                             //{ s: { r: 4, c: 0 }, e: { r: 4, c: 1 } }, { s: { r: 4, c: 2 }, e: { r: 4, c: 4 } }, { s: { r: 4, c: 5 }, e: { r: 4, c: 6 } }, { s: { r: 4, c: 7 }, e: { r: 4, c: 8 } },
                             //{ s: { r: 5, c: 0 }, e: { r: 5, c: 1 } }, { s: { r: 5, c: 2 }, e: { r: 5, c: 4 } }, { s: { r: 5, c: 5 }, e: { r: 5, c: 6 } }, { s: { r: 5, c: 7 }, e: { r: 5, c: 8 } },
                             //{ s: { r: 6, c: 0 }, e: { r: 6, c: 1 } }, { s: { r: 6, c: 2 }, e: { r: 6, c: 4 } }, { s: { r: 6, c: 5 }, e: { r: 6, c: 6 } }, { s: { r: 6, c: 7 }, e: { r: 6, c: 8 } },
                             //{ s: { r: 7, c: 0 }, e: { r: 7, c: 8 } },
                         ]
                     }
                     generateExell2(inputobj);
                 } else {
                     generateExell(ReportName, head, ptableData, mergeRanges, grpby, reportName);
                 }

             }
         });

        //********


        //generateExell(reportName, head, ptableData, mergeRanges, grpby,reportName);
    }

    $(document).ready(function () {

        GetLeadFromdefault();
        bindReportField();
    });


     function GetLeadFromdefault() {
         let $thisForm = $('[perfect-class="form"]');
                $.ajax({
                url: '@Url.Action("GetEmployeeLeadDefault", "ServiceReport")',
                type: "Get",
                dataType: "json",
                contentType: "application/json",
                success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                 if (ajaxOutput.Process.IsProcess) {
                     //var stateModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['EmpID'] });
                     $.each(ajaxOutput.Data, function (key, value) {
                         debugger

                         console.log('>_ Search button > list click', value);
                       
                         $thisForm.find('[name=FK_BranchMode]').val(value.FK_BranchMode);
                         $thisForm.find('[name=BranchID]').val(value.ID_Branch).selectpicker('refresh');
                         let Mode = $thisForm.find('[name=FK_BranchMode]').val();
                         let user = '@ViewBag.Admin';
                     
                        console.log('user', user);
                        if (parseFloat(Mode) == 1 && user == 'True') {
                        
                             $('#BranchID').prop('disabled', false );
                         }
                         else {
                             $('#BranchID').prop('disabled', true);
                         }
                        
                             

                     });
                 }
                 else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                         NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                     });
                 }

             },


         });


    }
</script>






















@*<script>




        var Data;
        function getaccountdetails(els) {
            //debugger
            let x = document.getElementById("exppdf");
            x.style.display = "none";
            $('#ReportName').hide();

            let $thisForm = $(els).closest('[perfect-class="form"]');
            var reportType = $('select[name="ID_Report"] option:selected').val();
            var tableoptionscustom = {};
            if (reportType == 1) {
                tableoptionscustom = tableoptionscustom1
            } else if (reportType == 2) {
                tableoptionscustom = tableoptionscustom2
            }else if (reportType == 3) {
                tableoptionscustom = tableoptionscustom3
            }else if (reportType == 4) {
                tableoptionscustom = tableoptionscustom4
            } else {
                tableoptionscustom = tableoptionscustom5
            }

            var ids = $('#CustomerReportTable')
            if ($thisForm.valid() && customValidation()) {
           // if ($thisForm.valid()) {
                //alert('validation success')
                //let _ActionUrl = "@Url.Action("SaveEmployeeCommisiondata", "EmployeeWiseCommission")";
                let paymentdetails = [];
                $thisForm.find('[perfect-tempTable="Payment"]').find('tbody').find('tr').each(function () {
                paymentdetails.push($(this).data('pData'));
                });

                let inputData = {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    EmployeeID: $('input[name="EmployeeID"]').val(),
                    ID_Report: $('select[name="ID_Report"] option:selected').val(),
                    BranchID: $('select[name="BranchID"] option:selected').val(),
                    FromDate: $('input[name="FromDate"]').val(),
                    ID_Product = $thisForm.find('[name="ID_Product"]').val(),
                    FK_Priority = $('#FK_Priority').val(),
                    ToDate: $('input[name="ToDate"]').val(),
                    FK_NetAction = $('#FK_NetAction').val(),
                    followuptype = $('#FK_ActionType').val(),
                    Companyname = $thisForm.find('[name="Companyname"]').val(),
                    //Branchname = $('#BranchID :selected').text(),
                    Collectedby_ID = $thisForm.find('[name="Collectedby_ID"]').val(),
                    FK_Category = $thisForm.find('[name="FK_Category"]').val(),
                    Area_ID = $thisForm.find('[name="Area_ID"]').val(),
                    LeadNo = $thisForm.find('[name="LeadNo"]').val() == "" ? "0" : $thisForm.find('[name="LeadNo"]').val(),
                    Criteria = $('#Criteria').val(),
                    Status = $('#Status').val(),
                    TransMode: 'CTRT',
                    'pageSize': 15,
                    'pageIndex': 0
                };

                //var Reportformat = $('#Rptype').val();


                ////filter
                //var employ = $thisForm.find('[name="Employee"]').val();
                //var product = $thisForm.find('[name="ProductName"]').val();
                //var action = $('#FK_NetAction :selected').text();
                //var actiontyp = $('#FK_ActionType :selected').text();
                //var stats = $('#Status :selected').text();
                //var crtireanam = $thisForm.find('[name="Criteria"] option:selected').text();
                //var leadname = $thisForm.find('[name="FK_Priority"] option:selected').text();


                ////
                if (Report_Id == 3) {
                    var TableCount = 2;
                }
                else {
                    var TableCount = 0;
                }
                //var Reportfieldtype = $('#RpFieldptype').val();














                let pageUrl = '@Url.Action("GetReportData", "CustomerTickets")';
                $.ajax({
                url: pageUrl,
                type: "POST",
                data: inputData,
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxOutput) {
                console.log(ajaxOutput, 'ajaxOutput ...>>ln369')
                    //debugger
                    fn_showFiltersearchs()

                    $('#ReportName').text($('select[name="ID_Report"] option:selected').text());
                    $('#ReportName').show();

                    if (ajaxOutput.Process.IsProcess) {
                        let x = document.getElementById("exppdf");
                        x.style.display = "block";
                    $(ids).empty().append('<div class="d-flex justify-content-end mb-3 position-relative"><div class="col-md-1 position-absolute top-1 z-index"> <div class="input-group testSearchBox"></div></div></div>', $('<div />', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableoptionscustom)))
                    Data = ajaxOutput.Data;

                    let $table = $(ids).find('table');
                    $table.dataTable({
                    "serverSide": true,//no change
                    "processing": true,//-- process text when clicked
                    //"lengthChange": false,
                    "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                    "searching": false,//--no change
                    "ordering": false,//--sorting
                    "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                    "displayStart" : ajaxOutput.PageIndex * ajaxOutput.PageSize,//<----starting record
                    "pageLength" : ajaxOutput.PageSize,//<----page size
                    "recordsFiltered" : ajaxOutput.PageSize,//<---page size
                    "ajax": returnajaxPagination({apiurl: pageUrl, pageSize: ajaxOutput.PageSize, EmployeeID: $('input[name="EmployeeID"]').val(),Mode: $('select[name="ID_Report"] option:selected').val(),BranchID: $('select[name="BranchID"] option:selected').val(),FromDate: $('input[name="FromDate"]').val(),ToDate: $('input[name="ToDate"]').val(),DesignationID: $('select[name="DesignationID"] option:selected').val(),TransMode: 'CUSA'}, tableoptionscustom, $table)
                 });
                                }
                else {
                   // //debugger
                        if (ajaxOutput.Process.Status = "NoData") {
                            $('#ReportName').hide();
                            $('#ReportName').text();

                            let x = document.getElementById("exppdf");
                            x.style.display = "none";
                                $(ids).empty().append($('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableoptionscustom)))
                                // $sidemenu.find('table').dataTable({ paging: true });


                                let $table = $(ids).find('table');
                                $table.dataTable({
                                    "serverSide": true,//no change
                                    "processing": true,//-- process text when clicked
                                    // "lengthChange": false,
                                    "lengthMenu": [],//---drop down page size
                                    "searching": false,//--no change
                                    "ordering": false,//--sorting
                                    "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                    "displayStart": ajaxOutput.PageIndex * ajaxOutput.PageSize,//<----starting record
                                    "pageLength": ajaxOutput.PageSize,//<----page size
                                    "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                    "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.PageSize, EmployeeID: $('input[name="EmployeeID"]').val(), Mode: $('select[name="ID_Report"] option:selected').val(), BranchID: $('select[name="BranchID"] option:selected').val(), FromDate: $('input[name="FromDate"]').val(), ToDate: $('input[name="ToDate"]').val(), DesignationID: $('select[name="DesignationID"] option:selected').val(), TransMode: 'CUSA' }, tableoptionscustom, $table)
                                });
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                        }
                },
                    complete: function () {

                    }
                });
            } else {


            }
        }

            var tableoptionscustom1 = {



                onlyShowColumn: ['SlNo', 'EmpFName', 'PaidOn', 'PaidUpTo', 'Amount','Balance'],
                hideColumn: [],
                trackInfo: { "TicketNo": "Click to more information" },
                rowClickAction: '',
                serialNo: false,
                renameHeader: { "Slno": "SL NO.", "EmpFName": "Employee Name" },
                isDateType: ["PaidOn","PaidUpTo"],
                   };
            var tableoptionscustom2 = {

                onlyShowColumn: ['SlNo', 'EmpFName', 'Balance', 'LastPaidDate', 'LastIncentiveDate'],
                hideColumn: [],
                trackInfo: { "TicketNo": "Click to more information" },
                rowClickAction: '',
                serialNo: false,
                renameHeader: { "SlNo": "SL NO.", "EmpFName": "Employee Name" },
                isDateType: ["LastPaidDate", "LastIncentiveDate"],

            };
            var tableoptionscustom3 = {

                onlyShowColumn: ['SlNo', 'EmpFName', 'LastPaidDate', 'LastIncentiveDate', 'Opening', 'Incentive', 'paid', 'Balance'],
                hideColumn: [],
                trackInfo: { "TicketNo": "Click to more information" },
                rowClickAction: '',
                serialNo: false,
                renameHeader: { "Slno": "SL NO.", "EmpFName": "Employee Name" },
                isDateType: ["LastPaidDate", "LastIncentiveDate"],

            };




        function returnajaxPagination(ajaxInfo, tableOptions, tableid) {
            //{ apiurl, pageSize }

            return {
                url: ajaxInfo.apiurl,
                type: "post",
                data: function () {
                    var info = tableid.DataTable().page.info();
                    console.log('RETURN AJAX', info)
                    //return { <antiforgery>:<antiforgery>, length: ajaxInfo.pageSize, page: info.page }
                    let input = { pageSize: info.length, pageIndex: info.page, Customer: ajaxInfo.Customer, FromDate: ajaxInfo.FromDate, ToDate: ajaxInfo.ToDate, FK_Branch: ajaxInfo.FK_Branch, FK_ComplaintType: ajaxInfo.FK_ComplaintType, FK_Product: ajaxInfo.FK_Product, Mobile: ajaxInfo.Mobile, TicketNo: ajaxInfo.TicketNo, Sortorder: ajaxInfo.Sortorder, Mode: ajaxInfo.Mode, FK_Area: ajaxInfo.FK_Area, FK_Post: ajaxInfo.FK_Post, FK_Employee: ajaxInfo.FK_Employee, Status: ajaxInfo.Status, DueDays: ajaxInfo.DueDays };
                    if (ajaxInfo.searchkey) {
                        input["Name"] = ajaxInfo.searchkey;
                    }
                    return input
                },
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (dtajaxOutput) {
                    // $sideMenuOptions.body.html(pft_table_createtable(dtajaxOutput.Data, tableOptions));
                    console.table(dtajaxOutput.Data, 'dtajaxOutput.Data>>pagination fun')
                    Data = dtajaxOutput.Data;
                    document.querySelector('#exppdf').style.display = 'block';
                    let table = tableid.DataTable();
                    table.destroy();
                    pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                    tableid.dataTable({
                        "serverSide": true,
                        "processing": true,
                        //"lengthChange": false,
                        "lengthMenu": [10, 15, 20, 25, 50, 100],
                        "searching": false,
                        "ordering": false,
                        "deferLoading": dtajaxOutput.totalrecord,
                        "displayStart": dtajaxOutput.PageIndex * dtajaxOutput.PageSize,
                        "pageLength": dtajaxOutput.PageSize,
                        "recordsFiltered": dtajaxOutput.PageSize,
                        "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                    })

                },

            }
        }



         function generatePdf(ele) {
            var cdata;
             var tabMode = $('select[name="ID_Report"] option:selected').val();

            let $container = $(ele).closest('[perfect-class="form"]');
            const obj = {
                "Employee": $('input[name="Employee"]').val(),
               // Report: $('select[name="ID_Report"] option:selected').text(),
                Branch: $('select[name="BranchID"] option:selected').text(),
                Designation: $('select[name="DesignationID"] option:selected').text(),
            };
            const obj2 = {
                "From":    $('input[name="FromDate"]').val(),
                "To": $('input[name="ToDate"]').val()
            }



            console.log(obj, '--obj--');
            console.log(obj2, '--obj2--');




            Data.forEach((x) => {
                if (x['LastIncentiveDate']) {
                    //debugger
                    let q = x['LastIncentiveDate'].split('T');
                    x['LastIncentiveDate'] = convertJsonDate(q[0]);
                }
                if (x['LastPaidDate']) {
                    let q = x['LastPaidDate'].split('T');
                    x['LastPaidDate'] = convertJsonDate(q[0]);
                }
                if (x['PaidUpTo']) {
                    let q = x['PaidUpTo'].split('T');
                    x['PaidUpTo'] = convertJsonDate(q[0]);
                }
                if (x['PaidOn']) {
                    let q = x['PaidOn'].split('T');
                    x['PaidOn'] = convertJsonDate(q[0]);
                }

            })



             $.ajax({
                  url: '@Url.Action("GetCompanyDetails", "Home")',
                  type: "GET",
                  dataType: "json",
                  contentType: "application/x-www-form-urlencoded;charset=utf-8",
                     success: function (ajaxOutput) {


                         cdata = ajaxOutput;

                    },
                 complete: function () {

                     //LeadType = 'My Leads';
                     var reportName;
                     var head = [];
                     var ptableData = {};
                     ////debugger;
                     if (tabMode == '1') {
                         //    console.log('todoList', Data)
                         head = ["Sl .No", 'Employee Name', 'Paid On', 'Paid Up To', 'Amount', 'Balance'];
                         reportName = "Paid List";
                         ptableData = {
                             columns: [
                                 { dataKey: "SlNo" },
                                 { dataKey: "EmpFName" },
                                 { dataKey: "PaidOn" },
                                 { dataKey: "PaidUpTo" },
                                 { dataKey: "Amount" },
                                 { dataKey: "Balance" },



                             ],
                             rows: Data

                         };
                     } else if (tabMode == '2') {
                         reportName = "Outstanding List";
                         head = ["Sl .No", 'employee Name','Balance','Last Paid Date', 'Last Incentive Date'];
                             reportName = "Completed";
                             ptableData = {
                                 columns: [
                                     { dataKey: "SlNo" },
                                     { dataKey: "EmpFName" },
                                     { dataKey: "Balance" },
                                     { dataKey: "LastPaidDate" },
                                     { dataKey: "LastIncentiveDate" },


                                 ],
                                 rows: Data

                             };



                     } else if (tabMode == '3') {
                         reportName = "Outstanding Details List";
                         head = ["Sl .No", 'EmpFName', "Opening", "Incentive", "paid", 'Balance' ,'Last Paid Date', 'LastIncentive Date'];
                         reportName = "Pending";
                         ptableData = {
                             columns: [

                                 { dataKey: "SlNo" },
                                 { dataKey: "EmpFName" },
                                 { dataKey: "LastPaidDate" },
                                 { dataKey: "LastIncentiveDate" },
                                 { dataKey: "Opening" },
                                 { dataKey: "Incentive" },
                                 { dataKey: "paid" },
                                 { dataKey: "Balance" },


                             ],
                             rows: Data

                         };
                     }

                     var str = "";
                     var str2 = `Report :  INCENTIVE COMMISSION REPORT - ${reportName} List`;
                     var filename = `INCENTIVE COMMISSION REPORT - ${reportName} List`;
                     var num = 0;

                     for (var i in obj) {
                         if (obj[i] != "" && obj[i].toUpperCase() != "PLEASE SELECT" && obj[i] != 0 && obj[i] != "Select Terminal" && obj[i] != "Select Complaint Type" && obj[i] != "Select Status" && obj[i] != "Select Sort Order") {

                             if (num == 0) {
                                 str = "Filter By : ";
                             }
                             str = str + i + ' : ' + obj[i] + ' , ';
                             num++;
                         }

                     };
                     //for (var i in obj2) {
                     //    if (obj2[i] != "" && obj2[i] != undefined) {



                     //       // str2 = str2 + i + ' : ' + convertJsonDate(obj2[i]) + ' , ';
                     //    }

                     //};
                     //debugger
                     if (obj2['From'] && obj2['To']) {

                         //str2 = str2 + ` ,For the Period  ${convertJsonDate(obj2['From'])} - ${convertJsonDate(obj2['To'])}`;
                         str2 = str2 + ` ,For the Period  ${obj2['From']}  -  ${obj2['To']}`;
                     }
                     var upperhead;
                     if (str2 && str) {
                         upperhead = {


                             columnStyles: { 0: { halign: 'left', textColor: "black", fontSize: 14, fillColor: false, } },
                             columnStyles: { 1: { halign: 'left', textColor: "black", fontSize: 11, fillColor: false, } },

                             body: [

                                 [

                                     str2 +
                                     '\n' + str


                                 ]
                             ],

                             theme: 'plain',
                             styles: {
                                 // fillColor: '#3366ff',
                                 color: 'black',
                                 rowHeight: 1 // Adjust the row height value to reduce the space between rows
                             },
                             didDrawCell: function (data) {
                                 data.cell.styles.lineHeight = 0.2; // Adjust the line height value to your preference
                             }



                         };

                     } else if (str2 && str == "") {
                         upperhead = {


                             columnStyles: { 0: { halign: 'left', textColor: "black", fontSize: 14, fillColor: false, } },
                             columnStyles: { 1: { halign: 'left', textColor: "black", fontSize: 11, fillColor: false, } },

                             body: [


                                 [ str2 ]


                             ],

                             theme: 'plain',
                             styles: {
                                 // fillColor: '#3366ff',
                                 color: 'black',
                                 rowHeight: 1 // Adjust the row height value to reduce the space between rows
                             },
                             didDrawCell: function (data) {
                                 data.cell.styles.lineHeight = 0.2; // Adjust the line height value to your preference
                             }



                         };

                     }

                     exportPdf("", [head], cdata, upperhead, "", ptableData, "", `${filename} Report`, "a4","","","l");
                    // exportPdf(ptitle, phead, cdata, upperhead, footerdata, ptableData, grpvariable, filename, pageSize, tableOptions, columnStyles, PageOrientation)

                    }
             });
        }



        function onExell() {

            var tabMode = $('select[name="ID_Report"] option:selected').val();

            var cdata;



            const obj = {
                "Employee": $('input[name="Employee"]').val(),
                // Report: $('select[name="ID_Report"] option:selected').text(),
                Branch: $('select[name="BranchID"] option:selected').text(),
                Designation: $('select[name="DesignationID"] option:selected').text(),
            };
            const obj2 = {
                "From": $('input[name="FromDate"]').val(),
                "To": $('input[name="ToDate"]').val()
            }




            console.log(obj, '--obj--');
            console.log(obj2, '--obj2--');




            let ReportName1;


            //Data.unshift(str);

             $.ajax({
                  url: '@Url.Action("GetCompanyDetails", "Home")',
                  type: "GET",
                  dataType: "json",
                  contentType: "application/x-www-form-urlencoded;charset=utf-8",
                     success: function (ajaxOutput) {


                         cdata = ajaxOutput;

                    },
                 complete: function () {
                     console.log(cdata, "---cdata----");
                     var reportName;
                     var head = [];
                     var ptableData = {};

                     if (tabMode == '1') {
                         //    console.log('todoList', Data)
                         head = ["Sl .No", 'Employee Name', 'Paid On', 'Paid Up To', 'Amount', 'Balance'];
                         reportName = "Paid List";
                         ptableData = {
                             columns: [

                                 { dataKey: "EmpFName" },
                                 { dataKey: "PaidOn" },
                                 { dataKey: "PaidUpTo" },
                                 { dataKey: "Amount" },
                                 { dataKey: "Balance" },



                             ],
                             rows: Data

                         };
                     } else if (tabMode == '2') {
                         reportName = "Outstanding List";
                         head = ["Sl .No", 'employee Name', 'Balance', 'Last Paid Date', 'Last Incentive Date'];
                         reportName = "Completed";
                         ptableData = {
                             columns: [

                                 { dataKey: "EmpFName" },
                                 { dataKey: "LastPaidDate" },
                                 { dataKey: "LastIncentiveDate" },
                                 { dataKey: "Balance" },


                             ],
                             rows: Data

                         };



                     } else if (tabMode == '3') {
                         reportName = "Outstanding Details List";
                         head = ["Sl .No", 'EmpFName', "Opening", "Incentive", "paid", 'Balance', 'Last Paid Date', 'LastIncentive Date'];
                         reportName = "Pending";
                         ptableData = {
                             columns: [


                                 { dataKey: "EmpFName" },
                                 { dataKey: "LastPaidDate" },
                                 { dataKey: "LastIncentiveDate" },
                                 { dataKey: "Opening" },
                                 { dataKey: "Incentive" },
                                 { dataKey: "paid" },
                                 { dataKey: "Balance" },


                             ],
                             rows: Data

                         };
                     }


                     var str = "";
                     var str2 = `Report :  INCENTIVE COMMISSION REPORT - ${reportName} List`;
                     var filename = `INCENTIVE COMMISSION REPORT - ${reportName} List`;
                     var num = 0;

                     for (var i in obj) {
                         if (obj[i] != "" && obj[i].toUpperCase() != "PLEASE SELECT" && obj[i] != 0 && obj[i] != "Select Terminal" && obj[i] != "Select Complaint Type" && obj[i] != "Select Status" && obj[i] != "Select Sort Order") {

                             if (num == 0) {
                                 str = "Filter By : ";
                             }
                             str = str + i + ' : ' + obj[i] + ' , ';
                             num++;
                         }

                     };
                     //for (var i in obj2) {
                     //    if (obj2[i] != "" && obj2[i] != undefined) {

                     //        str2 = str2 + i + ' : ' + convertJsonDate(obj2[i]) + ' , ';
                     //    }

                     //};

                     if (obj2['From'] && obj2['To']) {
                         ////debugger
                        // str2 = str2 + ` ,For the Period  ${convertJsonDate(obj2['From'])} - ${convertJsonDate(obj2['To'])}`;
                         str2 = str2 + ` ,For the Period  ${obj2['From']}  -  ${obj2['To']}`;
                     }

                     ReportName1 = `${cdata.Company} \n${cdata.Branch}\n ${str2} \n ${str} `
                     generateExell(ReportName1, [head], ptableData, "", "", `${filename} Report`);

                 }
             });

        }

        function checkLimit() {
            //var retn = true;
            //if ($('input[name="ToDate"]').val() > $('input[name="FromDate"]').val()) {
            //    $('#FromDate-error').text('From Date cant be grater than To date')
            //    retn
            //}

        }
            function convertJsonDate(date) {
                /*var date = '2023-06-05';*/

                // Split the date into year, month, and day components
                var dateComponents = date.split('-');

                // Rearrange the components to form the desired format
                var formattedDate = dateComponents[2] + '/' + dateComponents[1] + '/' + dateComponents[0];

                console.log(formattedDate); // Output: 05/06/23
                return formattedDate;
            }
            function convertJsonDate(jsonDate) {
                const timestamp = parseInt(jsonDate.replace(/[^0-9]/g, ''), 10);
                const date = new Date(timestamp);

                const day = date.getDate();
                const month = date.getMonth() + 1; // Months are zero-indexed
                const year = date.getFullYear() % 100; // Using last two digits of year

                const formattedDate = `${day.toString().padStart(2, '0')}/${month.toString().padStart(2, '0')}/${year.toString().padStart(2, '0')}`;

                return formattedDate;
            }

            function ResetButton(ele) {

                fn_incentive_initialLoad();

            }
            function customValidation() {
                //debugger
                let vrbl = true;
                let from= $('input[name="FromDate"]').val();
                let To = $('input[name="ToDate"]').val();
                if (from > To) {
                    vrbl = false;
                    $('#FromDate-error').text(`From Date can't be greater than To Date`)

                } else {
                    $('#FromDate-error').text('')
                }
                return vrbl;
        }
        function getfunction() {
            let x = document.getElementById("exppdf");
            x.style.display = "none";
        }
        function clearfield(fld) {
            //debugger
            if (fld == "ReportType") {
                $('select[name="DesignationID"] option:selected').val('');
                $('input[name="EmployeeID"]').val('');
                $('input[name="Employee"]').val('');
                $('select[name="BranchID"] option:selected').val(0);
                $('input[name="FromDate"]').val(moment().format('YYYY-MM-DD'));
                $('input[name="ToDate"]').val(moment().format('YYYY-MM-DD'));
            }
            else if (fld == "Branch") {
                $('select[name="DesignationID"] option:selected').val('');
                $('input[name="EmployeeID"]').val('');
                $('input[name="Employee"]').val('');
            } else if(fld == "Desigination"){
                $('input[name="EmployeeID"]').val('');
                $('input[name="Employee"]').val('');
            }


        }


    </script>*@
<script src="~/Scripts/jspdf.min.js"></script>
<script src="~/Scripts/jspdf.plugin.autotable.min.js"></script>
<script src="~/Scripts/exportFile.js"></script>
<script src="~/Scripts/xlsx.min.js"></script>



@*<script>
            $(document).ready(function () {

                GetLeadFromdefault();
            });
            function GetLeadFromdefault() {
                 let $thisForm = $('[perfect-class="form"]');
                        $.ajax({
                        url: '@Url.Action("GetEmployeeLeadDefault", "LeadGeneration")',
                        type: "Get",
                        dataType: "json",
                        contentType: "application/json",
                        success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                         if (ajaxOutput.Process.IsProcess) {
                             //var stateModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['EmpID'] });
                             $.each(ajaxOutput.Data, function (key, value) {

                                 console.log('>_ Search button > list click', value);
                                 $thisForm.find('[name=BranchID]').val(value.ID_Branch).selectpicker('refresh');


                             });
                         }
                         else {
                             $.each(ajaxOutput.Process.Message, function (key, value) {
                                 NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                             });
                         }

                     },


                 });


             }





            (function () {
                //jQuery('form').validate();//<-----  Validate/initialize our form on page load
                jQuery('select').selectpicker();
            })();

        ////original

        ////original

        ////original
             function getreport(ele)
            {
                 let $thisForm = $(ele).closest('[perfect-class="form"]');

                console.log('> Customer Ticket form IS valid', $thisForm.valid())
                //if ($thisForm.valid()) {
                //    {
                 if (ValidateForm($('#ID_Report').val(), $thisForm) <=0 )
                 {

                     var Report_Id = $('#ID_Report').val();
                     var Employee = $thisForm.find('[name="Employee_ID"]').val();
                     //var Fromdate = $('#FromDate').val() == null ? null : $('#FromDate').val();
                     //var Todate = $('#ToDate').val();

                     var Fromdate = $('#FromDate').val() == null ? null : $('#FromDate').val();
                     //var Fromdate = Frodate.split("-").reverse().join("/");
                     var Todate = $('#ToDate').val();
                     //var Todate = Tdate.split("-").reverse().join("/");

                     var Product = $thisForm.find('[name="ID_Product"]').val();
                     var Branch = $('#BranchID').val();
                     var Priority = $('#FK_Priority').val();
                     var followupaction = $('#FK_NetAction').val();
                     var followuptype = $('#FK_ActionType').val();
                     var Reportformat = $('#Rptype').val();
                     var Company = $thisForm.find('[name="Companyname"]').val();
                     var Branchname = $('#BranchID :selected').text();
                     var FK_CollectedBy = $thisForm.find('[name="Collectedby_ID"]').val();
                     var Category = $thisForm.find('[name="FK_Category"]').val();
                     var FK_Area = $thisForm.find('[name="Area_ID"]').val();


                     ////filter
                     var employ = $thisForm.find('[name="Employee"]').val();
                     var product = $thisForm.find('[name="ProductName"]').val();
                     var action = $('#FK_NetAction :selected').text();
                     var actiontyp = $('#FK_ActionType :selected').text();
                     var stats = $('#Status :selected').text();
                     var crtireanam = $thisForm.find('[name="Criteria"] option:selected').text();
                     var leadname = $thisForm.find('[name="FK_Priority"] option:selected').text();


                     ////
                     var LeadNo = $thisForm.find('[name="LeadNo"]').val() == "" ? "0" : $thisForm.find('[name="LeadNo"]').val();
                     if (Report_Id == 3) {
                         var TableCount = 2;
                     }
                     else {
                         var TableCount = 0;
                     }
                     var Criteria = $('#Criteria').val();
                     //var Status = $('#Status').val();
                     //if (Status == undefined)
                     //{
                     //    Status = 0;
                     //}

                     var Status = $('#Status').val();
                     var Reportfieldtype = $('#RpFieldptype').val();
                     if (Reportfieldtype == undefined) {
                         Reportfieldtype = 0;
                     }

                     var Url = ('@Url.Action("GetReport", "Report")?ReportMode=' + Report_Id +
                         '&FK_Product=' + Product +
                         '&FromDate=' + Fromdate +
                         '&ToDate=' + Todate +
                         '&FK_Branch=' + Branch +
                         '&FK_Employee=' + Employee +
                         '&FK_Priority=' + Priority +
                         '&FollowUpAction=' + followupaction +
                         '&FollowUType=' + followuptype +
                         '&Rptype=' + Reportformat +
                         '&CompName=' + Company +
                         '&Branchname=' + Branchname +
                         '&LeadNo=' + LeadNo +
                         '&Status=' + Status +
                         '&Employee=' + employ +
                         '&Prodname=' + product +
                         '&Actioname=' + action +
                         '&Actiontypname=' + actiontyp +
                         '&Statusname=' + stats +
                         '&Critername=' + crtireanam +
                         '&Leadname=' + leadname +
                         '&TableCount=' + TableCount +
                         '&Criteria=' + Criteria +
                         '&FK_CollectedBy=' + FK_CollectedBy +
                         '&Category=' + Category +
                         '&FK_Area=' + FK_Area );
                     //'&Status=' + Status +
                     //'&RpFieldptype=' + Reportfieldtype);
                     popitup(Url);//for report popup window
                 }
                   /// }
                //}
            }
        ////original
            //functions for report pop up window
            function popitup(url)
            {
                newwindow = window.open(url, 'name', 'height=1000,width=1000');
                if (window.focus) { newwindow.focus() }
                return false;
            }

            function fireDownload(url)
            {
                window.location.assign(url);
            }
            ///

            function ResetButton(ele) {


                let $thisForm = $(ele).closest('[perfect-class="form"]');
                let pData = $thisForm.data('pData');

                if (pData)
                {

                        $thisForm.find('[name="Employee"]').val(pData.Employee),
                        $thisForm.find('[name="Employee_ID"]').val(pData.Employee_ID)
                        $thisForm.find('[name=FromDate]').val(pData.FromDate),
                        $thisForm.find('[name=ToDate]').val(pData.ToDate),
                        $thisForm.find('[name=Status]').val(pData.Status).selectpicker('refresh'),
                       // $thisForm.find('[name=Rptype]').val(pData.Rptype).selectpicker('refresh'),
                        $thisForm.find('[name=RpFieldptype]').val(pData.RpFieldptype).selectpicker('refresh'),
                        $thisForm.find('[name=ID_Report]').val(pData.ID_Report).selectpicker('refresh'),
                        $thisForm.find('[name=ID_Product]').val(pData.ID_Product),
                        $thisForm.find('[name=ProductName]').val(pData.ProductName),
                        $thisForm.find('[name=Area_ID]').val(pData.Area_ID),
                        $thisForm.find('[name=Area]').val(pData.Area),
                        $thisForm.find('[name=BranchID]').val(pData.BranchID).selectpicker('refresh'),
                        $thisForm.find('[name=FK_Priority]').val(pData.FK_Priority).selectpicker('refresh'),
                        $thisForm.find('[name=Collectedby]').val(pData.Employee_ID),
                        $thisForm.find('[name=Collectedby_ID]').val(pData.Employee_ID),
                        $thisForm.find('[name=FK_Category]').val(pData.FK_Category).selectpicker('refresh'),
                        $thisForm.find('[name=Criteria]').val(pData.Criteria).selectpicker('refresh')


                }
                else
                {

                        $thisForm.find('[name=LgCollectedBy]').val(""),
                        $thisForm.find('[name=FromDate]').val(""),
                        $thisForm.find('[name=ToDate]').val(""),
                        $thisForm.find('[name=Status]').val(""),
                      //  $thisForm.find('[name=Rptype]').val("").selectpicker('refresh'),
                        $thisForm.find('[name=RpFieldptype]').val("").selectpicker('refresh'),
                        $thisForm.find('[name=ID_Report]').val("").selectpicker('refresh'),
                        $thisForm.find('[name=ID_Product]').val(""),
                        $thisForm.find('[name=ProductName]').val(""),
                        $thisForm.find('[name=BranchID]').val("").selectpicker('refresh'),
                        $thisForm.find('[name=FK_Priority]').val("").selectpicker('refresh'),
                        $thisForm.find('[name="Employee_ID"]').val(""),
                        $thisForm.find('[name="Employee"]').val(""),
                        $thisForm.find('[name=Collectedby]').val(""),
                        $thisForm.find('[name=Collectedby_ID]').val(""),
                        $thisForm.find('[name=FK_Category]').val("").selectpicker('refresh')
                        $thisForm.find('[name=Area_ID]').val(""),
                        $thisForm.find('[name=Area]').val(""),
                        $thisForm.find('[name=Criteria]').val("").selectpicker('refresh')




                }

                bindReportField();
                GetLeadFromdefault();
                $thisForm.find('[name="FromDate"]').val(moment().format('YYYY-MM-DD'));
                $thisForm.find('[name="ToDate"]').val(moment().format('YYYY-MM-DD'));
                $thisForm.validate().resetForm();
            }
            $(document).ready(function () {


                bindReportField();
            });

             function fn_selectFieldlist(ele)
            {

                 let $thisForm = $(ele).closest('[perfect-class="form"]');
                 var modes;
                 if ($("#ID_Report").val() == 1) { modes = 2; }
                 else if ($("#ID_Report").val() == 2) { modes = 1; }
                 else if ($("#ID_Report").val() == 4) { modes = 11; }
                let mode = { mode : modes }


                 $.ajax({
                         url: "@Url.Action("getModeList", "CustomerTickets")",
                        type: "POST",
                     data: mode,
                        dataType: "json",
                        contentType: "application/x-www-form-urlencoded;charset=utf-8",
                        success: function (ajaxOutput) {
                         console.log(ajaxOutput)
                            let $menuDropdown = $thisForm.find('[name=Status]');//<--- Will give place select html element

                         $menuDropdown.empty().selectpicker('refresh');
                         $menuDropdown.append($('<option/>', { "value": "" }).text("Please Select")).selectpicker('refresh')


                         if (ajaxOutput.Process.IsProcess) {

                            $.each(ajaxOutput.Data, function (key, value) {
                                $menuDropdown.append($('<option/>', { "value": value.ID_Mode }).text(value.ModeName)).selectpicker('refresh') });

                             if ($menuDropdown.attr('perfect-onSelectLoad')) {
                                 $menuDropdown.val($menuDropdown.attr('perfect-onSelectLoad')).selectpicker('refresh');
                                 $menuDropdown.attr('perfect-onSelectLoad', '');
                             }

                             }
                             else {
                             $.each(ajaxOutput.Process.Message, function (key, value) {
                                     //toastr.warning(value, "Error");
                                 NotificationMessage({ 'type': 'warning', 'heading': 'warning', 'message': value });
                                 });
                             }
                             }

                 });


            }

            //function OnchangeReport()
            //{
            //    if ($("#ID_Report").val() != 1) {
            //        $("#sts").hide();


            //    }
            //    else {
            //        $("#sts").show();
            //        $("#Status").validate = true;
            //    }

            //}
            function bindReportField(ele) {
                fn_selectFieldlist(ele)
                if ($("#ID_Report").val() == 3) {
                    $('.DivFromDate').hide();
                    $('.DivToDate').hide();
                    $('.DivEmployeeName').hide();
                    $('.DivProduct').hide();
                    $('.DivLeadType').hide();
                    $('.DivFollowUp').hide();
                    $('.DivFollowUpType').hide();
                    $('.DivCriteria').hide();
                    $('.DivStatus').hide();
                    $('.DivLeadNo').show();
                    $('.DivCollectedbyName').hide();
                    $('.DivCategory').hide();



                }
                else if ($("#ID_Report").val() == 4)
                {
                    $('.DivFromDate').show();
                    $('.DivToDate').show();
                    $('.DivEmployeeName').show();
                    $('.DivProduct').show();
                    $('.DivLeadType').show();
                    $('.DivStatus').show();
                    $('.DivCriteria').show();
                    $('.DivFollowUp').hide();
                    $('.DivFollowUpType').hide();
                    $('.DivLeadNo').hide();
                    $('.DivCollectedbyName').show();
                    $('.DivCategory').show();
                }
                else if ($("#ID_Report").val() == 5) {
                    $('.DivFromDate').show();
                    $('.DivToDate').show();
                    $('.DivEmployeeName').show();
                    $('.DivProduct').show();
                    $('.DivLeadType').show();
                    $('.DivCriteria').show();
                    $('.DivStatus').show();
                    $('.DivFollowUp').hide();
                    $('.DivFollowUpType').hide();

                    $('.DivLeadNo').hide();
                    $('.DivCollectedbyName').show();
                    $('.DivCategory').show();
                }
                else {

                    $('.DivFromDate').show();
                    $('.DivToDate').show();
                    $('.DivEmployeeName').show();
                    $('.DivProduct').show();
                    $('.DivLeadType').show();
                    $('.DivFollowUp').show();
                    $('.DivFollowUpType').show();
                    $('.DivStatus').show();
                    $('.DivCriteria').show();
                    $('.DivLeadNo').hide();
                    $('.DivCollectedbyName').show();
                    $('.DivCategory').show();


                }
            }
            function checkLimit(ele) {
                let $thisForm = $(ele).closest('[perfect-class="form"]');
                //invalid-feedback
                let Fromdate =  moment($thisForm.find('[name="FromDate"]').val(), "mm/dd/yyyy");
                let Todate =  moment($thisForm.find('[name="ToDate"]').val(), "mm/dd/yyyy");
                //   alert(upperlimit);
                //  alert(lowerlimit);
                if (Todate < Fromdate) {
                    // alert(1);
                    console.log('inside limit check if')
                    $thisForm.find('[name="ToDate"]').closest('[perfect-class="formGroup "]').find('.limit-check').text('From Date should be less than To Date')
                }
                else {
                    // alert(2);
                    console.log('inside limit check else')
                    $thisForm.find('[name="ToDate"]').closest('[perfect-class="formGroup "]').find('.limit-check').text('')
                }


            }
            function ValidateForm(ReportID,ele) {


                var Error = 0;
                if (ReportID == 3) {
                    const $inp = $(".Ledger");
                    console.log('inp', $inp);
                    let is_empty = true;
                    $inp.each((i, el) => {

                        //const is_empty = !el.value.trim();
                        if (!$('[name=' + $(el).attr('name') + ']').val() == undefined) {
                            is_empty = false;
                        }
                        else {
                            is_empty = !$('[name=' + $(el).attr('name') + ']').val();
                        }

                        let ErrorID = $(el).attr('data-id');
                        console.log(ErrorID);
                        console.log("Element", el.name, "Value >", !el.value.trim());
                        if (is_empty) {
                            console.log(`field ${el.id} is empty`);
                            $('#' + ErrorID).css('display', 'block');
                            Error++;
                            console.log("While empty", Error)
                        }
                        else if (!is_empty) {
                            $('#' + ErrorID).css('display', 'none');
                            console.log("While not empty", Error)
                            //if (Error > 0) {
                            //    Error--;
                            //}
                        }
                        el.classList.toggle("is-empty", is_empty);
                    });
                }
                else if (ReportID == 0) {
                    ele.find('[name=ID_Report]').val("").selectpicker('refresh');
                    Error==2
                    const $inp = $(".Action");
                    console.log('inp', $inp);
                    let is_empty = true;
                    $inp.each((i, el) => {

                        //const is_empty = !el.value.trim();
                        if (ReportID == 0) {

                            is_empty = false;
                        }
                        //else
                        //{
                        //    alert(is_empty)
                        //    is_empty = !$('[name=' + $(el).attr('name') + ']').val();

                        //}

                        let ErrorID = $(el).attr('data-id');
                        console.log('ee1',ErrorID);

                        if (!is_empty) {

                            console.log(`field ${el.id} is empty`);
                            $('#' + ErrorID).css('display', 'block');
                            Error++;
                            console.log("While empty", Error)
                        }
                        else  {
                            $('#' + ErrorID).css('display', 'none');
                            console.log("While not empty", Error)
                            //if (Error > 0) {
                            //    Error--;
                            //}
                        }
                        el.classList.toggle("is-empty", is_empty);
                    });
                }
                else if (ReportID == 1 || ReportID == 2 || ReportID == 4 || ReportID == 5 ) {
                    const $inp = $(".ToDate");
                    console.log('inp', $inp);
                    let is_empty = true;
                    $inp.each((i, el) => {
                        debugger
                        //const is_empty = !el.value.trim();
                        if (!$('[name=' + $(el).attr('name') + ']').val() == undefined) {
                            is_empty = false;
                        }
                        else {
                            is_empty = !$('[name=' + $(el).attr('name') + ']').val();
                        }

                        let ErrorID = $(el).attr('data-id');
                        console.log(ErrorID);
                        console.log("Element", el.name, "Value >", !el.value.trim());
                        if (is_empty) {
                            console.log(`field ${el.id} is empty`);
                            $('#' + ErrorID).css('display', 'block');
                            Error++;
                            console.log("While empty", Error)
                        }
                        else if (!is_empty) {
                            $('#' + ErrorID).css('display', 'none');
                            console.log("While not empty", Error)
                            //if (Error > 0) {
                            //    Error--;
                            //}
                        }
                        el.classList.toggle("is-empty", is_empty);
                    });
                }
                else if (ReportID == 1) {
                    const $inp = $(".FromDate");
                    console.log('inp', $inp);
                    let is_empty = true;
                    $inp.each((i, el) => {
                        debugger
                        //const is_empty = !el.value.trim();
                        if (!$('[name=' + $(el).attr('name') + ']').val() == undefined) {
                            is_empty = false;
                        }
                        else {
                            is_empty = !$('[name=' + $(el).attr('name') + ']').val();
                        }

                        let ErrorID = $(el).attr('data-id');
                        console.log(ErrorID);
                        console.log("Element", el.name, "Value >", !el.value.trim());
                        if (is_empty) {
                            console.log(`field ${el.id} is empty`);
                            $('#' + ErrorID).css('display', 'block');
                            Error++;
                            console.log("While empty", Error)
                        }
                        else if (!is_empty) {
                            $('#' + ErrorID).css('display', 'none');
                            console.log("While not empty", Error)
                            //if (Error > 0) {
                            //    Error--;
                            //}
                        }
                        el.classList.toggle("is-empty", is_empty);
                    });
                }
                else if (ReportID == null) {

                    Error == 2
                    const $inp = $(".Action");
                    console.log('inp', $inp);
                    let is_empty = true;
                    $inp.each((i, el) => {

                        //const is_empty = !el.value.trim();
                        if (ReportID == null) {

                            is_empty = false;
                        }
                        //else
                        //{
                        //    alert(is_empty)
                        //    is_empty = !$('[name=' + $(el).attr('name') + ']').val();

                        //}

                        let ErrorID = $(el).attr('data-id');
                        console.log('ee1', ErrorID);

                        if (!is_empty) {

                            console.log(`field ${el.id} is empty`);
                            $('#' + ErrorID).css('display', 'block');
                            Error++;
                            console.log("While empty", Error)
                        }
                        else {
                            $('#' + ErrorID).css('display', 'none');
                            console.log("While not empty", Error)
                            //if (Error > 0) {
                            //    Error--;
                            //}
                        }
                        el.classList.toggle("is-empty", is_empty);
                    });
                }
                return Error;

            }

            $.validator.addMethod('dateValidationGtr', function (value, element, param) {
                var d = new Date(value);
                var strDate = d.getFullYear() + "/" + (d.getMonth() ) + "/" + d.getDate();

                var s = new Date($(param).val());
                var endDate = s.getFullYear() + "/" + (s.getMonth() ) + "/" + s.getDate();
                var sysdt = new Date();

                return this.optional(element) || (sysdt - new Date(strDate)) < (sysdt - new Date(endDate));


            }, 'Date should be greater than filing date');

    </script>*@
