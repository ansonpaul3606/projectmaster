 @model PerfectWebERP.Models.DepreciationSettingModel.DepreciationSettingView
<div class="card">
    <div class="card-header">
        <h4 class="card-title col-12">Depreciation Settings</h4>

        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>

    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">

                <div class="row">
                    @Html.AntiForgeryToken()

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Effect Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="date" class="form-control perfectValidate_date" name="EffectDate" perfect-class="formGroupControl" perfect-ctype="date" max="2050-01-01" perfect-css="date"/>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <span perfect-class="formGroupLabel">Mode </span>

                                <span class="text-danger">*</span>
                                <input type="hidden" name="ID_DepreciationSettings" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <select class="form-control perfectValidate_string" name="ModeType" perfect-class="formGroupControl" data-id="subtableperiodmode-error" perfect-ctype="select" perfect-css="select" onchange="fn_showTypeList(this)">
                                        <option value="">Please Select </option>
                                        @if (!(Model.ModeList is null))
                                        {
                                            foreach (var ModeList in Model.ModeList)
                                            {
                                                <option value="@ModeList.ID_Mode">@ModeList.ModeName</option>
                                            }
                                        }
                                    </select>

                                </div>
                                <div class="text-danger temptableError"></div>
                            </div>

                        </div>
                    </div>


                </div>


                <div class="row">
                    <div class="col-sm-12">
                        <div class="daccordion__header">
                            <span class="accordion__header--text">Settings Details</span>
                        </div>
                        <div class="row" id="divTempTableDepreciationSettings">
                            <div class="col-sm-12 " perfect-class="TempTableDepreciationSettings">
                                <br />
                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Category</span>
                                                <span class="text-danger">*</span>
                                            </label>

                                            <div class="col-sm-8">
                                                <select class="form-control" name="FK_Category" id="Categoryid" perfect-tempTable-DepreciationDT="Category" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" onchange="productpopupclear(this)" >

                                                    <option value="">Please Select </option>

                                                    @if (!(Model.CategoryList is null))
                                                    {
                                                        foreach (var categorylist in Model.CategoryList)
                                                        {
                                                            <option value="@categorylist.FK_Category">@categorylist.Category</option>
                                                        }

                                                    }

                                                </select>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                <span perfect-class="formGroupLabel"> Product</span>
                                                @*<span class="text-danger">*</span>*@

                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="text" class="form-control " name="Product" perfect-tempTable-DepreciationDT="Product" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                    <input type="hidden" name="FK_Product" perfect-tempTable-DepreciationDT="FK_Product" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <div class="input-group-append">

                                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="fn_showlists(this)" Function="2" Criterea1="FK_Category" Criterea2="0" BindName="Product" BindVal="FK_Product"></button>

                                                    </div>
                                                </div>

                                            </div>

                                        </div>

                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-2 col-form-label">
                                                <span perfect-class="formGroupLabel">Period </span>
                                                @*<span class="text-danger">*</span>*@
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <select class="form-control" name="DsPeriodType" perfect-tempTable-DepreciationDT="DsPeriodType"perfect-class="formGroupControl" data-id="subtableperiodmode-error" perfect-ctype="select" perfect-css="select">
                                                        <option value="">Please Select </option>
                                                        @if (!(Model.PeriodList is null))
                                                        {
                                                            foreach (var PeriodList in Model.PeriodList)
                                                            {
                                                                <option value="@PeriodList.ID_Mode">@PeriodList.ModeName</option>
                                                            }
                                                        }
                                                    </select>
                                                    <input type="text" class="form-control text-right" perfect-tempTable-DepreciationDT="DsPeriod" name="DsPeriod"  oninput="decimalpnt(this,'DsPeriod',3)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="5" />

                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>

                                        </div>
                                    </div>



                                </div>
                                <div class="row">

                                  
                                        <div class="col-sm-4">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">
                                                    <span perfect-class="formGroupLabel">Amount/Percentage </span>
                                                    <span class="text-danger">*</span>
                                                </label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <select class="form-control" name="DsAmountType" perfect-tempTable-DepreciationDT="DsAmountType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                            <option value="">Please Select </option>
                                                            <option value="1">Amount</option>
                                                            <option value="2">Percentage</option>
                                                        </select>
                                                        <input type="text" class="form-control text-right" perfect-tempTable-DepreciationDT="DsAmount" name="DsAmount" id="DsAmount" oninput="decimalpnt(this,'DsAmount',3)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="12" />

                                                    </div>
                                                    <div class="text-danger temptableError"></div>
                                                </div>
                                               
                                            </div>
                                        </div>

                                        <div class="col-sm-4">

                                            <div class="col-sm-4">
                                                <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Depreciation Settings" onclick="fn_createDepreciationSettingsTable(this,'DepreciationDT',[])"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                <button class="btn btn-light1" id="refresh"  type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="clearsubtableproduct(this,'DepreciationDT')"><i class="fa fa-refresh" aria-hidden="true"></i></button>

                                            </div>
                                        </div>




                                    </div>


                                
                                <div class="card-footer text-right" perfect-class="formFooter">

                                </div>
                                <div class="row">
                                    <div class="col-sm-12" style="padding-right:25px;padding-left:25px;">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <div class="table-responsive" perfect-tempTable="DepreciationDT" id="Depreciationsubtable" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>

             

                </div>

            


            <div class="card-footer text-right" perfect-class="formFooter">
             
                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_AddDepreciationSettings(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                <button type="button" class="btn btn-light" perfect-css="button" onclick="fn_resetDepreciationSettings()" name="reset">Clear</button>
            </div>


        </form>




    </div>






</div>
<script>


    $(document).ready(function () {
        initFunctions('form');
    });



    function decimalpnt(ele, id, range) {

        let input = $('#' + id);
        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
        input.on('keydown', function () {
            if (ele.value.includes('.')) {

            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.length == 9) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }

    function fn_resetDepreciationSettings(ele) {
        DepreciationSettingsInitialLoad();
    }



    function fn_AddDepreciationSettings(ele)
      {
        debugger
        
            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability


            //$(ele).find('i').removeClass();

        if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
            let $errorMsg = '';
            let $blnSuccess = false;
            $(ele).prop('disabled', true); // avoiding form submit the double click

            let depreciationlist = [];
            $thisForm.find('[perfect-tempTable="DepreciationDT"]').find('tbody').find('tr').each(function () {
                depreciationlist.push($(this).data('pData'));
            })



            if (depreciationlist.length <= 0) {
                $blnSuccess = false;
                $errorMsg = 'Please Fill Depreciation Details';
            }
            else {
                $blnSuccess = true;
            }

          
            var inputData = {//<---- Input Json : this is the variable we pass to controller
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                ID_DepreciationSettings: 0,
                'EffectDate': $thisForm.find('[name="EffectDate"]').val(),
                'Mode': $thisForm.find('[name=ModeType]').val().trim(),
                //'FK_Category': $thisForm.find('[name=FK_Category]').val().trim(),
                //'FK_Product': $thisForm.find('[name=Product]').val(),
                //'DsPeriodType': $thisForm.find('[name=DsPeriodType]').val(),
                //'DsPeriod': $thisForm.find('[name=DsPeriod]').val(),
                //'DsAmountType': $thisForm.find('[name=DsAmountType]').val(),
                //'DsAmount': $thisForm.find('[name=DsAmount]').val(),
                'DepreciationSettingsDetails': depreciationlist

        




            };
            if ($blnSuccess) {//if($blnSuccess)
                $.ajax({//if($blnSuccess) ajax
                    url:  "@Url.Action("AddDepreciationSettings", "DepreciationSetting")",
                    type: "POST",
                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                    success: function (ajaxOutput) {//if($blnSuccess) ajax success
                        if (ajaxOutput.Process.IsProcess) {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                $(ele).prop('disabled', false);
                                DepreciationSettingsInitialLoad();
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                $(ele).prop('disabled', false);
                                DepreciationSettingsInitialLoad();
                            });
                        }

                        $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                        $thisForm.find('[perfect-ctype="input"]').val('');
                        $thisForm.find('[perfect-ctype="date"]').val('');
                        let onSuccess = $thisForm.attr('perfect-onFormSuccess')
                        if (onSuccess) {
                            window[onSuccess]();

                        }
                    },//if($blnSuccess) ajax success
                    complete: function () {
                        $(ele).prop('disabled', false);
                    }
                });//if($blnSuccess) ajax
            }//if($blnSuccess)


            else {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': $errorMsg });
                $(ele).prop('disabled', false);
            }

            
        }

    }


    var tableOptionsTempOut = {
        iconButton: {
            buttons: [

                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        let indexname = tableKey + 'index';
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {

                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            $thistbl.dataTable({ paging: true });
                        }
                        else {
                            $thistbl.remove();
                        } $("#refresh").click();
                    }
                },
            ]
        },
        onlyShowColumn: [],
        hideColumn: ['FK_Product'],
        serialNo: true,
        renameHeader: { 'FK_Category': 'Category'},
        rowAttribute: [],
        isCheckType: []



    };

    function fn_showTypeList(ele) {

        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let Id_Mode = $thisForm.find('[name=ModeType]').val();
        $thisForm.find('[name=FK_Product]').val('')
        $thisForm.find('[name=Product]').val('');

       $.ajax({
            url: '@Url.Action("GetCategorylist", "DepreciationSetting")',
            type: "POST",
           data: JSON.stringify({ Id_Mode: Id_Mode}),//<---- Input json : data passed to controller
            dataType: "json",
           contentType: "application/json",
            success: function (ajaxOutput) {

                let $menuDropdown = $thisForm.find('[name=FK_Category]');//<--- Will give place select html element

                    $menuDropdown.empty().selectpicker('refresh');
                    $menuDropdown.append($('<option/>', { "value": "" }).text("Please Select")).selectpicker('refresh')


                    if (ajaxOutput.Process.IsProcess) {

                        $.each(ajaxOutput.Data, function (key, value) {
                            $menuDropdown.append($('<option/>', { "value": value.FK_Category }).text(value.Category)).selectpicker('refresh')
                        });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                           
                        });
                    }
            }

        });



    }

    function fn_createDepreciationSettingsTable(element, tkey, uniq) {
        let $thisForm = $(element).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';


        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }



        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Category"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Category"]').val().length == null) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="Category"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select Category');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Category"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="DsPeriodType"]').val() > "0" && $thisForm.find('[perfect-tempTable-' + tableKey + '="DsPeriod"]').val() == "") {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="DsPeriodType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter a period value');
        } else if ($thisForm.find('[perfect-tempTable-' + tableKey + '="DsPeriod"]').val().length > 0 && $thisForm.find('[perfect-tempTable-' + tableKey + '="DsPeriodType"]').val() == "") {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="DsPeriodType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select Period Type');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="DsPeriodType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
       



        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="DsAmount"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="DsAmount"]').val().length == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="DsAmountType"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="DsAmountType"]').val().length == null) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="DsAmountType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select Amount/Percentage');
        }
        else if ($thisForm.find('[perfect-tempTable-' + tableKey + '="DsAmount"]').val() < 1) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="DsAmountType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Value Greater Than Zero');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="DsAmountType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="DsAmountType"]').val() == 2) {
            debugger
            let valmethod = $thisForm.find('[perfect-tempTable-' + tableKey + '="DsAmount"]').val();
            if (valmethod > 100) {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="DsAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Percentage in Between 1 to 100');
                isValid = false;
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="DsAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
        }



        if (unique.length > 0) {
            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }

                }

            })

            unique.forEach(function (key, i) {
                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                let headerEleName = $thisForm.find('[name="lblType"]').text();
                let atname = $thisEle.attr('name');
                let cvalue;


                if ($thisEle.length != 0) {
                    let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    let errmessage = headerEleName + " Already exits"

                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();

                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else {
                        cvalue = $thisEle.val();
                    }

                    if (prevData.find(a => a[atname] == cvalue)) {
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });

        }

        if (isValid) {
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                if ($this.is('select')) {

                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    insertData[nameAttr] = $this.val();

                    $this.val('').selectpicker('refresh');
                }
                else if ($this.is('input')) {

                    let inputType = $this.attr('type').toLocaleLowerCase();

                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp.isCheckType.push(nameAttr)
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {
                        insertData[nameAttr] = $this.val();
                        $this.val('');

                    }

                    else {
                        insertData[nameAttr] = $this.val();

                        $this.val('');
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();

                    $this.val('');
                }
            });

            if (isNew) {
                if ($tblcontainer.find('table').length == 0) {
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                }
                else {
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                }
            }
            else {
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
            }

            $tblcontainer.attr('perfect-tempTable-action', 0);
            //$thisForm.find('[name="AldAmountTo"]').attr('readonly', true);
        }
    }


    function clearsubtableproduct(ele, tablekey) {


        let $thisform = $(ele).closest('[perfect-class="form"]');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');
        let errorClass = '.temptableError';
        $thisform.find('[perfect-tempTable-' + 'DepreciationDT' + '="DsAmountType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        $thisform.find('[perfect-tempTable-' + 'DepreciationDT' + '="Category"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');

        let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);

        if (tablekey = "DepreciationDT") {

        }

    }

    function productpopupclear(ele) {
        let $container = $(ele).closest('[perfect-class="form"]');
        $container.find('[name=FK_Product]').val('')
        $container.find('[name=Product]').val('');

    }



    function fn_showlists(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let Id_Mode = $thisForm.find('[name=ModeType]').val();

        switch (Id_Mode) {
            case 'V':
                GetCmnPopUpSearchValAssign(ele, 108, 'Product List', []);
                break;
            case 'T':
                GetCmnPopUpSearchValAssign(ele, 85, 'Product List', []);
                break;
          
            default:
               NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': 'Please Select Category' });
                break;


        }



    }

    function getfunctionAssign(ele) {
    }


</script>