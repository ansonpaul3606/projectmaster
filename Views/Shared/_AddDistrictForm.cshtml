
@model PerfectWebERP.Models.DistrictModel.DistrictViewList

<style>
</style>
<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">District</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body msubmaster">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Name</span>
                                <span class="text-danger">*</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_name" placeholder="" name="DistrictName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="generateDistShortName(this)" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Short Name</span>
                                <span class="text-danger">*</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_shortName" placeholder="" name="DistrictShortName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">State</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" name="StatesID" perfect-selectButton="Add State" perfect-selectButtonAction="StateAdding" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">

                                    <option value="">Please Select </option>

                                    @if (!(Model.StatesList is null))
                                    {
                                        foreach (var stateList in Model.StatesList)
                                        {
                                            <option value="@stateList.StatesID">@stateList.StatesName</option>
                                        }

                                    }

                                </select>
                            </div>
                        </div>

                    </div>


                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Sort order</span>


                            </label>
                            <div class="col-sm-8">
                                <div class=" input-group mb-2">
                                    <input type="number" class="form-control perfectValidate_numeric_nm" placeholder="" name="SortOrder" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="input" value="@Model.SortOrder" min="0" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>


            <div class="card-footer text-right" perfect-class="formFooter">
                @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                {
                    <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="updateDistrict(this)"><i class="fa fa-refresh fa-spin  loaderClass"></i>Update</button>
                }
                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="AddDistrict(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
            </div>
        </form>
        <div class="md-2 modal fade" perfect-class="formGroupModalState" id="formGroupModalState">
            <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
                <div class="modal-content">
                    <div class="modal-header border-0">
                        <h5 class="modal-title">State</h5>
                        <button type="button" class="close" data-dismiss="modal">
                            <span>&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                        <div class="row">

                            <div class="col-sm-12" id="custmr-savsstate">

                            </div>


                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
    <script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>
         

    <script>
    (function () {
       // jQuery('form').validate();//<-----  Validate/initialize our form on page load
        jQuery('select').selectpicker();
    })();

        function ResetButton(ele) {
            $('.dataTable tr').removeClass("SelectForDelete");
             loadDistrictAddForm();

      
    }

        function updateDistrict(ele) {


            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability

            if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                $(ele).prop('disabled', true);

                let pdata = $thisForm.data('pData');
              
                console.log('pdata fter view click',pdata)
                console.log('> Update District form data saved',pdata);
                let inputData = {

                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    ID: pdata.ID,
                    DistrictName: $thisForm.find('[name=DistrictName]').val().trim(),
                    DistrictShortName: $thisForm.find('[name=DistrictShortName]').val().trim(),   
                    StatesID: $thisForm.find('[name=StatesID]').val().trim(),  
                    TransMode: localStorage.getItem("FRM_TRANSMODE"),
                    SortOrder: $thisForm.find('[name=SortOrder]').val().trim()
            };
                localStorage.removeItem("FRM_TRANSMODE");



            console.log('> Update district ajax input',inputData);
             $.ajax({
                 url: "@Url.Action("UpdateDistrictDetails", "District")",
                type: "POST",
                 // headers: { "token_key": "1234" },
                 data: inputData,//<---- Input json : data passed to controller
                dataType: "json",
                 contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                 success: function (ajaxOutput) { //<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                     if (ajaxOutput.Process.IsProcess) {

                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.success(value, "Success");
                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                         });


                         let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                         if (onSuccess) {
                             window[onSuccess]();
                         }

                         //---------- Do stuff if success
                         //toastr.success("Inside success", "Confirmation Box in table");

                         console.log('> update new District success data', ajaxOutput);
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }


                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });

        }

        }



    function getDistrict(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        $.ajax({
            url: '@Url.Action("GetDistrict", "District")',
            type: "GET",
            // headers: { "token_key": "1234" },
            //data: JSON.stringify(inputData),//<---- Input json : data passed to controller
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                // console.log("Data", data);

                if (ajaxOutput.Process.IsProcess) {
                    var districtModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['DistrictID'] });
                    districtModel.then(function (ret) {
                        if (ret) {
                            console.log('>_ Search button > list click', ret);
                            $thisForm.find('[name=ID]').val(ret.ID);
                            $thisForm.find('[name=ID_District]').val(ret.ID_District);
                            $thisForm.find('[name=DistrictName]').val(ret.DtName);
                        }
                        else {
                            console.log(ret);
                        }
                    });
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }

            },

        });
    }

     
       
        function StateAdding(ele) {


            $('#formGroupModalState').modal('show');
        let $savimgContainer = $('#custmr-savsstate');
        $savimgContainer.load('@Url.Action("LoadStateForm", "State")?mtd=@ViewBag.SharePagetransmode', function () {

            let $thisForm = $(this).find('[perfect-class="form"]');
            $thisForm.validate({ messages: validationMessagestate });
            $thisForm.attr('perfect-onFormSuccess', 'fn_loadState_success');
            $('#HeaderIdState').hide();
            $('#formGroupModalState').modal('show');
        });

    }
        function loadStateAddForm() {
        let $savimgContainers = $('#custmr-savsstate');
        $savimgContainers.load('@Url.Action("LoadStateForm", "State")?mtd=@ViewBag.SharePagetransmode', function () {

            let $thisForm = $(this).find('[perfect-class="form"]');
            $thisForm.validate({ messages: validationMessagestate });
            $thisForm.attr('perfect-onFormSuccess', 'fn_loadState_success');
            $('#HeaderIdState').hide();
            $('#formGroupModalState').modal('show');
        });
    }
        function generateStateShortName(ele) {
            let $form = $(ele).closest('[perfect-class="form"]');
            var fullName = $form.find('[name="State"]').val();
            var shortName = generateShortNameFromFullName(fullName);
            $form.find('[name="ShortName"]').val(shortName);
        }

        var validationMessagestate = {

            'CountryID': {
                'required': 'Please Select a Country',
                'digits': 'Invalid Country selected'
            },

            'State': {
                'required': 'Please Enter a Name',
                'stringonly': 'Invalid State Name'
            },

            'ShortName': {
                'required': 'Please Enter a Short Name',
                'stringonly': 'Invalid State Short Name',
                'alphanumeric': 'Invalid State Short Name',
            },


            'GSTINCode': {
                'required': 'Please Enter GSTIN Code.',
                'digits': 'Invalid  GSTIN Code',
                'minlength': jQuery.validator.format(' GSTIN Code. should be {0} characters'),
                'maxlength': jQuery.validator.format(' GSTIN Code. should be {0} characters'),
            },



        };
   
    function fn_loadState_success(ele) {
     
 
        $(ele).closest('.modal').modal('hide');
        GetListstate();
        }

        function GetListstate() {
        let $thisForm = $('[perfect-class="form"]');
        $.ajax({
            url: '@Url.Action("GetStateList", "District")',
            type: "Get",
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {              
                let $menuDropdown = $thisForm.find('[name=StatesID]');//<--- Will give place select html element

               
               $menuDropdown.empty().selectpicker('refresh');
                $menuDropdown.append($('<option/>', { "value": "" }).text("Please Select")).selectpicker('refresh');

                if (ajaxOutput.Process.IsProcess) {
                    console.log(ajaxOutput);
                    $.each(ajaxOutput.Data, function (key, value) {
                        $menuDropdown.append($('<option/>', { "value": value.StatesID }).text(value.StatesName)).selectpicker('refresh');

                    });
               
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        //toastr.warning(value, "Error");
                        NotificationMessage({ 'type': 'warning', 'heading': 'warning', 'message': value });
                    });
                }
            },

          complete: function () { initFunctions($thisForm); }
        });
        }

        function generateDistShortName(ele) {
            debugger
            let $form = $(ele).closest('[perfect-class="form"]');
            var fullName = $form.find('[name="DistrictName"]').val();
            var shortName = generateShortNameFromFullName(fullName);
            $form.find('[name="DistrictShortName"]').val(shortName);
        }

    </script>