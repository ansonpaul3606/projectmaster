
@model PerfectWebERP.Models.EmployeeCreationModel.EmployeeListModel
<style>
</style>

<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">Employee  Creation</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">

                <div class="row">

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Branch Type</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_numeric" perfect-elemet="Branchtype" name="BranchTypeID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="FillBranch(this)">

                                    <option value="">Please Select </option>

                                    @if (!(Model.BranchTypeList is null))
                                    {
                                        foreach (var branchList in Model.BranchTypeList)
                                        {
                                            <option value="@branchList.BranchTypeID">@branchList.BranchType</option>
                                        }

                                    }

                                </select>
                            </div>
                        </div>

                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Branch</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_numeric" name="BranchID" perfect-elemet="Branch" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">

                                    <option value="">Please Select </option>

                                </select>
                            </div>
                        </div>

                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Employee Type</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_numeric" name="EmployeeTypeID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">

                                    <option value="">Please Select </option>

                                    @if (!(Model.EmployeeTypeList is null))
                                    {
                                        foreach (var employeeTypeList in Model.EmployeeTypeList)
                                        {
                                            <option value="@employeeTypeList.EmployeeTypeID">@employeeTypeList.EmployeeType</option>
                                        }

                                    }

                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Employee No.</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control" placeholder="" name="EmployeeNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="text" readonly />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">First Name</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_empname" placeholder="" name="EmployeeName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"/>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Last Name</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_empLastName" placeholder="" name="LEmployeeName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Designation</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_numeric" name="DesignationID" perfect-elemet="Designation" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" perfect-selectButton="Add Designation" perfect-selectButtonAction="DesignationAdding">

                                    <option value="">Please Select </option>

                                    @if (!(Model.DesignationList is null))
                                    {
                                        foreach (var designationList in Model.DesignationList)
                                        {
                                            <option value="@designationList.DesignationID">@designationList.Designation</option>
                                        }

                                    }

                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Department</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_numeric" name="DepartmentID" perfect-class="formGroupControl" perfect-elemet="Department" perfect-ctype="select" perfect-css="select" data-live-search="true" perfect-selectButton="Add Department" perfect-selectButtonAction="DepartmentAdding">

                                    <option value="">Please Select </option>

                                    @if (!(Model.DepartmentList is null))
                                    {
                                        foreach (var departmentList in Model.DepartmentList)
                                        {
                                            <option value="@departmentList.DepartmentID">@departmentList.Department</option>
                                        }

                                    }

                                </select>
                            </div>
                        </div>
                    </div>

                    @*Address Details*@



                    <div class="col-sm-12 Divcontact">

                        <div class="daccordion__header">
                            <span class="accordion__header--text">Address Details</span>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 " perfect-class="TempTableProduct">
                                <br>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Address</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control perfectValidate_textarea" maxlength="500" placeholder="" name="EmployeeAddress" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">PinCode</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="number" class="form-control" placeholder="Type here and search" maxlength="10" name="PinCode" perfect-class="formGroupControl perfectValidate_number_nm" perfect-ctype="input" perfect-css="input" min="0" />
                                                    <div class="input-group-append">
                                                        <button id="addpincode-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="searchbtn(this)"></button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Country</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="text" class="form-control " name="Country" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                    <input type="hidden" name="CountryID" class="form-control perfectValidate_numeric" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <div class="input-group-append">
                                                        @*<button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getCountry(this)"></button>*@
                                                        <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" Form="form" onclick="GetCmnPopUpSearchVal(this,9,'Country List',['','','States','StatesID','DistrictID','District','AreaID','Area','PlaceID','Place','Post','PostID'])" Criterea1="0" Criterea2="0" BindName="Country" BindVal="CountryID"></button>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">State</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="text" class="form-control " name="States" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                    <input type="hidden" name="StatesID" class="form-control perfectValidate_numeric" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <div class="input-group-append">
                                                        @*<button id="addstates-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getStates(this)"></button>*@
                                                        <button id="addstates-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" Form="form" onclick="GetCmnPopUpSearchVal(this,10,'State List',['CountryID','Country','DistrictID','District','AreaID','Area','PlaceID','Place','Post','PostID'])" Criterea1="CountryID" Criterea2="0" BindName="States" BindVal="StatesID"></button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">District</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="text" class="form-control " name="District" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                    <input type="hidden" name="DistrictID" class="form-control perfectValidate_numeric" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <div class="input-group-append">
                                                        @*<button id="adddistrict-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getDistrict(this)"></button>*@
                                                        <button id="adddistrict-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" Form="form" onclick="GetCmnPopUpSearchVal(this,11,'District List',['StatesID','State','AreaID','Area','PlaceID','Place','Post','PostID'])" Criterea1="StatesID" Criterea2="0" BindName="District" BindVal="DistrictID"></button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Area</span>
                                                @*<span class="text-danger">*</span>*@
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="text" class="form-control " name="Area" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                    <input type="hidden" name="AreaID" class="form-control perfectValidate_numeric_nm" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input"/>
                                                    <div class="input-group-append">
                                                        @*<button id="addarea-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getArea(this)"></button>*@
                                                        <button id="addarea-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,14,'Area List',['DistrictID','District','PlaceID','Place','Post','PostID'])" Criterea1="DistrictID" Criterea2="0" BindName="Area" BindVal="AreaID"></button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Post</span>
                                                @*<span class="text-danger">*</span>*@
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="text" class="form-control " name="Post" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                    <input type="hidden" name="PostID" class="form-control perfectValidate_numeric_nm" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <div class="input-group-append">
                                                        @*<button class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getPost(this)"></button>*@
                                                        <button id="addpincode-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,13,'Post List',['AreaID','Area','PlaceID','Place'])" Criterea1="AreaID" Criterea2="" BindName="Post" BindVal="PostID"></button>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Place</span>
                                                @*<span class="text-danger">*</span>*@
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input list="place" type="text" class="form-control " name="Place" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                    <input type="hidden" name="PlaceID" class="form-control perfectValidate_numeric_nm" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input"/>
                                                    <div class="input-group-append">
                                                        @*<button id="addplace-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getPlace(this)"></button>*@
                                                        <button id="addplace-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,12,'Place List',['PostID','Post'])" Criterea1="PostID" Criterea2="0" BindName="Place" BindVal="PlaceID"></button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*Contact Details*@



                    <div class="col-sm-12 Divcontact">

                        <div class="daccordion__header">
                            <span class="accordion__header--text">CONTACT DETAILS</span>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 " perfect-class="TempTableProduct">
                                <br>
                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Mobile</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group mb-2">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text fa fa-phone bg-primary text-white"></span>
                                                    </div>
                                                    <input type="text" id="Mobile" class="form-control perfectValidate_mobile " maxlength="15" placeholder="" name="EmployeeMobile" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Phone</span>
                                                @*<span class="text-danger">*</span>*@
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group mb-2">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text fa fa-phone bg-primary text-white"></span>
                                                    </div>
                                                    <input type="text" id="Phone" class="form-control  perfectValidate_mobile_nm" maxlength="15" placeholder="" name="EmployeePhone" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Email</span>
                                                @*<span class="text-danger">*</span>*@
                                            </label>
                                            <div class="col-sm-8 ">
                                                <div class="input-group mb-2">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text fa fa-envelope bg-primary text-white"></span>
                                                    </div>
                                                    <input type="email" id="Email" class="form-control perfectValidate_email_nm" placeholder="" name="EmployeeEmail" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group row" perfect-class="formGroup">

                                            <div class="col-sm-8">
                                                <button type="button" class="btn btn-rounded btn-success" onclick="ImageLoad(this)">
                                                    <span class="btn-icon-left text-success">
                                                        <i class="fa fa-upload color-success"></i>
                                                    </span>Image Upload
                                                </button>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-sm-12" id="Image-form">

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                   
                </div>
           <div class="card-footer text-right" perfect-class="formFooter">
                @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                {
                    <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="updateEmployee(this)"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                }
                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="AddEmployee(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                </div>
        </form>
    </div>
</div>

<script>
    (function () {
       // jQuery('form').validate(); //<-----  Validate/initialize our form on page load
        jQuery('select').selectpicker();
    })();
   
      var $imgContainer = $('#Image-form');

    function ImageLoad() {

        $imgContainer.load('@Url.Action("LoadImageForm", "CommonPopupSearch", new { mode = 19 })', function () {
            getcase('Employee');
        
            if (Subimg != "") {
                $.each(Subimg, function (key, value) {
                 
                    var Mode = value.EmpImgmode;
                    var code = value.FK_AccountCode;
                    var text = value.Code;
                    console.log('text', text);
                    var imgal = value.EmpImgValue;
                
                    if (Mode == 1) {
                        Getemployeeimg(this, "data:image/;base64," + imgal, Subimg, 'Photo', Mode, value.EmpImgName)

                    }
                    if (Mode == 2) {
                        Getemployeeimg(this, "data:image/;base64," + imgal, Subimg, 'Signature', Mode, value.EmpImgName)

                    }
                    if (Mode == 3) {
                        Getmodecntrl(this, "data:image/;base64," + imgal, Subimg, text, Mode, code, value.EmpImgName)
                        

                    }
                });
            }      


        });
    }

    var Subimg = "";
    function Getsubimg(dataimg) {
       
        Subimg = dataimg;
    }
         function ResetButton(ele) {


             $('.dataTable tr').removeClass("SelectForDelete");
             fn_employeeIndex_loadEmployeeAddForm();
     
    }


    // Function to add new Employee


          function AddEmployee(ele) {

            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability


            //$(ele).find('i').removeClass();

            console.log('> Add Employee form is valid', $thisForm.valid())
            if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

            $(ele).prop('disabled', true); // avoiding form submit the double click


            var inputData = {//<---- Input Json : this is the variable we pass to controller
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),

                'EmployeeID': 0,
               

                'BranchTypeID': $thisForm.find('[name="BranchTypeID"]').val().trim(),
                'BranchID': $thisForm.find('[name="BranchID"]').val().trim(),
                'EmployeeTypeID': $thisForm.find('[name="EmployeeTypeID"]').val().trim(),
                'EmployeeName': $thisForm.find('[name="EmployeeName"]').val().trim(),
                'EmployeeNo': $thisForm.find('[name="EmployeeNo"]').val().trim(),
                'EmployeeAddress': $thisForm.find('[name="EmployeeAddress"]').val().trim(),
                'DesignationID': $thisForm.find('[name="DesignationID"]').val().trim(),
                'DepartmentID': $thisForm.find('[name="DepartmentID"]').val().trim(),
                'CountryID': $thisForm.find('[name="CountryID"]').val().trim(),
                'StatesID': $thisForm.find('[name="StatesID"]').val().trim(),
                'DistrictID': $thisForm.find('[name="DistrictID"]').val().trim(),
                'PinCode': $thisForm.find('[name="PinCode"]').val().trim(),
                'AreaID': $thisForm.find('[name="AreaID"]').val().trim(),
                'PostID': $thisForm.find('[name="PostID"]').val().trim(),
                'PlaceID': $thisForm.find('[name="PlaceID"]').val().trim(),
                'EmployeeMobile': $thisForm.find('[name="EmployeeMobile"]').val().trim(),
                'EmployeePhone': $thisForm.find('[name="EmployeePhone"]').val().trim(),
                'TransMode': EmployeeTransMode,
                'EmployeeEmail': $thisForm.find('[name="EmployeeEmail"]').val().trim(),
                
                'LEmployeeName': $thisForm.find('[name="LEmployeeName"]').val().trim(),



            };

                localStorage.removeItem("FRM_TRANSMODE");
            console.log('> Add Employee ajax input',inputData);


             $.ajax({
                 url: "@Url.Action("AddNewEmployee", "EmployeeCreation")",
                type: "POST",

                 data: inputData,//<---- Input json : data passed to controller
                 dataType: "json",
                 contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                 success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                     if (ajaxOutput.Process.IsProcess) {

                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.success(value, "Success");
                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                         });
                         $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                         $thisForm.find('[perfect-ctype="input"]').val('');
                         $thisForm.find('[perfect-ctype="number"]').val('');



                         let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                         if (onSuccess) {
                             window[onSuccess]($thisForm);
                         }

                         //---------- Do stuff if success

                         console.log('> Add new Employee success data', ajaxOutput);
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });

        }

        }


    // Function to update a customer
    //$('.addcompany-jq-addnewuserUpdate').on('click',
    function updateEmployee(ele) {


            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability

        //perfectCRMvalidation.init($thisForm);
        //if (true) {
            if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                $(ele).prop('disabled', true);

                let pdata = $thisForm.data('pData');

                console.log('> Update Supplier form data saved',pdata);
                let inputData = {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),

                    'EmployeeID': pdata.EmployeeID,
                    'BranchID': $thisForm.find('[name="BranchID"]').val().trim(),
                     'BranchID': $thisForm.find('[name="BranchID"]').val().trim(),
                    'EmployeeTypeID': $thisForm.find('[name="EmployeeTypeID"]').val().trim(),
                    'EmployeeName': $thisForm.find('[name="EmployeeName"]').val().trim(),
                    'EmployeeNo': $thisForm.find('[name="EmployeeNo"]').val().trim(),
                    'EmployeeAddress': $thisForm.find('[name="EmployeeAddress"]').val().trim(),
                    'DesignationID': $thisForm.find('[name="DesignationID"]').val().trim(),
                    'DepartmentID': $thisForm.find('[name="DepartmentID"]').val().trim(),
                    'CountryID': $thisForm.find('[name="CountryID"]').val().trim(),
                    'StatesID': $thisForm.find('[name="StatesID"]').val().trim(),
                    'DistrictID': $thisForm.find('[name="DistrictID"]').val().trim(),
                    'PinCode': $thisForm.find('[name="PinCode"]').val().trim(),
                    'AreaID': $thisForm.find('[name="AreaID"]').val().trim(),
                    'PostID': $thisForm.find('[name="PostID"]').val().trim(),
                    'PlaceID': $thisForm.find('[name="PlaceID"]').val().trim(),
                    'EmployeeMobile': $thisForm.find('[name="EmployeeMobile"]').val().trim(),
                    'EmployeePhone': $thisForm.find('[name="EmployeePhone"]').val().trim(),
                    TransMode: localStorage.getItem("FRM_TRANSMODE"),
                    'EmployeeEmail': $thisForm.find('[name="EmployeeEmail"]').val().trim(),
                    'LEmployeeName': $thisForm.find('[name="LEmployeeName"]').val().trim(),
                   
            };
                localStorage.removeItem("FRM_TRANSMODE");

            console.log('> Update Employee ajax input',inputData);
                $.ajax({
                 url: "@Url.Action("UpdateEmployee", "EmployeeCreation")",
                type: "POST",

                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                 success: function (ajaxOutput) { //<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                     if (ajaxOutput.Process.IsProcess) {

                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.success(value, "Success");
                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                         });


                         let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                         if (onSuccess) {
                             window[onSuccess]();
                         }

                         //---------- Do stuff if success
                         //toastr.success("Inside success", "Confirmation Box in table");

                         console.log('> update new Supplier success data', ajaxOutput);
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }


                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });

        }

        }


 function searchbtn(ele) {

        console.log('Search function run')
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let searchPin = { Pincode: $thisForm.find('[name="PinCode"]').val() };
       $.ajax({
            url: '@Url.Action("GetPinCodedetails", "Organization")',
            type: "POST",
            data: searchPin ,//<---- Input json : data passed to controller
           dataType: "json",
           contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (ajaxOutput) {
                console.log('> Search button click success', ajaxOutput);

                if (ajaxOutput.Process.IsProcess) {


                    var selectedList = createSelectList({ data: ajaxOutput.Data, hideColumn: ["StatesID", "DistrictID", "CountryID", "PlaceID", "PostID", "AreaID"], settings: { size:"modal-lg"} });
                    selectedList.then(function (ret) {
                        if (ret) {
                            //__RequestVerificationToken: $('[name="__RequestVerificationToken"]').val();

                            $thisForm.find('[name="CountryID"]').val(ret['CountryID']);
                            $thisForm.find('[name="Country"]').val(ret['Country']);
                            $thisForm.find('[name="StatesID"]').val(ret['StatesID']);
                            $thisForm.find('[name="States"]').val(ret['States']);
                            $thisForm.find('[name="DistrictID"]').val(ret['DistrictID']);
                            $thisForm.find('[name="District"]').val(ret['District']);
                            $thisForm.find('[name="AreaID"]').val(ret['AreaID']);
                            $thisForm.find('[name="Area"]').val(ret['Area']);
                            $thisForm.find('[name="PlaceID"]').val(ret['PlaceID']);
                            $thisForm.find('[name="Place"]').val(ret['Place']);
                            $thisForm.find('[name="PostID"]').val(ret['PostID']);
                            $thisForm.find('[name="PinCode"]').val(ret['PinCode']);
                            $thisForm.find('[name="Post"]').val(ret['Post'])
                        }
                        else {
                            console.log(ret);
                        }
                    });

                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        //toastr.warning(value, "Error");
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }




            },
            complete: function () {

                //a.find('.dataTables_wrapper').css('width', '100%');
            }
        });

    };
  
   
     function FillBranch(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

         let $dropdown = $thisForm.find('[name="BranchID"]');
         $dropdown.empty();
         $dropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');
         let inputData = {
             __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
             BranchTypeID: $thisForm.find('[name="BranchTypeID"]').val()
         }
         console.log("Input data", inputData)
         $.ajax({
            url: '@Url.Action("GetBranchDetails", "EmployeeCreation")',
            type: "POST",
             data: inputData ,//<---- Input json : data passed to controller
           dataType: "json",
           contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                if (ajaxOutput.Process.IsProcess) {
                    $.each(ajaxOutput.Data, function (key, value) {
                        $dropdown.append($('<option/>', { value: value.BranchID }).text(value.Branch)).selectpicker('refresh');
                    });

                    if ($dropdown.attr('perfect-onloadSelect')) {
                        $dropdown.val($dropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                    }

                }
                else {

                    if (ajaxOutput.Process.Status == 'NoData') {
                        NotificationMessage({ 'info': 'error', 'heading': 'Error', 'message': "No Branch Found" });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }


                },


            });


    }

    function getCountry(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

               //console.log("Input data",inputData)

                $.ajax({
                 url: '@Url.Action("GetCountryList", "Organization")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                    type: "GET",


                dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var countryModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['CountryID'] });
                            countryModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=CountryID]').val(ret.CountryID);
                                    $thisForm.find('[name=Country]').val(ret.Country);                                    
                                    $thisForm.find('[name="StatesID"]').val('');
                                    $thisForm.find('[name="DistrictID"]').val('');
                                    $thisForm.find('[name="PostID"]').val('');
                                    $thisForm.find('[name="AreaID"]').val('');
                                    $thisForm.find('[name="PlaceID"]').val('');
                                    $thisForm.find('[name="States"]').val('');
                                    $thisForm.find('[name="District"]').val('');
                                    $thisForm.find('[name="Post"]').val('');
                                    $thisForm.find('[name="Area"]').val('');
                                    $thisForm.find('[name="Place"]').val('');
                                    $thisForm.find('[name=PinCode]').val('');
                                    //--

                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {


                            $thisForm.find('[name=CountryID]').val('');
                            $thisForm.find('[name=Country]').val('');

                            //--

                            $thisForm.find('[name="StatesID"]').val('');
                            $thisForm.find('[name="DistrictID"]').val('');
                            $thisForm.find('[name="PostID"]').val('');
                            $thisForm.find('[name="AreaID"]').val('');
                            $thisForm.find('[name="PlaceID"]').val('');


                            $thisForm.find('[name="States"]').val('');
                            $thisForm.find('[name="District"]').val('');
                            $thisForm.find('[name="Post"]').val('');
                            $thisForm.find('[name="Area"]').val('');
                            $thisForm.find('[name="Place"]').val('');
                            $thisForm.find('[name=PinCode]').val('');
                                    //--


                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }


                },


            });


    }
    function getStates(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let countryid = { countryID : $thisForm.find('[name=CountryID]').val() }
               //console.log("Input data",inputData)

                $.ajax({
                    url: '@Url.Action("GetStateList", "Organization")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                  data: countryid ,
                  dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var stateModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['StatesID', 'CountryID', 'GSTINCode', 'ShortName','SortOrder'] });
                            stateModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=StatesID]').val(ret.StatesID);
                                    $thisForm.find('[name=States]').val(ret.States);

                                    //--

                                    $thisForm.find('[name="DistrictID"]').val('');
                                    $thisForm.find('[name="PostID"]').val('');
                                    $thisForm.find('[name="AreaID"]').val('');
                                    $thisForm.find('[name="PlaceID"]').val('');

                                    $thisForm.find('[name="District"]').val('');
                                    $thisForm.find('[name="Post"]').val('');
                                    $thisForm.find('[name="Area"]').val('');
                                    $thisForm.find('[name="Place"]').val('');
                                    $thisForm.find('[name=PinCode]').val('');
                                    //--
                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {

                            $thisForm.find('[name=StatesID]').val('');
                            $thisForm.find('[name=States]').val('');

                            $thisForm.find('[name="DistrictID"]').val('');
                            $thisForm.find('[name="PostID"]').val('');
                            $thisForm.find('[name="AreaID"]').val('');
                            $thisForm.find('[name="PlaceID"]').val('');

                            $thisForm.find('[name="District"]').val('');
                            $thisForm.find('[name="Post"]').val('');
                            $thisForm.find('[name="Area"]').val('');
                            $thisForm.find('[name="Place"]').val('');
                            $thisForm.find('[name=PinCode]').val('');

                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }

                },


            });


    }

      function getDistrict(ele) {
          let $thisForm = $(ele).closest('[perfect-class="form"]');
          let statesid = { statesid: parseInt($thisForm.find('[name=StatesID]').val()) }
          console.log("Input data", statesid)

                $.ajax({
                    url: '@Url.Action("GetDistrictList", "Organization")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                    data: statesid,
                  dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var districtModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['DistrictID'] });
                            districtModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=DistrictID]').val(ret.DistrictID);
                                    $thisForm.find('[name=District]').val(ret.District);

                                    //--

                                    $thisForm.find('[name="PostID"]').val('');
                                    $thisForm.find('[name="AreaID"]').val('');
                                    $thisForm.find('[name="PlaceID"]').val('');



                                    $thisForm.find('[name="Post"]').val('');
                                    $thisForm.find('[name="Area"]').val('');
                                    $thisForm.find('[name="Place"]').val('');
                                    $thisForm.find('[name=PinCode]').val('');
                                    //--


                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {
                            $thisForm.find('[name=DistrictID]').val('');
                            $thisForm.find('[name=District]').val('');

                            //--

                            $thisForm.find('[name="PostID"]').val('');
                            $thisForm.find('[name="AreaID"]').val('');
                            $thisForm.find('[name="PlaceID"]').val('');



                            $thisForm.find('[name="Post"]').val('');
                            $thisForm.find('[name="Area"]').val('');
                            $thisForm.find('[name="Place"]').val
                            $thisForm.find('[name=PinCode]').val('');
                                    //--


                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }

                },


            });

    }


      function getArea(ele) {
          let $thisForm = $(ele).closest('[perfect-class="form"]');
          let districtid = { districtid: parseInt($thisForm.find('[name=DistrictID]').val()) }
          console.log("Input data", districtid)

                $.ajax({
                    url: '@Url.Action("GetAreaList", "Organization")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                    data: districtid,
                  dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var districtModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['AreaID'] });
                            districtModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=AreaID]').val(ret.AreaID);
                                    $thisForm.find('[name=Area]').val(ret.Area);




                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {
                            $thisForm.find('[name=AreaID]').val('');
                            $thisForm.find('[name=Area]').val('');

                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }

                },


            });


    }



    function getPlace(ele) {
          let $thisForm = $(ele).closest('[perfect-class="form"]');
          let districtid = { districtid: parseInt($thisForm.find('[name=DistrictID]').val()) }
          console.log("Input data", districtid)

                $.ajax({
                    url: '@Url.Action("GetPlaceList", "Organization")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                    data: districtid,
                  dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var placeModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['PlaceID'] });
                            placeModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=PlaceID]').val(ret.PlaceID);
                                    $thisForm.find('[name=Place]').val(ret.Place);

                                    $thisForm.find('[name=PostID]').val('');
                                    $thisForm.find('[name=Post]').val('');
                                    $thisForm.find('[name=PinCode]').val('');


                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {
                            $thisForm.find('[name=PlaceID]').val('');
                            $thisForm.find('[name=Place]').val('');

                            $thisForm.find('[name=PostID]').val('');
                            $thisForm.find('[name=Post]').val('');

                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }

                },


            });

    }


    function getPost(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let inputData = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            DistrictID: parseInt($thisForm.find('[name=DistrictID]').val()),
            PlaceID: parseInt($thisForm.find('[name=PlaceID]').val())

        };

                $.ajax({
                    url: '@Url.Action("GetPostList", "Organization")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                    type: "POST",
                    data: inputData,
                  dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var postModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['PostID'] });
                              postModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=PostID]').val(ret.PostID);
                                    $thisForm.find('[name=Post]').val(ret.Post);
                                    $thisForm.find('[name=PinCode]').val(ret.PinCode);
                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {
                            $thisForm.find('[name=PostID]').val('');
                            $thisForm.find('[name=Post]').val('');
                            $thisForm.find('[name=PinCode]').val('');
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }

                },


            });


    }

    function DesignationAdding(ele) {

            
            let $tempModel = createSearchModalDOM().modal;

            $tempModel.find('.modal-title').addClass("d-none");
            $tempModel.show
            $tempModel.find('.modal-dialog').addClass('modal-xl')

            $tempModel.find('.modal-body').load('@Url.Action("LoadDesignationForm", "Designation")', function () {

                let $thisForm = $(this).find('[perfect-class="form"]');
                $thisForm.validate({ messages: validationMessageDes });
                $thisForm.attr('perfect-onFormSuccess', 'fn_loadDesignation_success');
                let $menuButton = $(this).find('[perfect-class="menuButton"]')
                $menuButton.hide();

            });
    
    }
   
    function fn_loadDesignation_success(ele) {
     
       
        $(ele).closest('.modal').modal('hide');
        GetListDesignation();
    }
    var validationMessageDes = {
        'Designation': {
            'required': 'Please Enter a Name',
            'maxlength': jQuery.validator.format(' Name should be less than {0} characters'),
            'stringonly': 'Special characters are not allowed in  Name'

        },
        'ShortName': {
            'required': 'Please Enter a Short Name',
            'maxlength': jQuery.validator.format(' Name should be less than {0} characters'),
            'alphanumeric': 'Special characters are not allowed in short name'
        },

        'EmployeeLevelID': {
            'required': 'Please Select a Employee Level',
            'digits': 'Invalid Employee Level selected'
        },
    };

    function GetListDesignation() {
        let $thisForm = $('[perfect-class="form"]');
        $.ajax({
            url: '@Url.Action("GetDesignationList", "EmployeeCreation")',
            type: "Get",
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {              
                let $menuDropdown = $thisForm.find('[name=DesignationID]');//<--- Will give place select html element

               
               $menuDropdown.empty().selectpicker('refresh');
                $menuDropdown.append($('<option/>', { "value": "" }).text("Please Select")).selectpicker('refresh');

                if (ajaxOutput.Process.IsProcess) {
                    console.log(ajaxOutput);
                    $.each(ajaxOutput.Data, function (key, value) {
                        $menuDropdown.append($('<option/>', { "value": value.DesignationID }).text(value.Designation)).selectpicker('refresh');

                    });
               
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        //toastr.warning(value, "Error");
                        NotificationMessage({ 'type': 'warning', 'heading': 'warning', 'message': value });
                    });
                }
            },

          complete: function () { initFunctions($thisForm); }
        });
    }
    function DepartmentAdding(ele) {

            
            let $tempModel = createSearchModalDOM().modal;

            $tempModel.find('.modal-title').addClass("d-none");
            $tempModel.show
            $tempModel.find('.modal-dialog').addClass('modal-xl')

            $tempModel.find('.modal-body').load('@Url.Action("LoadDepartmentForm", "Department")', function () {

                let $thisForm = $(this).find('[perfect-class="form"]');
                $thisForm.validate({ messages: validationMessageDept });
                $thisForm.attr('perfect-onFormSuccess', 'fn_loadDepartment_success');
                let $menuButton = $(this).find('[perfect-class="menuButton"]')
                $menuButton.hide();

            });
    
    }
    var validationMessageDept = {
        'DepartmentName': {
            'required': 'Please Enter a Name',
            'maxlength': jQuery.validator.format(' Name should be less than {0} characters'),
            'stringonly': 'Special characters are not allowed in  Name'

        },
        'DepartmentShortName': {
            'required': 'Please Enter a Short Name',
            'maxlength': jQuery.validator.format(' Name should be less than {0} characters'),
            'alphanumeric': 'Special characters are not allowed in short name'
        },
        'FK_DeptMode': {
            'required': 'Please select a category'
        }

    };
   
    function fn_loadDepartment_success(ele) {
     
        debugger;
        $(ele).closest('.modal').modal('hide');
        GetListDepartment();
     }

    function GetListDepartment() {
        let $thisForm = $('[perfect-class="form"]');
        $.ajax({
            url: '@Url.Action("GetDepartmentList", "EmployeeCreation")',
            type: "Get",
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {              
                let $menuDropdown = $thisForm.find('[name=DepartmentID]');//<--- Will give place select html element

               
               $menuDropdown.empty().selectpicker('refresh');
                $menuDropdown.append($('<option/>', { "value": "" }).text("Please Select")).selectpicker('refresh');

                if (ajaxOutput.Process.IsProcess) {
                    console.log(ajaxOutput);
                    $.each(ajaxOutput.Data, function (key, value) {
                        $menuDropdown.append($('<option/>', { "value": value.DepartmentID }).text(value.Department)).selectpicker('refresh');

                    });
               
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        //toastr.warning(value, "Error");
                        NotificationMessage({ 'type': 'warning', 'heading': 'warning', 'message': value });
                    });
                }
            },

          complete: function () { initFunctions($thisForm); }
        });
    }
     $(document).ready(function () {

        let $thisform = $('[perfect-class="form"]');
           $thisform.find('[name="CountryID"]').val('@ViewBag.ID_Country');
         $thisform.find('[name="Country"]').val('@ViewBag.CountryName');
        
     });
    function generateDesigShortName(ele) {

        let $form = $(ele).closest('[perfect-class="form"]');
        var fullName = $form.find('[name="Designation"]').val();
        var shortName = generateShortNameFromFullName(fullName);
        $form.find('[name="ShortName"]').val(shortName);
    }
    function generateDeptShortName(ele) {

        let $form = $(ele).closest('[perfect-class="form"]');
        var fullName = $form.find('[name="DepartmentName"]').val();
        var shortName = generateShortNameFromFullName(fullName);
        $form.find('[name="DepartmentShortName"]').val(shortName);
    }
</script>


