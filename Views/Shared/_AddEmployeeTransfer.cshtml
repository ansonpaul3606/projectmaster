
@model PerfectWebERP.Models.EmployeeTransferModel.EmployeeListModel
<style>
</style>

<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">Employee Transfer </h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">

                <div class="row">

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span id="lblEmpl" perfect-class="formGroupLabel">Employee</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="hidden" name="ID_EmployeeTransfer" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <input type="text" class="form-control " name="Employee" perfect-tempTable-EmployeeDetailsTable="Employee" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" class="form-control perfectValidate_numeric" name="EmployeeID" perfect-tempTable-EmployeeDetailsTable="EmployeeID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        <button id="addemployee-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,130,'Employee List',[],['Code','EmployeeNo','BranchTypeID','BranchID','DepartmentID','DesignationID','NewDepartmentID','NewDesignationID','NewBranchID','NewBranchtypeID','BranchID2','NewBranchID2'])" bindname="Employee" bindval="EmployeeID" Function="1"></button>
                                    </div>
                                </div>
                                <div class="text-danger temptableError"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Employee No.</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control" placeholder="" name="EmployeeNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="text" readonly />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Branch Type</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control" perfect-elemet="BranchTypeID" name="BranchTypeID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="FillBranch(this)" readonly>

                                    <option value="">Please Select </option>

                                    @if (!(Model.BranchTypeList is null))
                                    {
                                        foreach (var branchList in Model.BranchTypeList)
                                        {
                                            <option value="@branchList.BranchTypeID">@branchList.BranchType</option>
                                        }

                                    }

                                </select>
                            </div>
                        </div>

                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Branch</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <input type="hidden" name="BranchID2" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                <select class="form-control " name="BranchID" perfect-elemet="BranchID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" readonly>

                                    <option value="">Please Select </option>

                                </select>
                            </div>
                        </div>

                    </div>



                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Designation</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control " name="DesignationID" perfect-elemet="DesignationID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" perfect-selectButton="Add Designation" perfect-selectButtonAction="DesignationAdding" readonly>

                                    <option value="">Please Select </option>

                                    @if (!(Model.DesignationList is null))
                                    {
                                        foreach (var designationList in Model.DesignationList)
                                        {
                                            <option value="@designationList.DesignationID">@designationList.Designation</option>
                                        }

                                    }

                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Department</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control" name="DepartmentID" perfect-class="formGroupControl" perfect-elemet="DepartmentID" perfect-ctype="select" perfect-css="select" data-live-search="true" perfect-selectButton="Add Department" perfect-selectButtonAction="DepartmentAdding">

                                    <option value="">Please Select </option>

                                    @if (!(Model.DepartmentList is null))
                                    {
                                        foreach (var departmentList in Model.DepartmentList)
                                        {
                                            <option value="@departmentList.DepartmentID">@departmentList.Department</option>
                                        }

                                    }

                                </select>
                            </div>
                        </div>
                    </div>



                    <div class="col-sm-12">

                        <div id="accordion-Two" class="accordion accordion-active-header">


                            <div class="accordion__header collapsed" id="MaterialDetails" data-target="#active-header_collapseTwo1" aria-expanded="true">
                                <span class="accordion__header--icon"></span>
                                <span class="accordion__header--text">Employee Transfer Details</span>

                            </div>
                            <br>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group row" perfect-class="formGroup">
                                        <label class="col-sm-4 col-form-label">
                                            <span perfect-class="formGroupLabel">Branch Type</span>
                                            <span class="text-danger">*</span>
                                        </label>
                                        <div class="col-sm-8">
                                            <select class="form-control perfectValidate_numeric" perfect-elemet="NewBranchtypeID" name="NewBranchtypeID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="FillNewBranch(this)">

                                                <option value="">Please Select </option>

                                                @if (!(Model.BranchTypeList is null))
                                                {
                                                    foreach (var branchList in Model.BranchTypeList)
                                                    {
                                                        <option value="@branchList.BranchTypeID">@branchList.BranchType</option>
                                                    }

                                                }

                                            </select>
                                        </div>
                                    </div>

                                </div>

                                <div class="col-sm-6">
                                    <div class="form-group row" perfect-class="formGroup">
                                        <label class="col-sm-4 col-form-label">
                                            <span perfect-class="formGroupLabel">Branch</span>
                                            <span class="text-danger">*</span>
                                        </label>
                                        <div class="col-sm-8">

                                            <select class="form-control perfectValidate_numeric" name="NewBranchID" perfect-elemet="NewBranchID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">

                                                <option value="">Please Select </option>

                                            </select>
                                        </div>
                                    </div>

                                </div>

                                <div class="col-sm-6">
                                    <div class="form-group row" perfect-class="formGroup">
                                        <label class="col-sm-4 col-form-label">
                                            <span perfect-class="formGroupLabel">Designation</span>
                                            <span class="text-danger">*</span>
                                        </label>
                                        <div class="col-sm-8">
                                            <select class="form-control perfectValidate_numeric" name="NewDesignationID" perfect-elemet="NewDesignationID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" perfect-selectButton="Add Designation" perfect-selectButtonAction="DesignationAdding">

                                                <option value="">Please Select </option>

                                                @if (!(Model.DesignationList is null))
                                                {
                                                    foreach (var designationList in Model.DesignationList)
                                                    {
                                                        <option value="@designationList.DesignationID">@designationList.Designation</option>
                                                    }

                                                }

                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group row" perfect-class="formGroup">
                                        <label class="col-sm-4 col-form-label">
                                            <span perfect-class="formGroupLabel">Department</span>
                                            <span class="text-danger">*</span>
                                        </label>
                                        <div class="col-sm-8">
                                            <select class="form-control perfectValidate_numeric" name="NewDepartmentID" perfect-class="formGroupControl" perfect-elemet="NewDepartmentID" perfect-ctype="select" perfect-css="select" data-live-search="true" perfect-selectButton="Add Department" perfect-selectButtonAction="DepartmentAdding">

                                                <option value="">Please Select </option>

                                                @if (!(Model.DepartmentList is null))
                                                {
                                                    foreach (var departmentList in Model.DepartmentList)
                                                    {
                                                        <option value="@departmentList.DepartmentID">@departmentList.Department</option>
                                                    }

                                                }

                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>


                        </div>


                        <div class="col-sm-12">
                            <div class="form-group row" perfect-class="formGroup">

                                <div class="table-responsive" perfect-tempTable="MaterialDetailsTable" id="Material" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                            </div>
                        </div>
                    </div>





                </div>

            </div>
            <div class="card-footer text-right" perfect-class="formFooter">
                @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                {
                    <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="AddEmployeeTransfer(this,'Update')"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                }
                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="AddEmployeeTransfer(this,'Add')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
            </div>
          
        </form>
    </div>
</div>

<script>
    (function () {
      
        jQuery('select').selectpicker();
    })();
      
   
   
  
         function ResetButton(ele) {


             //$('.dataTable tr').removeClass("SelectForDelete");
             fn_employeetransfer_loadEmployeeAddForm();
    
          }


    // Function to add new Employee

    function AddEmployeeTransfer(ele,actiontype) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.valid()) {
                              
                    $(ele).prop('disabled', true);

                    var inputData = {
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        'ID_EmployeeTransfer': isNaN(parseInt($thisForm.find('[name=ID_EmployeeTransfer]').val())) ? 0 : parseInt($thisForm.find('[name=ID_EmployeeTransfer]').val()),
                        'NewBranchtypeID': $thisForm.find('[name="NewBranchtypeID"]').val().trim(),
                        'NewBranchID': $thisForm.find('[name="NewBranchID"]').val().trim(),
                        'NewDesignationID': $thisForm.find('[name="NewDesignationID"]').val().trim(),
                        'NewDepartmentID': $thisForm.find('[name="NewDepartmentID"]').val().trim(),
                        'EmployeeID': $thisForm.find('[name="EmployeeID"]').val().trim(),
                        'DepartmentID': $thisForm.find('[name="DepartmentID"]').val().trim(),
                        'DesignationID': $thisForm.find('[name="DesignationID"]').val().trim(),
                        'BranchID': $thisForm.find('[name="BranchID"]').val().trim(),
                        'BranchTypeID': $thisForm.find('[name="BranchTypeID"]').val()?.trim()


                          
                    };
                    let _ActionUrl = "";
                    if (actiontype == "Add") { _ActionUrl = "@Url.Action("AddEmployeeTransfer", "EmployeeTransfer")"; } else { _ActionUrl = "@Url.Action("UpdateEmployeeTransfer", "EmployeeTransfer")"; }

                    $.ajax({
                        url: (actiontype == "Add") ? "@Url.Action("AddEmployeeTransfer", "EmployeeTransfer")" : "@Url.Action("UpdateEmployeeTransfer", "EmployeeTransfer")",
                        type: "POST",
                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (data) {

                            if (data.Process.IsProcess) {

                                $.each(data.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                });
                                $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                $thisForm.find('[perfect-ctype="input"]').val('');
                                $thisForm.find('[perfect-ctype="date"]').val('');
                                $thisForm.find('[perfect-ctype="hidden"]').val('');


                                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                if (onSuccess) {
                                    fn_employeetransfer_initialLoad();
                                }
                            }
                            else {
                                $.each(data.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                        },
                        complete: function () {
                            $(ele).prop('disabled', false);
                        }
                    });
               

            
        }
    }



    @*function AddEmployeeTransfer(ele,actiontype) {

            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability


           

            console.log('> Add Employee form is valid', $thisForm.valid())
            if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

            $(ele).prop('disabled', true); // avoiding form submit the double click


            var inputData = {//<---- Input Json : this is the variable we pass to controller
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),

                
                'ID_EmployeeTransfer': isNaN(parseInt($thisForm.find('[name=ID_EmployeeTransfer]').val())) ? 0 : parseInt($thisForm.find('[name=ID_EmployeeTransfer]').val()),


                'NewBranchtypeID': $thisForm.find('[name="NewBranchtypeID"]').val().trim(),
                'NewBranchID': $thisForm.find('[name="NewBranchID"]').val().trim(),
                'NewDesignationID': $thisForm.find('[name="NewDesignationID"]').val().trim(),
                'NewDepartmentID': $thisForm.find('[name="NewDepartmentID"]').val().trim(),
                'EmployeeID': $thisForm.find('[name="EmployeeID"]').val().trim(),
                'DepartmentID': $thisForm.find('[name="DepartmentID"]').val().trim(),
                'DesignationID': $thisForm.find('[name="DesignationID"]').val().trim(),
                'BranchID': $thisForm.find('[name="BranchID"]').val().trim(),
                'BranchTypeID': $thisForm.find('[name="BranchTypeID"]').val()?.trim()
                



            };

                localStorage.removeItem("FRM_TRANSMODE");
            console.log('> Add Employee ajax input',inputData);
                    let _ActionUrl = "";
                    if (actiontype == "Add") { _ActionUrl = "@Url.Action("AddEmployeeTransfer", "EmployeeTransfer")"; } else { _ActionUrl = "@Url.Action("UpdateEmployeeTransfer", "EmployeeTransfer")"; }


             $.ajax({
                        url: (actiontype == "Add") ? "@Url.Action("AddEmployeeTransfer", "EmployeeTransfer")" : "@Url.Action("UpdateEmployeeTransfer", "EmployeeTransfer")",
                type: "POST",

                 data: inputData,//<---- Input json : data passed to controller
                 dataType: "json",
                 contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                 success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                     if (ajaxOutput.Process.IsProcess) {

                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.success(value, "Success");
                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                         });
                         $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                         $thisForm.find('[perfect-ctype="input"]').val('');
                         $thisForm.find('[perfect-ctype="number"]').val('');



                         let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                         if (onSuccess) {
                             window[onSuccess]($thisForm);
                         }

                         //---------- Do stuff if success

                         console.log('> Add new Employee success data', ajaxOutput);
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });

        }

        }*@



    @*function updateEmployeeTransfer(ele) {


            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability

        //perfectCRMvalidation.init($thisForm);
        //if (true) {
            if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                $(ele).prop('disabled', true);

                let pdata = $thisForm.data('pData');

                console.log('> Update Supplier form data saved',pdata);
                let inputData = {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),

                    'ID_EmployeeTransfer': pdata.ID_EmployeeTransfer,

                    //'ID_EmployeeTransfer': isNaN(parseInt($thisForm.find('[name=ID_EmployeeTransfer]').val())) ? 0 : parseInt($thisForm.find('[name=ID_EmployeeTransfer]').val()),


                    'NewBranchtypeID': $thisForm.find('[name="NewBranchtypeID"]').val().trim(),
                    'NewBranchID': $thisForm.find('[name="NewBranchID"]').val().trim(),
                    'NewDesignationID': $thisForm.find('[name="NewDesignationID"]').val().trim(),
                    'NewDepartmentID': $thisForm.find('[name="NewDepartmentID"]').val().trim(),
                    'EmployeeID': $thisForm.find('[name="EmployeeID"]').val().trim(),
                    'DepartmentID': $thisForm.find('[name="DepartmentID"]').val().trim(),
                    'DesignationID': $thisForm.find('[name="DesignationID"]').val().trim(),
                    'BranchID': $thisForm.find('[name="BranchID"]').val().trim(),
                    'BranchTypeID': $thisForm.find('[name="BranchTypeID"]').val().trim(),


            };
                localStorage.removeItem("FRM_TRANSMODE");

            console.log('> Update Employee ajax input',inputData);
                $.ajax({
                 url: "@Url.Action("UpdateEmployeeTransfer", "EmployeeTransfer")",
                type: "POST",

                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                 success: function (ajaxOutput) { //<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                     if (ajaxOutput.Process.IsProcess) {

                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.success(value, "Success");
                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                         });


                         let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                         if (onSuccess) {
                             window[onSuccess]();
                         }

                         //---------- Do stuff if success
                         //toastr.success("Inside success", "Confirmation Box in table");

                         console.log('> update new Supplier success data', ajaxOutput);
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }


                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });

        }

        }*@ 

    function FillBranch(ele) {
         debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

         let $dropdown = $thisForm.find('[name="BranchID"]');
         $dropdown.empty();
         $dropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');
         let inputData = {
             __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
             BranchTypeID: $thisForm.find('[name="BranchTypeID"]').val()
         }
         console.log("Input data", inputData)
         $.ajax({
            url: '@Url.Action("GetBranchDetails", "EmployeeTransfer")',
            type: "POST",
             data: inputData ,//<---- Input json : data passed to controller
           dataType: "json",
           contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                if (ajaxOutput.Process.IsProcess) {
                    $.each(ajaxOutput.Data, function (key, value) {
                        $dropdown.append($('<option/>', { value: value.BranchID }).text(value.Branch)).selectpicker('refresh');
                    });

                    if ($dropdown.attr('perfect-onloadSelect')) {
                        $dropdown.val($dropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                    }

                }
                else {

                    if (ajaxOutput.Process.Status == 'NoData') {
                        NotificationMessage({ 'info': 'error', 'heading': 'Error', 'message': "No Branch Found" });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }


                },


            });


    }
     function FillNewBranch(ele) {
         debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

         let $dropdown = $thisForm.find('[name="NewBranchID"]');
         $dropdown.empty();
         $dropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');

        
         let inputData = {
             //__RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
             NewBranchtypeID: $thisForm.find('[name="NewBranchtypeID"]').val()
         }
         console.log("Input data", inputData)
         $.ajax({
            url: '@Url.Action("GetNewBranchDetails", "EmployeeTransfer")',
            type: "POST",
             data: inputData ,
           dataType: "json",
           contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (ajaxOutput) {
                       

                if (ajaxOutput.Process.IsProcess) {
                    $.each(ajaxOutput.Data, function (key, value) {
                        $dropdown.append($('<option/>', { value: value.NewBranchID }).text(value.NewBranch)).selectpicker('refresh');
                    });
                

                    if ($dropdown.attr('perfect-onloadSelect')) {
                        $dropdown.val($dropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                    }

                }
                else {

                    if (ajaxOutput.Process.Status == 'NoData') {
                        NotificationMessage({ 'info': 'error', 'heading': 'Error', 'message': "No Branch Found" });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }


                },


            });


    }


    function DesignationAdding(ele) {


            let $tempModel = createSearchModalDOM().modal;

            $tempModel.find('.modal-title').addClass("d-none");
            $tempModel.show
            $tempModel.find('.modal-dialog').addClass('modal-xl')

            $tempModel.find('.modal-body').load('@Url.Action("LoadDesignationForm", "Designation")', function () {

                let $thisForm = $(this).find('[perfect-class="form"]');
                $thisForm.attr('perfect-onFormSuccess', 'fn_loadDesignation_success');
                $thisForm.validate();


            });

    }

    function fn_loadDesignation_success(ele) {


        $(ele).closest('.modal').modal('hide');
        GetListDesignation();
     }

    function GetListDesignation() {
        let $thisForm = $('[perfect-class="form"]');
        $.ajax({
            url: '@Url.Action("GetDesignationList", "EmployeeTransfer")',
            type: "Get",
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
               
               
                let $placeDropdown = $thisForm.find('[name=DesignationID]');//<--- Will give place select html element
                $placeDropdown.empty().selectpicker('refresh');
                $placeDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');

                if (ajaxOutput.Process.IsProcess) {

                    $.each(ajaxOutput.Data, function (key, value) {
                        $placeDropdown.append($('<option/>', { "value": value.DesignationID }).text(value.Designation)).selectpicker('refresh')

                    });
                    if ($placeDropdown.attr('perfect-onloadSelect')) {
                        $placeDropdown.val($placeDropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                    }

                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {

                    });
                }
            },

          complete: function () { initFunctions($thisForm); }
        });
    }

    
    function DepartmentAdding(ele) {


            let $tempModel = createSearchModalDOM().modal;

            $tempModel.find('.modal-title').addClass("d-none");
            $tempModel.show
            $tempModel.find('.modal-dialog').addClass('modal-xl')

            $tempModel.find('.modal-body').load('@Url.Action("LoadDepartmentForm", "Department")', function () {

                let $thisForm = $(this).find('[perfect-class="form"]');
                $thisForm.attr('perfect-onFormSuccess', 'fn_loadDesignation_success');
                $thisForm.validate();


            });

    }

    function fn_loadDesignation_success(ele) {


        $(ele).closest('.modal').modal('hide');
        GetListDepartment();
     }

    function GetListDepartment() {
        let $thisForm = $('[perfect-class="form"]');
        $.ajax({
            url: '@Url.Action("GetDepartmentList", "EmployeeTransfer")',
            type: "Get",
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {              
                let $menuDropdown = $thisForm.find('[name=DepartmentID]');//<--- Will give place select html element

               
               $menuDropdown.empty().selectpicker('refresh');
                $menuDropdown.append($('<option/>', { "value": "" }).text("Please Select")).selectpicker('refresh');

                if (ajaxOutput.Process.IsProcess) {
                    console.log(ajaxOutput);
                    $.each(ajaxOutput.Data, function (key, value) {
                        $menuDropdown.append($('<option/>', { "value": value.DepartmentID }).text(value.Department)).selectpicker('refresh');

                    });
               
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        //toastr.warning(value, "Error");
                        NotificationMessage({ 'type': 'warning', 'heading': 'warning', 'message': value });
                    });
                }
            },

          complete: function () { initFunctions($thisForm); }
        });
    }

    function getfunction(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
debugger
       
        let br = $thisForm.find('[name="BranchID2"]').val();
        $thisForm.find('[name="BranchID"]').attr('perfect-onloadSelect', br);

        $thisForm.find('[name="NewBranchID"]').attr('perfect-onloadSelect', br);

        $thisForm.find('[name="BranchTypeID"]').trigger('change');

        $thisForm.find('[name="NewBranchtypeID"]').trigger('change');
     
       


  
    }
</script>



