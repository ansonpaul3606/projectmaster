

@model PerfectWebERP.Models.EquipmentRepair.RepairListModel
<div class="card ">
    <div class="card-header">
        <h4 class="card-title col-12">@ViewBag.headlog </h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Mode</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <input type="hidden" name="ID_EquipmentRentalDetails" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" value="0" />
                                <input type="hidden" name="RentalDate" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" value="" />
                                <input type="hidden" name="FK_MasterID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" value="0" />
                                <select class="form-control" id="ModeID" name="ModeID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="changevehiclepop(this)">
                                    @*<option value="">Please select</option>*@
                                    @if (!(Model.ActionStatusList is null))
                                    {
                                        foreach (var ModeList in Model.ActionStatusList)
                                        {
                                            <option value="@ModeList.ID_Mode">@ModeList.ModeName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>


                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label" id="Products">
                                @ViewBag.lblpro
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control perfectValidate_string" perfect-tempTable-Purchase="EmpName" id="ID_Name" name="ID_Name" perfect-class="formGroupControl" perfect-ctype="input" maxlength="25" perfect-css="input" readonly />
                                    <input type="hidden" name="ID_FIELD" perfect-tempTable-Purchase="Item" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append" id="btnVehPopup">
                                        <button id="addcountry-jq-searchButton3" name="prdbtn" class="btn btn-primary fa fa-search" type="button" onclick="fn_showpopuplist(this)" perfect-css="button" Function="1"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel" class="label_name_rental">Rental Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date" name="EquRentalDate" id="EquRentalDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" />
                              



                            </div>
                        </div>
                    </div>

                    @*<div class="col-sm-4" id="Rentaldate">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Return Date</span>
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-sm-8">
                                    <input type="date" class="form-control perfectValidate_date" name="EquOperatorExpDate" id="EquOperatorExpDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" onchange="fndatecheck(this)" />
                                    <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>

                                </div>
                            </div>
                        </div>*@



                    <div class="col-sm-4" id="klm">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Kilometer</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control perfectValidate_string " name="Distance" maxlength="10" id="Distance" perfect-class="formGroupControl" min="0" perfect-ctype="input" oninput="decimalpnt(this,'Amount',3)" perfect-css="input" readonly />
                                    <input type="text" class="form-control perfectValidate_string" name="totalKm" maxlength="10" id="totalKm" perfect-class="formGroupControl" min="0" perfect-ctype="input"  oninput="decimalpnt(this,'Amount',3)" onkeypress='return isNumberKey(event)' perfect-css="input" onchange="kilometetcheck(this)" />
                                    <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>

                                    @*<div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>*@

                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Name</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control" placeholder="" id="EquOperator" name="EquOperator" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="50" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Phone</span>
                            </label>
                            <div class="col-sm-8">
                                @*<input type="text" class="form-control" placeholder="" name="EquOperatorMobile" id="EquOperatorMobile" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="15" oninput="this.value = this.value.replace(/[^0-9 ()&]/g, '').replace(/\*(?=\.)*/g, '$1');" />*@
                                <input type="text" id="EquOperatorMobile" class="form-control perfectValidate_mobile " maxlength="15" placeholder="" name="EquOperatorMobile" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">License Number</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control" placeholder="" name="EquOperatorNo" id="EquOperatorNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="30" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">License Expiry Date</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control" name="EquOperatorExpDate" id="EquOperatorExpDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" onchange="validDate(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>


                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Return within (Days)</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_string" placeholder="" id="EquReturndays" name="EquReturndays" min="1" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="5" oninput="this.value = this.value.replace(/[^0-9 ()&]/g, '').replace(/\*(?=\.)*/g, '$1');" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Security Amount</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control text-right" placeholder="" name="Amount" id="Amount" onchange="totalamountcalc(this)" oninput="decimalpnt(this,'Amount',3)" perfect-class="formGroupControl" min="0" maxlength="12" perfect-ctype="input" perfect-css="input" value="0">
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="col-sm-4" id="rent">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Rent Amount</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control text-right Subproduct" maxlength="12" placeholder="" name="RentAmount" id="RentAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'RentAmount',3)" perfect-tempTable-cstatus="PaperAmount" onchange="totalamountcalc(this)" value="0" />

                            </div>

                        </div>
                    </div>
                    <div class="col-sm-4" id="rent1">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">

                                <span perfect-class="formGroupLabel">Tax</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="number" class="form-control text-right" placeholder="" name="TaxAmount" perfect-class="formGroupControl" perfect-ctype="input" onchange="totalamountcalc(this)" perfect-css="input" maxlength="10" disabled />

                                    <div class="input-group-append">
                                        <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="ShowTax(this,1)"></button>
                                        <div class="modal fade" perfect-class="formGroupModalTax" id="formGroupModalTax">
                                            <div class="modal-dialog" role="document">
                                                <div class="modal-content  rounded-0">
                                                    <div class="modal-header border-0">
                                                        <h5 class="modal-title">Tax Details</h5>
                                                        <button type="button" class="close" data-dismiss="modal">
                                                            <span>&times;</span>
                                                        </button>
                                                    </div>
                                                    <table id="zero_config" class="table mb-0  table-striped  text-black">
                                                        <thead class="bg-primary text-white">
                                                            <tr>
                                                                <th class="t-head">SlNo</th>
                                                                <th class="t-head" style="Display:none">ID_TaxType</th>
                                                                <th class="t-head">TaxType</th>

                                                                <th class="t-head">Amount</th>




                                                            </tr>
                                                        </thead>
                                                        <tbody class="modal-body" id="formGroupModalTaxbody"></tbody>
                                                        <tfoot>
                                                        </tfoot>
                                                    </table>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-primary1" data-dismiss="modal" onclick="BindTaxAmount(this)">Ok</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <span class="temptableError"></span>
                                <div class="col-sm-8 ml-2">
                                    <input type="checkbox" class="form-check-input" name="IncludeTax" id="taxinclude" perfect-class="formCheckInput" perfect-tempTable-Purchase="IncludeTax" perfect-ctype="checkbox" perfect-css="checkbox" onchange="totalamountcalc(this)"><span perfect-class="formCheckInputText">Include Tax</span>

                                </div>
                            </div>

                        </div>

                    </div>

                    <div class="col-sm-4" id="Hideother">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Other Charges</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control text-right perfectValidate_string_nm" name="OtherCharge" perfect-class="formGroupControl" onchange="totalamountcalc(this)" perfect-ctype="input" perfect-css="input" readonly="">
                                    <div class="input-group-append">
                                        <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-credit-card" type="button" perfect-css="button" onclick="ShowOtherCharges(this)"></button>
                                    </div>
                                    <div class="modal fade" perfect-class="formGroupModalOtherCharge" id="formGroupModalOtherCharge">
                                        <div class="modal-dialog modal-dialog-centered" role="document">
                                            <div class="modal-content  rounded-0">
                                                <div class="modal-header border-0">
                                                    <h5 class="modal-title">Other Charge Details</h5>
                                                    <button type="button" class="close" data-dismiss="modal">
                                                        <span>×</span>
                                                    </button>
                                                </div>
                                                <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">

                                                    <table id="zero_configOthercharge" class="table mb-0  table-striped  text-black">
                                                        <thead class="bg-primary text-white">
                                                            <tr>
                                                                <th class="t-head">SlNo</th>
                                                                <th class="t-head" style="display:none">ID_OtherChargeType</th>
                                                                <th class="t-head">Type</th>
                                                                <th class="t-head">Trans Type</th>
                                                                <th class="t-head">Amount</th>

                                                            </tr>
                                                        </thead>
                                                        <tbody id="formGroupModalOtherChargebody"></tbody>
                                                        <tfoot>
                                                        </tfoot>
                                                    </table>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-primary light" data-dismiss="modal" onclick="BindOtherChargeAmount(this)">Apply</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4  rent3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Payable Amount</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control text-right" placeholder="" name="RentNetAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="12" oninput="decimalpnt(this,'RentNetAmount',3)" disabled />

                            </div>

                        </div>
                    </div>

                    <div class="col-sm-4 BalAmt">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Receivable Amount</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control text-right" placeholder="" id="balamt" readonly name="EquPayAmount" perfect-class="formGroupControl" perfect-ctype="input" maxlength="12" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4 DivBillType">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Bill Type</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control" name="BillTypeID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please Select </option>
                                    @if (!(Model.BillTypeListView is null))
                                    {
                                        foreach (var BillType in Model.BillTypeListView)
                                        {
                                            <option value="@BillType.BillTypeID">@BillType.BillType</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">Payment Method</label>
                            <div class="col-sm-5">
                                <div class="input-group">

                                    <div class="input-group-append">
                                        &nbsp;<button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-money" type="button" perfect-css="button" title="Add Payment Method" onclick="GetPaymentlists(this)"></button>

                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>



                    <div class="modal fade" perfect-class="formGroupModalpayment" id="formGroupModalpayment">
                        <div class="modal-dialog  modal-dialog-centered modal-md" role="document">
                            <div class="modal-content">
                                <div class="modal-header border-0">
                                    <h5 class="modal-title">Payment Method</h5>
                                    <button type="button" class="close" data-dismiss="modal">
                                        <span>&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                                    <div class="row">


                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">Method <span class="text-danger">*</span></label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <select class="form-control" perfect-tempTable-Payment="PaymentMethod" name="PaymentMethod" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                            <option value="">Please Select </option>


                                                            @if (!(Model.PaymentView is null))
                                                            {
                                                                foreach (var Module in Model.PaymentView)
                                                                {
                                                                    if (Module.PMDefault == true)
                                                                    {
                                                                        <option value="@Module.PaymentmethodID" selected>@Module.Name</option>
                                                                    }
                                                                    else
                                                                    {
                                                                        <option value="@Module.PaymentmethodID">@Module.Name</option>
                                                                    }

                                                                }
                                                            }
                                                        </select>


                                                    </div>
                                                    <div class="text-danger temptableError"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">
                                                    <span perfect-class="formGroupLabel">Ref No.</span>

                                                </label>
                                                <div class="col-sm-8">

                                                    <div class="input-group">
                                                        <input type="text" class="form-control perfectValidate_string_nm" perfect-tempTable-Payment="Refno" name="Refno" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="250" />

                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">
                                                    <span perfect-class="formGroupLabel">Amount</span>
                                                    <span class="text-danger">*</span>
                                                </label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <input type="text" class="form-control text-right" perfect-tempTable-Payment="PAmount" id="PAmount" name="PAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'PAmount',3)" onchange="Pamount(this)" maxlength="12" />

                                                    </div>
                                                    <div class="text-danger temptableError"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-9">


                                        </div>
                                        <div class="col-sm-3 text-right">
                                            <div class="input-group">

                                                <div class="input-group-append">
                                                    <div>
                                                        <button type="button" class="btn btn-primary1 " onclick="createtable(this,'Payment',['PaymentMethod'],paytableOptionsTempOut)"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                        <button class="btn btn-light1" type="button" onclick="productclear(this, 'Payment')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">
                                                    <span perfect-class="formGroupLabel" style="font-weight:500;">Bal. Amount :</span>

                                                </label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">

                                                        <label class="col-form-label">
                                                            <span perfect-class="formGroupLabel" style="font-weight:500;" name="BalAmt"></span>
                                                        </label>
                                                        @*<input type="text" class="form-control" perfect-temptable-payment="BalAmt" name="BalAmt" perfect-class="" perfect-ctype="input" perfect-css="input" readonly="" style="border:white;background:white;font-weight: 500;">*@
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">

                                                <div class="table-responsive" perfect-tempTable-Payment="" perfect-tempTable="Payment" id="Paymentdethead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                                <div class="text-danger temptableError"></div>

                                            </div>
                                        </div>


                                    </div>
                                    <div class="modal-footer">
                                        @*<button type="button" onclick="CreateProductCheckDescription(this);" class="btn btn-primary">Add</button>*@
                                        <button type="button" class="btn btn-primary light" onclick="Billttlnetchck(this)">Apply</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Description</span>

                            </label>
                            <div class="col-sm-8">
                                <textarea rows="3" name="EquDescription" class="form-control" perfect-ctype="input" maxlength="150"></textarea>
                            </div>
                        </div>
                    </div>




                </div>
            </div>

            <div class="row">
                @*File Upload*@
                <div class="col-sm-6">

                    <div class="form-group row" perfect-class="formGroup">
                        <div class="col-sm-8">
                            <div id="prdimg" class="tab-pane active" style="padding-left:12px">
                                <div class="row">
                                    <div class="col-sm-10">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <div class="upload-btnup-wrapper">
                                                <button type="button" id="btndocsUpload" class="btnup btn"><span class="accordion__header--text">Upload Documents</span></button>

                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @* End File Upload*@








            </div>





            @*<div class="col-sm-12" id="Image-form">
                </div>*@



            <div class="card-footer text-right" perfect-class="formFooter">
                @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                {
                    <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="UpdateLog(this,'Update')"><i class="fa fa-refresh fa-spin  loaderClass"></i>Update</button>
                }
                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="UpdateLog(this,'Add')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
            </div>


        </form>


    </div>


</div>


<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>
<script>
    var PssfupDocsList = [];
    (function () {
        jQuery("select").selectpicker();

    })();
    $(document).ready(function () {

        initFunctions('form');

        $('#active-header_collapseTwo').addClass('collapse');
        $('#active-header_collapseTwo').addClass('show');

        let $thisForm = $(this).closest('[perfect-class="form"]');
        $("#btnVehPopup").hide();
        $("#ID_Name").removeAttr('readOnly');
        if ($("#ModeID").val() == "1") {
            document.getElementById("rent").style.display = 'none';
            document.getElementById("rent1").style.display = 'none';
            document.getElementById("Hideother").style.display = 'none';
            document.getElementById("Distance").style.display = 'none';
            $('[name="Distance"]').removeClass('perfectValidate_string');


            $('.rent3').hide();
            $('.BalAmt').hide();

        }
        //$('.rent3').hide();
        //$('.BalAmt').hide();

        if (RepairTransMode == 'VLRN') {

            document.getElementById("klm").style.display = 'block';
        } else {
           document.getElementById("klm").style.display = 'none';

            $('[name="totalKm"]').removeClass('perfectValidate_numeric');



        }


    });

    function decimalpnt(ele, id, range) {
        //console.log(ele, 'ele');
        let input = $('#' + id);

        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;

        $(document).on('keydown', '#' + id, function (event) {

            if (ele.value.includes('.')) {

            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.indexOf('.') < 0 && ele.value.indexOf('.') !== 9 && ele.value.length > 8) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }
    function changevehiclepop(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $("#btnVehPopup").show();
        $("#ID_Name").removeAttr('readOnly');  
        if ($thisForm.find('[name="ModeID"]').val() == 1) {
            $("#btnVehPopup").hide();
            $("#ID_Name").removeAttr('readOnly');
            clearvalues();
            $("#Amount").prop("readonly", false);
            $("#EquOperator").attr('readOnly', false);
            $("#EquOperatorMobile").attr('readOnly', false);
            $("#EquOperatorNo").attr('readOnly', false);
            $("#EquOperatorExpDate").attr('readOnly', false);
            $("#EquReturndays").attr('readOnly', false);
            document.getElementById("rent").style.display = 'none';
            document.getElementById("rent1").style.display = 'none';
            document.getElementById("Hideother").style.display = 'none';
            document.getElementById("Distance").style.display = 'none';
            $('[name="totalKm"]').removeClass('perfectValidate_string');
            $thisForm.find(".label_name_rental").text("Rental Date");
            //document.getElementById("EquRentalDate").style.display = 'block';
            //document.getElementById("EquReturnDate").style.display = 'none';
            $('.rent3').hide();
            $('.BalAmt').hide();
            $thisForm.find('[name=BalAmt]').text('');

        }
        else {
            $("#btnVehPopup").show();
            $("#ID_Name").attr('readOnly',true);
            clearvalues();
            $("#Amount").prop("readonly", true);
            $("#EquOperator").attr('readOnly', true);
            $("#EquOperatorMobile").attr('readOnly', true);
            $("#EquOperatorNo").attr('readOnly', true);
            $("#EquOperatorExpDate").attr('readOnly', true);
            $("#EquReturndays").attr('readOnly', true);
            document.getElementById("rent").style.display = 'block';
            document.getElementById("rent1").style.display = 'block';
            document.getElementById("Hideother").style.display = 'block';
            document.getElementById("Distance").style.display = 'block';
            $thisForm.find(".label_name_rental").text("Return Date");
            $('.rent3').show();
            $('[name="Distance"]').removeClass('perfectValidate_string');
            //document.getElementById("EquRentalDate").style.display = 'block';
            //document.getElementById("EquReturnDate").style.display = 'block';
            //$thisf
            $thisForm.find('[name=BalAmt]').text('');
        }
    }
    function clearvalues() {
        debugger
        let $thisForm = $('[perfect-class="form"]');
        $thisForm.find('[name="EquPayAmount"]').val('');
        $thisForm.find('[name="RentNetAmount"]').val('');
        $thisForm.find('[name="PAmount"]').val('');
        $thisForm.find('[name="Amount"]').val('');
        $thisForm.find('[name="totalKm"]').val('');
        $thisForm.find('[name="ID_Name"]').val('');
        $thisForm.find('[name="EquRentalDate"]').val('');
        $thisForm.find('[name="EquDescription"]').val('');
        $thisForm.find('[name="RentAmount"]').val(0);

    }



    function kilometetcheck(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let stkl = $thisForm.find('[name="Distance"]').val();
        let endkl = $thisForm.find('[name="totalKm"]').val();

        if (parseFloat(stkl) > parseFloat(endkl)) {
            $thisForm.find('[name="totalKm"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('End Kilometer should be greater than or equal to Start Kilometer')
            return false;
        }
        else {
            $thisForm.find('[name="totalKm"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('');
            return true;
        }
    }

    function fn_showpopuplist(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if (RepairTransMode == 'VLRN') {

            GetCmnPopUpSearchValAssign(ele, 103, 'Vehicle List', [], ['ID_FIELD','SLNo', 'ToolNo', 'EquReturndays', 'ID_Name', 'ID_Field', 'ID_EquipmentRentalDetails', 'Amount', 'EquRentalDate', 'EquEquipmentDistance', 'EquOperatorMobile', 'EquOperator', 'EquOperatorNo', 'EquOperatorExpDate', 'FK_MasterID','Distance'], RepairTransMode)

        }
        else if (RepairTransMode == 'TORN') {

            GetCmnPopUpSearchValAssign(ele, 103, 'Tool List', [], ['ID_FIELD', 'SLNo', 'VehicleNo', 'ID_Name', 'HSNCode', 'ID_Field', 'EquReturndays', 'ID_EquipmentRentalDetails', 'Amount', 'EquRentalDate', 'EquEquipmentDistance', 'FK_MasterID', 'EquOperatorMobile', 'EquOperator', 'EquOperatorNo', 'EquOperatorExpDate','Distance'], RepairTransMode)
        }
        else {

            NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': 'Please Select Import From' });
             }

    }

    function getfunction(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $tempArr = $thisForm.data('popValueData');
        $("#EquRentalDate").attr('min',moment($tempArr.EquRentalDate).format('YYYY-MM-DD'));
    }


    function productclear(ele, tablekey) {

        let $thisform = $(ele).closest('[perfect-class="form"]');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');

        let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);

        if (tablekey = "Purchase") {
            $thisform.find('[name=prdbtn]').removeAttr("disabled", "disabled")

        }
        else if (tablekey = "Warranty") {
            //warrantydetails = [];
        }
        else if (tablekey = "Payment") {

        }
    }





    function totalamountcalc(ele) {
        debugger

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let otheramt = 0;
        let Amount = 0;
        let tax = 0;
        let RentAmount = 0;
        otheramt = isNaN(parseFloat($thisForm.find('[name="OtherCharge"]').val())) ? 0 : parseFloat($thisForm.find('[name="OtherCharge"]').val());
        Amount = isNaN(parseFloat($thisForm.find('[name="Amount"]').val())) ? 0 : parseFloat($thisForm.find('[name="Amount"]').val());
        RentAmount = isNaN(parseFloat($thisForm.find('[name="RentAmount"]').val())) ? 0 : parseFloat($thisForm.find('[name="RentAmount"]').val());
        tax = isNaN(parseFloat($thisForm.find('[name="TaxAmount"]').val())) ? 0 : parseFloat($thisForm.find('[name="TaxAmount"]').val());
        let mod = $('#ModeID').val();
        if (mod == 1) {
            let billamt = 0;
            let bilamt = 0;

            bilamt = Amount;
            $('#Paymentdethead').find('tbody tr').each(function (index, ele) {
                billamt += parseFloat($(ele).find('.PAmount').text());
            });

            bilamt = parseFloat(bilamt) - billamt;
            $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));
            $thisForm.find('[name=PAmount]').val(bilamt.toFixed(2));
        }
        else {
            let BillAmount = 0;

            let totval = 0;
            let calcval = 0;

            totval = ((otheramt) + (RentAmount) + (tax));
            calcval = Amount - totval ;

    
            /*
            if (Amount > RentAmount) {
                $('.BalAmt').show(); //Receivable
                $('.rent3').hide(); //Payable Amount

                if ($('#taxinclude').is(":checked")) {
                    BillAmount = (parseFloat(Amount) - (parseFloat(RentAmount) + parseFloat(otheramt)));
                    $thisForm.find('[name="EquPayAmount"]').val(parseFloat(BillAmount).toFixed(2));
                }
                else {
                    BillAmount = (parseFloat(Amount) - (parseFloat(RentAmount) + parseFloat(tax) + parseFloat(otheramt)));
                    $thisForm.find('[name="EquPayAmount"]').val(parseFloat(BillAmount).toFixed(2));
                }
                $thisForm.find('[name="RentNetAmount"]').val(0);
            }
            else if ((Amount < RentAmount) || (Amount == RentAmount)) {
                $('.rent3').show();
                $('.BalAmt').hide();

                if ($('#taxinclude').is(":checked")) {
                    BillAmount = (parseFloat(RentAmount) - parseFloat(Amount)) + parseFloat(otheramt);
                    $thisForm.find('[name="RentNetAmount"]').val(parseFloat(BillAmount).toFixed(2));
                }
                else {
                    BillAmount = ((parseFloat(RentAmount) - parseFloat(Amount)) + parseFloat(tax) + parseFloat(otheramt));
                    $thisForm.find('[name="RentNetAmount"]').val(parseFloat(BillAmount).toFixed(2));
                }
                $thisForm.find('[name="EquPayAmount"]').val(0);
            }
            */

    //--------------------------------------------------------------------------------------------------------------//

            debugger
            if ($('#taxinclude').is(":checked")) {
                BillAmount = (parseFloat(Amount) - (parseFloat(RentAmount) + parseFloat(otheramt)));
                if (BillAmount <= 0) {

                    $('.rent3').show();
                    $('.BalAmt').hide();
                    $thisForm.find('[name="RentNetAmount"]').val(Math.abs(parseFloat(BillAmount)).toFixed(2));

                    $thisForm.find('[name="EquPayAmount"]').val(0); //Receivable 
                }
                else {

                    $('.BalAmt').show(); //Receivable
                    $('.rent3').hide(); //Payable Amount
                    $thisForm.find('[name="EquPayAmount"]').val(Math.abs(parseFloat(BillAmount)).toFixed(2));


                    $thisForm.find('[name="RentNetAmount"]').val(0);//Payable Amount


                }
            }
            else {
                BillAmount = ((parseFloat(RentAmount) - parseFloat(Amount)) + parseFloat(tax) + parseFloat(otheramt));
                if (BillAmount <= 0) {
                    $('.BalAmt').show(); //Receivable
                    $('.rent3').hide(); //Payable Amount
                    $thisForm.find('[name="EquPayAmount"]').val(Math.abs(parseFloat(BillAmount)).toFixed(2));
                    $thisForm.find('[name="RentNetAmount"]').val(0);
                }
                else {
                    $('.rent3').show();
                    $('.BalAmt').hide();
                    $thisForm.find('[name="RentNetAmount"]').val(Math.abs(parseFloat(BillAmount)).toFixed(2));
                    $thisForm.find('[name="EquPayAmount"]').val(0);
                }
            }











            debugger
            let billamt = 0;
            let bilamt = 0;

            bilamt = Math.abs(BillAmount);
            $('#Paymentdethead').find('tbody tr').each(function (index, ele) {
                billamt += parseFloat($(ele).find('.PAmount').text());
            });

            bilamt = parseFloat(bilamt) - parseFloat(billamt);
            $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));
            $thisForm.find('[name=PAmount]').val(bilamt.toFixed(2));
        }


    }

      var otherchgcalled = 0;
    function BindOtherChargeAmount(ele) {
        otherchgcalled == 1;
        console.log('inside binddatat fn')
        let $modal = $(ele).closest('.modal');
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let sum = 0;
        othrchargelst = [];
        $modal.find('table tbody').find('tr').each(function () {

            let value = parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val());;
            if ($(this).find('.jq_OtherChagAmnt_td').find('input').val() == '' || $(this).find('.jq_OtherChagAmnt_td').find('input').val() == null || $(this).find('.jq_OtherChagAmnt_td').find('input').val() == '.')  {
                value = 0;
            }

            if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 0) {
                value = value * 0;
            }
            else if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 1) {
                value = value * 1;
            }
            else {
                value = value * -1;
            }
            sum = parseFloat(sum) + value;




            let othrcharge = {
                ID_OtherChargeType: $(this).find('.jq_ID_OtherChargeType_td').text(),
                OctyTransType: $(this).find('.jq_TransType_td').find('select').val(),
                OctyAmount: parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val()) || 0,
            };

            othrchargelst.push(othrcharge);
            $thisForm.data({ pOthrChgData: othrchargelst });
            console.log('othrchargelst', othrchargelst)


        });

        $thisForm.find('[name=OtherCharge]').val(sum.toFixed(2));
        totalamountcalc(ele);
    }

    var othrchargelst = [];

     function ShowOtherCharges(ele,mode) {
            //debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let Othrinfo = [];
        if ($thisForm.data('pOthrChgData')) {


            if ($thisForm.data('pOthrChgData').length > 0) {
                if (otherchgcalled = 0)
                {
                     othrchargelst = $thisForm.data('pOthrChgData');
                }
            }
        }
        //else {
            BindChargeDetails("1", 'formGroupModalOtherCharge', ele)
        //}

            }
     //var othrchargelst="";

    function BindChargeDetails(Mode, ModalID, ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        var InputData =
        {
            TransMode: RepairTransMode,
        }


        $.ajax({
            url: "@Url.Action("GetOtherCharges","Purchase")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                if (ajaxOutput.OtherCharges.Process.IsProcess) {
                         var CheckListHTML = '';

                         if (ajaxOutput.OtherCharges.Data.length > 0) {
                             //---



                             $.each(ajaxOutput.OtherCharges.Data, function (i, value) {
                                 console.log('Transtypelist',ajaxOutput.Transtypelist.Data)

                                 let options = ''
                                 if (othrchargelst != '') {

                                     $.each(othrchargelst, function (key, value1) {

                                         if (value1.ID_OtherChargeType == value.ID_OtherChargeType) {

                                             value.OctyAmount = value1.OctyAmount;
                                             $.each(ajaxOutput.Transtypelist.Data, function (i, valuea) {
                                                 if (valuea.TransTypeID.toString() == value1.OctyTransType) {

                                                     options += '<option value=' + valuea.TransTypeID + ' selected="selected">' + valuea.TransType + '</option>'
                                                 }
                                                 else {
                                                     options += '<option value=' + valuea.TransTypeID + '>' + valuea.TransType + '</option>'
                                                 }
                                             });
                                         }


                                     });

                                 }
                                 else
                                 {

                                     $.each(ajaxOutput.Transtypelist.Data, function (i, valuea) {
                                         options += '<option value=' + valuea.TransTypeID + '>' + valuea.TransType + '</option>'
                                     });
                                     //---

                                 }
                                 console.log('optionsl', options)
                                 let $dropdown = '<select class="form-control"name="selector" id="selector" >' + options + '</select>';
                                 CheckListHTML += "<tr>";
                                 CheckListHTML += "<td>" + value.SlNo + "</td>";
                                 CheckListHTML += "<td Class='jq_ID_OtherChargeType_td' Style='Display:none'>" + value.ID_OtherChargeType + "</td>";
                                 CheckListHTML += "<td Class='jq_Type_td'>" + value.OctyName + "</td>";
                                 CheckListHTML += "<td class='jq_TransType_td'>" + $dropdown + "</td>";

                                 //CheckListHTML += "<td class='jq_OtherChagAmnt_td' ><input min='0'  class='form-control text-right' name='otheramt' type='text' maxlength='12' oninput=decimalpnt(this, 'otheramt', 3)  onkeypress='return isNumberKey(event)'  value='" + (value.OctyAmount).toFixed(2) + "' /></td>";

                                 //CheckListHTML += "<td class='jq_OtherChagAmnt_td'><input min='0' class='form-control perfectValidate_string_nm text-right' name='otheramt' pattern='[0-9]{1,9}\.[0-9]{2}' id='otheramt' type='text' maxlength='12' value='" + (value.OctyAmount).toFixed(2) + "' /></td>";
                                 //CheckListHTML += "<td class='jq_OtherChagAmnt_td' ><input min='0' onkeypress='return isNumberKey(event)' class='form-control text-right'  type='number'  value='" + value.OctyAmount + "' ' maxlength='12' " + ` id="othercharge" name="othercharge"  oninput="decimalpnt(this,'othercharge',3)"` + "'/></td> /></td>";
                                 CheckListHTML += "<td class='jq_OtherChagAmnt_td' ><input min='0'  class='form-control text-right'  type='text'  value='" + value.OctyAmount + "' ' maxlength='12' " + ` id="othercharge" name="othercharge"  oninput="decimalpnt(this,'othercharge',3)"` + "'/></td> /></td>";

                                // CheckListHTML += "<td class='jq_OtherChagAmnt_td'><input min='0' class='form-control perfectValidate_string_nm text-right' name='othercharge' id='othercharge' type='text' maxlength='12' onkeypress='return isNumberKey(event)' oninput='decimalpnt(this,othercharge,3)' value='" + (value.OctyAmount).toFixed(2) + "' /></td>";

                                 //CheckListHTML += '<td class="jq_OtherChagAmnt_td"><input min="0" class="form-control text-right"   onKeyPress="if(this.value.length==12) return false;"  type="number" name="othramt" maxlength="12" value="' + (value.OctyAmount).toFixed(2) + '" /></td>';
                                // <input type="number" min="0" class="form-control text-right" name="otheramt" maxlength="12" oninput="decimalpnt(this, 'PAmount', 2)" onkeypress="return isNumberKey(event)">


                                 CheckListHTML += "</tr>";
                             })
                         }
                         else {
                             CheckListHTML += "<div class='form-group col-md-6'>";
                             CheckListHTML += "<div class='form-check mb-2'>";
                             CheckListHTML += "<label class='form-check-label' for='check1'>No Records...</label>";
                             CheckListHTML += "</div></div>"
                         }
                         //let $model = createSearchModalDOM();
                         //$model.modal.find('.modal-body').append(CheckListHTML);
                         //$model.show
                    $('#formGroupModalOtherCharge').modal({ backdrop: 'static', keyboard: false })
                    $("#formGroupModalOtherChargebody").html(CheckListHTML)
                    $('#formGroupModalOtherCharge').modal('show');


                        // $thisForm.find('[name=TaxAmount]').val(sum);
                     }
                else {

                    $.each(ajaxOutput.OtherCharges.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                    $('select').selectpicker('refresh');
                }
            });
            }

    //function fndatecheck(ele) {

    //    let $thisForm = $(ele).closest('[perfect-class="form"]');
    //    debugger
    //    let upperlimit = $thisForm.find('[name="EquRentalDate"]').val();
    //    let lowerlimit = $thisForm.find('[name="EquOperatorExpDate"]').val();
    //    upperlimit = new Date(upperlimit);
    //    upperlimit.setHours(0, 0, 0, 0)

    //    lowerlimit = new Date(lowerlimit);
    //    lowerlimit.setHours(0, 0, 0, 0)
    //    if (upperlimit > lowerlimit) {

    //        $thisForm.find('[name="EquOperatorExpDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Retrun Date should be greater than or equal to Rental date');
    //        $thisForm.find('[name="EquOperatorExpDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').show();
    //        $thisForm.find('[name="EquOperatorExpDate"]').trigger('blur');
    //        return false;
    //    }


    //    else {

    //        $thisForm.find('[name="EquRentalDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('');
    //        return true;
    //    }



    //}
    function validDate(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let upperlimit = $thisForm.find('[name="EquRentalDate"]').val();
        let lowerlimit = $thisForm.find('[name="EquOperatorExpDate"]').val();
        upperlimit = new Date(upperlimit);
        upperlimit.setHours(0, 0, 0, 0)

        lowerlimit = new Date(lowerlimit);
        lowerlimit.setHours(0, 0, 0, 0)

        if (upperlimit.getTime() === lowerlimit.getTime()) {
            NotificationMessage({ 'type': 'warning', 'heading': 'Warning', 'message': 'Renew date is near.' });
        }


       if (upperlimit > lowerlimit) {

           $thisForm.find('[name="EquOperatorExpDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('License Expiry Date should be greater than or equal to Rental date');
           $thisForm.find('[name="EquOperatorExpDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').show();
           //$thisForm.find('[name="EquOperatorExpDate"]').trigger('blur');
           return false;
       }


       else {

           $thisForm.find('[name="EquOperatorExpDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('');
           return true;
        }

       

    }

    function isNumberKeyNew(event) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 46 || charCode > 57))
            return false;

        return true;
    }



     function ShowTax(ele, mod) {
        debugger
        Taxcalled = 1;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let taxinfo = {};
        if ($thisForm.data('pDataTax')) {

            if ($thisForm.data('pDataTax').length > 0) {

                Taxlist = $thisForm.data('pDataTax');
            }
            BindTaxDetails("1", 'formGroupModalTax', ele, mod)

            if (mod == 1) {
                $('#formGroupModalTax').modal('show');
            }
            else {
                $('#formGroupModalTax').modal('hide');
            }
        }
        else {
            BindTaxDetails("1", 'formGroupModalTax', ele, mod)
        }


    }
    var Taxlist = [];
     function BindTaxDetails(Mode, ModalID, ele) {
         let $thisForm = $(ele).closest('[perfect-class="form"]');

        var InputData =
        {
            FK_Company: $thisForm.find('[name=FK_Company]').val(),
        }

        $.ajax({
            url: "@Url.Action("GetTaxAmount", "EquipmentRepair")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                     if (ajaxOutput.Process.IsProcess) {
                         var CheckListHTML = '';
                         let sum = 0;
                         if (ajaxOutput.Data.length > 0) {

                             debugger
                             $.each(ajaxOutput.Data, function (i, value) {
                                 sum = sum + parseFloat(value.TaxAmount);
                                 if (Taxlist != '') {
                                     $.each(Taxlist, function (key, value1) {
                                         if (value1.ID_TaxType == value.ID_TaxType) {
                                             value.TaxAmount = value1.TaxAmount;
                                         }
                                     });

                                 }
                                 CheckListHTML += "<tr>";
                                 CheckListHTML += "<td>" + value.ID_TaxType + "</td>";
                                 CheckListHTML += "<td class='jq_taxType_td' Style='Display:none'>" + value.ID_TaxType + "</td>";
                                 CheckListHTML += "<td class='jq_taxTypeName_td'>" + value.TaxTyName + "</td>";
                                 CheckListHTML += "<td class='jq_taxamount_td' ><input onkeypress='return /[0-9]/i.test(event.key) min='0'  class='form-control text-right' maxlength='10' type='number'  value='" + value.TaxAmount + "' /></td>";

                                 CheckListHTML += "</tr>";
                             })
                         }
                         else {
                             CheckListHTML += "<div class='form-group col-md-6'>";
                             CheckListHTML += "<div class='form-check mb-2'>";
                             CheckListHTML += "<input type='checkbox' class='form-check-input' >"
                             CheckListHTML += "<label class='form-check-label' for='check1'>No Records...</label>";
                             CheckListHTML += "</div></div>"
                         }


                         $("#formGroupModalTaxbody").html(CheckListHTML)
                         $('#formGroupModalTax').modal('show');
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }
            });
        }
    function BindTaxAmount(element) {
        debugger
        let $modal = $(element).closest('.modal');
        let $thisForm = $(element).closest('[perfect-class="form"]');
        let sum = 0;
        Taxlist = [];
        $modal.find('table tbody').find('tr').each(function () {
            let txval = parseFloat($(this).find('.jq_taxamount_td').find('input').val()) || 0;
          
            sum = sum + txval;
            debugger
            let TaxAmount = {
                ID_TaxType: $(this).find('.jq_taxType_td').text(),
                TaxtyName: $(this).find('.jq_taxTypeName_td').text(),
                TaxAmount: parseFloat($(this).find('.jq_taxamount_td').find('input').val()) || 0
            };
            Taxlist.push(TaxAmount);
            $thisForm.data({ pDataTax: Taxlist });

        });
        $thisForm.find('[name=TaxAmount]').val(sum);
        totalamountcalc(element);
    }



    function checkpurrateTax(ele) {
        debugger
        ShowTax(ele, 1);


    }


   $("#btndocsUpload").click(function () {
        let $thisForm = $(this).closest('[perfect-class="form"]');
       let MasterId = $thisForm.find('[name="ID_EquipmentRentalDetails"]').val() == "" ? "0" : $thisForm.find('[name="ID_EquipmentRentalDetails"]').val();
        let header = "Tool Documents";
       OpenModalForUpload(MasterId, RepairTransMode,header);
   })




    function UpdateLog(ele, actiontype) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        debugger
        let stkl = $thisForm.find('[name="Distance"]').val();
        let endkl = $thisForm.find('[name="totalKm"]').val();

        if ($thisForm.find('[name="ModeID"]').val() == 2 && actiontype == "Add") {

            let $tempArr = '';
            if ($thisForm.data('popValueData')) {
                $tempArr = $thisForm.data('popValueData');
                $("#EquRentalDate").attr('min', moment($tempArr.EquRentalDate).format('YYYY-MM-DD'));
                rentdate = '';
            }

        }
        else if ($thisForm.find('[name="ModeID"]').val() == 2 && actiontype == "Update") {
            //let date = $thisForm.find('[name="EquRentalDate"]').val();
            $("#EquRentalDate").attr('min', moment(rentdate).format('YYYY-MM-DD'));
        }


        if ($thisForm.find('[name="ModeID"]').val() == 2 && ((parseFloat($thisForm.find('[name="RentNetAmount"]').val()) > 0) || (parseFloat($thisForm.find('[name="EquPayAmount"]').val())) > 0)) {
            $thisForm.find('[name="BillTypeID"]').addClass('perfectValidate_string');
        }
        else if ($thisForm.find('[name="ModeID"]').val() == 2 && (((parseFloat($thisForm.find('[name="RentNetAmount"]').val() == "") || (parseFloat($thisForm.find('[name="RentNetAmount"]').val())) == 0 || (parseFloat($thisForm.find('[name="EquPayAmount"]').val())) == "" || (parseFloat($thisForm.find('[name="EquPayAmount"]').val())) == 0)))) {
            $thisForm.find('[name="BillTypeID"]').removeClass("perfectValidate_string");
        }
        if ($thisForm.find('[name="ModeID"]').val() == 1) {
            if ((parseFloat($thisForm.find('[name="Amount"]').val())) > 0) {
                $thisForm.find('[name="BillTypeID"]').addClass('perfectValidate_string');
            }
            else {
                $thisForm.find('[name="BillTypeID"]').removeClass("perfectValidate_string");
            }
        }
        if (RepairTransMode == 'VLRN') {

            $thisForm.find('[name="totalKm"]').addClass('perfectValidate_string');

        }
        else {
            $thisForm.find('[name="totalKm"]').removeClass("perfectValidate_string");


        }



        //if (parseFloat(stkl) > parseFloat(endkl)) {
        //    $thisForm.find('[name="totalKm"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('End Kilometer should be greater than or equal to Start Kilometer')
        //    return false;
        //}
        //else {
        //    $thisForm.find('[name="totalKm"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('');
        //    return true;
        //}




        if ($thisForm.valid()) {
            if (checkExpireDate()) {
                if (validDate(ele)) {
                    if (kilometetcheck(ele)) {
                        if (BillAmountbind(ele)) {


                            $(ele).prop('disabled', true);

                            let $modal = $thisForm.find('#zero_config');
                            let $modal1 = $thisForm.find('#zero_config');

                            var tax = [];
                            $modal1.find('tbody').find('tr').each(function () {

                                let taxinfo = {};

                                taxinfo['FK_TaxType'] = $(this).find('.jq_taxType_td').text();
                                taxinfo['TaxTyName'] = $(this).find('.jq_taxTypeName_td').text();

                                taxinfo['TaxAmount'] = $(this).find('.jq_taxamount_td').find('input').val();
                                console.log('taxinfo', taxinfo);



                                tax.push(taxinfo);
                                //alert('TAX DET')
                            });


                            let $modal2 = $thisForm.find('#zero_configOthercharge');
                            othrchargelst;
                            let OtherCharge = [];
                            if (otherchgcalled == 1) {
                                $modal2.find('tbody').find('tr').each(function () {

                                    let OtChargeinfo = {};
                                    OtChargeinfo['ID_OtherChargeType'] = $(this).find('.jq_ID_OtherChargeType_td').text();

                                    OtChargeinfo['OctyTransType'] = $(this).find('.jq_TransType_td').find('select').val();
                                    OtChargeinfo['OctyName'] = $(this).find('.jq_Type_td').text();
                                    OtChargeinfo['OctyAmount'] = $(this).find('.jq_OtherChagAmnt_td').find('input').val();
                                    console.log('OtChargeinfo', OtChargeinfo);

                                    OtherCharge.push(OtChargeinfo);

                                });
                            }
                            else {
                                OtherCharge = OtherCharge.concat(othrchargelst);
                            }





                            let paymentdetails = [];
                            $thisForm.find('[perfect-tempTable="Payment"]').find('tbody').find('tr').each(function () {
                                paymentdetails.push($(this).data('pData'));
                            })





                            var inputData = {
                                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                //'ID_Maker': isNaN(parseInt($thisForm.find('[name=ID_Make]').val())) ? 0 : parseInt($thisForm.find('[name=ID_Make]').val()),
                                'TransMode': RepairTransMode,
                                'ID_EquipmentRentalDetails': isNaN(parseInt($thisForm.find('[name="ID_EquipmentRentalDetails"]').val())) ? 0 : parseInt($thisForm.find('[name=ID_EquipmentRentalDetails]').val()),
                                //'ID_EquipmentRentalDetails': $thisForm.find('[name="ID_EquipmentRentalDetails"]').val(),
                                'EquRentType': $thisForm.find('[name="ModeID"]').val(),

                                'EquEquipmentNo': $thisForm.find('[name="ID_Name"]').val(),
                                'EquEquipmentDistance': $thisForm.find('[name="totalKm"]').val(),
                                'EquDescription': $thisForm.find('[name="EquDescription"]').val(),
                                'EquSecurityAmount': $thisForm.find('[name="Amount"]').val(),
                                'EquRentalDate': $thisForm.find('[name="EquRentalDate"]').val(),
                                'ImageList': PssfupDocsList,
                                'PaymentDetail': paymentdetails,
                                'FK_MasterID': $thisForm.find('[name="FK_MasterID"]').val(),
                                'EquRentAmount': $thisForm.find('[name="RentAmount"]').val(),
                                'EquTaxAmount': $thisForm.find('[name="TaxAmount"]').val(),
                                'EquNetAmount': $thisForm.find('[name="EquPayAmount"]').val(),
                                'TaxAmountDetails': tax,
                                'EquPayAmount': $thisForm.find('[name="RentNetAmount"]').val(),
                                'IncludeTax': $thisForm.find('[name="IncludeTax"]').is(':Checked'),
                                'FK_BillType': $thisForm.find('[name=BillTypeID]').val(),
                                'EquOperatorExpDate': $thisForm.find('[name=EquOperatorExpDate]').val(),
                                'EquReturndays': $thisForm.find('[name="EquReturndays"]').val(),
                                'EquOperatorNo': $thisForm.find('[name="EquOperatorNo"]').val(),
                                'EquOperatorMobile': $thisForm.find('[name="EquOperatorMobile"]').val(),
                                'EquOperator': $thisForm.find('[name="EquOperator"]').val(),
                                'OtherChgDetails': OtherCharge,
                                'LastID': LastID_EquipmentRepair,

                            };
                            clearSessionValue(LastIDSessionKeyER);
                            console.log('ip', inputData);
                            let _ActionUrl = "";
                            if (actiontype == "Add") { _ActionUrl = "@Url.Action("AddNewVehicleAndToolRepair", "EquipmentRepair")"; } else { _ActionUrl = "@Url.Action("UpdateNewVehicleAndToolRepair", "EquipmentRepair")"; }

                            $.ajax({
                                url: (actiontype == "Add") ? "@Url.Action("AddNewVehicleAndToolRepair", "EquipmentRepair")" : "@Url.Action("UpdateNewVehicleAndToolRepair", "EquipmentRepair")",
                                type: "POST",
                                data: inputData,
                                dataType: "json",
                                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                success: function (data) {

                                    if (data.Process.IsProcess) {

                                        $.each(data.Process.Message, function (key, value) {
                                            NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                        });
                                        $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                        $thisForm.find('[perfect-ctype="input"]').val('');
                                        $thisForm.find('[perfect-ctype="date"]').val('');
                                        $thisForm.find('[perfect-ctype="hidden"]').val('');
                                        rentdate = '';

                                        let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                        if (onSuccess) {
                                            fn_RepairIndex_initialLoad();
                                        }
                                    }
                                    else {
                                        $.each(data.Process.Message, function (key, value) {
                                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                        });
                                    }
                                },
                                complete: function () {
                                    $(ele).prop('disabled', false);
                                }
                            });



                        }
                        else {
                            $(ele).prop('disabled', false);
                            NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'In Payment Method Balance Amt. Should be  Zero ' });
                        }
                    }
                    else {
                        NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'End Kilometer should be greater than or equal to Start Kilometer ' });
                    }
                }
                else {
                    // NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'License ExpiryDate should be greater than or equal to Rental date ' });
                }
            }
        }

    }

    function ResetButton() {
        fn_RepairIndex_initialLoad();
    }



    function fillTableSales(ele, tkey, data, tableOptionsTempOut) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableOptionsTempfill = tableOptionsTempOut;
        let insertData = []
        let tableKey = tkey;
        let indexname = tkey + 'index';
        tableOptionsTempfill.rowAttribute.push(indexname);
        tableOptionsTempfill.hideColumn.push(indexname);
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $.each(data, function (keyOne, valOne) {

            let pData = {};

            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])
            //---

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('tfhyrtname', nameAttr)
                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {
                        // tableOptionsTempfill.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTempfill.hideColumn.push(nameAttr);
                        //displat text of select
                        pData[nameAttr + '_d'] = $this.find('[value="' + valOne[nameAttr] + '"]').text();
                        pData[nameAttr] = valOne[nameAttr];
                        console.log('select', $this.find('options[value="' + valOne[nameAttr] + '"]').text());

                    }
                    else if ($this.is('input')) {

                        let inputType = $this.attr('type').toLocaleLowerCase();
                        console.log(inputType)


                        if (inputType == 'date') {

                            if (valOne[nameAttr] == null) {
                                pData[nameAttr] = valOne[nameAttr];
                            }
                            else {
                                pData[nameAttr] = moment(valOne[nameAttr]).format('YYYY-MM-DD');
                            }


                        }
                        else {
                            pData[nameAttr] = valOne[nameAttr];


                        }
                    }
                    else {
                        pData[nameAttr] = valOne[nameAttr];


                    }
                }



            });

            insertData.push(pData);


            //----

        });
        $tblcontainer.empty();
        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTempfill));
        // $tblcontainer.find('table').dataTable({ paging: true });

    }

    function GetPaymentlists(ele) {
        debugger
        $('#formGroupModalpayment').modal({ backdrop: 'static', keyboard: false })

        $('#formGroupModalpayment').modal('show');

    }


    function Billttlnetchck(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let balamt = $thisForm.find('[name=BalAmt]').text();


        if (parseFloat(balamt) == 0) {
            $('#formGroupModalpayment').modal('hide');
            $thisForm.find('[perfect-tempTable="Payment"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
        }
        else {

            $thisForm.find('[perfect-tempTable="Payment"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Balance Amt. should be Zero');

        }
    }



    var paytableOptionsTempOut = {
        iconButton: {
            buttons: [

                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    class: "btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';

                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);

                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');

                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }

                                else {

                                    $thisNode.val(savedData[pf_name]);
                                }

                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }


                        });



                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    class: "btnPerfectGridDelete",
                    action: function () {
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            //$thistbl.dataTable({ paging: true, searchbtn: false });
                        }
                        else {
                            $thistbl.remove();
                        }
                        BillAmountbind($tablecontainer);
                    }
                },
            ]
        },

        rowAttribute: [],
        onlyShowColumn: ['PAmount', 'Refno', 'PaymentMethod_d'],
        renameHeader: { "PAmount": "Amount1R", "Refno": "Ref No", "PaymentMethod_d": "Method" },
        hideColumn: ['BalAmt'],
        serialNo: true,

    };

    function Pamount(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let amtp = $thisForm.find('[name="PAmount"]').val() == "" ? "0" : $thisForm.find('[name="PAmount"]').val();
        $thisForm.find('[name="PAmount"]').val(parseFloat(amtp).toFixed(2));
        //salroundoff(ele);
    }
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 46 || charCode === 47 || charCode > 57)) {
            return false;
        }
        return true;
    }

    function validpaymntdetail(ele, tableKey, errorClass, isValid) {
        debugger

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val() == null) {

            isValid = false
            console.log('false', $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val());
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Payment Method');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val() <= 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val() == '' || $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val() == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val() == undefined) {
            console.log('false', $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val());
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter a value greater than 0');
        }
        else {

            $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }


        return isValid;

    }

    function createtable(ele, tkey, uniq = [], tableOptionsTempOut) {

        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';

        //make index

        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        console.log('tableOptionsTemp.rowAttribute', tableOptionsTemp.rowAttribute)
        let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {
            //means update
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            //insert
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }
        //
        if (tableKey == 'Warranty') {

            isValid = validwartdetail(ele, tableKey, errorClass, isValid);
        }
        else if (tableKey == 'Payment') {
            isValid = validpaymntdetail(ele, tableKey, errorClass, isValid);
        }
        else if (tableKey == 'Purchase') {
            isValid = validsaledetail(ele, tableKey, errorClass, isValid);
        }

        if (unique.length > 0) {

            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }
                }

            })

            unique.forEach(function (key, i) {

                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');

                let atname = $thisEle.attr('name');
                let cvalue;

                if ($thisEle.length != 0) {
                    console.log('len', $thisEle)
                    let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    let errmessage = key + " Already exits"

                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();

                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); console.log('cvalue ->', cvalue); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else { cvalue = $thisEle.val(); }

                    if (prevData.find(a => a[atname] == cvalue)) {
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });

        }

        console.log('isValid', isValid);

        if (isValid) {
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');

                if ($this.is('select')) {


                    tableOptionsTemp.hideColumn.push(nameAttr)

                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }

                    insertData[nameAttr] = $this.val();
                    $this.val('').selectpicker('refresh');
                }
                else if ($this.is('input')) {

                    insertData[nameAttr] = $this.val();
                    if (nameAttr == "prodtid") { }
                    else if (nameAttr == "stkid") { }
                    else {
                        $this.val('');
                    }
                }

            });

            if (isNew) {
                //this section nake table.table row
                if ($tblcontainer.find('table').length == 0) {
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                }
                else {
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                }

            }
            else {
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
            }

            $tblcontainer.attr('perfect-tempTable-action', 0);

            if (tableKey == 'Warranty') {
            }
            else if (tableKey == 'Payment') {
                debugger
                BillAmountbind(ele);
            }
            else if (tableKey == 'Purchase') {
                $thisForm.find('[name=prdbtn]').removeAttr("disabled", "disabled")
                $thisForm.data({ pwarranty: warrantydetails });
                $thisForm.data({ addpImageselect: $thisForm.data('pImageselect') });
                BindBilldetails(ele);
            }
        }
    }

    function BillAmountbind(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let mod = $('#ModeID').val();
        if (mod == 1) {

            let netamt = "";
            netamt = $thisForm.find('[name="Amount"]').val() == "" ? "0" : $thisForm.find('[name="Amount"]').val();
            let billamt = 0;
            let bilamt = 0;

            if ($thisForm.find('[name=BalAmt]').text() == '') {
                bilamt = 0;
            }
            else {

                bilamt = netamt;
            }

            $('#Paymentdethead').find('tbody tr').each(function (index, ele) {

                billamt += parseFloat($(ele).find('.PAmount').text());

            });

            bilamt = parseFloat(bilamt) - parseFloat(billamt);

            $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));
            $thisForm.find('[name=PAmount]').val(bilamt.toFixed(2));

            if (bilamt == 0) {

                return true;

            }
            else {

                return false;

            }

        }


        else {
            debugger
            let BalanceToPay = parseFloat($thisForm.find('[name="EquPayAmount"]').val()) == "" ? 0 : parseFloat($thisForm.find('[name="EquPayAmount"]').val());
            let NetAmount = parseFloat($thisForm.find('[name="RentNetAmount"]').val()) == "" ? 0 : parseFloat($thisForm.find('[name="RentNetAmount"]').val());

            let netamt;

            if ($thisForm.find('[name="ModeID"]').val() == 2 && BalanceToPay > 0 ) {
                netamt = BalanceToPay;
            }
            else if ($thisForm.find('[name="ModeID"]').val() == 2 && (NetAmount > 0 || ( NetAmount == 0))) {
                netamt = NetAmount;
            }
            let billamt = 0;
            let bilamt = 0;

            if ($thisForm.find('[name=BalAmt]').text() == '') {
                bilamt = 0;
            }
            else {
                bilamt = netamt;
            }
            $('#Paymentdethead').find('tbody tr').each(function (index, ele) {
                billamt += parseFloat($(ele).find('.PAmount').text());
            });
            bilamt = parseFloat(bilamt) - parseFloat(billamt);

            $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));
            $thisForm.find('[name=PAmount]').val(bilamt.toFixed(2));
            if (bilamt == 0) {
                return true;
            }
            else {
                return false;
            }
        }
        //else {
        //    let balcus = $thisForm.find('[name="EquPayAmount"]').val();
        //    let netamt = "";
        //    if (balcus == 0) {
        //        netamt = $thisForm.find('[name="RentNetAmount"]').val() == "" ? "0" : $thisForm.find('[name="RentNetAmount"]').val();
        //    }
        //    else {
        //        netamt = $thisForm.find('[name="EquPayAmount"]').val == "" ? "0" : $thisForm.find('[name="EquPayAmount"]').val();
        //    }

        //    let billamt = 0;
        //    let bilamt = 0;

        //    if ($thisForm.find('[name=BalAmt]').text() == '') {
        //        bilamt = 0;
        //    }
        //    else {
        //        bilamt = netamt;
        //    }

        //    $('#Paymentdethead').find('tbody tr').each(function (index, ele) {

        //        billamt += parseFloat($(ele).find('.PAmount').text());

        //    });

        //    bilamt = parseFloat(bilamt) - parseFloat(billamt);

        //    $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));

        //    if (bilamt == 0) {

        //        return true;

        //    }
        //    else {

        //        return false;

        //    }
        //}
    }

    function checkExpireDate() {
        debugger
        let $thisForm = $('[perfect-class="form"]');
        let rent = new Date($thisForm.find('[name="EquRentalDate"]').val());
        let expi = new Date($thisForm.find('[name="EquOperatorExpDate"]').val());
        let returnd = parseInt($thisForm.find('[name="EquReturndays"]').val());

        rent.setHours(0, 0, 0, 0);
        expi = new Date(expi);
        expi.setHours(0, 0, 0, 0);

        // Calculate the expected return date by adding returnd days to the rental date
        let expectedReturnDate = new Date(rent);
        expectedReturnDate.setDate(rent.getDate() + returnd);


        if (expi < expectedReturnDate) {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'License Expiry Date  must be after the return days.' })
            return false;
           
        } else {

            isValid = true;
            return true;
        }

       
    }
</script>