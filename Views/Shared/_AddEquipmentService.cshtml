@model PerfectWebERP.Models.EquipmentServiceModel.EquipmentServiceView

<div class="card">
    <div class="card-header">
        <h4 class="card-title col-12">@ViewBag.PageTitle </h4>

        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>

    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">

                <div class="row">
                    @Html.AntiForgeryToken()

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                &nbsp;&nbsp;&nbsp;
                                <span perfect-class="formGroupLabel"> Booking Date</span>


                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date" name="TransDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" onchange="datenchecklogdate(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>


                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">

                                <span perfect-class="formGroupLabel">Import From</span>
                                <span class="text-danger">*</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="hidden" name="ImportID" />
                                    <select class="form-control perfectValidate_string" name="ID_Names" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="fun_import(this)">
                                        <option value="">Please Select </option>
                                        <option value="1"> @ViewBag.lblpro</option>
                                        <option value="2">Booking Number</option>
                                        @*<option value="3">Lead</option>*@

                                    </select>

                                    <div class="input-group-append">
                                        <button id="addcountry-jq-searchButton3" data-toggle="tooltip" data-placement="top" data-html="true" title="Import from Vehicle,Booking Number" class="btn btn-primary" type="button" perfect-css="button" onclick="fn_showimportlist(this)" Function="2"><i class="las la-file-import la-lg"></i></button>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">

                                <span perfect-class="formGroupLabel"> @ViewBag.lblpro</span>

                            </label>

                            <div class="col-sm-8">
                                <div class="input-group mb-2">
                                    <input type="hidden" name="ImportID" perfect-ctype="hidden" />
                                    <input type="hidden" class="form-control " name="ID_FIELD" />
                                    <input type="hidden" class="form-control " name="FK_Master" />
                                    <input type="text" class="form-control" placeholder="" name="VehicleNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />

                                </div>
                            </div>
                        </div>


                    </div>


                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                &nbsp;&nbsp;&nbsp;
                                <span perfect-class="formGroupLabel">Booking Number</span>

                            </label>

                            <div class="col-sm-8">
                                <div class="input-group mb-2">
                                    <input type="hidden" name="ImportID" perfect-ctype="hidden" />
                                    <input type="hidden" class="form-control " name="FK_ServiceBooking" />

                                    <input type="text" class="form-control" placeholder="" name="BookingNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />

                                </div>
                            </div>
                        </div>


                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">

                                <span perfect-class="formGroupLabel">Service Type</span>

                            </label>

                            <div class="col-sm-8">
                                <div class="input-group mb-2">
                                    <input type="hidden" name="ImportID" perfect-ctype="hidden" />
                                    @*<input type="hidden" class="form-control " name="ID_FIELD" />*@
                                    @*<input type="hidden" class="form-control " name="FK_EquipmentServiceType" />*@
                                    <input type="text" class="form-control" placeholder="" name="ServiceName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />

                                </div>
                            </div>
                        </div>


                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">

                                <span perfect-class="formGroupLabel">Service Center</span>

                            </label>

                            <div class="col-sm-8">
                                <div class="input-group mb-2">
                                    <input type="hidden" name="ImportID" perfect-ctype="hidden" />
                                    @*<input type="hidden" class="form-control " name="ID_FIELD" />*@
                                    <input type="hidden" class="form-control " name="FK_EquipmentServiceType" />
                                    <input type="text" class="form-control" placeholder="" name="ServiceCentre" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />

                                </div>
                            </div>
                        </div>


                    </div>

                    <div class="col-sm-4">
                        <input type="hidden" name="ID_EquipmentService" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                &nbsp;&nbsp;&nbsp;
                                <span perfect-class="formGroupLabel">Mode</span>
                                <span class="text-danger">*</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <select class="form-control perfectValidate_string" name="FK_Mode" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="showtypelist(this)">
                                        <option value="">Please Select </option>
                                        <option value="1">Maintenance</option>
                                        <option value="2">Incidence</option>

                                    </select>

                                </div>
                                <div class="text-danger temptableError"></div>
                            </div>

                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">

                                <span perfect-class="formGroupLabel"> Type</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">

                                <select class="form-control perfectValidate_string" name="FK_Transaction" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">

                                    <option value="">Please Select </option>
                                    @*@if (!(Model.MaintenancetypeList is null))
                        {
                            foreach (var MaintenancetypeList in Model.MaintenancetypeList)
                            {
                                <option value="@MaintenancetypeList.FK_Master">@MaintenancetypeList.Maintenancetype</option>
                            }
                        }*@

                                </select>


                            </div>
                        </div>
                    </div>

                    @*<div class="col-sm-4">
            <div class="form-group row" perfect-class="formGroup">
                <label class="col-sm-4 col-form-label">
                    <span perfect-class="formGroupLabel">Booking Date</span>

                </label>
                <div class="col-sm-8">
                    <input type="date" class="form-control perfectValidate_date" name="SalScrapBillDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" readonly max="2050-01-01" />
                </div>
            </div>
        </div>*@









                    @*<div class="col-sm-4">
            <div class="form-group row" perfect-class="formGroup">
                <label class="col-sm-4 col-form-label">

                    <span perfect-class="formGroupLabel">Vehicle No</span>
                    <span class="text-danger">*</span>

                </label>
                <div class="col-sm-8">
                    <div class="input-group">
                        <input type="text" class="form-control" name="Name" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                        <input type="hidden" name="FK_Master" class="perfectValidate_numeric" perfect-class="formGroupControl" perfect-ctype="hidden" value="" perfect-css="input" />
                        <div class="input-group-append">

                            <button id="addeequipmentservice-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,95,'Vehicle Number',[],[],EquipmentTransMode)" Criterea1="0" Criterea2="0" BindName="Name" BindVal="FK_Master" Function="1"></button>

                        </div>
                    </div>

                </div>

            </div>

        </div>*@





                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">

                                <span perfect-class="formGroupLabel">Booking Date/Time</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="date" class="form-control perfectValidate_date" name="BookingDate" id="FromDate" perfect-class="formGroupControl" perfect-ctype="date" max="2050-01-01" perfect-css="date" onchange="datechecking(this)" />
                                    <input type="time" class="form-control perfectValidate_nm" placeholder="" name="FromTime" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                &nbsp;&nbsp;
                                <span perfect-class="formGroupLabel">Service Date/Time</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="date" class="form-control perfectValidate_date" name="SerServiceDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" onchange="datechecking(this)" />

                                    <input type="time" class="form-control perfectValidate_nm" placeholder="" name="ToTime" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input">
                                    @*<div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>*@

                                </div>
                            </div>
                        </div>
                    </div>



                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">

                                <span perfect-class="formGroupLabel">Pick Up/Drop Off</span>

                            </label>

                            <div class="col-sm-8">
                                <div class="input-group mb-2">
                                    <input type="hidden" name="ImportID" perfect-ctype="hidden" />
                                    @*<input type="hidden" class="form-control " name="ID_FIELD" />*@
                                    @*<input type="hidden" class="form-control " name="FK_EquipmentServiceType" />*@
                                    <input type="text" class="form-control" placeholder="" name="DeliveryType" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />

                                </div>
                            </div>
                        </div>


                    </div>

                    @*<div class="col-sm-2" id="radio">
            <div class="form-group row" perfect-class="formGroup">
                <label class="col-sm-6 col-form-label">
                    &nbsp;&nbsp;&nbsp;
                    <span perfect-class="formGroupLabel">AMC Service</span>
                </label>
                <div class="col-sm-6">
                    <div class="col-sm-4">


                        <input type="radio" id="amcservice" name="AMCService" class="radioservice" value="1" style="margin-top: 11px;">

                    </div>
                </div>
            </div>
        </div>*@
                    @*<div class="col-sm-2" id="radios">

            <div class="form-group row" perfect-class="formGroup">
                <label class="col-sm-6 col-form-label">

                    <span perfect-class="formGroupLabel">Warranty Service</span>
                </label>
                <div class="col-sm-6">
                    <div class="col-sm-4">

                        <input type="radio" id="warrentyservice" name="AMCService" class="radioservice" value="2" style="margin-top: 11px;">

                    </div>
                </div>
            </div>
        </div>*@

                    <div class="col-sm-2" id="amccheck">
                        <div class="col-sm-8">
                            <input type="checkbox" id="amcCheckbox" class="form-control-check-input" name="AMCService" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" style="margin-top: 11px;">
                            <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AMC Service</span>
                        </div>
                    </div>

                    <div class="col-sm-2" id="warrcheck">
                        <div class="col-sm-12">
                            <input type="checkbox" id="warrCheckbox" class="form-control-check-input" name="WarrentyService" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" style="margin-top: 11px;">
                            <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Warranty Service</span>
                        </div>
                    </div>

                </div>
                <br />
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="daccordion__header">
                                <span class="accordion__header--text">Service Details</span>
                            </div>
                            <div class="row">
                                <div class="col-sm-12 " perfect-class="TempTableEquipmentService">
                                    <br />
                                    <div class="row">

                                        <div class="col-sm-4">
                                            <div class="form-group row" perfect-class="formGroup">

                                                <label class="col-sm-4 col-form-label">
                                                    &nbsp;&nbsp;&nbsp;
                                                    <span perfect-class="formGroupLabel">Description </span>                                                    
                                                    <span class="text-danger">*</span>

                                                </label>

                                                <div class="col-sm-8">
                                                    <textarea class="form-control " perfect-class="formGroupControl" perfect-tempTable-ServiceDT="Description" name="Description" rows="3" placeholder="" perfect-ctype="input" perfect-css="input" maxlength="200"></textarea>
                                                    <span class="temptableError"></span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-4">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">
                                                    <span perfect-class="formGroupLabel">Amount </span>
                                                    <span class="text-danger">*</span>
                                                </label>
                                                <div class="col-sm-4">
                                                    <input type="text" class="form-control text-right" perfect-tempTable-ServiceDT="Amount" name="Amount" maxlength="12" id="Amount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'Amount',3) "min="0" value="0"/>

                                                    <span class="temptableError"></span>
                                                </div>
                                                <div class="col-sm-4">
                                                    <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Service" onclick="fn_createEquipmentServiceTable(this,'ServiceDT',[],tableOptionsTempOut)"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                    <button class="btn btn-light1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="clearsubtableproduct(this,'ServiceDT')"><i class="fa fa-refresh" aria-hidden="true"></i></button>

                                                </div>
                                            </div>
                                        </div>



                                    </div>
                                    <div class="card-footer text-right" perfect-class="formFooter">

                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12" style="padding-right:25px;padding-left:25px;">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <div class="table-responsive" perfect-tempTable="ServiceDT" id="EquipmentServicesubtable" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>




                </div>

            <hr />

            <div class="row">
                @*<div class="col-sm-3"></div>
        <div class="col-sm-3"></div>*@
                <div class="col-sm-3">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            &nbsp;&nbsp;&nbsp;
                            <span perfect-class="formGroupLabel">Tax Type</span>
                            @*<span class="text-danger">*</span>*@

                        </label>
                        <div class="col-sm-8">
                            <div class="input-group">
                                <input type="text" class="form-control text-right" placeholder="" name="TaxAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="totalamountcalc(this)" maxlength="10" disabled />

                                <div class="input-group-append">
                                    <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="ShowTax(this,1)"></button>
                                    <div class="modal fade" perfect-class="formGroupModalTax" id="formGroupModalTax">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content  rounded-0">
                                                <div class="modal-header border-0">
                                                    <h5 class="modal-title">Tax Details</h5>
                                                    <button type="button" class="close" data-dismiss="modal">
                                                        <span>&times;</span>
                                                    </button>
                                                </div>
                                                @*<div class="table-responsive" style="max-height: 100%; height: 80%; overflow: auto;">*@
                                                <table id="zero_config" class="table mb-0  table-striped  text-black">
                                                    <thead class="bg-primary text-white">
                                                        <tr>
                                                            <th class="t-head">SlNo</th>
                                                            <th class="t-head" style="Display:none">ID_TaxType</th>
                                                            <th class="t-head">TaxType</th>

                                                            <th class="t-head">Amount</th>




                                                        </tr>
                                                    </thead>
                                                    <tbody class="modal-body" id="formGroupModalTaxbody"></tbody>
                                                    <tfoot>
                                                    </tfoot>
                                                </table>
                                                @*</div>*@
                                                @*<div class="modal-body" id="formGroupModalTaxbody">
                                        </div>*@
                                                <div class="modal-footer">
                                                    @*<button type="button" onclick="CreateProductCheckDescription(this);" class="btn btn-primary">Add</button>*@
                                                    <button type="button" class="btn btn-danger light" data-dismiss="modal" onclick="BindTaxAmount(this)">Ok</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-8 ml-2">
                                <input type="checkbox" class="form-check-input" name="IncludeTax" id="taxinclude" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" onchange="totalamountcalc(this)"><span perfect-class="formCheckInputText">Include Tax</span>

                            </div>
                        </div>

                    </div>

                </div>
                <div class="col-sm-3">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Other Charges</span>
                        </label>
                        <div class="col-sm-8">
                            <div class="input-group">
                                <input type="text" class="form-control text-right" name="OtherCharge" perfect-class="formGroupControl" onchange="totalamountcalc(this)" perfect-ctype="input" perfect-css="input" readonly>
                                <div class="input-group-append">
                                    <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-credit-card" type="button" perfect-css="button" onclick="ShowOtherCharges(this,0)"></button>
                                </div>
                                <div class="modal fade" perfect-class="formGroupModalOtherCharge" id="formGroupModalOtherCharge">
                                    <div class="modal-dialog modal-dialog-centered" role="document">
                                        <div class="modal-content  rounded-0">
                                            <div class="modal-header border-0">
                                                <h5 class="modal-title">Other Charge Details</h5>
                                                <button type="button" class="close" data-dismiss="modal">
                                                    <span>×</span>
                                                </button>
                                            </div>
                                            <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">

                                                <table id="zero_configOthercharge" class="table mb-0  table-striped  text-black">
                                                    <thead class="bg-primary text-white">
                                                        <tr>
                                                            <th class="t-head">SlNo</th>
                                                            <th class="t-head" style="display:none">ID_OtherChargeType</th>
                                                            <th class="t-head">Type</th>
                                                            <th class="t-head">Trans Type</th>
                                                            <th class="t-head text-right">Amount</th>

                                                        </tr>
                                                    </thead>
                                                    <tbody id="formGroupModalOtherChargebody"></tbody>
                                                    <tfoot>
                                                    </tfoot>
                                                </table>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-primary light" data-dismiss="modal" onclick="BindOtherChargeAmount(this)">Apply</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-sm-3">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Sub Total</span>

                        </label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control text-right" placeholder="" readonly="" name="SubTotalAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input">
                        </div>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Discount</span>

                        </label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control text-right" placeholder="" name="DiscountAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'SalePrice',3)" onchange="totalamountcalc(this)" maxlength="12">
                        </div>
                    </div>
                </div>




                <div class="col-sm-3"></div>
                @*<div class="col-sm-3"></div>*@

                <div class="col-sm-3">

                    <div class="form-group row" perfect-class="formGroup">
                        <div class="col-sm-12">
                           <div id="prdimg" class="tab-pane active">
                                <div class="row">
                                    @*<div class="col-sm-9">*@
                                        @*<div class="form-group row" perfect-class="formGroup">*@
                                            <div class="upload-btnup-wrapper">
                                                <button type="button" id="btndocsUpload" class="btnup btn"><span class="accordion__header--text">Upload Documents</span></button>

                                            </div>

                                        @*</div>*@
                                    @*</div>*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>



                <div class="col-sm-3">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Net Amount</span>

                        </label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control text-right" placeholder="" readonly="" name="NetAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input">
                        </div>
                    </div>
                </div>



                <div class="col-sm-3" style="display:@ViewBag.Display">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">Payment Method</label>
                        <div class="col-sm-8">
                            <div class="input-group">

                                <div class="input-group-append">
                                    &nbsp;<button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-money" type="button" perfect-css="button" title="Add Payment Method" onclick="GetPaymentlists(this)"></button>

                                </div>
                            </div>

                        </div>
                    </div>
                </div>



                <div class="modal fade" perfect-class="formGroupModalpayment" id="formGroupModalpayment">
                    <div class="modal-dialog  modal-dialog-centered modal-md" role="document">
                        <div class="modal-content">
                            <div class="modal-header border-0">
                                <h5 class="modal-title">Payment Method</h5>
                                <button type="button" class="close" data-dismiss="modal">
                                    <span>&times;</span>
                                </button>
                            </div>
                            <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                                <div class="row">


                                    <div class="col-sm-12">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">Method <span class="text-danger">*</span></label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <select class="form-control" perfect-tempTable-Payment="PaymentMethod" name="PaymentMethod" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                        <option value="">Please Select </option>


                                                        @if (!(Model.PaymentView is null))
                                                        {
                                                            foreach (var Module in Model.PaymentView)
                                                            {
                                                                if (Module.PMDefault == true)
                                                                {
                                                                    <option value="@Module.PaymentmethodID" selected>@Module.Name</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@Module.PaymentmethodID">@Module.Name</option>
                                                                }

                                                            }
                                                        }
                                                    </select>


                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Ref No.</span>

                                            </label>
                                            <div class="col-sm-8">

                                                <div class="input-group">
                                                    <input type="text" class="form-control " perfect-tempTable-Payment="Refno" name="Refno" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="250" />

                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-12">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Amount</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="text" class="form-control text-right" perfect-tempTable-Payment="PAmount" id="PAmount" name="PAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'PAmount',3)" onchange="Pamount(this)" maxlength="12" value="0" />

                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-9">


                                    </div>
                                    <div class="col-sm-3 text-right">
                                        <div class="input-group">

                                            <div class="input-group-append">
                                                <div>
                                                    <button type="button" class="btn btn-primary1 " onclick="createtable(this,'Payment',['PaymentMethod'],paytableOptionsTempOut)"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                    <button class="btn btn-light1" type="button" onclick="productclear(this, 'Payment')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-sm-12">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel" style="font-weight:500;">Bal. Amount :</span>

                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">

                                                    <label class="col-form-label">
                                                        <span perfect-class="formGroupLabel" style="font-weight:500;" name="BalAmt"></span>
                                                    </label>
                                                    @*<input type="text" class="form-control" perfect-temptable-payment="BalAmt" name="BalAmt" perfect-class="" perfect-ctype="input" perfect-css="input" readonly="" style="border:white;background:white;font-weight: 500;">*@
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-12">
                                        <div class="form-group row" perfect-class="formGroup">

                                            <div class="table-responsive" perfect-tempTable-Payment="" perfect-tempTable="Payment" id="Paymentdethead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                            <div class="text-danger temptableError"></div>

                                        </div>
                                    </div>


                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-primary light" onclick="Billttlnetchck(this)">Apply</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>




            </div>

            <div class="card-footer text-right" perfect-class="formFooter">
                @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                {
                    <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_UpdateEquipmentService(this,'update')"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                }

                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_UpdateEquipmentService(this,'new')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                <button type="button" class="btn btn-light" perfect-css="button" onclick="fn_resetEquipmentService()" name="reset">Clear</button>
            </div>


        </form>




    </div>

    </div>

<script>
    var PssfupDocsList = [];

        (function () {
            jQuery("select").selectpicker();

        })();
        $(document).ready(function () {



            if (EquipmentTransMode == 'TOES') {

                document.getElementById("warrcheck").style.display = 'block';
                document.getElementById("amccheck").style.display = 'block';

            } else {
                document.getElementById("amccheck").style.display = 'none';

                $('[name="WarrentyService"]').removeClass('perfectValidate_numeric');



            }


        });

        var amcCheckbox = document.getElementById('amcCheckbox');
        var warrCheckbox = document.getElementById('warrCheckbox');

        amcCheckbox.addEventListener('change', function () {
            if (amcCheckbox.checked) {
                warrCheckbox.checked = false;
            }
        });

        warrCheckbox.addEventListener('change', function () {
            if (warrCheckbox.checked) {
                amcCheckbox.checked = false;
            }
        });


    $("#btndocsUpload").click(function () {
        let $thisForm = $(this).closest('[perfect-class="form"]');
        let MasterId = $thisForm.find('[name="ID_EquipmentService"]').val() == "" ? "0" : $thisForm.find('[name="ID_EquipmentService"]').val();
        let header = "Documents";
        OpenModalForUpload(MasterId, EquipmentTransMode, header);
    })

        function getfunction(ele) {
        }
        function datechecking(ele) {


            let $thisForm = $(ele).closest('[perfect-class="form"]');

            let fromdate = $thisForm.find('[name=BookingDate]').val();
            fromdate = new Date(fromdate);
            fromdate.setHours(0, 0, 0, 0)
            let todate = $thisForm.find('[name=SerServiceDate]').val();
            todate = new Date(todate);
            todate.setHours(0, 0, 0, 0)
            if (todate < fromdate) {
                $thisForm.find('[name="SerServiceDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Service Date sholud be greater than or equal to Booking Date');
                return false;

            }
            else {

                $thisForm.find('[name="SerServiceDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')

                return true;


            }


        }

    var othrchargelst = [];
    function ShowOtherCharges(ele, mode) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');

        if ($thisForm.data('pOthrChgData')) {

            if ($thisForm.data('pOthrChgData').length > 0) {

                othrchargelst = $thisForm.data('pOthrChgData');
            }

        }

        BindChargeDetails(ele, mode)


    }

        function GetPaymentlists(ele) {

            $('#formGroupModalpayment').modal({ backdrop: 'static', keyboard: false })

            $('#formGroupModalpayment').modal('show');

        }
        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode
            if (charCode > 31 && (charCode < 46 || charCode > 57))
                return false;

            return true;
        }
        function Billttlnetchck(ele) {
            let $thisForm = $(ele).closest('[perfect-class="form"]');

            let balamt = $thisForm.find('[name=BalAmt]').text();

            if (parseFloat(balamt) == 0) {
                $('#formGroupModalpayment').modal('hide');
                $thisForm.find('[perfect-tempTable="Payment"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
            }
            else {

                $thisForm.find('[perfect-tempTable="Payment"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Balance Amt. should be Zero');

            }
        }

        function showtypelist(ele) {

            let $thisForm = $(ele).closest('[perfect-class="form"]');
            let $actionDropdown = $thisForm.find('[name="FK_Transaction"]');
            $actionDropdown.empty();
            $actionDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');

            let FK_Mode = $thisForm.find('[name=FK_Mode]').val();


              let inputData = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                  FK_Mode: FK_Mode,
                  TransMode: EquipmentTransMode
        }

        $.ajax({
            url: "@Url.Action("GetALType", "EquipmentService")",
            type: "POST",
            dataType: "json",
            data: inputData,
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (ajaxOutput) {
                console.log('AJAX!--------->>>>>>>>>', ajaxOutput)
                if (ajaxOutput) {
                    $.each(ajaxOutput, function (key, value) {
                        $actionDropdown.append($('<option/>', { value: value.FK_Transaction }).text(value.ModeName)).selectpicker('refresh');
                    });
                    if ($actionDropdown.attr('perfect-onloadSelect')) {
                        $actionDropdown.val($actionDropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                        $actionDropdown.removeAttr('perfect-onloadSelect')
                    }
                }
            }
        });
    }


        var tableOptionsTempOut = {
            iconButton: {
                buttons: [

                    {
                        icon: "fa fa-pencil btnPerfectGridEdit",
                        action: function () {
                            let savedData = $(this).closest('tr').data('pData')
                            let $tablecontainer = $(this).closest('[perfect-tempTable]');
                            let tableKey = $tablecontainer.attr('perfect-tempTable');
                            let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                            let indexname = tableKey + 'index';
                            let rindex = $(this).closest('tr').attr(indexname);
                            $tablecontainer.attr('perfect-tempTable-action', rindex);
                            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                                let $thisNode = $(this);
                                let pf_name = $thisNode.attr('name');
                                if ($thisNode.is('select')) {
                                    $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                                }
                                else if ($thisNode.is('input')) {

                                    if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                        $thisNode.prop('checked', savedData[pf_name]);
                                    }
                                    else {
                                        $thisNode.val(savedData[pf_name]);
                                    }
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            });
                        }
                    },
                    {
                        icon: "fa fa-trash btnPerfectGridDelete",
                        action: function () {
                            let $thistbl = $(this).closest('table');
                            let table = $thistbl.DataTable();
                            let $tablecontainer = $(this).closest('[perfect-tempTable]');
                            table.destroy();
                            if ($(this).closest('tbody').find('tr').length > 1) {
                                $(this).closest('tr').remove();
                                pft_table_slreset($thistbl);

                            }
                            else {
                                $thistbl.remove();
                            }
                            //CalculateNetAmount(this, 1);

                            CalculateTotal($tablecontainer, 1);
                            CalculateNetAmount(this, 1);
                        }
                    },
                ]
            },
            onlyShowColumn: [],
            hideColumn: [],
            serialNo: true,
            renameHeader: {  },
            rowAttribute: [],
            isCheckType: []



        };


        function fn_UpdateEquipmentService(element,actionType)
    {
            let $thisForm = $(element).closest('[perfect-class="form"]');







            let fromdate = $thisForm.find('[name=BookingDate]').val();
            fromdate = new Date(fromdate);
            fromdate.setHours(0, 0, 0, 0)
            let todate = $thisForm.find('[name=SerServiceDate]').val();
            todate = new Date(todate);
            todate.setHours(0, 0, 0, 0)

            if (todate < fromdate) {

                $thisForm.find('[name="SerServiceDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('');
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Service Date sholud be greater than or equal to Booking Date' });

            }
            else {

                if (datenchecklogdate(element)) {
                    if ($thisForm.valid()) {

                        if (BillAmountbind(element)) {
                    let $errorMsg = '';
                    let $blnSuccess = false;
                    $(element).prop('disabled', true);


                    let servicelist = [];
                    $thisForm.find('[perfect-tempTable="ServiceDT"]').find('tbody').find('tr').each(function () {
                        servicelist.push($(this).data('pData'));
                    })
                    let $modal2 = $thisForm.find('#zero_configOthercharge');
                    let OtherCharge = [];
                    $modal2.find('tbody').find('tr').each(function () {

                    let OtChargeinfo = {};
                    OtChargeinfo['ID_OtherChargeType'] = $(this).find('.jq_ID_OtherChargeType_td').text();

                    OtChargeinfo['OctyTransType'] = $(this).find('.jq_TransType_td').find('select').val();
                    OtChargeinfo['OctyName'] = $(this).find('.jq_Type_td').text();
                    OtChargeinfo['OctyAmount'] = $(this).find('.jq_OtherChagAmnt_td').find('input').val();
                    console.log('OtChargeinfo', OtChargeinfo);
                    OtherCharge.push(OtChargeinfo);

                    });

                            let $modal1 = $thisForm.find('#zero_config');

                    var tax = [];
                    $modal1.find('tbody').find('tr').each(function () {

                        let taxinfo = {};

                        taxinfo['FK_TaxType'] = $(this).find('.jq_taxType_td').text();
                        taxinfo['TaxTyName'] = $(this).find('.jq_taxTypeName_td').text();

                        taxinfo['TaxAmount'] = $(this).find('.jq_taxamount_td').find('input').val();
                        console.log('taxinfo', taxinfo);



                        tax.push(taxinfo);
                        //alert('TAX DET')
                    });

                    if (servicelist.length <= 0) {
                        $blnSuccess = false;
                        $errorMsg = 'Please Fill Equipment Service Details';
                    }
                    else {
                        $blnSuccess = true;
                    }

                    let _ID_EquipmentService = 0;
                    let _ActionUrl = "";

                    if (actionType === "new") {
                        _ID_EquipmentService = 0;
                        _ActionUrl = "@Url.Action("AddNewEquipmentService", "EquipmentService")";
                    }
                    else if (actionType === "update") {
                        _ID_EquipmentService = $thisForm.find('[name="ID_EquipmentService"]').val();
                        _ActionUrl = "@Url.Action("UpdateEquipmentService", "EquipmentService")";
                    }
                    let paymentdetails = [];
                    $thisForm.find('[perfect-tempTable="Payment"]').find('tbody').find('tr').each(function () {
                        paymentdetails.push($(this).data('pData'));
                    })

                    let inputData = {
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        'ID_EquipmentService': isNaN(parseInt($thisForm.find('[name=ID_EquipmentService]').val())) ? 0 : parseInt($thisForm.find('[name=ID_EquipmentService]').val()),
                        'TransDate': $thisForm.find('[name="TransDate"]').val(),
                        'FK_Mode': $thisForm.find('[name="FK_Mode"]').val(),
                        //'ID_Names': $thisForm.find('[name="ID_Names"]').val(),
                        'FK_Transaction': $thisForm.find('[name="FK_Transaction"]').val(),
                        'FK_Master': $thisForm.find('[name="FK_Master"]').val(),
                        'SubTotalAmount': $thisForm.find('[name="SubTotalAmount"]').val(),
                        'DiscountAmount': $thisForm.find('[name="DiscountAmount"]').val(),
                        'NetAmount': $thisForm.find('[name="NetAmount"]').val(),
                        'FK_ServiceBooking': $thisForm.find('[name="FK_ServiceBooking"]').val(),
                        'VehicleNo': $thisForm.find('[name="VehicleNo"]').val(),
                        'BookingNo': $thisForm.find('[name="BookingNo"]').val(),
                        'AMCService': $thisForm.find('[name=AMCService]').is(":checked") ? 1: 0,
                        'OtherCharge': $thisForm.find('[name="OtherCharge"]').val(),
                        'WarrentyService': $thisForm.find('[name=WarrentyService]').is(":checked") ? 1: 0,
                        'TaxAmount': $thisForm.find('[name="TaxAmount"]').val(),
                        'FromDate': $thisForm.find('[name="BookingDate"]').val(),
                        'ToDate': $thisForm.find('[name="SerServiceDate"]').val(),
                        'FromTime': $thisForm.find('[name="FromTime"]').val().trim(),
                        'ToTime': $thisForm.find('[name="ToTime"]').val().trim(),
                        'TransMode': EquipmentTransMode,
                        'EquipmentServiceDetails': servicelist,
                        'PaymentDetail': paymentdetails,
                        'OtherChgDetails': OtherCharge,
                        'ImageList': PssfupDocsList,
                        'TaxAmountDetails': tax,
                        'IncludeTax': $thisForm.find('[name="IncludeTax"]').is(':Checked'),
                        'LastID': LastID_EquipmentService,
                         };
                            clearSessionValue(LastIDSessionKey);
                    console.log('inputData', inputData)

                    if ($blnSuccess) {
                        $.ajax({
                            url: _ActionUrl,
                            type: "POST",
                            data: inputData,
                            dataType: "json",
                            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                            success: function (ajaxOutput) {
                                if (ajaxOutput.Process.IsProcess) {
                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                        $(element).prop('disabled', false);
                                        EquipmentServiceInitialLoad();
                                    });


                                    $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                    $thisForm.find('[perfect-ctype="input"]').val('');
                                    $thisForm.find('[perfect-ctype="date"]').val('');
                                    let onSuccess = $thisForm.attr('perfect-onFormSuccess')
                                    if (onSuccess) {
                                        window[onSuccess]();

                                    }
                                }
                                else {
                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                        $(element).prop('disabled', false);

                                    });
                                }

                            },
                            complete: function () {
                                $(element).prop('disabled', false);
                            }
                        });
                    }
                    else {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': $errorMsg });
                        $(element).prop('disabled', false);
                    }
                        }

                        else {
                            $(element).prop('disabled', false);
                            NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'In Payment Method Balance Amt. Should be  Zero ' });
                        }
                    }

                }

                else {
                    $(element).prop('disabled', false);
                    NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'Future Date not Allowed in Trans Date' });
                }
            }
        }

        function fn_showimportlist(ele) {
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            debugger
            $thisForm.find('[name=BookingNo]').val('').selectpicker('refresh');
            $thisForm.find('[name=BookingDate]').val('');
            $thisForm.find('[name=SerServiceDate]').val('');
            $thisForm.find('[name=FromTime]').val('');
            $thisForm.find('[name=ToTime]').val('');
            $thisForm.find('[name=ServiceName]').val('');
            $thisForm.find('[name=ServiceCentre]').val('');
            $thisForm.find('[name=DeliveryType]').val('');

          
           

            if ($thisForm.find('[name="ID_Names"]').val() == 1 && EquipmentTransMode == 'VLES' ) {
                GetCmnPopUpSearchValAssign(ele, 95, ' @ViewBag.lblpro', [], ['VehicleNo', 'Tool', 'ToolName', 'ID_FIELD', 'FK_Master'], EquipmentTransMode)
            }
            else if ($thisForm.find('[name="ID_Names"]').val() == 1 && EquipmentTransMode == 'TOES') {
                 GetCmnPopUpSearchValAssign(ele, 95, ' @ViewBag.lblpro', [], ['VehicleNo', 'ID_FIELD', 'FK_Master'], EquipmentTransMode)
            }

            else if ($thisForm.find('[name="ID_Names"]').val() == 2 && (EquipmentTransMode == 'VLES' ) ) {
                GetCmnPopUpSearchValAssign(ele, 109, 'Booking List', [], ['FK_ServiceBooking', 'BookingNo', 'VehicleNo', 'Tool', 'ToolName', 'BookingDate', 'ID_FIELD', 'FK_Master', 'HSNCode', 'SerServiceDate','FromTime', 'ToTime', 'ServiceType','ServiceName','ServiceCentre', 'FK_EquipmentServiceType', 'SerPickDel','DeliveryType'], EquipmentTransMode)
            }
            else if ($thisForm.find('[name="ID_Names"]').val() == 2 && (EquipmentTransMode == 'TOES')) {
                GetCmnPopUpSearchValAssign(ele, 109, 'Booking List', [], ['FK_ServiceBooking', 'BookingNo', 'VehicleNo', 'Vehicle', 'Tool', 'BookingDate', 'ID_FIELD', 'FK_Master', 'HSNCode', 'SerServiceDate','FromTime', 'ToTime','ServiceType','ServiceName','ServiceCentre', 'FK_EquipmentServiceType', 'SerPickDel', 'DeliveryType'], EquipmentTransMode)
            }


            else {
                NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': 'Please Select Import From' });
            }

           




        }

        function fun_import(ele) {

            let $thisForm = $(ele).closest('[perfect-class="form"]');


        }

    function decimalpnt(ele, id, range) {
        debugger
        let input = $('#' + id);

        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;

        $(document).on('keydown', '#' + id, function (event) {

            if (ele.value.includes('.')) {

            }
            else if (ele.value === '.' && (event.key === '.' || event.keyCode === 190)) {
                ele.value = '0.00'; // Change the value to '0.00' if only a dot is entered
                // Prevent the dot from being entered in the input field
            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.indexOf('.') < 0 && ele.value.indexOf('.') !== 9 && ele.value.length > 8) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }
        function BindOtherChargeAmount(ele) {
            console.log('inside binddatat fn')
            let $modal = $(ele).closest('.modal');
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            let sum = 0;
            othrchargelst = [];
            $modal.find('table tbody').find('tr').each(function () {

                let value = parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val());
                if ($(this).find('.jq_OtherChagAmnt_td').find('input').val() == '' || $(this).find('.jq_OtherChagAmnt_td').find('input').val() == null || $(this).find('.jq_OtherChagAmnt_td').find('input').val() == ".") {
                    value = 0;
                    parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val(0));
                }

                if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 0) {
                    value = value * 0;
                }
                else if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 1) {
                    value = value * 1;
                }
                else {
                    value = value * 1;
                }
                sum = parseFloat(sum) + value;

                let othrcharge = {
                    ID_OtherChargeType: $(this).find('.jq_ID_OtherChargeType_td').text(),
                    OctyTransType: $(this).find('.jq_TransType_td').find('select').val(),
                    OctyAmount: parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val())
                };
                othrchargelst.push(othrcharge);
                $thisForm.data({ pOthrChgData: othrchargelst });
                console.log('othrchargelst', othrchargelst)

            });

            $thisForm.find('[name=OtherCharge]').val(parseFloat(sum).toFixed(2));
            totalamountcalc(ele);
        }
         function BindChargeDetails(ele, mode) {

        var InputData =
           {
            TransMode: '@ViewBag.TransMode',
           }


        $.ajax({
            url: "@Url.Action("GetOtherCharges", "EquipmentService")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                if (ajaxOutput.OtherCharges.Process.IsProcess) {
                         var CheckListHTML = '';

                         if (ajaxOutput.OtherCharges.Data.length > 0) {

                             $.each(ajaxOutput.OtherCharges.Data, function (i, value) {

                                 let options = ''
                                     if (othrchargelst != '') {

                                         $.each(othrchargelst, function (key, value1) {

                                             if (value1.ID_OtherChargeType == value.ID_OtherChargeType) {

                                                 value.OctyAmount = value1.OctyAmount;
                                                 $.each(ajaxOutput.Transtypelist.Data, function (i, valuea) {
                                                     if (valuea.TransTypeID.toString() == value1.OctyTransType) {

                                                         options += '<option value=' + valuea.TransTypeID + ' selected="selected">' + valuea.TransType + '</option>'
                                                     }
                                                     else {
                                                         options += '<option value=' + valuea.TransTypeID + '>' + valuea.TransType + '</option>'
                                                     }
                                                 });
                                             }


                                         });

                                     }
                                     else
                                     {

                                         $.each(ajaxOutput.Transtypelist.Data, function (i, valuea) {
                                             options += '<option value=' + valuea.TransTypeID + '>' + valuea.TransType + '</option>'
                                         });


                                     }

                                 let $dropdown = '<select class="form-control"name="selector" id="selector" >' + options + '</select>';
                                 CheckListHTML += "<tr>";
                                 CheckListHTML += "<td>" + value.SlNo + "</td>";
                                 CheckListHTML += "<td Class='jq_ID_OtherChargeType_td' Style='Display:none'>" + value.ID_OtherChargeType + "</td>";
                                 CheckListHTML += "<td Class='jq_Type_td'>" + value.OctyName + "</td>";
                                 CheckListHTML += "<td class='jq_TransType_td'>" + $dropdown + "</td>";
                                 CheckListHTML += "<td class='jq_OtherChagAmnt_td' ><input  class='form-control text-right'  type='text'  value='" + Number(value.OctyAmount).toFixed(2) + "' ' maxlength='12' " + ` id="othercharge" name="othercharge"  oninput="decimalpnt(this,'othercharge',3)"` + "'/></td> /></td>";
                                // CheckListHTML += "<td class='jq_OtherChagAmnt_td' ><input min='0'  class='form-control text-right'  type='text'  value='" + value.OctyAmount + "' ' maxlength='12' " + ` id="othercharge" name="othercharge"  oninput="decimalpnt(this,'othercharge',3)"` + "'/></td> /></td>";

                                 CheckListHTML += "</tr>";
                             })
                         }
                         else {
                             CheckListHTML += "<div class='form-group col-md-6'>";
                             CheckListHTML += "<div class='form-check mb-2'>";
                             CheckListHTML += "<label class='form-check-label' for='check1'>No Records...</label>";
                             CheckListHTML += "</div></div>"
                         }
                         //let $model = createSearchModalDOM();
                         //$model.modal.find('.modal-body').append(CheckListHTML);
                         //$model.show

                    $("#formGroupModalOtherChargebody").html(CheckListHTML)

                    if (mode == 0) {
                        $('#formGroupModalOtherCharge').modal({ backdrop: 'static', keyboard: false })
                     $('#formGroupModalOtherCharge').modal('show');
                    }
                    else {

                       $('#formGroupModalOtherCharge').modal('hide');
                    }


                     }
                else {

                    $.each(ajaxOutput.OtherCharges.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            },
                complete: function () {
                    $(ele).prop('disabled', false);
                  //  $('select').selectpicker('refresh');
                }
        });
    }
        function productclear(ele, tablekey) {

            let $thisform = $(ele).closest('[perfect-class="form"]');
            $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
            $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
            $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
            $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
            $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');

            let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
            $tblcontainer.attr('perfect-tempTable-action', 0);

            if (tablekey = "payment") {

            }
        }


        var payele;
        function createtable(ele, tkey, uniq = [], tableOptionsTempOut) {
            payele = ele;

            let $thisForm = $(ele).closest('[perfect-class="form"]');
            let tableKey = tkey;
            let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

            let insertData = {};
            let tableOptionsTemp = tableOptionsTempOut;
            console.log('tableOptionsTemp', tableOptionsTemp)
            let unique = (uniq) ? uniq : [];

            let isValid = true;
            let errorClass = '.temptableError';

            //make index
            console.log('check 1');
            let MRPss = $('[name=MRPs]').val() == null || $('[name=MRPs]').val() == "" || $('[name=MRPs]').val() == undefined ? 0 : $('[name=MRPs]').val();
            $('[name=MRPs]').val(MRPss);

            let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
            let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
            let indexname = tkey + 'index';
            tableOptionsTemp.rowAttribute.push(indexname);
            tableOptionsTemp.hideColumn.push(indexname);
            console.log('tableOptionsTemp.rowAttribute', tableOptionsTemp.rowAttribute)
            let updateCond = '';
            let isNew = true;

            if (thisactionIndex > 0) {
                //means update
                insertData[indexname] = thisactionIndex;
                updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
                isNew = false;
            }
            else {
                //insert
                insertData[indexname] = lastIndex + 1;
                $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
                isNew = true;
            }
            //
            if (tableKey == 'Warranty') {

                isValid = validwartdetail(ele, tableKey, errorClass, isValid);
            }
            else if (tableKey == 'Payment') {
                isValid = validpaymntdetail(ele, tableKey, errorClass, isValid);
            }
            else if (tableKey == 'Purchase') {
                isValid = validsaledetail(ele, tableKey, errorClass, isValid);
            }

            if (unique.length > 0) {
                //getting previous data
                let prevData = [];
                $tblcontainer.find('table > tbody').find('tr').each(function () {
                    if (isNew) {
                        prevData.push($(this).data('pData'));
                    }
                    else {
                        if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                            prevData.push($(this).data('pData'));
                        }

                    }

                })
                console.log('previous data', prevData);

                unique.forEach(function (key, i) {
                    console.log('unid -> key:' + key + "| index :" + i);
                    let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                    // let headerEleName = $thisForm.find('[name="lblProName"]').text();
                    let atname = $thisEle.attr('name');
                    let cvalue;
                    console.log('atname', atname);
                    console.log('$thisEle.length', $thisEle.length);
                    if ($thisEle.length != 0) {
                        console.log('len', $thisEle)
                        let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                        let errmessage = key + " Already exits"

                        //getting current value in cval
                        if ($thisEle.is('select')) {
                            cvalue = $thisEle.val();
                            //alert(cvalue);
                        }
                        else if ($thisEle.is('input')) {

                            let inputEleType = $thisEle.attr('type').toLocaleLowerCase();
                            if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                            else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); console.log('cvalue ->', cvalue); }
                            else { cvalue = $thisEle.val(); }
                        }
                        else { cvalue = $thisEle.val(); }



                        //searching in previous data
                        if (prevData.find(a => a[atname] == cvalue)) {
                            // console.log('Search =>' + cvalue + '| attr :' + atname)
                            $errorElement.text(errmessage);
                            isValid = false;
                        }
                    }
                });

            }

            console.log('isValid', isValid);

            if (isValid) {

                console.log('check 4.1');
                // this section make table column data
                $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                    let $this = $(this);
                    let headerName = $this.attr('perfect-tempTable-' + tableKey);
                    let nameAttr = $this.attr('name');
                    //console.log('nameAttr', nameAttr);
                    console.log('headerName', headerName);

                    if ($this.is('select')) {
                        //    switch (headerName) {
                        //        case "FK_AllowanceType":
                        //            headerName = "Allowance Type";
                        //            break;

                        //        default:
                        //            break
                        //    }

                        tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTemp.hideColumn.push(nameAttr)
                        //displat text of select
                        if ($this.val() != null) {
                            let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        else {
                            let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        //tableOptionsTemp.onlyShowColumn.push(nameAttr + '_d')
                        insertData[nameAttr] = $this.val();
                        //insertData[nameAttr] = $this.val();

                        $this.val('').selectpicker('refresh');


                    }
                    else if ($this.is('input')) {


                        insertData[nameAttr] = $this.val();
                        console.log('insertData[nameAttr]', insertData[nameAttr])
                        if (nameAttr == "prodtid") { }
                        else if (nameAttr == "stkid") { }
                        else {
                            $this.val('');
                        }
                    }
                    else {
                        insertData[nameAttr] = $this.val();

                        $this.val('');
                    }

                });
                console.log('check 4.2', insertData);
                console.log('check 4.2 tableoption', tableOptionsTemp);
                if (isNew) {
                    console.log('check 4.2.1');
                    //this section nake table.table row
                    if ($tblcontainer.find('table').length == 0) {
                        console.log('check 4.2.3');
                        console.log(insertData);
                        console.log(',tableOptionsTemp', tableOptionsTemp)
                        $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));

                        //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false });
                    }
                    else {
                        console.log('check 4.2.1');
                        let table = $tblcontainer.find('table').DataTable()
                        table.destroy()
                        pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);


                    }

                }
                else {

                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()

                    pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);

                }

                console.log(insertData);
                //alert(1);
                // resetting the edit value
                $tblcontainer.attr('perfect-tempTable-action', 0);

                if (tableKey == 'Warranty') {

                    BindWarrantyAmount(ele);
                }
                else if (tableKey == 'Payment') {
                    BillAmountbind(ele);
                }
                else if (tableKey == 'Purchase') {
                    $thisForm.find('[name=prdbtn]').removeAttr("disabled", "disabled")




                }

            }

            Binddatadetails(ele);
            CalculateTotal(ele);
            //totalamountcalc(ele);

        }
        function Pamount(ele) {
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            let amtp = $thisForm.find('[name="PAmount"]').val() == "" ? "0" : $thisForm.find('[name="PAmount"]').val();
            $thisForm.find('[name="PAmount"]').val(parseFloat(amtp).toFixed(2))
        }


        function Binddatadetails(ele) {

            let $thisForm = $(ele).closest('[perfect-class="form"]');
            let net = 0;
            let BillTotal = 0;

            $('#EquipmentServicesubtable').find('tbody tr').each(function (index, ele) {

                net = net + parseFloat($(ele).find('.Amount').text());



            });


             BillTotal = (net);


            $thisForm.find('[name=SubTotalAmount]').val(BillTotal.toFixed(4));


        }


        function CalculateTotal(element, md) {

            debugger
            let $thisForm = $(element).closest('[perfect-class="form"]');
            let Net = 0;

            let TotalBill = $thisForm.find('[name=SubTotalAmount]').val() == "" ? "0" : $thisForm.find('[name=SubTotalAmount]').val();
            TaxAmount = $thisForm.find('[name=TaxAmount]').val() == "" ? "0" : $thisForm.find('[name=TaxAmount]').val();
            $thisForm.find('[name="Amount"]').val() == "" ? 0 : $thisForm.find('[name=Amount]').val();


            $('#EquipmentServicesubtable').find('tbody tr').each(function (index, element) {
                //Net = Net + (parseFloat($(element).find('.Amount').text()));
                let SubTot = 0;
                SubTot = parseFloat($(element).find('.Amount').text());
                if (isNaN(SubTot)) {
                    SubTot = 0;
                }

                Net += SubTot;
           
               

            });


            let BillTotal = (Net);

            $thisForm.find('[name=SubTotalAmount]').val(BillTotal.toFixed(2));

            //  CalculateNetAmount(element)
            totalamountcalc(element);

        }
        function validpaymntdetail(ele, tableKey, errorClass, isValid) {
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val() == null) {

                isValid = false;
                console.log('false', $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val());
                $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Payment Method');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

            if (parseFloat($thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val()) <= 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val() == "") {
                console.log('false', $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val());
                isValid = false;

                $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter a value greater than  0');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
            return isValid;
        }

        function fn_resetEquipmentService(ele) {
            EquipmentServiceInitialLoad();
        }

        var payele;
        function fn_createEquipmentServiceTable(element, tkey, uniq = [], tableOptionsTempOut) {

            payele = element;
            let $thisForm = $(element).closest('[perfect-class="form"]');
            let tableKey = tkey;
            let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

            let insertData = {};
            let tableOptionsTemp = tableOptionsTempOut;

            let unique = (uniq) ? uniq : [];

            let isValid = true;
            let errorClass = '.temptableError';


            let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
            let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
            let indexname = tkey + 'index';
            tableOptionsTemp.rowAttribute.push(indexname);
            tableOptionsTemp.hideColumn.push(indexname);
            let updateCond = '';
            let isNew = true;

            if (thisactionIndex > 0) {
                insertData[indexname] = thisactionIndex;
                updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
                isNew = false;
            }
            else {
                insertData[indexname] = lastIndex + 1;
                $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
                isNew = true;
            }

            debugger
            let Amount = $thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').val();
           
            if (tableKey == 'ServiceDT') {
                if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Description"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Description"]').val == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="Description"]').val == '') {

                    isValid = false;
                    console.log('false');
                    $thisForm.find('[perfect-tempTable-' + tableKey + '="Description"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Description');
                }
                else {
                    $thisForm.find('[perfect-tempTable-' + tableKey + '="Description"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
                }



                if (parseFloat(Amount) < 0 || Amount == null || Amount == "" || parseFloat(Amount) == 0) {

                    isValid = false;
                    console.log('false');
                    $thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Amount');
                }
                else {
                    $thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
                }
            }




            if (unique.length > 0) {
                let prevData = [];
                $tblcontainer.find('table > tbody').find('tr').each(function () {
                    if (isNew) {
                        prevData.push($(this).data('pData'));
                    }
                    else {
                        if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                            prevData.push($(this).data('pData'));
                        }

                    }

                })

                unique.forEach(function (key, i) {
                    let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                    let headerEleName = $thisForm.find('[name="lblType"]').text();
                    let atname = $thisEle.attr('name');
                    let cvalue;


                    if ($thisEle.length != 0) {
                        let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                        let errmessage = headerEleName + " Already exits"

                        if ($thisEle.is('select')) {
                            cvalue = $thisEle.val();

                        }
                        else if ($thisEle.is('input')) {

                            let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                            if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                            else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                            else { cvalue = $thisEle.val(); }
                        }
                        else {
                            cvalue = $thisEle.val();
                        }

                        if (prevData.find(a => a[atname] == cvalue)) {
                            $errorElement.text(errmessage);
                            isValid = false;
                        }
                    }
                });

            }

            if (isValid) {
                $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                    let $this = $(this);
                    let headerName = $this.attr('perfect-tempTable-' + tableKey);
                    let nameAttr = $this.attr('name');
                    if ($this.is('select')) {
                        switch (headerName) {
                            case "FK_Service":
                                headerName = "Service";
                                break;
                            case "PssdPeriodType":
                                headerName = "Period Type";
                                break;
                            default:
                                break
                        }
                        tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTemp.hideColumn.push(nameAttr)
                        if ($this.val() != null) {
                            let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        else {
                            let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        insertData[nameAttr] = $this.val();

                        $this.val('').selectpicker('refresh');
                    }
                    else if ($this.is('input')) {

                        let inputType = $this.attr('type').toLocaleLowerCase();

                        if (inputType == 'checkbox') {

                            insertData[nameAttr] = $this.is(':checked');

                            tableOptionsTemp.isCheckType.push(nameAttr)
                            $this.prop('checked', false);

                        }
                        else if (inputType == 'hidden') {
                            insertData[nameAttr] = $this.val();
                            $this.val('');

                        }

                        else {
                            insertData[nameAttr] = $this.val();

                            $this.val('');
                        }
                    }
                    else {
                        insertData[nameAttr] = $this.val();

                        $this.val('');
                    }
                });

                if (isNew) {
                    if ($tblcontainer.find('table').length == 0) {
                        $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                    }
                    else {
                        let table = $tblcontainer.find('table').DataTable()
                        table.destroy()
                        pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                    }
                }
                else {
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
                }

                $tblcontainer.attr('perfect-tempTable-action', 0);

            }


            //CalculateTotal(element);

            //totalamountcalc(element);
            Binddatadetails(element);
            CalculateTotal(element);
        }



        var paytableOptionsTempOut = {
            iconButton: {
                buttons: [
                    {
                        icon: "fa fa-pencil btnPerfectGridEdit",
                        action: function () {
                            let savedData = $(this).closest('tr').data('pData')

                            let $tablecontainer = $(this).closest('[perfect-tempTable]');
                            let tableKey = $tablecontainer.attr('perfect-tempTable');
                            let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                            //index attribute name in table row
                            let indexname = tableKey + 'index';

                            //index number in table row
                            let rindex = $(this).closest('tr').attr(indexname);

                            $tablecontainer.attr('perfect-tempTable-action', rindex);

                            console.log('Editclick', savedData);
                            //filling data in available inputs
                            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                                let $thisNode = $(this);
                                let pf_name = $thisNode.attr('name');
                                if ($thisNode.is('select')) {
                                    $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                                }
                                else if ($thisNode.is('input')) {
                                    let inputType = $thisNode.attr('type').toLocaleLowerCase();

                                    if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {
                                        $thisNode.prop('checked', savedData[pf_name]);
                                    }
                                    else {
                                        $thisNode.val(savedData[pf_name]);
                                    }
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            });
                        }
                    },
                    {
                        icon: "fa fa-trash btnPerfectGridDelete",
                        action: function () {
                            let $tablecontainer = $(this).closest('[perfect-tempTable]');
                            let $thistbl = $(this).closest('table');
                            let table = $thistbl.DataTable();
                            table.destroy();
                            if ($(this).closest('tbody').find('tr').length > 1) {
                                $(this).closest('tr').remove();
                                pft_table_slreset($thistbl);
                                //$thistbl.dataTable({ paging: true, searchbtn: false });
                            }
                            else {
                                $thistbl.remove();
                            }
                            BillAmountbind($tablecontainer);

                        }
                    },
                ]
            },

            rowAttribute: [],
            onlyShowColumn: ['PAmount', 'Refno', 'PaymentMethod_d'],
            renameHeader: { "PAmount": "Amount1R", "Refno": "Ref No", "PaymentMethod_d": "Method" },
            hideColumn: ['BalAmt'],

            serialNo: true,

        };
        function clearsubtableproduct(ele, tablekey) {


            let $thisform = $(ele).closest('[perfect-class="form"]');
            $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
            $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
            $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
            $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
            $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');
            let errorClass = '.temptableError';
            $thisform.find('[perfect-tempTable-' + 'ServiceDT' + '="Description"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');

            let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
            $tblcontainer.attr('perfect-tempTable-action', 0);

            if (tablekey = "ServiceDT") {

            }

        }




        function CalculateNetAmount(element, md) {

            debugger

            let $thisForm;
            if (md == 1) {
                $thisForm = $(payele).closest('[perfect-class="form"]');
            }
            else {
                $thisForm = $(element).closest('[perfect-class="form"]');
            }
            let Nettotal = 0;
            let total = 0;
            let DiscountAmount = 0;
            let TaxAmount = 0;
            let taxamount = 0;
            DiscountAmount = $thisForm.find('[name=DiscountAmount]').val() == "" ? "0" : $thisForm.find('[name=DiscountAmount]').val();
            //console.log('Advanceamount', DiscountAmount);

            total = $thisForm.find('[name=SubTotalAmount]').val() == "" ? "0" : $thisForm.find('[name=SubTotalAmount]').val();
            //console.log('total', total);
            let discountamount = $thisForm.find('[name=DiscountAmount]').val() == "" ? "0":$thisForm.find('[name=DiscountAmount]').val();
            TaxAmount = $thisForm.find('[name=TaxAmount]').val() == "" ? "0" : $thisForm.find('[name=TaxAmount]').val();
            taxamount = $thisForm.find('[name=TaxAmount]').val() == "" ? "0" : $thisForm.find('[name=TaxAmount]').val();
            let totalamount = $thisForm.find('[name="SubTotalAmount"]').val();


            if (parseFloat(discountamount) == (parseFloat(totalamount) + parseFloat(taxamount)) ){

                $thisForm.find('[name=NetAmount]').val(0);
            }
            else {

                Nettotal = (parseFloat(totalamount) + parseFloat(taxamount)) - parseFloat(discountamount);

                $thisForm.find('[name=NetAmount]').val(parseFloat(Nettotal).toFixed(2));
            }



            BillAmountbind(element);
        }



        function ShowTax(ele, mod) {
            Taxcalled = 1;
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            let taxinfo = {};
            if ($thisForm.data('pDataTax')) {

                if ($thisForm.data('pDataTax').length > 0) {

                    Taxlist = $thisForm.data('pDataTax');
                }
                BindTaxDetails("1", 'formGroupModalTax', ele, mod)

                if (mod == 1) {
                    $('#formGroupModalTax').modal('show');
                }
                else {
                    $('#formGroupModalTax').modal('hide');
                }
            }
            else {
                BindTaxDetails("1", 'formGroupModalTax', ele, mod)
            }


        }
 var Taxlist = [];
     function BindTaxDetails(Mode, ModalID, ele) {
         let $thisForm = $(ele).closest('[perfect-class="form"]');

        var InputData =
        {
            FK_Company: $thisForm.find('[name=FK_Company]').val(),
        }

        $.ajax({
            url: "@Url.Action("GetTaxAmount", "Sales")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                     if (ajaxOutput.Process.IsProcess) {
                         var CheckListHTML = '';
                         let sum = 0;
                         if (ajaxOutput.Data.length > 0) {


                             $.each(ajaxOutput.Data, function (i, value) {
                                 sum = sum + parseFloat(value.TaxAmount);
                                 if (Taxlist != '') {
                                     $.each(Taxlist, function (key, value1) {
                                         if (value1.ID_TaxType == value.ID_TaxType) {
                                             value.TaxAmount = value1.TaxAmount;
                                         }
                                     });

                                 }
                                 CheckListHTML += "<tr>";
                                 CheckListHTML += "<td>" + value.SlNo + "</td>";
                                 CheckListHTML += "<td class='jq_taxType_td' Style='Display:none'>" + value.ID_TaxType + "</td>";
                                 CheckListHTML += "<td class='jq_taxTypeName_td'>" + value.TaxTyName + "</td>";
                                 //CheckListHTML += "<td class='jq_taxamount_td' ><input onkeypress='return /[0-9]/i.test(event.key) min='0'  class='form-control text-right' maxlength='10' type='text'  value='" + value.TaxAmount + "' /></td>";
                                 CheckListHTML += "<td class='jq_taxamount_td' ><input  class='form-control text-right'   type='text'  value='" + (value.TaxAmount).toFixed(2) + "' " + `perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  maxlength="12" id="Taxinput" name="Taxinput" oninput="decimalpnt(this,'Taxinput',3)"` + " onchange='changetaxamount(this)'/></td> /></td>";


                                 CheckListHTML += "</tr>";
                             })
                         }
                         else {
                             CheckListHTML += "<div class='form-group col-md-6'>";
                             CheckListHTML += "<div class='form-check mb-2'>";
                             CheckListHTML += "<input type='checkbox' class='form-check-input' >"
                             CheckListHTML += "<label class='form-check-label' for='check1'>No Records...</label>";
                             CheckListHTML += "</div></div>"
                         }


                         $("#formGroupModalTaxbody").html(CheckListHTML)
                         $('#formGroupModalTax').modal('show');
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }
            });
        }
    function BindTaxAmount(element) {

        let $modal = $(element).closest('.modal');
        let $thisForm = $(element).closest('[perfect-class="form"]');
        let sum = 0;
        Taxlist = [];
        $modal.find('table tbody').find('tr').each(function () {
            let value = parseFloat($(this).find('.jq_taxamount_td').find('input').val());
            if ($(this).find('.jq_taxamount_td').find('input').val() == '' || $(this).find('.jq_taxamount_td').find('input').val() == null) {
                parseFloat($(this).find('.jq_taxamount_td').find('input').val(0));
            }
            sum = sum + parseFloat($(this).find('.jq_taxamount_td').find('input').val());

            let TaxAmount = {
                ID_TaxType: $(this).find('.jq_taxType_td').text(),
                TaxtyName: $(this).find('.jq_taxTypeName_td').text(),
                TaxAmount: parseFloat($(this).find('.jq_taxamount_td').find('input').val())
            };
            Taxlist.push(TaxAmount);
            $thisForm.data({ pDataTax: Taxlist });

        });
        $thisForm.find('[name=TaxAmount]').val(sum);
        totalamountcalc(element);
    }



    function checkpurrateTax(ele) {
        ShowTax(ele, 1);


    }



  function totalamountcalc(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');


        let otheramt = 0;

        let Amount = 0;
        let tax = 0;
      let discountamount = 0;
      otheramt = $thisForm.find('[name="OtherCharge"]').val() == "" ? "0" : $thisForm.find('[name="OtherCharge"]').val();

        Amount = $thisForm.find('[name="SubTotalAmount"]').val() == "" ? "0" : $thisForm.find('[name="SubTotalAmount"]').val();
        tax = $thisForm.find('[name="TaxAmount"]').val() == "" ? "0" : $thisForm.find('[name="TaxAmount"]').val();
        discountamount = $thisForm.find('[name=DiscountAmount]').val() =="" ? "0" : $thisForm.find('[name=DiscountAmount]').val();


        let netamount = 0;
        if ($('#taxinclude').is(":checked")) {
            netamount = 0;
            netamount = parseFloat(Amount) + parseFloat(otheramt) - parseFloat(discountamount);
            $thisForm.find('[name="NetAmount"]').val(parseFloat(netamount).toFixed(2));
        }
        else {
            netamount = 0;
            netamount = parseFloat(Amount) + parseFloat(tax) + parseFloat(otheramt) - parseFloat(discountamount);
            $thisForm.find('[name="NetAmount"]').val(parseFloat(netamount).toFixed(2));
        }
        //for payment method
      $thisForm.find('[name=DiscountAmount]').val(Number(discountamount).toFixed(2));
        $thisForm.find('[name=NetAmount]').val(netamount.toFixed(2));
        let billamt = 0;
        let bilamt = 0;

        bilamt = netamount;
        $('#Paymentdethead').find('tbody tr').each(function (index, ele) {
            billamt += parseFloat($(ele).find('.PAmount').text());
        });
      bilamt = parseFloat(bilamt) - billamt;

      $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));
      $thisForm.find('[name=PAmount]').val(bilamt.toFixed(2));
        //for payment method/////end
        }


        function BillAmountbind(ele) {

            debugger;
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            let netamt = $thisForm.find('[name="NetAmount"]').val() == "" ? 0 : $thisForm.find('[name="NetAmount"]').val();


            let billamt = 0;
            let bilamt = 0;

            if ($thisForm.find('[name=BalAmt]').text() == '') {
                bilamt = 0;
            }
            else {

                bilamt = netamt;
            }

            //$thisForm.find('[name=NetAmount]').val(Number(netamt).toFixed(2));

            $('#Paymentdethead').find('tbody tr').each(function (index, ele) {
                billamt += parseFloat($(ele).find('.PAmount').text());

            });


            bilamt = parseFloat(bilamt) - parseFloat(billamt);

            $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));
            $thisForm.find('[name=PAmount]').val(bilamt.toFixed(2));
            if (bilamt == 0) {

                return true;

            }
            else {

                return false;

            }
        }

 @*function ShowTax(ele, mod) {
        debugger
        Taxcalled = 1;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let taxinfo = {};
        if ($thisForm.data('pDataTax')) {

            if ($thisForm.data('pDataTax').length > 0) {

                Taxlist = $thisForm.data('pDataTax');
            }
            BindTaxDetails("1", 'formGroupModalTax', ele, mod)

            if (mod == 1) {
                $('#formGroupModalTax').modal('show');
            }
            else {
                $('#formGroupModalTax').modal('hide');
            }
        }
        else {
            BindTaxDetails("1", 'formGroupModalTax', ele, mod)
        }


    }
    var Taxlist = [];
     function BindTaxDetails(Mode, ModalID, ele) {
         let $thisForm = $(ele).closest('[perfect-class="form"]');

        var InputData =
        {
            FK_Company: $thisForm.find('[name=FK_Company]').val(),
        }

        $.ajax({
            url: "@Url.Action("GetTaxAmount", "Sales")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                     if (ajaxOutput.Process.IsProcess) {
                         var CheckListHTML = '';
                         let sum = 0;
                         if (ajaxOutput.Data.length > 0) {


                             $.each(ajaxOutput.Data, function (i, value) {
                                 sum = sum + parseFloat(value.TaxAmount);
                                 if (Taxlist != '') {
                                     $.each(Taxlist, function (key, value1) {
                                         if (value1.ID_TaxType == value.ID_TaxType) {
                                             value.TaxAmount = value1.TaxAmount;
                                         }
                                     });

                                 }
                                 CheckListHTML += "<tr>";
                                 CheckListHTML += "<td>" + value.SlNo + "</td>";
                                 CheckListHTML += "<td class='jq_taxType_td' Style='Display:none'>" + value.ID_TaxType + "</td>";
                                 CheckListHTML += "<td class='jq_taxTypeName_td'>" + value.TaxTyName + "</td>";
                                 CheckListHTML += "<td class='jq_taxamount_td' ><input min='0'  class='form-control text-right' onkeypress='return isNumberKey(event)' type='text'  value='" + value.TaxAmount + "' ' maxlength='12'/></td> /></td>";

                                 CheckListHTML += "</tr>";
                             })
                         }
                         else {
                             CheckListHTML += "<div class='form-group col-md-6'>";
                             CheckListHTML += "<div class='form-check mb-2'>";
                             CheckListHTML += "<input type='checkbox' class='form-check-input' >"
                             CheckListHTML += "<label class='form-check-label' for='check1'>No Records...</label>";
                             CheckListHTML += "</div></div>"
                         }


                         $("#formGroupModalTaxbody").html(CheckListHTML)
                         $('#formGroupModalTax').modal('show');
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }
            });
        }
        function BillAmountbind(ele) {

            debugger;
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            let netamt = $thisForm.find('[name="NetAmount"]').val() == "" ? 0 : $thisForm.find('[name="NetAmount"]').val();
            let billamt = 0;
            let bilamt = 0;

            if ($thisForm.find('[name=BalAmt]').text() == '') {
                bilamt = 0;
            }
            else {

                bilamt = netamt;
            }

            $thisForm.find('[name=NetAmount]').val(Number(netamt).toFixed(2));

            $('#Paymentdethead').find('tbody tr').each(function (index, ele) {
                billamt += parseFloat($(ele).find('.PAmount').text());

            });
            bilamt = parseFloat(bilamt) - parseFloat(billamt);

            $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));
            if (bilamt == 0) {

                return true;

            }
            else {

                return false;

            }
        }
    function BindTaxAmount(element) {

        let $modal = $(element).closest('.modal');
        let $thisForm = $(element).closest('[perfect-class="form"]');
        let sum = 0;
        Taxlist = [];
        $modal.find('table tbody').find('tr').each(function () {
            sum = sum + parseFloat($(this).find('.jq_taxamount_td').find('input').val());

            let TaxAmount = {
                ID_TaxType: $(this).find('.jq_taxType_td').text(),
                TaxtyName: $(this).find('.jq_taxTypeName_td').text(),
                TaxAmount: parseFloat($(this).find('.jq_taxamount_td').find('input').val())
            };
            Taxlist.push(TaxAmount);
            $thisForm.data({ pDataTax: Taxlist });

        });
        $thisForm.find('[name=TaxAmount]').val(sum);
        totalamountcalc(element);
    }



    function checkpurrateTax(ele) {
        debugger
        ShowTax(ele, 1);


    }





    function totalamountcalc(element) {
        debugger

        let $thisForm = $(ele).closest('[perfect-class="form"]');



        let Amount = 0;
        let tax = 0;
        let discountamount = 0;
        Amount = $thisForm.find('[name="SubTotalAmount"]').val() == "" ? "0" : $thisForm.find('[name="SubTotalAmount"]').val();
        tax = $thisForm.find('[name="TaxAmount"]').val() == "" ? "0" : $thisForm.find('[name="TaxAmount"]').val();
        discountamount = $thisForm.find('[name=DiscountAmount]').val() =="" ? "0" : $thisForm.find('[name=DiscountAmount]').val();


        let netamount = 0;
        if ($('#taxinclude').is(":checked")) {
            netamount = 0;
            netamount = parseFloat(Amount) - parseFloat(discountamount)
            $thisForm.find('[name="NetAmount"]').val(parseFloat(netamount).toFixed(2));
        }
        else {
            netamount = 0;
            netamount = parseFloat(Amount) + parseFloat(tax)- parseFloat(discountamount)
            $thisForm.find('[name="NetAmount"]').val(parseFloat(netamount).toFixed(2));
        }
        //for payment method
        $thisForm.find('[name=NetAmount]').val(netamount.toFixed(2));
        let billamt = 0;
        let bilamt = 0;

        bilamt = netamount;
        $('#Paymentdethead').find('tbody tr').each(function (index, ele) {
            billamt += parseFloat($(ele).find('.PAmount').text());
        });
        bilamt = parseFloat(bilamt) - billamt;

        $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));
        //for payment method/////end
        }*@
        function datenchecklogdate(ele) {

            let $thisForm = $(ele).closest('[perfect-class="form"]');
            //invalid-feedback
            let RegDate = $thisForm.find('[name="TransDate"]').val();

            //SalEnterDate = new Date(SalEnterDate);

            //var today = new Date();
            RegDate = new Date(RegDate);
            RegDate.setHours(0, 0, 0, 0)


            let today = new Date();
            today.setHours(0, 0, 0, 0);


            if (RegDate > today) {
                $thisForm.find('[name="TransDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Entered date should be less than or equal to Todays date')
                return false;

            }
            else {

                $thisForm.find('[name="TransDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('');
                return true;
            }


        }

</script>
