@model PerfectWebERP.Models.ExtraworkReportModel.ExtraworkReportView

<style>


    .btn-export {
        /*//height:10px;*/
        background-color: #2aa2ad;
        color: white;
    }

    .div-export {
        float: right;
        margin-left: 3px;
        /*background-color:red;*/
        height: 41px;
        /*// width:90px;*/
    }

        .div-export:hover {
            color: white !important;
        }

    .btn-export :hover {
        color: white !important;
    }

    #ReportName {
        text-align: center;
        font-size: 1.3rem;
        font-weight: 700;
    }
    .dataTables_scrollHeadInner .table-striped {
        display: none;
    }
    #ExtraWorkReportList > thead > tr > th {
        border: 1px solid #ddd;
    }
        
        #ExtraWorkReportList > thead > tr > th > div {
            height: 20px !important;
        }
    #FinalAccountReportList > tr > th {
        border: 1px solid #ddd;
    }
</style>



<div class="card">
    <div class="card-header">

        <div class="col-xl-4">
            <h4 class="card-title col-12">Extra Work Report</h4>
            @*<span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>*@
        </div>
        <div class="col-xl-4 text-right">
            <button id="refresh" type="button" class="btn  btn-primary btn-sm" name="Search" perfect-css="button" onclick="ExtraWorkInitialLoad()" title="To Refresh"><i class="fa fa-refresh"></i></button>
            <button id="addcompany-jq-addnewuser" type="button" class="btn  btn-primary btn-sm" name="Search" perfect-css="button" onclick="fn_showFiltersearchs()" title="To Filter"><i class="fa fa-filter"></i></button>
            <div class="dropdown div-export" id="exppdf" style="display: none;">
                <button class="btn  dropdown-toggle btn-sm btn-export" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span><i class="fa fa-file-o" style="font-size:16px"></i> </span>
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item" href="#" onclick="generatePdf(this)">PDF</a>
                    <a class="dropdown-item" href="#" onclick="onExell()">EXCEL </a>
                </div>
            </div>
        </div>
    </div>


    <div class="card-body extrawork_rp">

        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onformsuccess="AccountsReportInitialLoad" novalidate="novalidate">
            <div class="incentiveReportfilters">
                <div class="ExtraworkReportfilters">
                    <input name="__RequestVerificationToken" type="hidden" value="3T1roMgsXqHwKgZK_ZbOnuby7bna0l1ekqkug0c4LvhmvEPATSoflL5gsJI3l3uny-ZEAmdZpC4O1h92w4XZKnRVPYSCabgP8gIClRTBA2c1">
                    <div class="row">

                        <div class="col-sm-6 DivFromDate">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">From Date</span>
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-sm-8">
                                    <input type="date" class="form-control  ActionDate perfectValidate_date" id="FromDate" data-id="FromDate-error" name="FromDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" getfunction()">
                                    <div id="FromDate-error" class="Custominvalid animated fadeInUp producterror text-danger"></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6 DivToDate">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">To Date</span>
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-sm-8">
                                    <input type="date" id="ToDate" class="form-control  ActionDate perfectValidate_date" name="ToDate" data-id="ToDate-error" perfect-class="formGroupControl" perfect-ctype="date" getfunction()" perfect-css="date">
                                    <div id="ToDate-error" class="Custominvalid animated fadeInUp producterror text-danger"></div>
                                    <div class="invalid-feedback animated fadeInUp limit-check "></div>
                                </div>
                            </div>
                        </div>


                        <div class="col-sm-6  divbranch">



                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Project</span>

                                </label>
                                <div class="col-sm-8">


                                    <select class="form-control perfectValidate_string_nm" id="Project" name="Project" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" onchange="getfunction();clearfield('Branch')">

                                        <option value="0">Please Select</option>


                                        @if (!(Model.ProjectList is null))
                                        {
                                            foreach (var i in Model.ProjectList)
                                            {
                                                <option value="@i.ID_FIELD">@i.ID_Name</option>
                                            }

                                        }

                                    </select>



                                </div>
                            </div>





                        </div>


                        <div class="col-sm-6">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Stage</span>

                                </label>
                                <div class="col-sm-8">
                                    <select class="form-control " name="Stage" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" perfect-selectbutton="Add Designation" perfect-selectbuttonaction="Stage" onchange="getfunction();clearfield('Desigination')">
                                        <option value="">Please Select</option>

                                        @if (!(Model.StageList is null))
                                        {
                                            foreach (var i in Model.StageList)
                                            {
                                                <option value="@i.ProjectStagesID">@i.StageName</option>
                                            }

                                        }
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Extra Work Type</span>

                                </label>
                                <div class="col-sm-8">
                                    <select class="form-control " name="Extraworktype" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" perfect-selectbutton="Add Designation" perfect-selectbuttonaction="Extraworktype" onchange="getfunction();clearfield('Desigination')">
                                        <option value="">Please Select</option>

                                        @if (!(Model.WorkTypeList is null))
                                        {
                                            foreach (var i in Model.WorkTypeList)
                                            {
                                                <option value="@i.WorkTypeID">@i.WorkType</option>
                                            }

                                        }
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Sub Contractor</span>

                                </label>
                                <div class="col-sm-8">
                                    <select class="form-control " name="SubContractor" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" perfect-selectbutton="Add Designation" perfect-selectbuttonaction="SubContractor" onchange="getfunction();clearfield('Desigination')">
                                        <option value="">Please Select</option>

                                        @if (!(Model.SubcontractorList is null))
                                        {
                                            foreach (var i in Model.SubcontractorList)
                                            {
                                                <option value="@i.ID_Supplier">@i.SuppName</option>
                                            }

                                        }
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Group By</span>

                                </label>
                                <div class="col-sm-8">
                                    <select class="form-control " name="Groupby" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" perfect-selectbutton="Add Designation" perfect-selectbuttonaction="SubContractor" onchange="getfunction()">
                                        <option value="">Please Select</option>

                                        @if (!(Model.listMode is null))
                                        {
                                            foreach (var i in Model.listMode)
                                            {
                                                <option value="@i.ID_Mode">@i.ModeName</option>
                                            }

                                        }
                                    </select>
                                </div>
                            </div>
                        </div>










                    </div>

                </div>
                <div class="card-footer text-right" perfect-class="formFooter">
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="getreportdetails(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Show</button>
                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this);" name="reset">Clear</button>
                </div>
            </div>

            <div id="ReportName" class="col-12" style="display:none"></div>
            <div id="incentiveReportTable">

            </div>
            <div class="tab-pane fade" id="Factoryid">
                <br />
                <div class="row">

                    <div class="table-responsive col-md-12 SearchLoadDiv" name="SearchLoadDiv" id="test7"></div>

                </div>
            </div>
            <div id="ExtraWorkReportTable">

            </div>
           

            @*//////*@
            <div id="table-container" style="display:none">
                <table id="ExtraWorkReportList" class="table table-striped dt-responsive nowrap" style="width:100%">
                    <thead class="thead-primary">
                       
                        <tr>
                            <th class="hrow">Sl.No</th>
                            <th class="hrow">Start Date</th>
                            <th class="hrow">End Date</th>
                            <th class="hrow">Project</th>
                            <th class="hrow">Stage</th>
                            <th class="hrow">Extra Work Type</th>
                            <th class="hrow">Subcontarctor</th>
                            <th class="hrow">Description</th>
                            <th class="hrow">Amount</th>

                        </tr>
                    </thead>
                    
                </table>
            </div>



        </form>


    </div>
</div>
<script>
    var Data;
    var current_date
    (function () {
        const currentDate = new Date();
        const year = currentDate.getFullYear();
        const month = currentDate.getMonth() + 1; // Months are zero-based (0 = January, 1 = February, etc.)
        const day = currentDate.getDate();

        const formattedDate = year + '-' + (month < 10 ? '0' : '') + month + '-' + (day < 10 ? '0' : '') + day;
        current_date = formattedDate;
        return formattedDate;

    })();
    var tableoptionscustom = {

        onlyShowColumn: ['SlNo', 'FromDate', 'ToDate', 'Project', 'Stage', 'Worktype', 'Subcontractor', 'Description1', 'Amount'],
        hideColumn: ['TotalCount'],
        rowClickAction: '',
        serialNo: false,
        renameHeader: { "Slno": "SL NO.", "FromDate": "Start Date", "End Date": "To Date", "Subcontractor": "Sub Contractor", 'Description1': 'Description' },
        isDateType: ["FromDate", "ToDate"],

    };

    @*function getreportdetails(els) {
        let x = document.getElementById("exppdf");
        x.style.display = "none";

        let $thisForm = $(els).closest('[perfect-class="form"]');
  
        

        var ids = $('#ExtraWorkReportTable')
        if ($thisForm.valid() && customValidation()) {

            let _ActionUrl = "@Url.Action("SaveEmployeeCommisiondata", "EmployeeWiseCommission")";
            let paymentdetails = [];
            $thisForm.find('[perfect-tempTable="Payment"]').find('tbody').find('tr').each(function () {
                paymentdetails.push($(this).data('pData'));
            });
            let inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                FK_WorkType: $('select[name="Extraworktype"] option:selected').val(),
                FK_Stage: $('select[name="Stage"] option:selected').val(),
                FromDate: $('input[name="FromDate"]').val(),
                ToDate: $('input[name="ToDate"]').val(),
                FK_Project: $('select[name="Project"] option:selected').val(),
                FK_Supplier: $('select[name="SubContractor"] option:selected').val(),
                'PageSize': 15,
                'PageIndex': 0,

            };
            let pageUrl = '@Url.Action("GetReportData", "ExtraworkReport")';

            $.ajax({
                url: pageUrl,
                type: "POST",
                data: inputData,
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxOutput) {
                    console.log(ajaxOutput, 'ajaxOutput ...>>ln369')
                  
                    fn_showFiltersearchs()

                    $('#ReportName').text($('select[name="ID_Report"] option:selected').text());
                    $('#ReportName').show();

                    if (ajaxOutput.Process.IsProcess) {
                        let x = document.getElementById("exppdf");
                        x.style.display = "block";
                        $(ids).empty().append('<div class="d-flex justify-content-end mb-3 position-relative"><div class="col-md-1 position-absolute top-1 z-index"> <div class="input-group testSearchBox"></div></div></div>', $('<div />', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableoptionscustom)))
                        Data = ajaxOutput.Data;

                        let $table = $(ids).find('table');
                        $table.dataTable({
                            "serverSide": true,//no change
                            "processing": true,//-- process text when clicked
                            //"lengthChange": false,
                            "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                            "searching": false,//--no change
                            "ordering": false,//--sorting
                            "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                            "displayStart": ajaxOutput.PageIndex * ajaxOutput.PageSize,//<----starting record
                            "pageLength": ajaxOutput.PageSize,//<----page size
                            "recordsFiltered": ajaxOutput.PageSize,//<---page size
                            "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.PageSize, EmployeeID: $('input[name="EmployeeID"]').val(), Mode: $('select[name="ID_Report"] option:selected').val(), BranchID: $('select[name="BranchID"] option:selected').val(), FromDate: $('input[name="FromDate"]').val(), ToDate: $('input[name="ToDate"]').val(), DesignationID: $('select[name="DesignationID"] option:selected').val(), TransMode: 'CUSA' }, tableoptionscustom, $table)
                        });
                    }
                    else {

                        if (ajaxOutput.Process.Status = "NoData") {
                            $('#ReportName').hide();
                            $('#ReportName').text();

                            let x = document.getElementById("exppdf");
                            x.style.display = "none";
                            $(ids).empty().append($('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableoptionscustom)))
                            // $sidemenu.find('table').dataTable({ paging: true });


                            let $table = $(ids).find('table');
                            $table.dataTable({
                                "serverSide": true,//no change
                                "processing": true,//-- process text when clicked
                                // "lengthChange": false,
                                "lengthMenu": [],//---drop down page size
                                "searching": false,//--no change
                                "ordering": false,//--sorting
                                "deferLoading": ajaxOutput.totalrecord,//<----to total number of record from db
                                "displayStart": ajaxOutput.PageIndex * ajaxOutput.PageSize,//<----starting record
                                "pageLength": ajaxOutput.PageSize,//<----page size
                                "recordsFiltered": ajaxOutput.pageSize,//<---page size

                                "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.PageSize, EmployeeID: $('input[name="EmployeeID"]').val(), Mode: $('select[name="ID_Report"] option:selected').val(), BranchID: $('select[name="BranchID"] option:selected').val(), FromDate: $('input[name="FromDate"]').val(), ToDate: $('input[name="ToDate"]').val(), DesignationID: $('select[name="DesignationID"] option:selected').val(), TransMode: 'CUSA' }, tableoptionscustom, $table)
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        };
                    };
                }
            })
        } 
    }*@


    function getreportdetails(els) {
        
        let x = document.getElementById("exppdf");
        x.style.display = "none";

        let $thisForm = $(els).closest('[perfect-class="form"]');
  
        let table = $('#ExtraWorkReportList').DataTable();
        table.destroy();

        $("#ExtraWorkReportList tbody").empty();
        $('#table-container').hide();
       // var ids = $('#ExtraWorkReportTable')
        if ($thisForm.valid() && customValidation()) {

            let _ActionUrl = "@Url.Action("SaveEmployeeCommisiondata", "EmployeeWiseCommission")";
            let paymentdetails = [];
            $thisForm.find('[perfect-tempTable="Payment"]').find('tbody').find('tr').each(function () {
                paymentdetails.push($(this).data('pData'));
            });
            let inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                FK_WorkType: $('select[name="Extraworktype"] option:selected').val(),
                FK_Stage: $('select[name="Stage"] option:selected').val(),
                FromDate: $('input[name="FromDate"]').val(),
                ToDate: $('input[name="ToDate"]').val(),
                FK_Project: $('select[name="Project"] option:selected').val(),
                FK_Supplier: $('select[name="SubContractor"] option:selected').val(),
                'PageSize': 15,
                'PageIndex': 0,

            };

            var grpvariable;
            var fieldnum;
            var arr = [];
            switch ($('select[name="Groupby"] option:selected').val()) {
                case '1':
                    grpvariable = "FromDate";
                    fieldnum = 1;
                    arr = [
                        { "orderable": false, "targets": [0,1, 2, 3, 5, 6,7] },
                       // { "visible": false, "targets": [1] }
                    ];
                   
                    break;
                case '2':
                    grpvariable = "Project";
                    fieldnum = 3;
                    arr = [
                        { "orderable": false, "targets": [0,1,2, 5, 6, 7] },
                        { "visible": false, "targets": [3] }
                    ];
                    break;
             
                case '3':
                    grpvariable = "Stage";
                    fieldnum = 4;
                    arr = [
                        { "orderable": false, "targets": [0, 1, 2,3, 5, 6, 7] },
                        { "visible": false, "targets": [4] }
                    ];
                    break;
                case '4':
                    grpvariable = "Worktype";
                    fieldnum = 5;
                    arr = [
                        { "orderable": false, "targets": [0, 1, 2, 3,4, 6, 7] },
                        { "visible": false, "targets": [5] }
                    ];
                    break;
              
                case '5':
                    grpvariable = "Subcontractor";
                    fieldnum = 6;
                    arr = [
                        { "orderable": false, "targets": [0, 1, 2, 3, 4, 5, 7] },
                        { "visible": false, "targets": [6] }
                    ];
                    break;
                default:
                    grpvariable = "";
                    fieldnum = 0;
                    arr = [
                        { "orderable": false, "targets": [0, 1, 2, 3, 4, 5,6, 7] },
                       // { "visible": false, "targets": [] }
                    ];
            }

            $('#table-container').show();

            let pageUrl = '@Url.Action("GetReportData", "ExtraworkReport")';

            $.ajax({
                url: pageUrl,
                type: "POST",
                data: inputData,
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxOutput) {
                    //console.log(ajaxOutput, 'ajaxOutput ...>>ln369')
                    //debugger
                  

                    fn_showFiltersearchs()

                    $('#ReportName').text($('select[name="ID_Report"] option:selected').text());
                    $('#ReportName').show();

                    if (ajaxOutput.Process.IsProcess) {
                        let x = document.getElementById("exppdf");
                        x.style.display = "block";

                        let table = $('#ExtraWorkReportList').DataTable();
                        table.destroy();
                        ajaxOutput.Data.forEach((x) => {
                            if (x['FromDate']) {
                                
                                let q = x['FromDate'];
                                x['FromDate'] = convertJsonDate(q);
                            }
                            if (x['ToDate']) {
                                let q = x['ToDate'];
                                x['ToDate'] = convertJsonDate(q);
                            }


                        });
                        if (grpvariable != "") {

                            ajaxOutput.Data.sort(function (x, y) {
                               
                                const xValue = x[grpvariable] === null ? "" : x[grpvariable];
                                const yValue = y[grpvariable] === null ? "" : y[grpvariable];

                               
                                if (xValue < yValue) {
                                    return -1;
                                } else if (xValue > yValue) {
                                    return 1;
                                }
                                return 0;
                            });
                        }

                        Data = ajaxOutput.Data

                       // var group ='Worktype'

                        tableData = $('#ExtraWorkReportList').DataTable({
                            pagination: "bootstrap",
                            filter: true,
                            //orderable:false,
                            data: ajaxOutput.Data,
                            destroy: true,
                            paging: false,
                            bSort: false,
                            //autoWidth: false,
                            // responsive: true,  //new
                            //columnDefs: [
                            //],
                            info: false,
                            searching: false,
                            "columns": [
                                { "data": null, title: "Sl.No" },
                                { "data": "FromDate", title: "Start Date" },
                                { "data": "ToDate", title: "End Date" },
                                { "data": "Project", title: "Project" },
                                { "data": "Stage", title: "Stage"},
                                { "data": "Worktype", title: "Work Type" },
                                { "data": "Subcontractor", title: "Sub Contractor" },
                                { "data": "Amount", title: "Amount ", className: "text-right" },
                                { "data": "Description1", title: "Description " }
                               
                            ],
                            scrollY: 500,
                            scrollX: true,
                            scrollX: '100%',
                            scrollCollapse: true,
                            paging: false,
                            fixedHeader: {
                                header: false,
                                footer: true,
                            },
                            header: false,
                            "order": [[0, "asc"]],
                            "columnDefs":arr,
                            //"columnDefs": [
                            //    { "orderable": false, "targets": [0, 1, 2, 3, 4,5, 6] },
                            //    { "visible": false, "targets": [5] }
                            //],
                            //drawCallback: function (settings) {
                            //    var api = this.api();
                            //    var rows = api.rows({ page: 'current' }).nodes();
                            //    var last = null;
                            //    //console.log(api, rows);
                            //    var group = "Worktype";
                            //    api.column(9, { page: 'current' }).data().each(function (group, i) {

                            //        if (last !== group) {
                            //            $(rows).eq(i).before(
                            //                '<tr class="group"><td colspan="10" style="BACKGROUND-COLOR:rgb(237, 208, 0);font-weight:700;color:#006232;">'+group + '</td></tr>'
                            //            );
                            //            last = group;
                            //        }
                            //    });
                            //},
                            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                                $("td:first", nRow).html(iDisplayIndex + 1);
                                return nRow;
                            },
                            //rowGroup: {
                            //    dataSrc: "Worktype",
                            //    startRender: function (rows, group) {
                            //        return $('<tr/>')
                            //            .append('<td colspan="11">' + group + '</td>');
                            //    },
                            //    endRender: null
                            //},
                            drawCallback: function (settings) {
                                var api = this.api();
                                var rows = api.rows({ page: 'current' }).nodes();
                                var last = null;
                                var last2 = null;
                                var n2 = 1;
                                //console.log(api, rows);
                                api.column(fieldnum, { page: 'current' }).data().each(function (group, i) {

                                    //if (group == null) {
                                    //    group = ' ';
                                    //};

                                    if (grpvariable != "") {
                                        if (last !== group) {
                                            $(rows).eq(i).before(
                                                '<tr class="group"><td colspan="10" style="BACKGROUND-COLOR:rgb(237, 208, 0);font-weight:700;color:#006232;">' + group + '</td></tr>'
                                            );
                                            last = group;
                                        }
                                    }
                                    


                                });
                                
                            },


                        });

                     






                    }
                    else {

                        if (ajaxOutput.Process.Status = "NoData") {
                            $('#ExtraWorkReportList').DataTable({
                                info: false,
                                "ordering": false,
                                paging: false,
                                searching: false,
                                "language": {
                                    "emptyTable": "No data available"
                                }
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        };
                    };
                }
            })
        } 
    }

    
   
    function customValidation() {
        
        let vrbl = true;
        let from = $('input[name="FromDate"]').val();
        let To = $('input[name="ToDate"]').val();
        if (from > To) {
            vrbl = false;
            $('#FromDate-error').text(`From Date can't be greater than To Date`)

        } else {
            $('#FromDate-error').text('')
        }
        return vrbl;
    }
    function returnajaxPagination(ajaxInfo, tableOptions, tableid) {
        //{ apiurl, pageSize }

        return {
            url: ajaxInfo.apiurl,
            type: "post",
            data: function () {
                var info = tableid.DataTable().page.info();
                
                //return { <antiforgery>:<antiforgery>, length: ajaxInfo.pageSize, page: info.page }
                let input = { pageSize: info.length, pageIndex: info.page, Customer: ajaxInfo.Customer, FromDate: ajaxInfo.FromDate, ToDate: ajaxInfo.ToDate, FK_Branch: ajaxInfo.FK_Branch, FK_ComplaintType: ajaxInfo.FK_ComplaintType, FK_Product: ajaxInfo.FK_Product, Mobile: ajaxInfo.Mobile, TicketNo: ajaxInfo.TicketNo, Sortorder: ajaxInfo.Sortorder, Mode: ajaxInfo.Mode, FK_Area: ajaxInfo.FK_Area, FK_Post: ajaxInfo.FK_Post, FK_Employee: ajaxInfo.FK_Employee, Status: ajaxInfo.Status, DueDays: ajaxInfo.DueDays };
                if (ajaxInfo.searchkey) {
                    input["Name"] = ajaxInfo.searchkey;
                }
                return input
            },
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (dtajaxOutput) {
                // $sideMenuOptions.body.html(pft_table_createtable(dtajaxOutput.Data, tableOptions));
                console.table(dtajaxOutput.Data, 'dtajaxOutput.Data>>pagination fun')
                Data = dtajaxOutput.Data;
                document.querySelector('#exppdf').style.display = 'block';
                let table = tableid.DataTable();
                table.destroy();
                pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                tableid.dataTable({
                    "serverSide": true,
                    "processing": true,
                    //"lengthChange": false,
                    "lengthMenu": [10, 15, 20, 25, 50, 100],
                    "searching": false,
                    "ordering": false,
                    "deferLoading": dtajaxOutput.totalrecord,
                    "displayStart": dtajaxOutput.PageIndex * dtajaxOutput.PageSize,
                    "pageLength": dtajaxOutput.PageSize,
                    "recordsFiltered": dtajaxOutput.PageSize,
                    "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                })

            },

        }
    }

    

    function generatePdf(ele) {
       
        var cdata;

        let $container = $(ele).closest('[perfect-class="form"]');
        const obj = {
            "Project": $('select[name="Project"] option:selected').text(),
            Stage: $('select[name="Stage"] option:selected').text(),
            "Extra work Type": $('select[name="Extraworktype"] option:selected').text(),
            SubContractor: $('select[name="SubContractor"] option:selected').text(),
            "GroupBy": $('select[name="Groupby"] option:selected').text()
        };
        const obj2 = {
            "From": $('input[name="FromDate"]').val(),
            "To": $('input[name="ToDate"]').val(),

        }

        Data.forEach((x) => {
            if (x['FromDate']) {
               
                let q = x['FromDate'];
                x['FromDate'] = convertJsonDate(q);
            }
            if (x['ToDate']) {
                let q = x['ToDate'];
                x['ToDate'] = convertJsonDate(q);
            }


        });
       // var reporttype = $('select[name="Groupby"] option:selected').text()

        var GroupBy= $('select[name="Groupby"] option:selected').val();
        $.ajax({
            url: '@Url.Action("GetCompanyDetails", "Home")',
            type: "GET",
            dataType: "json",
            contentType: "application/x-www-form-urlencoded;charset=utf-8",
            success: function (ajaxOutput) {


                cdata = ajaxOutput;

            },
            complete: function () {

                //LeadType = 'My Leads';
                var reportName;
                var head = [];
                var ptableData = {};
                

                reportName = "Extra Work Report";

                if (GroupBy == "1") {
                    head = ["Sl .No", 'Start Date', "To Date", "Project", 'Stage', "Work Type", 'Sub Contractor', 'Amount', 'Description'];
                    ptableData = {
                        columns: [

                            //  { dataKey: "SlNo" },
                            { dataKey: "FromDate" },
                            { dataKey: "ToDate" },
                            { dataKey: "Project" },
                            { dataKey: "Stage" },
                            { dataKey: "Worktype" },
                            { dataKey: "Subcontractor" },
                            { dataKey: "Amount" },
                            { dataKey: "Description1" },
                           

                        ],
                        rows: Data

                    };
                } else if (GroupBy == "2") {
                    head = ["Sl .No", 'Start Date', "To Date", 'Stage', "Work Type", 'Sub Contractor', 'Amount', 'Description' ];
                    ptableData = {
                        columns: [

                            //  { dataKey: "SlNo" },
                            { dataKey: "FromDate" },
                            { dataKey: "ToDate" },
                            //{ dataKey: "Project" },
                            { dataKey: "Stage" },
                            { dataKey: "Worktype" },
                            { dataKey: "Subcontractor" },
                            { dataKey: "Amount" },
                            { dataKey: "Description1" },
                            

                        ],
                        rows: Data

                    };
                } else if (GroupBy == "3") {
                    head = ["Sl .No", 'Start Date', "To Date", "Project", "Work Type", 'Sub Contractor', 'Amount', 'Description'];
                    ptableData = {
                        columns: [

                            //  { dataKey: "SlNo" },
                            { dataKey: "FromDate" },
                            { dataKey: "ToDate" },
                            { dataKey: "Project" },
                             //  { dataKey: "Stage" },
                            { dataKey: "Worktype" }, 
                            { dataKey: "Subcontractor" },
                            { dataKey: "Amount" },
                            { dataKey: "Description1" },
                            

                        ],
                        rows: Data

                    };
                } else if (GroupBy == "4") {
                    head = ["Sl .No", 'Start Date', "To Date", "Project", 'Stage', 'Sub Contractor', 'Amount', 'Description'];
                    ptableData = {
                        columns: [

                            //  { dataKey: "SlNo" },
                            { dataKey: "FromDate" },
                            { dataKey: "ToDate" },
                            { dataKey: "Project" },
                            { dataKey: "Stage" },
                           // { dataKey: "Worktype" },
                            { dataKey: "Subcontractor" },
                            { dataKey: "Amount" },
                            { dataKey: "Description1" },
                           

                        ],
                        rows: Data

                    };
                } else if (GroupBy == "5") {
                    head = ["Sl .No", 'Start Date', "To Date", "Project", 'Stage', "Work Type", 'Amount', 'Description'];
                    ptableData = {
                        columns: [

                            //  { dataKey: "SlNo" },
                            { dataKey: "FromDate" },
                            { dataKey: "ToDate" },
                            { dataKey: "Project" },
                            { dataKey: "Stage" },
                            { dataKey: "Worktype" },
                           // { dataKey: "Subcontractor" },
                            { dataKey: "Amount" },
                            { dataKey: "Description1" },
                            

                        ],
                        rows: Data

                    };
                } else {
                    head = ["Sl .No", 'Start Date', "To Date", "Project", 'Stage', "Work Type", 'Sub Contractor', 'Amount', 'Description'];

                    ptableData = {
                        columns: [

                            //  { dataKey: "SlNo" },
                            { dataKey: "FromDate" },
                            { dataKey: "ToDate" },
                            { dataKey: "Project" },
                            { dataKey: "Stage" },
                            { dataKey: "Worktype" },
                            { dataKey: "Subcontractor" },
                            { dataKey: "Amount" },
                            { dataKey: "Description1" },
                            

                        ],
                        rows: Data

                    };
                }
                var grpvariable;
                switch ($('select[name="Groupby"] option:selected').val()) {
                    case '1':
                        grpvariable = "FromDate";
                       

                        break;
                    case '2':
                        grpvariable = "Project";
                      
                        break;

                    case '3':
                        grpvariable = "Stage";
                       
                        break;
                    case '4':
                        grpvariable = "Worktype";
                      
                        break;

                    case '5':
                        grpvariable = "Subcontractor";
                       
                        break;
                    default:
                        grpvariable = "";
                       
                }

                


                var str = "";
                var str2 = `Report : EXTRA WORK REPORT `;
                var filename = `EXTRA WORK REPORT  `;
                var num = 0;

                for (var i in obj) {
                    if (obj[i] != "" && obj[i].toUpperCase() != "PLEASE SELECT" && obj[i] != 0 && obj[i] != "Select Terminal" && obj[i] != "Select Complaint Type" && obj[i] != "Please Select" && obj[i] != "Select Sort Order") {

                        if (num == 0) {
                            str = "Filter By : ";
                        }
                        str = str + i + ' : ' + obj[i] + ' , ';
                        num++;
                    }

                };
              
                if (obj2['From'] && obj2['To']) {

                    
                    str2 = str2 + ` ,For the Period  ${formatechange(obj2['From'])}  -  ${formatechange(obj2['To'])}`;
                } else {
                    str2 = str2 + `  As on Date  ${formatechange(obj2['As on Date'])}`;
                }
                var upperhead;
                if (str2 && str) {
                    upperhead = {


                        columnStyles: { 0: { halign: 'left', textColor: "black", fontSize: 14, fillColor: false, } },
                        columnStyles: { 1: { halign: 'left', textColor: "black", fontSize: 11, fillColor: false, } },

                        body: [

                            [

                                str2 +
                                '\n' + str


                            ]
                        ],

                        theme: 'plain',
                        styles: {
                            // fillColor: '#3366ff',
                            color: 'black',
                            rowHeight: 1 // Adjust the row height value to reduce the space between rows
                        },
                        didDrawCell: function (data) {
                            data.cell.styles.lineHeight = 0.2; // Adjust the line height value to your preference
                        }



                    };

                } else if (str2 && str == "") {
                    upperhead = {


                        columnStyles: { 0: { halign: 'left', textColor: "black", fontSize: 14, fillColor: false, } },
                        columnStyles: { 1: { halign: 'left', textColor: "black", fontSize: 11, fillColor: false, } },

                        body: [


                            [str2]


                        ],

                        theme: 'plain',
                        styles: {
                            // fillColor: '#3366ff',
                            color: 'black',
                            rowHeight: 1 // Adjust the row height value to reduce the space between rows
                        },
                        didDrawCell: function (data) {
                            data.cell.styles.lineHeight = 0.2; // Adjust the line height value to your preference
                        }



                    };

                }

                exportPdf("", [head], cdata, upperhead, "", ptableData, grpvariable, `${filename} Report`, "a4", "", "", "l");
                // exportPdf(ptitle, phead, cdata, upperhead, footerdata, ptableData, grpvariable, filename, pageSize, tableOptions, columnStyles, PageOrientation)

            }
        });
    }



    function onExell() {

        var cdata;

        
        const obj = {
            "Project": $('select[name="Project"] option:selected').text(),
            Stage: $('select[name="Stage"] option:selected').text(),
            "Extra work Type": $('select[name="Extraworktype"] option:selected').text(),
            SubContractor: $('select[name="SubContractor"] option:selected').text(),
        };
        const obj2 = {
            "From": $('input[name="FromDate"]').val(),
            "To": $('input[name="ToDate"]').val(),

        }


        Data.forEach((x) => {
            if (x['FromDate']) {
                
                let q = x['FromDate'];
                x['FromDate'] = convertJsonDate(q);
            }
            if (x['ToDate']) {
                let q = x['ToDate'];
                x['ToDate'] = convertJsonDate(q);
            }


        })





        let ReportName1;


        //Data.unshift(str);

        $.ajax({
            url: '@Url.Action("GetCompanyDetails", "Home")',
            type: "GET",
            dataType: "json",
            contentType: "application/x-www-form-urlencoded;charset=utf-8",
            success: function (ajaxOutput) {


                cdata = ajaxOutput;

            },
            complete: function () {
                
                var reportName;
                var head = [];
                var ptableData = {};
                var GroupBy = $('select[name="Groupby"] option:selected').val();
                reportName = "Extra Work Report";

                if (GroupBy == "1") {
                    head = ["Sl .No", 'Start Date', "To Date", "Project", 'Stage', "Work Type", 'Sub Contractor', 'Amount', 'Description'];
                    ptableData = {
                        columns: [

                            //  { dataKey: "SlNo" },
                            { dataKey: "FromDate" },
                            { dataKey: "ToDate" },
                            { dataKey: "Project" },
                            { dataKey: "Stage" },
                            { dataKey: "Worktype" },
                            { dataKey: "Subcontractor" },
                            { dataKey: "Amount" },
                            { dataKey: "Description1" },
                            

                        ],
                        rows: Data

                    };
                } else if (GroupBy == "2") {
                    head = ["Sl .No", 'Start Date', "To Date", 'Stage', "Work Type", 'Sub Contractor', 'Amount', 'Description'];
                    ptableData = {
                        columns: [

                            //  { dataKey: "SlNo" },
                            { dataKey: "FromDate" },
                            { dataKey: "ToDate" },
                            //{ dataKey: "Project" },
                            { dataKey: "Stage" },
                            { dataKey: "Worktype" },
                            { dataKey: "Subcontractor" },
                            { dataKey: "Amount" },
                            { dataKey: "Description1" },
                           

                        ],
                        rows: Data

                    };
                } else if (GroupBy == "3") {
                    head = ["Sl .No", 'Start Date', "To Date", "Project", "Work Type", 'Sub Contractor', 'Amount', 'Description'];
                    ptableData = {
                        columns: [

                            //  { dataKey: "SlNo" },
                            { dataKey: "FromDate" },
                            { dataKey: "ToDate" },
                            { dataKey: "Project" },
                             //  { dataKey: "Stage" },
                            { dataKey: "Worktype" },
                            { dataKey: "Subcontractor" },
                            { dataKey: "Amount" },
                            { dataKey: "Description1" },
                            

                        ],
                        rows: Data

                    };
                } else if (GroupBy == "4") {
                    head = ["Sl .No", 'Start Date', "To Date", 'Stage', "Project", 'Sub Contractor', 'Amount', 'Description'];
                    ptableData = {
                        columns: [

                            //  { dataKey: "SlNo" },
                            { dataKey: "FromDate" },
                            { dataKey: "ToDate" },
                            { dataKey: "Project" },
                            { dataKey: "Stage" },
                            // { dataKey: "Worktype" },
                            { dataKey: "Subcontractor" },
                            { dataKey: "Amount" },
                            { dataKey: "Description1" },
                           

                        ],
                        rows: Data

                    };
                } else if (GroupBy == "5") {
                    head = ["Sl .No", 'Start Date', "To Date", "Project", 'Stage', "Work Type", 'Amount', 'Description'];
                    ptableData = {
                        columns: [

                            //  { dataKey: "SlNo" },
                            { dataKey: "FromDate" },
                            { dataKey: "ToDate" },
                            { dataKey: "Project" },
                            { dataKey: "Stage" },
                            { dataKey: "Worktype" },
                            // { dataKey: "Subcontractor" },
                            { dataKey: "Amount" },
                            { dataKey: "Description1" },
                           

                        ],
                        rows: Data

                    };
                } else {
                    head = ["Sl .No", 'Start Date', "To Date", "Project", 'Stage', "Work Type", 'Sub Contractor', 'Amount', 'Description'];

                    ptableData = {
                        columns: [

                            //  { dataKey: "SlNo" },
                            { dataKey: "FromDate" },
                            { dataKey: "ToDate" },
                            { dataKey: "Project" },
                            { dataKey: "Stage" },
                            { dataKey: "Worktype" },
                            { dataKey: "Subcontractor" },
                            { dataKey: "Amount" },
                            { dataKey: "Description1" },
                            

                        ],
                        rows: Data

                    };
                }


                var grpvariable;
                switch ($('select[name="Groupby"] option:selected').val()) {
                    case '1':
                        grpvariable = "FromDate";


                        break;
                    case '2':
                        grpvariable = "Project";

                        break;

                    case '3':
                        grpvariable = "Stage";

                        break;
                    case '4':
                        grpvariable = "Worktype";

                        break;

                    case '5':
                        grpvariable = "Subcontractor";

                        break;
                    default:
                        grpvariable = "";

                }


                var str = "";
                var str2 = `Report :  Extra Work Report `;
                var filename = `Extra Work Report`;
                var num = 0;

                for (var i in obj) {
                    if (obj[i] != "" && obj[i].toUpperCase() != "PLEASE SELECT" && obj[i] != 0 && obj[i] != "Select Terminal" && obj[i] != "Please Select" && obj[i] != "Select Status" && obj[i] != "Select Sort Order") {

                        if (num == 0) {
                            str = "Filter By : ";
                        }
                        str = str + i + ' : ' + obj[i] + ' , ';
                        num++;
                    }

                };
                //for (var i in obj2) {
                //    if (obj2[i] != "" && obj2[i] != undefined) {

                //        str2 = str2 + i + ' : ' + convertJsonDate(obj2[i]) + ' , ';
                //    }

                //};

                if (obj2['From'] && obj2['To']) {

                    //str2 = str2 + ` ,For the Period  ${convertJsonDate(obj2['From'])} - ${convertJsonDate(obj2['To'])}`;
                    str2 = str2 + ` ,For the Period  ${formatechange(obj2['From'])}  -  ${formatechange(obj2['To'])}`;
                } else {
                    str2 = str2 + `  As on Date  ${formatechange(obj2['As on Date'])}`;
                }
                ReportName1 = `${cdata.Company} \n${cdata.Branch}\n ${str2} \n ${str} `
                generateExell(ReportName1, [head], ptableData, "", grpvariable, `${filename} Report`);
               
            }
        });

    }
   

    function checkLimit() {
        //var retn = true;
        //if ($('input[name="ToDate"]').val() > $('input[name="FromDate"]').val()) {
        //    $('#FromDate-error').text('From Date cant be grater than To date')
        //    retn
        //}

    }
    function ResetButton(ele) {

        ExtraWorkInitialLoad();

    }
    function getfunction() {

    }
    function formatechange(inputDate) {
        
        var parts = inputDate.split("-");
        var year = parts[0];
        var month = parts[1];
        var day = parts[2];
        var formattedDate = day + '/' + month + '/' + year;
        return formattedDate
    }
    function convertJsonDate(jsonDate) {
       
        const regex = /\/Date\((\d+)\)\//;
        const match = jsonDate.match(regex);

        if (match) {
            const timestamp = parseInt(match[1], 10);
            const date = new Date(timestamp);

            const year = date.getFullYear(); 

            const day = date.getDate();
            const month = date.getMonth() + 1; 

            const formattedDate = `${day.toString().padStart(2, '0')}/${month.toString().padStart(2, '0')}/${year.toString().padStart(4, '0')}`;

            return formattedDate;
        } else {
            
            return jsonDate; 
        }



    }
    function SortArray(dataArray, FromDate,type) {
        if (type == "Date") {
            dataArray.sort((a, b) => new Date(a.FromDate) - new Date(b.FromDate));
        } else {
            dataArray.sort((a, b) => a.FromDate - b.FromDate);
        }
       
        return dataArray;
    }

</script>
<script src="~/Scripts/jspdf.min.js"></script>
<script src="~/Scripts/jspdf.plugin.autotable.min.js"></script>
<script src="~/Scripts/exportFile.js"></script>
<script src="~/Scripts/xlsx.min.js"></script>