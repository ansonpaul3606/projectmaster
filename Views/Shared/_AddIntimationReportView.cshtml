



@model PerfectWebERP.Models.IntimationReportModel


<style>
    .Custominvalid {
        display: none;
        width: 100%;
        margin-top: 0.25rem;
        font-size: 80%;
        color: #FF6746;
    }

   
    .btn-export {
      
        background-color: #2aa2ad;
        color: white;
    }

    .div-export {
        float: right;
        margin-left: 3px;
        /*background-color:red;*/
        height: 41px;
        /*// width:90px;*/
    }

        .div-export:hover {
            color: white !important;
        }

    .btn-export :hover {
        color: white !important;
    }
</style>


<div class="card ">

    <div class="card-header">
        <div class="col-xl-4">
            <h4 class="card-title col-12">@ViewBag.PageTitle</h4>
        </div>
        <div class="col-xl-4 text-right">
            <button id="refresh" type="button" class="btn  btn-primary btn-sm" name="Search" perfect-css="button" onclick="fn_Intimationreport_initialLoad()" title="To Refresh"><i class="fa fa-refresh"></i></button>
            <button id="addcompany-jq-addnewuser" type="button" class="btn  btn-primary btn-sm" name="Search" perfect-css="button" onclick="fn_showFilter()" title="To Filter"><i class="fa fa-filter"></i></button>
            <div class="dropdown div-export" id="exppdf" style="display:none">

                <button class="btn  dropdown-toggle btn-sm btn-export" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span><i class="fa fa-file-o" style="font-size:16px"></i> </span>

                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item" href="#" onclick="generatePdf()">PDF</a>
                    <a class="dropdown-item" href="#" onclick="onExell()">EXCEL </a>

                </div>
            </div>
        </div>

    </div>

    <div class="card-body jq_leadgeneration_body" style="min-height:250px">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="leadformSesction">
                @Html.AntiForgeryToken()
                <div class="row">



                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Date Range</span>
                                <span class="text-danger">*</span>
                            </label>

                            <div class="col-sm-8">

                                <div id="reportrange" name="datefilter" class="pull-left form-control ActionDate" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc;">
                                    <i class="glyphicon glyphicon-calendar fa fa-calendar"></i>&nbsp;
                                    <span></span> <b class="caret"></b>
                                </div>

                                <div id="ToDate-error" class="text-danger temptableError"></div>
                            </div>
                        </div>
                    </div>

                  
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Channel</span>
                               
                            </label>
                            <div class="col-sm-8">

                                <select class="form-control" name="Channel" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">All</option>
                                    <option value="1">SMS</option>
                                    <option value="2">Email</option>
                                    <option value="3">Whats App</option>
                                </select>

                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Status</span>
                                
                            </label>
                            <div class="col-sm-8">

                                <select class="form-control" name="Status" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">

                                    <option value="1" default>Success</option>
                                    <option value="2">Fail</option>

                                </select>

                            </div>
                        </div>
                    </div>


                    <div class="col-sm-12 card-footer text-right" perfect-class="formFooter">
                        <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="getIntimationReport(this) "><i class="fa fa-refresh fa-spin loaderClass "></i>Show</button>
                        <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton();" name="reset">Clear</button>

                    </div>
                </div>
            </div>
   
    <div class="">
        <button type="button" class="btn btn-nt" id="exppdf" style="display:none;" float:left; onclick="generatePdf(this)" title="Download PDF"><i class="fa fa-file-pdf-o" aria-hidden="true" style="font-size:28px"></i></button>
    </div>


    <div id="divIntimationList">
        <table id="IntimationList" class="table table-hover table-striped text-black" style="width:100%">
            <thead class="thead-primary">
                <tr>
                    <th>Sl No</th>
                    <th>Date</th>
                    <th>Phone/Email</th>
                    <th>Channel</th>
                    <th>Content</th>

                </tr>
            </thead>

        </table>


    </div>



        </form>
    </div>
</div>



<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>

<script>


    (function () {

        jQuery('select').selectpicker();
    })();


    $(document).ready(function () {

        initFunctions('form');



    });

        var jobcartstartdate;
        var jobcartenddate;
    


    $(function () {
        var start = moment().subtract(29, 'days');
        var end = moment();
        function cb(start, end) {
            $('#reportrange span').html(start.format('DD/MM/YYYY') + ' - ' + end.format('DD/MM/YYYY'));
            jobcartstartdate = start.format('DD/MM/YYYY');
            jobcartenddate = end.format('DD/MM/YYYY');
        }
        $('#reportrange').daterangepicker({
            startDate: start,
            endDate: end,
            ranges: {
                'Today': [moment(), moment()],
                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        }, cb);
        cb(start, end);
    });

        function RptValidation(ele) {
            debugger
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            var isrptValid = true;
           
            if (jobcartenddate == null || jobcartstartdate == null) {
                isrptValid = false;
                $('#ToDate-error').text("Please Select Date Range");

            } else {
                $('#ToDate-error').text("");
            }
            return isrptValid;
        }





    function ResetButton() {
        fn_Intimationreport_initialLoad();
    }

    var itemdata = 0;
    var tableData;

    function getIntimationReport(ele) {

            let $tbody;


            let $thisForm = $(ele).closest('[perfect-class="form"]');

            //  $("#EqSerList tr").remove();
            debugger
            if ($thisForm.valid()) {

                var table = $('#IntimationList').DataTable({ searching: false, destroy: true, paging: false, ordering: false, info: false });
                table.clear().draw();
             

                if (RptValidation(ele)) {

                    debugger

                    var obj = {
                       
                        "FromDate": jobcartstartdate == null ? "01/01/2023" : jobcartstartdate,
                        "ToDate": jobcartenddate == null ? "01/01/2023" : jobcartenddate,
                       
                        "Channel": $thisForm.find('[name="Channel"]').val(),
                        "Status": $thisForm.find('[name="Status"]').val(),


                    }

                    $.ajax({
                        url: "@Url.Action("GetIntimationReportList", "IntimationReport")",
                        type: "POST",
                        data: JSON.stringify(obj),
                        dataType: "json",
                        contentType: "application/json",
                        success: function (dataOut) {

                            console.log('dataOut', dataOut)
                            dataOut.datares.Data.forEach((i) => {

                                var a = i.Date.split('T')[0];

                                i['Date'] = changeDateFormat(a);
                            });
                            itemdata = dataOut.datares.Data; console.log('itemdata', itemdata);
                            if (itemdata == null || itemdata == "") {

                                let x = document.getElementById("exppdf");
                                x.style.display = "none";

                            } else {

                                let x = document.getElementById("exppdf");
                                x.style.display = "block";
                            }



                            if (dataOut.datares.Process.IsProcess) {
                                if (itemdata != null) {
                                    //if ($('select[name="FK_Report"] option:selected').val() == 2) {
                                    $("#divIntimationList").show();
                                        
                                    tableData = $('#IntimationList').DataTable({
                                            pagination: "bootstrap",
                                            filter: true,
                                            data: dataOut.datares.Data,
                                            destroy: true,
                                            paging: false,
                                            info: false,
                                            searching: false,
                                            "columns": [
                                                { "data": null },
                                                { "data": "Date" },
                                              
                                                { "data": "Phone" },
                                                { "data": "Channel" },
                                                { "data": "Content" },
                                             


                                            ],
                                            scrollY: 550,
                                            scrollX: true,
                                            scrollCollapse: true,
                                            paging: false,
                                            fixedHeader: {
                                                header: true,
                                                //footer: true
                                            },
                                          //  "order": [[0, "asc"]],
                                            "columnDefs": [
                                                { "orderable": false, "targets": [0, 1, 2, 3, 4] }

                                                //{ "visible": false, "targets": 0 }
                                            ],

                                            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                                                $("td:first", nRow).html(iDisplayIndex + 1);
                                                //$('td:eq(1)', nRow).html('');
                                                return nRow;


                                            },

                                        });
                                  //  }
                                    
                                }
                                else {

                                }

                            }
                            else {

                            }
                        },
                        complete: function () {
                        }
                    });

                    fn_showFilter();
                }
                else
                {
                    $(ele).prop('disabled', false);


                    }

            }

    }




     function generatePdf(ele) {
         var cdata;

         let $thisForm = $(ele).closest('[perfect-class="form"]');

        let $container = $(ele).closest('[perfect-class="form"]');
        const obj = {





            "Target Date": $('#reportrange span').html() ,
           
            "Status": $('select[name="Status"] option:selected').text(),
            "Channel": $('select[name="Channel"] option:selected').text()




        };
        const obj2 = {
            "From ": $('input[name="FromDate"]').val(),
            "To": $('input[name="ToDate"]').val()
        }



        console.log(obj, '--obj--');
        console.log(obj2, '--obj2--');


        var str = "";
         var str2 = "";
         var num = 1;

        for (var i in obj) {
            if (obj[i] != "" && obj[i].toUpperCase() != "PLEASE SELECT" && obj[i] != 0) {

                if (num == 1) {
                    str+="Filter By : "
                }
                str = str + i + ' : ' + obj[i] + ' , ';
                num++;
            }

        };
        for (var i in obj2) {
            if (obj2[i] != "" && obj2[i] != undefined) {

                str2 = str2 + i + ' : ' + changeDateFormat(obj2[i]) + ' , ';
            }

        };


        var upperhead = {


            columnStyles: { 0: { halign: 'left', textColor: "black", fontSize: 14, fillColor: false, } },
            columnStyles: { 0: { halign: 'left', textColor: "black", fontSize: 11, fillColor: false, } },

            body: [

                [

                    '  '  + '   ' + str2


                    //'\n' +


                ],
                [
                    str
                ]



            ],
            theme: 'plain',
            styles: {
                // fillColor: '#3366ff',
                color: 'black'
            },
            didDrawCell: function (data) {
                data.cell.styles.lineHeight = 0.8; // Adjust the line height value to your preference
            }


        };




         $.ajax({
              url: '@Url.Action("GetCompanyDetails", "Home")',
              type: "GET",
              dataType: "json",
              contentType: "application/x-www-form-urlencoded;charset=utf-8",
                 success: function (ajaxOutput) {


                     cdata = ajaxOutput;



                     var head = [];
                     var ptableData = {};
                     debugger;
                     console.log(itemdata, '<<itemdata>>')
                     console.log(cdata, 'cdata')

                   
                   //  if ($('select[name="FK_Report"] option:selected').val() == 2) {
                     head = ["Sl No", 'Date', 'Phone/Email','Channel', 'Content'];
                         ptableData = {
                             columns: [
                                 //{ title: "Sl No", dataKey: null },                              
                                 { title: "Date", dataKey: "Date" },                              
                                 { title: "Phone/Email", dataKey: "Phone" },
                                 { title: "Channel", dataKey: "Channel" },
                                 { title: "Content", dataKey: "Content" },
                               


                             ],
                             rows: itemdata

                         };
                    // }
                   



                     console.log(ptableData, 'ptableData---0))0')

                     exportPdf('Intimation Report', [head], cdata, upperhead, "", ptableData, "", "IntimationReport", "a4", "", "", "P");
                     //exportPdf('Account General Report', [head], cdata, upperhead,  ptableData, "Branch", "Report", "a4");

                },
             complete: function () {






                }
         });
    }





    function onExell() {


        var cdata;


        const obj = {

          
            "Target Date": $('#reportrange span').html(),
            "Status": $('select[name="Status"] option:selected').text(),
            "Channel": $('select[name="Channel"] option:selected').text()


        };
        const obj2 = {

        }



        console.log(obj, '--obj--');
        console.log(obj2, '--obj2--');


        var str = "";
        var str2 = "";
        var num = 1;

        for (var i in obj) {
            if (obj[i] != "" && obj[i].toUpperCase() != "PLEASE SELECT" && obj[i] != 0) {

                if (num == 1) {
                    str += "Filter By : "
                }
                str = str + i + ' : ' + obj[i] + ' , ';
                num++;
            }

        };
        for (var i in obj2) {
            if (obj2[i] != "" && obj2[i] != undefined) {

                str2 = str2 + i + ' : ' + changeDateFormat(obj2[i]) + ' , ';
            }

        };

        $.ajax({
            url: '@Url.Action("GetCompanyDetails", "Home")',
            type: "GET",
            dataType: "json",
            contentType: "application/x-www-form-urlencoded;charset=utf-8",
            success: function (ajaxOutput) {


                cdata = ajaxOutput;

            },
            complete: function () {
                console.log(cdata, "---cdata----");


                //if ($('select[name="FK_Report"] option:selected').val() == 2) {
                head = [['Sl No', 'Date', 'Mobile', 'Channel', 'Content']];
                    ptableData = {
                        columns: [
                            { title: "Date", dataKey: "Date" },
                           
                            { title: "Phone", dataKey: "Phone" },
                            { title: "Channel", dataKey: "Channel" },
                            { title: "Content", dataKey: "Content" },
                          


                        ],
                        rows: itemdata

                    };
                //}
             



                ReportName = `${cdata.Company} \n${cdata.Branch} \nIntimation Report ${str2} \n ${str} `
                generateExell(ReportName, head, ptableData, {}, "", 'IntimationExcel');



            }
        });

    }





    $("#exppdf").tooltip({ trigger: 'hover' });


    function formatDate(date) {

        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2)
            month = '0' + month;
        if (day.length < 2)
            day = '0' + day;

        return [day, month, year].join('-');
    }

        function changeDateFormat(date) {
            /*var date = '2023-06-05';*/

            // Split the date into year, month, and day components
            var dateComponents = date.split('-');

            // Rearrange the components to form the desired format
            var formattedDate = dateComponents[2] + '/' + dateComponents[1] + '/' + dateComponents[0];

            console.log(formattedDate); // Output: 05/06/23
            return formattedDate;
        }
        function exportbuttonhide() {
            document.querySelector('#exppdf').style.display = 'none';
            console.log('Input value changed:');
        }

        var inputElements = document.getElementsByClassName('exptbttontoogle');
        for (var i = 0; i < inputElements.length; i++) {
            inputElements[i].addEventListener('change', function (event) {
                // Handle the change event here
                // var inputValue = event.target.value;
                document.querySelector('#exppdf').style.display = 'none';
                console.log('Input value changed:');
            });
        }
        function getfunction() {
            document.querySelector('#exppdf').style.display = 'none';
        }


    function getfunctionAssign() {

    }


</script>




<script src="~/Scripts/exportFile.js"></script>
<script src="~/Scripts/jspdf.min.js"></script>
<script src="~/Scripts/jspdf.plugin.autotable.min.js"></script>
<script src="~/Scripts/xlsx.min.js"></script>

