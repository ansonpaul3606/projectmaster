@*/*----------------------------------------------------------------------
    Created By	: AmrithaAk
    Created On	: 20/08/2022
    Purpose		: PurchaseOrder
    -------------------------------------------------------------------------
    Modification
    On			By					OMID/Remarks
    -------------------------------------------------------------------------
    -------------------------------------------------------------------------*/*@

@model PerfectWebERP.Models.IssueOutModel.IssueOutViewList
<style>

    .form-control1 {
        background: white;
        border: white;
    }

    .form-control2 {
        background: white;
        border: white;
    }
</style>

<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">Issue Out</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">

                <div class="row">


                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date" name="ISOutDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" style="margin-left:-89px" />
                            </div>
                        </div>
                    </div>


                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label" style="margin-left:-49px">
                                <span perfect-class="formGroupLabel">Department</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" id="departmentid" name="DepartmentID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" onchange="cleartable(this)">

                                    <option value="">Please Select </option>

                                    @if (!(Model.DepartmentList is null))
                                    {
                                        foreach (var departmentList in Model.DepartmentList)
                                        {
                                            <option value="@departmentList.DepartmentID">@departmentList.DepartmentName</option>
                                        }

                                    }

                                </select>

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel"> Issue Mode</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">

                                <select class="form-control perfectValidate_string" name="ISOutType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">

                                    <option value="">Please Select </option>

                                    @if (!(Model.IssueModeList is null))
                                    {
                                        foreach (var IssueList in Model.IssueModeList)
                                        {
                                            <option value="@IssueList.ID_Mode">@IssueList.ModeName</option>
                                        }

                                    }

                                </select>


                            </div>
                        </div>
                    </div>
                </div>
                <label type="hidden" class="col-sm-8 col-form-label" perfect-class="formGroupControl" name="BranchID" perfect-ctype="input" perfect-css="input"></label>
                <label type="hidden" class="col-sm-7 col-form-label" perfect-class="formGroupControl" name="DepartmentID" perfect-ctype="input" perfect-css="input"></label>






                <div class="card ">
                    <div class="accordion__item">
                        <div class="accordion__header collapsed" id="MasterProjectDetails" data-target="#active-header_collapseTwo">
                            <span class="accordion__header--icon"></span>
                            <span class="accordion__header--text">PRODUCT DETAILS</span>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-sm-6" perfect-class="TempTableGroup">


                                <div class="col-sm-12">

                                    <div class="form-group row" perfect-class="formGroup">
                                        <label class="col-sm-3 col-form-label">
                                            <span perfect-class="formGroupLabel">Product <span class="text-danger">*</span></span>

                                        </label>

                                        <div class="col-sm-4">
                                            <div class="input-group">
                                                <input type="text" class="form-control" name="Product" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" perfect-tempTable-issueout="Product" readonly disabled" />
                                                <input type="hidden" name="ProductID" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" perfect-tempTable-issueout="ProductID" />
                                                <input type="hidden" name="FK_Stock" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" perfect-tempTable-issueout="FK_Stock" />
                                                <input type="hidden" name="CurrentQuantity" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" perfect-tempTable-issueout="CurrentQuantity" />
                                                <div class="input-group-append">

                                                    <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this, 52, 'Product Details', [], ['SodMRP','SodSalPrice','StockID','FK_Stock','CurrentQuantity'],IssueOutTransMode)" Criterea1="BranchID" Criterea2="DepartmentID" BindName="Product" BindVal="ProductID" Function="1"></button>
                                                </div>

                                            </div>
                                            <span class="invalid-feedback animated fadeInUp d-block temptableError1"></span>
                                            <div id="ProductNameExists-error" class="Custominvalid animated fadeInUp producterror" style="display:none;color:red;">Product with same Stock ID  Already exists.</div>
                                        </div>
                                    </div>
                                </div>


                                <div class="col-sm-12">
                                    <div class="form-group row" perfect-class="formGroup">
                                        <label class="col-sm-3 col-form-label">
                                            <span perfect-class="formGroupLabel">Quantity <span class="text-danger">*</span></span>

                                        </label>
                                        <div class="col-sm-4">
                                            <div class="input-group">

                                                <input type="text" class="form-control text-right" placeholder="" name="Quantity" oninput="decimalpnt(this,'Quantity',4)" perfect-class="formGroupControl" id="Quantity" perfect-ctype="input" perfect-css="input" perfect-tempTable-issueout="Quantity" min="1" onchange="fn_checkStock(this)" />
                                            </div>
                                            <div id="stockavailable">

                                                <span class="invalid-feedback animated fadeInUp d-block temptableError1"></span>
                                            </div>
                                        </div>
                                        <div class="col-sm-1">

                                            <button type="button" id="TbtnSave" class="btn btn-primary1" perfect-css="button" onclick="AddProductdetails(this, 'issueout',1)" name="reset" align="center"><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                                            <button type="button" id="TbtnUpdate" class="btn btn-primary1" perfect-css="button" onclick="AddProductdetails(this, 'issueout',2)" name="reset" align="center"><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                                        </div>
                                        <div class="col-sm-0">
                                            <button class="btn btn-light1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="clearissueout(this,'issueout')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-sm-12">
                                    <div class="form-group row" perfect-class="formGroup">
                                        <label class="col-sm-3 col-form-label">
                                            <span perfect-class="formGroupLabel">Remarks</span>
                                        </label>
                                        <div class="col-sm-6">
                                            <div class="input-group">
                                                <textarea rows="3" name="ISOutRemarks" class="form-control  perfectValidate_Remarks_nm" perfect-ctype="input" maxlength="255"></textarea>
                                            </div>


                                        </div>

                                    </div>

                                </div>



                            </div>
                            <div class="col-6">
                                <div class="col-sm-12">
                                    <div class="table-responsive " perfect-tempTable="issueout" id="Producttable" style="display:none">
                                        <table class="table table-responsive-md" id="PROD">
                                            <thead class="btn-primary" id="PRODS">
                                                <tr>
                                                    <th scope="col" style="text-align:center">SL.NO</th>

                                                    <th style="display:none; text-align:center"><strong>ProductID</strong></th>
                                                    <th scope="col" style="text-align:left">Product</th>

                                                    <th scope="col" style="text-align:left">Quantity</th>
                                                    <th style="display:none; text-align:center"><strong>FK_Stock</strong></th>
                                                    <th style="display:none; text-align:center"><strong>CurrentQuantity</strong></th>
                                                    <th scope="col" style="text-align:center"></th>


                                                </tr>
                                            </thead>
                                            <tbody id="ProductDetailstbody"></tbody>
                                        </table>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-footer text-right" perfect-class="formFooter">
                <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_IssueOutForm_update(this)"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_IssueOutForm_add(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
            </div>
    </div>
    </form>
</div>


<div>
</div>

    </div>
<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>

<script>


        (function () {

            jQuery('select').selectpicker();
        })();

        $(document).ready(function () {

            let $thisForm = $(this).find('[perfect-class="form"]');

            $('#TbtnUpdate').css('display', 'none');
            $('#TbtnSave').css('display', 'block');

            $('#stockavailable').hide();


            var today = new Date();
            var day = today.getDate() > 9 ? today.getDate() : "0" + today.getDate(); // format should be "DD" not "D" e.g 09
            var month = (today.getMonth() + 1) > 9 ? (today.getMonth() + 1) : "0" + (today.getMonth() + 1);
            var year = today.getFullYear();

            $thisForm.find('[name="ISOutDate"]').attr('max', year + "-" + month + "-" + day);



        });
        function clearissueout(ele, tablekey) {


            let $thisform = $(ele).closest('[perfect-class="form"]');
            $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
            $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
            $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
            $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
            $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');

            let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
            $tblcontainer.attr('perfect-tempTable-action', 0);

            if (tablekey = "issueout") {

            }

        }
        function ConvertJsonDate(Jsondate) {
            var date = "";
            if (Jsondate != "" && Jsondate != null && Jsondate != undefined) {
                var dateString = Jsondate.substr(6);
                var currentTime = new Date(parseInt(dateString));
                var month = currentTime.getMonth() + 1;
                var day = currentTime.getDate();
                var year = currentTime.getFullYear();
                date = day + "-" + month + "-" + year;
            }
            return date;
        }

        function decimalpnt(ele, name, range) {

            let input = $('#' + name);
            ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
            let t = ele.value;
            ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
            input.on('keydown', function () {
                if (ele.value.includes('.')) {

                }
                var key = event.keyCode || event.charCode;
                if (key == 8 || key == 46) { }
                else {
                    if (ele.value.length == 9) {
                        ele.value = ele.value + '.';
                    }
                }

            });

        }

        function blockSpecialChars(e) {
            var k;
            document.all ? k = e.keyCode : k = e.which;
            return ((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8 || k == 32 || (k >= 48 && k <= 57) || k >= 96 && k <= 105);
        }

        function ResetButton(ele) {

            fn_IssueOut_initialload();

        }
        function cleartable(ele) {

            var rowcount = 0
            if (rowcount == 0) {
                $('#Producttable').css('display', 'none');
                let TbodyHtml = '';

                document.getElementById('ProductDetailstbody').rows.length = 0;
                $('#ProductDetailstbody').html(TbodyHtml);
                $('[name=ProductID]').val('')
                $('[name=Product]').val('');
                $('[name=Quantity]').val('');
            }
        }


        var qtyuniq = 0;

        function getfunction(ele) {
            debugger

            let $thisForm = $('[perfect-class="form"]');

            $('[name=Quantity]').val('');
            $('#TbtnUpdate').css('display', 'none');
            $('#TbtnSave').css('display', 'block');
            if ($thisForm.find('[name=ProductID]').val() != null) {

                $('#stockavailable').show();

            }
            qtyuniq = $thisForm.find('[name="CurrentQuantity"]').val();
            console.log('1ST', $thisForm.find('[name=FK_Stock]').val());
            console.log('1CQT', $thisForm.find('[name=CurrentQuantity]').val());


        }

        var entqtyuniq = 0;
        function checkavaliablequantity(ele)
        {
            let $thisForm = $(ele).closest('[perfect-class="form"]');

            let errorClass = '.temptableError1';
            let $errorElement = $(ele).closest('[perfect-class="formGroup"]').find(errorClass);

            let QuantityEnt = $thisForm.find('[name="Quantity"]').val();

            entqtyuniq = $thisForm.find('[name="Quantity"]').val();

            if (parseFloat(QuantityEnt) > parseFloat(qtyuniq)) {
                console.log('inside limit check if')
                $errorElement.text('Quantity should be less than Avaliable Quantity');

            }
            else {


                let changeinquantity = (parseFloat(qtyuniq) - parseFloat(QuantityEnt));
                $thisForm.find('[name="DecreaseQuantity"]').val(changeinquantity);
                console.log('inside limit check else')

                $errorElement.text('');

            }





        }


        function Getdepartmentdefaults() {
         let $thisForm = $('[perfect-class="form"]');
         $.ajax({
             url: '@Url.Action("GetEmployeedetailsDefault", "PurchaseOrder")',
             type: "Get",
             dataType: "json",
             contentType: "application/json",
             success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                 if (ajaxOutput.Process.IsProcess) {
                     //var stateModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['EmpID'] });
                     $.each(ajaxOutput.Data, function (key, value) {

                         console.log('>_ Search button > list click', value);
                         $thisForm.find('[name=DepartmentID]').val(value.FK_Department).selectpicker('refresh');
                         $thisForm.find('[name=DepartmentName]').val(value.DeptName);
                         $thisForm.find('[name=BranchID]').val(value.ID_Branch);

                     });




                 }
                 else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                         NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                     });
                 }

             },


         });


        }



    function AddProductdetails(ele, val, btnid) {


        let tableKey = val;
        let errorClass = '.temptableError';
        let errorClass1 = '.temptableError1';
        let errorClass2 = '.temptableError2';
        let isValid = true;
        let QuantityCheck = true;
        let ZeroCheck = true;
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').val().length == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').val().length == undefined || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').val().length == '') {
            isValid = false;
            console.log('false');
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').closest('[perfect-class="formGroup"]').find(errorClass1).text('Please select Product');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').closest('[perfect-class="formGroup"]').find(errorClass1).text('');
        }


        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val().lenght == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val().length == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val().length == undefined || $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val().length == '') {

            isValid = false;
            console.log('false');
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass1).text('Please Enter Quantity');
        }

        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass1).text('');
        }

        if (isValid) {
            console.log("Validate >", ValidateAddProductdetails())
            let $container = $(ele).closest('[perfect-class="form"]');


            console.log('check 3');



            let QuantityEnt = $thisForm.find('[name="Quantity"]').val();


            if (parseFloat(QuantityEnt) == 0) {

                ZeroCheck = false;
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="form"]').find(errorClass).text('Please Enter Quantity');
            }
            else {

                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="form"]').find(errorClass).text('');
            }
            if (fn_checkStock(ele)) {
                if (isValid == true && QuantityCheck == true && ZeroCheck == true) {

                    debugger
                    if (ValidateAddProductdetails() <= 0 && CheckExisting($container.find('[name=FK_Stock]').val(), val, ele, 'ProductNameExists-error', btnid) <= 0)
                    {
                        if (btnid == 2) {
                            removerow($container.find('[name=FK_Stock]').val(), ele, btnid, val);
                        }

                        $('#Producttable').css('display', 'block');
                        $('#TbtnUpdate').css('display', 'none');
                        $('#TbtnSave').css('display', 'block');
                        $('#stockavailable').hide();
                        let $tbl = $container.find('[perfect-tempTable="' + val + '"]');


                        RemoveEmptyRow('ProductDetailstbody');

                        var TbodyHtml = '';

                        var rowcount = document.getElementById('ProductDetailstbody').rows.length;

                        rowcount = rowcount + 1;
                        TbodyHtml += "<tr id=" + htmlEncode(rowcount) + ">";
                        TbodyHtml += "<td class='row-index' style='text-align:centre;'>" + htmlEncode(rowcount) + "</td>";

                        TbodyHtml += "<td style='display:none;'>" + $container.find('[name=ProductID]').val() + "</td>";
                        TbodyHtml += "<td style='text-align:left;'>" + htmlEncode($container.find('[name=Product]').val()) + "</td>";

                        TbodyHtml += "<td style='text-align:left;'>" + $container.find('[name=Quantity]').val() + "</td>";
                        TbodyHtml += "<td style='display:none;'>" + $container.find('[name=FK_Stock]').val() + "</td>";
                        TbodyHtml += "<td style='display:none;'>" + $container.find('[name=CurrentQuantity]').val() + "</td>";
                        //TbodyHtml += "<td style='text-align:center;'><div class='btnPerfectGridEdit'><a href='#' class='btn btnPerfectGrid shadow btn-xs sharp mr-1' title='Edit' onclick='EditProductdetails(this);'> <i class='fa fa-pencil btnPerfectGridEdit'></i></a>";

                        //TbodyHtml += "<a href='#'  class='btn btnPerfectGrid shadow btn-xs sharp mr-1' title='Delete' onclick='RemoveProductdetails(this);'><i class='fa fa-trash btnPerfectGridDelete'><title>Delete</title></i></a>";
                        //TbodyHtml += "</tr>";
                        TbodyHtml += "<td style='text-align:center;'><div class='d-flex'><a href='#' class='btn btnPerfectGrid shadow btn-xs sharp mr-1' title='Edit' onclick='EditProductdetails(this);'> <i class='fa fa-pencil btnPerfectGridEdit'></i></a>";
                        TbodyHtml += "<a href='#' class='btn btnPerfectGrid shadow btn-xs sharp mr-1' title='Delete' onclick='RemoveProductdetails(this);'><i class='fa fa-trash btnPerfectGridDelete'><title>Delete</title></i></a>";

                        TbodyHtml += "</tr>";

                        $('#ProductDetailstbody').append(TbodyHtml);


                        $('[name=ProductID]').val('');
                        $('[name=Product]').val('');
                        $('[name=Quantity]').val('');
                        $('[name=CurrentQuantity]').val('');

                    }
                }
            }
        }
    }

        function ValidateAddProductdetails() {
            debugger
            var Error = 0;
            const $inp = $(".product");
            let is_empty = '';
            $inp.each((i, el) => {




                if (!$('[name=' + $(el).attr('name') + ']').val() == undefined) {
                    is_empty = false;
                }
                else {
                    is_empty = !$('[name=' + $(el).attr('name') + ']').val();
                }


                let ErrorID = $(el).attr('data-id');
                if (is_empty) {
                    console.log(`field ${el.id} is empty`);
                    $('#' + ErrorID).css('display', 'block');
                    Error++;
                    console.log("While empty", Error)
                }
                else if (!is_empty) {
                    $('#' + ErrorID).css('display', 'none');
                    console.log("While not empty", Error)
                    //if (Error > 0) {
                    //    Error--;
                    //}
                }
                el.classList.toggle("is-empty", is_empty);
            });
            return Error;
        }


        function RemoveProductdetails(ele) {

            let ObjectName = $(ele).closest("tr").find("td").eq(2).text().trim();

            if (confirm("Are you sure you want to delete " + " " + ObjectName + "?")) {
                var row = $(ele).closest('tr');

                var siblings = row.siblings();

                siblings.each(function (index) {
                    $(this).children('td').first().text(index + 1);
                });

                // Removing the current row.
                $(ele).closest('tr').remove();

                $('[name=ProductID]').val('')
                $('[name=Product]').val('');
                $('[name=Quantity]').val('');
                $('#TbtnUpdate').css('display', 'none');
                $('#TbtnSave').css('display', 'block');


            }
            else {
                return false;
            }

            //If removed all rows
            var rowcount = document.getElementById('ProductDetailstbody').rows.length;
            if (rowcount == 0) {
                $('#Producttable').css('display', 'none');

                let TbodyHtml = '';
                TbodyHtml += "<tr id='0'> <td style='text-align:center;' colspan='5'>No Records..</td> </tr>";
                $('#ProductDetailstbody').html(TbodyHtml);
                $("#ProductDetailstbody tr").remove();
            }



        }

        function removerow(Object_ID, ele, btnid, val) {
            $('select[name=ProductID]').prop("disabled", false);
            let $container = $(ele).closest('[perfect-class="form"]');
            var cntr = 0;
            $container.find('[perfect-tempTable="' + val + '"]').find('tbody').find('tr').each(function () {

                var $tds = $(this).find('td'),
                    productId = $tds.eq(4).text();
                debugger

                if (productId == Object_ID) {

                    if (btnid == 2) {
                        cntr++;
                        if (cntr > 1) {


                        }
                        else {
                            var siblings = tre.siblings();
                            console.log('Sibling>', siblings);
                            siblings.each(function (index) {
                                $(this).children('td').first().text(index + 1);
                            });
                            tre.remove();

                        }
                    }


                }
                else {
                    var siblings = tre.siblings();
                    console.log('Sibling>', siblings);
                    siblings.each(function (index) {
                        $(this).children('td').first().text(index + 1);
                    });
                    tre.remove();
                }


            })
        }
        var tre;
        function EditProductdetails(ele) {
            debugger
            let $container = $(ele).closest('[perfect-class="form"]');
            var tr = $(ele).closest('tr');
            tre = $(ele).closest('tr');

            var $tds = tr.find('td'),
                Slno = $tds.eq(0).text(),
                ProductID = $tds.eq(1).text(),
                Product = $tds.eq(2).text(),
                Quantity = $tds.eq(3).text(),
                FK_Stock = $tds.eq(4).text(),
                CurrentQuantity1 = $tds.eq(5).text();


            $container.find('[name=ProductID]').val(ProductID);

            $container.find('[name=Product]').val(Product);
            $container.find('[name=Quantity]').val(Quantity);
            $container.find('[name=FK_Stock]').val(FK_Stock);

            $container.find('[name=CurrentQuantity]').val(CurrentQuantity1);

            var rowcount = document.getElementById('ProductDetailstbody').rows.length;
            if (rowcount == 0) {
                $('#Producttable').css('display', 'none');
                let TbodyHtml = '';
                TbodyHtml += "<tr id='0'> <td style='text-align:center;' colspan='4'>No Records..</td> </tr>";
                $('#ProductDetailstbody').html(TbodyHtml);
            }


            $('#TbtnUpdate').css('display', 'block');
            $('#TbtnSave').css('display', 'none');
            $('#stockavailable').show();

        }


        function ClearProductdetails(ele) {


            let $container = $(ele).closest('[perfect-class="form"]');
            $container.find('[name=ProductID]').val('')
            $container.find('[name=Product]').val('');
            $container.find('[name=FK_Stock]').val('');
            $container.find('[name=Quantity]').val('');
            $container.find('[name=CurrentQuantity]').val('');
            $('#TbtnUpdate').css('display', 'none');
            $('#TbtnSave').css('display', 'block');

            ValidateAddProductdetails(this);
            if (CheckExisting($container.find('[name=FK_Stock]').val(), 'ProductDetails', ele, 'ProductNameExists-error') <= 0) {

                $container.find('[name="ProductID"]').closest('[perfect-class="form"]').find('.producterror').attr("style", "display:none");
            }
        }


        function CheckExisting(Object_ID, val, ele, Error, btnid) {
            debugger
            let $container = $(ele).closest('[perfect-class="form"]');
            var cntr = 0;
            var Exist = 0;
            $container.find('[perfect-tempTable="' + val + '"]').find('tbody').find('tr').each(function () {

                var $tds = $(this).find('td'),
                    productId = $tds.eq(4).text();

                console.log('PRODUCT_ID-->', productId)


                if (productId == Object_ID) {
                    if (btnid == 2) {
                        cntr++;
                        if (cntr > 1) {
                            Exist++;

                        }
                        else {
                            Exist = 0;
                        }
                    }
                    else {

                        Exist++;
                    }

                }

                if (Exist > 0) {
                    $('#' + Error).css('display', 'block');
                    console.log('Yes it exist');

                }
                else {
                    $('#' + Error).css('display', 'none');
                    console.log('No it not exist');
                }
            })
            return Exist;
        }

        function RemoveEmptyRow(ID) {
            let val = $('#' + ID).find('tr:first').attr('id');
            if (val == 0) {
                $('#' + ID).empty();
            }
        }




        function fn_IssueOutForm_add(ele) {
            debugger
            let $thisForm = $(ele).closest('[perfect-class="form"]');

            let prevData = [];
            var rowcount = document.getElementById('ProductDetailstbody').rows.length;

            if (rowcount > 0) {
                $thisForm.find('[perfect-tempTable="issueout"]').find('tbody').find('tr').each(function () {
                    let tr = $(this);
                    let Productdata = {
                        ProductID: tr.find("td:eq(1)").text().trim(),
                        Product: tr.find("td:eq(2)").text().trim(),
                        Quantity: tr.find("td:eq(3)").text().trim(),
                        FK_Stock: tr.find("td:eq(4)").text().trim()
                    }
                    prevData.push(Productdata);
                })
            }

            if (prevData.length > 0) {
                if ($thisForm.valid()) {


                    $(ele).prop('disabled', true);

                    console.log("prevData >", prevData)

                    var inputData = {

                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        ISOutDate: $thisForm.find('[name=ISOutDate]').val(),
                        ISOutType: $thisForm.find('[name=ISOutType]').val(),
                        DepartmentID: $thisForm.find('[name=DepartmentID]').val(),
                        ISOutRemarks: $thisForm.find('[name=ISOutRemarks]').val(),
                        TransMode: IssueOutTransMode,
                        LastID: LastID_IssueOut,
                        IssueOutDetails: prevData
                    }
                    clearSessionValue(LastIDSessionKey);

                    $.ajax({
                        url: "@Url.Action("AddNewIssueOut", "IssueOut")",
                        type: "POST",

                        data: inputData,
                        dataType: "json",
                        contentType: "application/x-www-form-urlencoded; charset=utf-8",
                        success: function (data) {

                            if (data.Process.IsProcess) {

                                $.each(data.Process.Message, function (key, value) {

                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                });
                                $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                $thisForm.find('[perfect-ctype="input"]').val('');
                                $thisForm.find('[perfect-ctype="date"]').val('');


                                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                if (onSuccess) {
                                    window[onSuccess]();
                                    $('#stockavailable').hide();
                                }


                            }
                            else {
                                $.each(data.Process.Message, function (key, value) {
                                    //toastr.warning(value, "Error");
                                    $(ele).prop('disabled', false);
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                        },
                        complete: function () {
                            $(ele).prop('disabled', false);
                        }

                    });



                }
            }

            else {

                $(ele).prop('disabled', false);
                NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Please Fill all mandatory fields, Enter Atleast One Product Details!!' });

                }




        }


        function fn_IssueOutForm_update(ele) {

            let $thisForm = $(ele).closest('[perfect-class="form"]');
            debugger
            let prevData = [];
            var rowcount = document.getElementById('ProductDetailstbody').rows.length;

            if (rowcount > 0) {
                $thisForm.find('[perfect-tempTable="issueout"]').find('tbody').find('tr').each(function () {
                    let tr = $(this);
                    let Productdata = {
                        ProductID: tr.find("td:eq(1)").text().trim(),
                        Product: tr.find("td:eq(2)").text().trim(),
                        Quantity: tr.find("td:eq(3)").text().trim(),
                        FK_Stock: tr.find("td:eq(4)").text().trim()
                    }
                    prevData.push(Productdata);
                })
            }
            //var rowcount = document.getElementById('ProductDetailstbody').rows.length;

            //    if ($thisForm.valid() && prevData.length != 0 && rowcount != 0) {

            if (prevData.length > 0) {
                if ($thisForm.valid()) {
                    $(ele).prop('disabled', true);

                    console.log("prevData >", prevData)
                    let pdata = $thisForm.data('pData');
                    console.log('pdata', pdata);


                    var inputData = {

                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        IssueOutID: pdata.IssueOutID,
                        LastID: LastID_IssueOut,
                        ISOutDate: $thisForm.find('[name=ISOutDate]').val(),
                        ISOutType: $thisForm.find('[name=ISOutType]').val(),
                        DepartmentID: $thisForm.find('[name=DepartmentID]').val(),
                        ISOutRemarks: $thisForm.find('[name=ISOutRemarks]').val(),
                        TransMode: IssueOutTransMode,
                        IssueOutDetails: prevData
                    }
                    clearSessionValue(LastIDSessionKey);

                    $.ajax({
                        url: "@Url.Action("UpdateIssueOut", "IssueOut")",
                        type: "POST",

                        data: inputData,
                        dataType: "json",
                        contentType: "application/x-www-form-urlencoded; charset=utf-8",
                        success: function (data) {

                            if (data.Process.IsProcess) {

                                $.each(data.Process.Message, function (key, value) {

                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                });

                                //$thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                //$thisForm.find('[perfect-ctype="input"]').val('');
                                //$thisForm.find('[perfect-ctype="date"]').val('');


                                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                if (onSuccess) {
                                    window[onSuccess](onSuccess);
                                    $('#Producttable').css('display', 'none');
                                    $('#stockavailable').hide();
                                }

                                //---------- Do stuff if success
                                // loadUnitList();
                                // console.log('> Add new post success data', data);
                            }


                            else {
                                $.each(data.Process.Message, function (key, value) {
                                    //toastr.warning(value, "Error");
                                    $(ele).prop('disabled', false);
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                        },
                        complete: function () {
                            $(ele).prop('disabled', false);
                        }

                    });



                }
            }

            else {
                $(ele).prop('disabled', false);
                NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Please Fill all mandatory fields, Enter Atleast One Product Details!!' });

            }



        }


        function fn_checkStock(ele) {
            debugger
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            let qty = parseFloat(  $thisForm.find('[name="Quantity"]').val());
            let ctstock =parseFloat( $thisForm.find('[name="CurrentQuantity"]').val());
            let prid = $thisForm.find('[name="ProductID"]').val();

            if (prid == 0 || prid == "") {
                NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Please Select Product' })
                $('[name=Quantity]').val(''); return false;
            }
            else if (qty <= ctstock) {


                isValid = true;
                return true;
            }
            else {
                NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Enter quantity less than or equal to Current Stock.' })
                //$('[name=Quantity]').val('');
                isValid = false;
                return false


            }
            //isValid = true;

        }


</script>
