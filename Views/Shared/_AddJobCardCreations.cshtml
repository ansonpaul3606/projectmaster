@*----------------------------------------------------------------------
    Created By	: NIJI TJ
    Created On	: 08/04/2022
    Purpose		: Job Card Creation
    -------------------------------------------------------------------------
    Modification
    On			By					OMID/Remarks
    -------------------------------------------------------------------------
    -------------------------------------------------------------------------*@


@model PerfectWebERP.Models.JobCardCreationModel.PeriodTypeList
<style>
    #tblJbCrd tr th:nth-child(3) {
        text-align: right !important;
    }

    #tblJbCrd tr td:nth-child(3) {
        text-align: right !important;
    }
</style>
<div class="card ">
    <div class="card-header">
        <h4 class="card-title col-12">Job Card Creation</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-5 col-form-label">
                                <span perfect-class="formGroupLabel">Type</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-7">
                                <div class="input-group">
                                    <input type="hidden" name="ID_JobCard" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <select class="form-control perfectValidate_string divdisableonupdate" id="ddlTypeID" name="ddlTypeID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="fn_ddlType(this)">
                                        <option value="1">New Job Card </option>
                                        <option value="2">Project</option>
                                        <option value="3">Sales Order</option>
                                    </select>
                                    <div class="text-danger temptableError"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-5 col-form-label">
                                <span perfect-class="formGroupLabel">Priority</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-7">
                                <div class="input-group">
                                    <select class="form-control perfectValidate_string divdisableonupdate" name="Priority" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                        <option value="">Please Select </option>
                                        <option value="1">Hot</option>
                                        <option value="2">Warm</option>
                                        <option value="3">Cold</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row divjobcarddetails">
                    <div class="col-sm-12">
                        <div class="row">
                            <div class="col-sm-4">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-5 col-form-label">
                                        <span perfect-class="formGroupLabel">Start Date</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-7">
                                        <input type="date" class="divdisableonupdate form-control perfectValidate_date" name="StartDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" />
                                        <div class="text-danger temptableError" name="EndDateError2"></div>
                                    </div>
                                     
                                </div>
                            </div>
                            <div class="col-sm-4" id="divjobcarddetails" style="display:none;">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-5 col-form-label">
                                        <span perfect-class="formGroupLabel">Job Card No.</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-7">
                                        <div class="input-group">
                                            <input type="text" class="divdisableonupdate  form-control perfectValidate_string" name="JobCardNo" perfect-class="formGroupControl" perfect-ctype="input" value="@Model.JobCardNo" disabled />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4" id="divProjectdetails" style="display:none;">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-5 col-form-label">
                                        <span perfect-class="formGroupLabel" name="lblProName">Project Name</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-7">
                                        <div class="input-group">
                                            <input type="text" class="form-control" name="ProjectName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                            <input type="hidden" name="FK_Project" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                            <input type="hidden" name="StartDates" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />

                                            <div class="input-group-append">
                                                <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search divdisableonupdate" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this, 77, 'Project List', [], ['StartDates','EndDate'],JobCardTransMode)" Criterea1="0" Criterea2="0" BindName="ProjectName" BindVal="FK_Project" function="1"></button>
                                            </div>
                                           
                                            <div class="text-danger temptableError" name="ProjectNameError"></div>
                                        </div>

                                    </div>

                                </div>
                            </div>
                            <div class="col-sm-4" id="divSalOrderdetails" style="display:none;">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-5 col-form-label">
                                        <span perfect-class="formGroupLabel" name="lblProName">Order No</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-7">
                                        <div class="input-group">
                                            <input type="text" class="form-control" name="SoNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                            <input type="hidden" name="OrderNo" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                            <input type="hidden" name="SODate" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />

                                            <div class="input-group-append">
                                                <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search divdisableonupdate" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this, 78, 'Sales Order List', [], ['SODate','SoNo'],JobCardTransMode)" Criterea1="0" Criterea2="0" BindName="SoNo" BindVal="OrderNo"></button>
                                            </div>
                                            <div class="text-danger temptableError" name="SoNoError"></div>
                                        </div>

                                    </div>

                                </div>
                            </div>

                            <div class="col-sm-4">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-5 col-form-label">
                                        <span perfect-class="formGroupLabel">Target Date</span>
                                        <span class="text-danger" name="lblerrorTargetDate"></span>
                                    </label>
                                    <div class="col-sm-7">
                                        <div class="input-group">
                                            <input type="date" class="form-control divdisableonupdate" name="JobCardTargetDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" />

                                            <div class="text-danger temptableError" name="EndDateError"></div>
                                            <div class="text-danger temptableError" name="EndDateError1"></div>
                                            

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="col-sm-12">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="accordion__item">
                                    <div class="accordion__header collapsed" id="MasterProjectDetails" data-target="#active-header_collapseTwo">
                                        <span class="accordion__header--icon"></span>
                                        <span class="accordion__header--text">Product Details</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>




                    <div class="col-sm-12">
                        <div class="row">
                            <div class="col-sm-4">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-5 col-form-label">
                                        <span perfect-class="formGroupLabel" name="lblProName">Product</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-7">
                                        <div class="input-group">
                                            <input type="text" class="form-control" name="ProductName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" perfect-tempTable-JobCard="ProductName" readonly />
                                            <input type="hidden" name="FK_Product" perfect-tempTable-JobCard="FK_Product" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />


                                            <div class="input-group-append">

                                                <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,81,'Product List',[],JobCardTransMode)" Criterea1="0" Criterea2="0" BindName="ProductName" BindVal="FK_Product"></button>
                                            </div>
                                            <div class="text-danger temptableError"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-5 col-form-label">
                                        <span perfect-class="formGroupLabel" name="lblQty">Quantity</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-7">
                                        <input type="text" oninput="decimalpnt(this, 'Quantity', 3);" class="form-control text-right" placeholder="" name="Quantity" id="Quantity" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" perfect-tempTable-JobCard="Quantity" maxlength="12" /> @*oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"*@
                                        <input type="hidden" name="Quantity" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                        <div class="text-danger temptableError"></div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-2 text-right">
                                <div class="input-group">
                                    <div class="input-group-append">
                                        <div>
                                            <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Product" onclick="fn_CreateJobCard(this,'JobCard',['FK_Product'],JobCardtableOptionsTempOut)"><i class="fa fa-plus" aria-hidden="true"></i></button>

                                            <button class="btn btn-light1" type="button" id="btnReset" data-toggle="tooltip" data-placement="top" data-html="true" onclick="JobCardproductclear(this,'JobCard')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>


                    <div class="col-sm-12" style="padding:20px;">

                        <div class="form-group row" perfect-class="formGroup">
                            <div class="table-responsive" id="tblJbCrd" perfect-tempTable="JobCard" perfect-tempTable-lastindex="0" perfect-tempTable-action="0">
                            </div>
                        </div>

                    </div>
                </div>


                <div class="modal fade" perfect-class="formGroupModalrecurringjob" id="formGroupModalrecurringjob">
                    <div class="modal-dialog  modal-dialog-centered modal-md" role="document">
                        <div class="modal-content">
                            <div class="modal-header border-0">
                                <h5 class="modal-title">Recurring Job</h5>
                                <button type="button" class="close" data-dismiss="modal">
                                    <span>&times;</span>
                                </button>
                            </div>
                            <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                                <div class="row">


                                    <div class="col-sm-12">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">Period Type <span class="text-danger">*</span></label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <select class="form-control" name="PeriodType" id="ddlPeriodType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="ChangePeriod(this);">
                                                        <option value="0">Please Select </option>


                                                        @if (!(Model.PeriodType is null))
                                                        {
                                                            foreach (var PT in Model.PeriodType)
                                                            {
                                                                <option value="@PT.ID_Mode">@PT.ModeName</option>
                                                            }
                                                        }
                                                    </select>


                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Period <span class="text-danger">*</span></span>

                                            </label>
                                            <div class="col-sm-8">

                                                <div class="input-group">
                                                    <input type="text" class="rcrsv form-control text-right" name="Period" id="Period" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="10" oninput="fn_check(this);" />
                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-12">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">No. of Count</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="text" class="rcrsv form-control text-right" id="NoofCount" name="NoofCount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="10" oninput="ChangeCount(this);" />

                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">End Date</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="date" class="form-control text-right" id="TypeEndDate" name="TypeEndDate" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="12" readonly />

                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>

                                        </div>
                                    </div>





                                </div>
                                <div class="modal-footer">
                                    <button type="button" onclick="SubmitJobCard(this);" class="btn btn-primary">Submit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="card-footer text-right" perfect-class="formFooter">
                <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_UpdateJobCard(this,'update')"><i class="fa fa-refresh fa-spin loaderClass "></i>Update</button>
                <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3" name="add" perfect-css="button" onclick="fn_UpdateJobCard(this,'new')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                <button type="button" class="btn btn-light" perfect-css="button" onclick="fn_resetJobCard(this)" name="reset">Clear</button>
            </div>
        </form>
    </div>
</div>

<script>

    $(document).ready(function () {
        initFunctions('form');
    });
    function decimalpnt(ele, name, range) {
        let input = $('#' + name);
        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
        input.on('keydown', function () {
            if (ele.value.includes('.')) {
            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.length == 6) {
                    ele.value = ele.value + '.';
                }
            }

        });
    }
    function ChangeCount(ele) {
        IntegerCheck(ele, 0); ChangePeriod(ele);
    }
    function ChangePeriod(ele) {
       var _continue = true;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let PeriodType = $thisForm.find('[name="PeriodType"]').val().trim() == "" ? "0" : $thisForm.find('[name="PeriodType"]').val().trim();
        let startDate = new Date($thisForm.find('[name="StartDate"]').val());
        let Enddate = "";
        $thisForm.find('[name="TypeEndDate"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');

        if (PeriodType == "0") {
            $thisForm.find('[name="PeriodType"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Please Select Period Type');
            _continue = false;
            $thisForm.find('[name="Period"]').val(""); $thisForm.find('[name="NoofCount"]').val(""); $thisForm.find('[name="TypeEndDate"]').val("")
        }
        else {
            $thisForm.find('[name="PeriodType"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
            $thisForm.find('[name="TypeEndDate"]').closest('[perfect-class="formGroup"]').find('.temptableError').text(''); _continue = false;

            let period = parseInt($thisForm.find('[name="Period"]').val() == "" ? "0" : $thisForm.find('[name="Period"]').val());
            let noofCount = parseInt($thisForm.find('[name="NoofCount"]').val() == "" ? "0" : $thisForm.find('[name="NoofCount"]').val());
            let TotPeriod = parseInt(period) * parseInt(noofCount);

            var currentDate = new Date();

            var result = "";
            switch (parseInt(PeriodType)) {

                case 0: $thisForm.find('[name="Period"]').val(""); $thisForm.find('[name="NoofCount"]').val(""); $thisForm.find('[name="TypeEndDate"]').val("");
                case 1: startDate.setDate(startDate.getDate() + TotPeriod);
                    break;//day
                case 2: startDate.setDate(startDate.getDate() + (TotPeriod * 7));
                    break;//week
                case 3: startDate.setMonth(startDate.getMonth() + TotPeriod); break;//mnth
                case 4:
                    if (period <= parseInt(currentDate.getDate())) {
                        noofCount = noofCount - 1;
                        console.log(noofCount);
                    }
                    startDate.setDate(period);
                    startDate.setMonth(startDate.getMonth() + parseInt(noofCount));


                    break;//specday
            }
              Enddate =  startDate.toString();
            if (Enddate == null || Enddate == "" || Enddate == "Invalid Date") {
                $thisForm.find('[name="TypeEndDate"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('End Date is Invalid'); _continue = false;

            }
        }

            $thisForm.find('[name="TypeEndDate"]').val(moment(startDate).format('YYYY-MM-DD'));

    }
    function clearRecursive() {
        $("#ddlPeriodType").val("0");
        $(".rcrsv").val("");


    }
    function fn_ddlType(element) {
        clearRecursive();
        var type = $(element).val().trim();
        let $thisForm = $(element).closest('[perfect-class="form"]');
        $thisForm.find('[name="EndDateError"]').text("");
        if (type == "1") {

            $("#divProjectdetails").css('display', 'none');
            $("#divjobcarddetails").css('display', 'block');
            $("#divSalOrderdetails").css('display', 'none');
            $thisForm.find('[name="lblerrorTargetDate"]').text("");
        }
        else if (type == "2") {
            $("#divProjectdetails").css('display', 'block');
            $("#divjobcarddetails").css('display', 'none');
            $("#divSalOrderdetails").css('display', 'none');
            $thisForm.find('[name="lblerrorTargetDate"]').text("*");
        }
        else {
            $("#divProjectdetails").css('display', 'none');
            $("#divjobcarddetails").css('display', 'none');
            $("#divSalOrderdetails").css('display', 'block');
            $thisForm.find('[name="lblerrorTargetDate"]').text("*");
        } ChangePeriod(element);

    }
    function IntegerCheck(ele, range) {

        let input = $(ele);
        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
        input.on('keydown', function () {
            if (ele.value.includes('.')) {
            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.length == 11) {
                    ele.value = ele.value + '.';
                }
            }
        });
    }
    function fn_check(ele) {
        IntegerCheck(ele, 0);
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let PeriodType = $thisForm.find('[name="PeriodType"]').val();
        let Period = $thisForm.find('[name="Period"]').val();
        let errorClass1 = '.temptableError';
        if (PeriodType == 4 && Period > 31) {
            $thisForm.find('[name="Period"]').closest('[perfect-class="formGroup"]').find(errorClass1).attr("style", "display:block");
            $thisForm.find('[name="Period"]').closest('[perfect-class="formGroup"]').find(errorClass1).text('Please Enter the Period less than or equal to 31');
        }
        ChangePeriod(ele);
    }

    function fn_CreateJobCard(ele, tkey, uniq = []) {
        console.log("FFFFFFFFF");
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        let insertData = {};
        let tableOptionsTemp = JobCardtableOptionsTempOut;
        let unique = (uniq) ? uniq : [];
        let isValid = true;
        let errorClass = '.temptableError';
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').val().trim() == "0" || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').val().trim() == "") {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Product');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val().trim() == "0" || $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val().trim() == "") {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Quantity');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

            let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
            let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
            let indexname = tkey + 'index';
            tableOptionsTemp.rowAttribute.push(indexname);
            tableOptionsTemp.hideColumn.push(indexname);
            let updateCond = '';
            let isNew = true;
            if (thisactionIndex > 0) {
                insertData[indexname] = thisactionIndex;
                updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
                isNew = false;
            }
            else {
                insertData[indexname] = lastIndex + 1;
                $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
                isNew = true;
            }
            console.log('check 3');
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                let $errorElement = $this.closest('[perfect-class="formGroup"]').find(errorClass);
                if ($this.is('select')) {

                    if ($this.val().length > 0) {
                        $errorElement.text('');
                    }
                    else {
                        isValid = false;
                        if (headerName == 'FK_Product') {
                            headerName = "Product";
                        }
                        $errorElement.text('Please Select ' + headerName);

                    }
                }
                else if ($this.is('input')) {
                    let inputType = $this.attr('type').toLocaleLowerCase();
                    if (inputType == 'checkbox') {
                    }
                    else if (inputType == 'hidden') {
                    }
                    else {
                        if ($this.val().length > 0) {
                            //$errorElement.text('');
                        }
                        else {

                            isValid = false;
                            if (headerName == 'ProductName') {
                                headerName = "Product";
                                $errorElement.text('Please Select ' + headerName);
                            }
                            else if (headerName == 'Quantity') {
                                headerName = "Quantity";
                                $errorElement.text('Please Enter ' + headerName);
                            }


                        }
                    }
                }
            });
            if (unique.length > 0) {
                let prevData = [];
                $tblcontainer.find('table > tbody').find('tr').each(function () {
                    if (isNew) {
                        prevData.push($(this).data('pData'));
                    }
                    else {
                        if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                            prevData.push($(this).data('pData'));
                        }
                    }
                })
                console.log('previous data', prevData);
                unique.forEach(function (key, i) {
                    console.log('unid -> key:' + key + "| index :" + i);
                    let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                    let headerEleName = $thisEle.attr('perfect-tempTable-' + tableKey);
                    let atname = $thisEle.attr('name');
                    let cvalue;
                    if ($thisEle.length != 0) {
                        let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                        if (headerEleName == 'FK_Product') {
                            headerEleName = "Product";
                        }
                        let errmessage = headerEleName + " Already exits"
                        if ($thisEle.is('select')) {
                            cvalue = $thisEle.val();
                        }
                        else if ($thisEle.is('input')) {
                            let inputEleType = $thisEle.attr('type').toLocaleLowerCase();
                            if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                            else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                            else { cvalue = $thisEle.val(); }
                        }
                        else {
                            cvalue = $thisEle.val();
                        }
                        if (prevData.find(a => a[atname] == cvalue)) {
                            $errorElement.text(errmessage);
                            isValid = false;
                        }
                    }
                });
            }
            console.log('check 4');
            if (isValid) {
                console.log('check 4.1');
                $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                    let $this = $(this);
                    let headerName = $this.attr('perfect-tempTable-' + tableKey);
                    let nameAttr = $this.attr('name');
                    if ($this.is('select')) {
                        tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTemp.hideColumn.push(nameAttr)
                        if ($this.val() != null) {
                            let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        else {
                            let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        insertData[nameAttr] = $this.val();
                        $this.val('').selectpicker('refresh');
                    }
                    else if ($this.is('input')) {
                        let inputType = $this.attr('type').toLocaleLowerCase();
                        if (inputType == 'checkbox') {
                            insertData[nameAttr] = $this.is(':checked');
                            tableOptionsTemp.isCheckType.push(nameAttr)
                            $this.prop('checked', false);
                        }
                        else if (inputType == 'hidden') {
                            tableOptionsTemp.hideColumn.push(nameAttr)
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                        else if (inputType == 'date') {
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                        else {
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                    }
                    else {
                        insertData[nameAttr] = $this.val();
                        $this.val('');
                    }
                });
                console.log('check 4.2');
                if (isNew) {
                    console.log('check 4.2.1');
                    if ($tblcontainer.find('table').length == 0) {
                        console.log('check 4.2.3');
                        $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                    }
                    else {
                        console.log('check 4.2.1');
                        let table = $tblcontainer.find('table').DataTable()
                        table.destroy()
                        pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                    }
                    console.log('check 4.2.1');
                }
                else {
                    console.log('check 4.3');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    console.log('check 4.4');
                    console.log('table', $tblcontainer.find('table'))
                    console.log('check 4.5');
                    pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
                }
                console.log(insertData);
                $tblcontainer.attr('perfect-tempTable-action', 0);
            }

        console.log('check 5');
        console.log("isValid", isValid);
            return isValid;

    }

    var JobCardtableOptionsTempOut = {
        iconButton: {
            buttons: [
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData');
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        let indexname = tableKey + 'index';
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);
                        console.log('Editclick', savedData);
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {

                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);


                        }
                        else {
                            $thistbl.remove();
                        }

                        $("#btnReset").click();
                        var lastindx = $(this).closest('tbody').find('tr').length + 1;
                        console.log(lastindx);
                        $("#tblJbCrd").attr("perfect-temptable-lastindex", lastindx); $("#tblJbCrd").attr("perfect-tempTable-action", "0"); console.log(lastindx);

                    }
                }

            ]
        },
        onlyShowColumn: ["ProductName", "Quantity"],
        hideColumn: ['FK_Product'],
        serialNo: true,
        renameHeader: { "ProductName": "Product", "Quantity": "Quantity" },
        rowAttribute: [],
        isCheckType: []
    };


    function JobCardproductclear(ele, tableKey) {


        $thisForm = $(ele).closest('[perfect-class="form"]'); tableKey = 'jobcard';

        $thisForm = $(ele).closest('[perfect-class="form"]'); tableKey = 'jobcard';
        $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').val("");
        $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Product"]').val("");
        $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val("");


    }

    //function Projectproductclear(ele, tableKey) {
    //    $thisForm = $(ele).closest('[perfect-class="form"]');
    //    $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');
    //    $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
    //    $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
    //    $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
    //    $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');
    //}

    //function SalOrderproductclear(ele, tableKey) {
    //    $thisForm = $(ele).closest('[perfect-class="form"]');
    //    $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');
    //    $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
    //    $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
    //    $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
    //    $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');
    //}

    //function jobcardclear(ele, tableKey) {
    //    $thisForm = $(ele).closest('[perfect-class="form"]');
    //    $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');
    //    $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
    //    $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
    //    $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
    //    $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');
    //}

    function fn_resetJobCard(ele) {
        fn_LoadJobCard();
    }


    var JobCardType = "";
    var StartDate = "";
    var EndDate = "";
    var TargetDate = "";
    var FK_Master = 0;
    var JobCardDetails = [];
    var JobCardTypeDetails = [];
    var Priority = "";
    var JobCardNo = 0;
    var PeriodType = 0;
    var Period = 0;
    var NoofCount = 0;
    var TypeEndDate = "";

    function SubmitJobCard(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        PeriodType = $thisForm.find('[name="PeriodType"]').val().trim();
        Period = $thisForm.find('[name="Period"]').val().trim();
        NoofCount = $thisForm.find('[name="NoofCount"]').val().trim();
        TypeEndDate = $thisForm.find('[name="TypeEndDate"]').val().trim();
        console.log(TypeEndDate);
        var _continue = true;
        if (PeriodType == "" || PeriodType == "0") {
            $thisForm.find('[name="PeriodType"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Please Select Period Type'); _continue = false;
        }
        else {
            if (parseInt(PeriodType) == 4 && parseInt(Period) > 31) {
                //$thisForm.find('[name="Period"]').closest('[perfect-class="formGroup"]').find('.temptableError').attr("style", "display:block");
                $thisForm.find('[name="Period"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Please Enter Period less than or equal to 31'); _continue = false;
            } else {
                $thisForm.find('[name="PeriodType"]').closest('[perfect-class="formGroup"]').find('.temptableError').text("");
            }
        }
        if (Period == "" || parseInt(Period) <= 0) {
            $thisForm.find('[name="Period"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Please Enter Valid Period'); _continue = false;
        } else {
            $thisForm.find('[name="Period"]').closest('[perfect-class="formGroup"]').find('.temptableError').text("");
        }

        if (NoofCount == "" || parseInt(NoofCount) <= 0) {
            $thisForm.find('[name="NoofCount"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Please Enter Valid No. of Count'); _continue = false;
        } else {
            $thisForm.find('[name="NoofCount"]').closest('[perfect-class="formGroup"]').find('.temptableError').text("");
        }
        if (TypeEndDate == null || TypeEndDate== "") {
            $thisForm.find('[name="TypeEndDate"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('End Date is Invalid'); _continue = false;

        } else {
            $thisForm.find('[name="TypeEndDate"]').closest('[perfect-class="formGroup"]').find('.temptableError').text("");
        }
        if (_continue) {
            $('#formGroupModalrecurringjob').modal('hide');
            btnsave(ele, 'new');
        }
    }




    function fn_UpdateJobCard(element, actionType) {
        debugger
        let $thisForm = $(element).closest('[perfect-class="form"]'); $thisForm.find('[name="EndDateError"]').text(""); $thisForm.find('[name="ProjectNameError"]').text(""); $thisForm.find('[name="SoNoError"]').text("");
        if ($thisForm.valid()) {

           var StartDate = $thisForm.find('[name="StartDate"]').val();
            var EndDate = $thisForm.find('[name="JobCardTargetDate"]').val();
            var StartDates = $thisForm.find('[name="StartDates"]').val();
            var JobCardType = $thisForm.find('[name="ddlTypeID"]').val();

            var Valid_ = true;
            if (JobCardType.trim() == "2") {
                
                if (EndDate == "" || EndDate == null) {
                    Valid_ = false;
                    $thisForm.find('[name="EndDateError"]').text("Please Select Target Date");
                }
                if (StartDate < StartDates) {
                    Valid_ = false;
                    $thisForm.find('[name="EndDateError2"]').text("Start Date should be Greater than or equal to Project Start date");
                }
                var ProjectName = $thisForm.find('[name="ProjectName"]').val();
                var fk_project = $thisForm.find('[name="FK_Project"]').val();

                if (ProjectName.trim() == '' || fk_project == "0" || fk_project=='') {
                    $thisForm.find('[name="ProjectNameError"]').text("Please Select Project");
                    Valid_ = false;
                }

            }

            else if (JobCardType.trim() == "3") {
                debugger
               if(EndDate == "" || EndDate == null) {
                   Valid_ = false;
                   $thisForm.find('[name="EndDateError"]').text("Please Select Target Date");
                }

                let Sodate = $thisForm.find('[name="SODate"]').val();
                var date = $thisForm.find('[name="JobCardTargetDate"]').val();
                if (date < Sodate) {
                    $thisForm.find('[name="EndDateError1"]').text("Target  Date should be greater than or equal to Order date");
                   
                    Valid_ = false;

                } 
                var SoNo = $thisForm.find('[name="SoNo"]').val();
                var orderno = $thisForm.find('[name="OrderNo"]').val();
                if (SoNo.trim() == "" || orderno == ''|| orderno=="0") {
                    $thisForm.find('[name="SoNoError"]').text("Please Select Order No.");
                    Valid_ = false;
                }

            }
            if (Valid_) {
                var len = $thisForm.find('[perfect-tempTable="JobCard"]').find('tbody tr').length;

                if (len > 0) {
                    
                    if (JobCardType == 1 && actionType == "new" && EndDate =="") {
                        debugger
                        let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "It is a recurring job card or not? ", confirm: "Yes", cancel: "No" };
                        var confirmBoxObj = ConfirmDialog(confirmationDialogBoxOption);
                        confirmBoxObj.then(function (selectedOption) {
                            if (selectedOption) {
                                $("#ddlPeriodType").val("0");
                                $('[data-id="ddlPeriodType"]').find(".filter-option-inner-inner").html("Please Select");
                                clearRecursive();
                                $('#formGroupModalrecurringjob').modal('show');
                            }
                            else {
                                btnsave(element, actionType);
                            }
                        });
                    }
                    else {
                        btnsave(element, actionType);
                    }
                }
                else {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please Add at least One Product' });
                }
            }
        }
    }
    function getfunction(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');

       
        var FK_Project = $thisForm.find('[name="FK_Project"]').val();
        
   
            let inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                ProjectID: FK_Project

            };

            $.ajax({
                        url: '@Url.Action("GetprojectcreationInfoByID", "ProjectCreation")',
                        type: "POST",
                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxOutput) {


                    console.log("Return", ajaxOutput.Data[0]);
                    if (ajaxOutput.Process.IsProcess) {
                        $thisForm.find('[name="JobCardTargetDate"]').val(moment(ajaxOutput.Data[0].EndDate).format('YYYY-MM-DD'));

                    }
                }
            });


    }
    function btnsave(element, actionType) {
        debugger;
        let $thisForm = $(element).closest('[perfect-class="form"]');
        var  StartDate = $thisForm.find('[name="StartDate"]').val();
        var EndDate = $thisForm.find('[name="JobCardTargetDate"]').val();
        var JobCardType = $thisForm.find('[name="ddlTypeID"]').val();
        var Priority  = $thisForm.find('[name="Priority"]').val();
        var JobCardNo = "",  PeriodType = "0", NoofCount = "0", TypeEndDate = "", FK_Master = 0;
        if (JobCardType == 1) {

            JobCardNo = $thisForm.find('[name="JobCardNo"]').val();
            PeriodType = $thisForm.find('[name="PeriodType"]').val() == "" ? "0" : $thisForm.find('[name="PeriodType"]').val();
            if (PeriodType != "" && PeriodType != "0") {


                Period = $thisForm.find('[name="Period"]').val();;
                NoofCount = $thisForm.find('[name="NoofCount"]').val();;
                TypeEndDate = $thisForm.find('[name="TypeEndDate"]').val();
            }
                FK_Master = 0;



        }
        else if (JobCardType == 2) {

            FK_Master = $thisForm.find('[name="FK_Project"]').val();


        }
        else {

            FK_Master = $thisForm.find('[name="OrderNo"]').val();


        }
        JobCardDetails = [];

        $thisForm.find('[perfect-tempTable="JobCard"]').find('tbody').find('tr').each(function () {
            JobCardDetails.push($(this).data('pData'));
        })

          if (actionType === "new") {
            ID_JobCard = 0;
            FK_JobCard = 0;
            _ActionUrl = "@Url.Action("AddNewJobCard", "JobCardCreation")";
        }
        else if (actionType === "update") {
            ID_JobCard = $thisForm.find('[name="ID_JobCard"]').val();
            FK_JobCard = $thisForm.find('[name="ID_JobCard"]').val();
            _ActionUrl = "@Url.Action("UpdateJobCard", "JobCardCreation")";
        }
        let inputData = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            'ID_JobCard': ID_JobCard,
            'FK_JobCard': FK_JobCard,
            'JobCardNo': JobCardNo,
            'TransMode': JobCardTransMode,
            'JobCardType': JobCardType,
            'Priority': Priority,
            'StartDate': StartDate,
            'TargetDate': EndDate,
            'FK_Master': FK_Master,
            'JobCardDetails': JobCardDetails,
            'PeriodType': PeriodType,
            'Period': Period,
            'NoofCount': NoofCount,
            'TypeEndDate': TypeEndDate,
            'LastID': LastID_JobCard
        };
        clearSessionValue(LastIDSessionKey);

        console.log(inputData);
        $.ajax({
            url: _ActionUrl,
            type: "POST",
            data: inputData,
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (ajaxOutput) {

                if (ajaxOutput.Process.IsProcess) {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                    });
                    $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                    $thisForm.find('[perfect-ctype="input"]').val('');
                    $thisForm.find('[perfect-ctype="date"]').val('');
                    let onSuccess = $thisForm.attr('perfect-onFormSuccess')
                    if (onSuccess) {
                        //window[onSuccess]();
                        fn_LoadJobCard();
                    }
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        $(element).prop('disabled', false);
                    });
                }
            }
        });
    }
    function checkdatewithLDdate(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        console.log('SODate', $thisForm.find('[name=SODate]').val());
        console.log('SODates', $thisForm.find('[name=JobCardTargetDate]').val());
        let Sodate = $thisForm.find('[name=SODate]').val();
        let date = $thisForm.find('[name=JobCardTargetDate]').val();
        if (date < Sodate) {
            $thisForm.find('[name="JobCardTargetDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Target  Date should be greater than or equal to Order date');
            return false;

        }
        else {

            $thisForm.find('[name="JobCardTargetDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
            return true;
        }



    }

    //for testing purpose

</script>