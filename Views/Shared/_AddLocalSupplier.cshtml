<style>
    .modal-body {
        overflow-y: auto;
        overflow-x: hidden;
    }
</style>

<div class="card ">
    <div class="card-header">
        <h4 class="card-title col-12">Local Supplier</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()

                <div class="card-body">
                    <div class="row">
                       

                        <div class="col-sm-6">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-lg-4 col-form-label">
                                    <span perfect-class="formGroupLabel">GSTIN No</span>
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-lg-8">
                                    <div class="input-group">
                                        <input type="text" class="form-control perfectValidate_gstinno" name="GSTINNo" id="GSTINNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="searchbtnGST(this)" />
                                        <input type="hidden" name="Supplier_ID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                      
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Name</span>
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-sm-8">
                                    <div class="input-group">
                                        <input type="text" class="form-control perfectValidate_string" id="Name" placeholder="" name="Name" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Contact Person</span>
                                </label>
                                <div class="col-sm-8">
                                    <input type="text" class="form-control perfectValidate_specialCharName_nm" placeholder="" id="ContactPerson" name="ContactPerson" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Contact No.</span>
                                </label>
                                <div class="col-sm-8">
                                    <input type="text" id="Mobile" class="form-control perfectValidate_mobile_nm" placeholder="" name="Mobile" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="col-sm-12">
                        <div class="form-group row" perfect-class="formGroup">
                            <div class="col-sm-12">
                                <div id="AddSupplier" style="text-align:right;display:none;">Add To Supplier
                                    @*<button id="AddSupplier" type="button" class="btn btn-primary" name="AddSupplier" perfect-css="button" onclick="fn_AddToSupplier(this)" style="float: right;display:none;"><i class="fa fa-refresh fa-spin loaderClass"></i>Add To Supplier</button>*@
                                    <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add to Supplier" onclick="fn_AddToSupplier(this)"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-12" style="padding-left: 0px; padding-right: 2px">
                        <div class="accordion__item">
                            <div class="accordion__header collapsed" id="MasterProjectDetails" data-target="#active-header_collapseTwo">
                                <span class="accordion__header--icon"></span>
                                <span class="accordion__header--text">Product Details</span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-5">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel" name="lblProName">Product</span>
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="col-sm-8">
                                    <div class="input-group">
                                        <input type="text" class="form-control" name="ProductName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" perfect-tempTable-LocalSupplier="Product"disabled />
                                        <input type="hidden" name="FK_Product" perfect-tempTable-LocalSupplier="FK_Product" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                        <div class="input-group-append">
                                            <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,18,'Product List',['FK_Product'],LocalSupplierTransMode)" Criterea1="0" Criterea2="0" BindName="ProductName" BindVal="FK_Product"></button>
                                        </div>
                                    </div>
                                    <div class="text-danger temptableError"></div>
                                </div>

                            </div>
                        </div>

                        <div class="col-sm-5">
                            <div class="form-group row" perfect-class="formGroup">
                                <label class="col-sm-4 col-form-label">
                                    <span perfect-class="formGroupLabel">Description</span>
                                </label>
                                <div class="col-sm-8">
                                    <textarea class="form-control " perfect-class="formGroupControl" id="Description" name="SPDetRemarks" perfect-tempTable-LocalSupplier="SPDetRemarks" rows="2" placeholder="" perfect-ctype="input" perfect-css="input"></textarea>

                                </div>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            @*<button class="btn btn-primary1" type="button" onclick="fn_createLocalSupplierItem(this,'LocalSupplier',['FK_Product'])">ADD</button>*@
                            <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Product" onclick="fn_createLocalSupplierItem(this,'LocalSupplier',['FK_Product'],LocalSupplierTransMode)"><i class="fa fa-plus" aria-hidden="true"></i></button>
                        </div>


                        <div class="col-sm-12">
                            <div class="table-responsive" perfect-tempTable="LocalSupplier" perfect-tempTable-lastindex="0" perfect-tempTable-action="0">
                            </div>
                        </div>

                    </div>


                </div>

                <div class="card-footer text-right" perfect-class="formFooter">
                    @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                    {
                        <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_UpdateLocalSupplier(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Update</button>
                    }
                    @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                    {
                        <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_SaveLocalSupplier(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                    }
                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                </div>
            </div>
        </form>
        <div class="md-2 modal fade" perfect-class="formGroupModalcustmrformGroupModalSupplier" id="formGroupModalSupplier">
            <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
                <div class="modal-content">
                    <div class="modal-header border-0">
                        <h5 class="modal-title">Add Supplier</h5>
                        <button type="button" class="close" data-dismiss="modal">
                            <span>&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                        <div class="row">

                            <div class="col-sm-12" id="Supplier-sav">

                            </div>


                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {
        initFunctions('form');
    });

    //var input = document.getElementById("GSTINNo");
    //input.addEventListener("keyup", function (event) {
    //    if (event.keyCode === 13) {
    //        event.preventDefault();
    //        document.getElementById("GSTINNo").click();
    //    }
    //});

    function searchbtnGST(ele) {
        //debugger;
      
        let $thisForm = $(ele).closest('[perfect-class="form"]');

           let GSTINNo = {
             __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
               GSTINNo: $thisForm.find('[name="GSTINNo"]').val()
         };
                $.ajax({
                 url: '@Url.Action("FillDetailsByGSTNo", "LocalSupplier")',
                type: "POST",
                    data: GSTINNo ,
                  dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                        if (ajaxOutput.Process.IsProcess) {

                            if (ajaxOutput.Data) {
                                        // alert("Already Supplier Exist !...");
                                        //$thisForm.find('[name="Supplier_ID"]').val(ajaxOutput.Data[0].SupplierID);
                                        //console.log("Supplier_ID:",ajaxOutput.Data[0].SupplierID);
                                        $thisForm.find('[name="Name"]').val(ajaxOutput.Data[0].Name);
                                        //$thisForm.find('[name="ContactPerson"]').val(ajaxOutput.Data[0].ContactPerson);
                                        //$thisForm.find('[name="Mobile"]').val(ajaxOutput.Data[0].Mobile);
                                        $thisForm.find('[name="GSTINNo"]').val(ajaxOutput.Data[0].GSTINNo);



                                        let $modal = createSearchModalDOM();

                                        let $message = `<span>The Supplier <b> ${ajaxOutput.Data[0].Name} </b> with GST No. <b> ${ajaxOutput.Data[0].GSTINNo} </b> is Already Exists.. Please Enter New GST No. !!! </span>`;
                                        $modal.modal.find('.modal-body')
                                            .addClass('text-black')
                                            .html($message);
                                        $modal.modal.find('.modal-title')
                                            .addClass('text-primary')
                                            .text('Message');
                                        $modal.modal.show();
                                        $(ele).removeAttr('disabled')
                                   
                            }
                        }
                },


            });


    }


    function fn_createLocalSupplierItem(ele, tkey, uniq=[]) {
       // debugger;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;
        let unique = (uniq) ? uniq : [];
        let isValid = true;
        let errorClass = '.temptableError';
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').val() == "") {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Product');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        //if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Description"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Description"]').val() == "") {
        //    isValid = false;
        //    $thisForm.find('[perfect-tempTable-' + tableKey + '="Description"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Description');
        //}
        //else {
        //    $thisForm.find('[perfect-tempTable-' + tableKey + '="Description"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        //}
        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;
        if (thisactionIndex > 0) {
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }
        console.log('check 3');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
            let $this = $(this);
            let headerName = $this.attr('perfect-tempTable-' + tableKey);
            let nameAttr = $this.attr('name');
            let $errorElement = $this.closest('[perfect-class="formGroup"]').find(errorClass);
            if ($this.is('select')) {
                if ($this.val().length > 0) {
                    $errorElement.text('');
                }
                else {
                    isValid = false;
                    if (headerName == 'FK_Product') {
                        headerName = "Product";
                    }
                    $errorElement.text('Please select ' + headerName);
                }
            }
            else if ($this.is('input')) {
                let inputType = $this.attr('type').toLocaleLowerCase();
                if (inputType == 'checkbox') {
                }
                else if (inputType == 'hidden') {
                }
                else {
                    if ($this.val().length > 0) {
                        $errorElement.text('');
                    }
                    else {

                        isValid = false;
                        if (headerName == 'FK_Product') {
                            headerName = "Product";
                        }
                        $errorElement.text('Please select ' + headerName);
                    }
                }
            }
        });
        if (unique.length > 0) {
            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }
                }
            })
            console.log('previous data', prevData);
            unique.forEach(function (key, i) {
                console.log('unid -> key:' + key + "| index :" + i);
                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                let headerEleName = $thisEle.attr('perfect-tempTable-' + tableKey);
                let atname = $thisEle.attr('name');
                let cvalue;
                if ($thisEle.length != 0) {
                    let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    if (headerEleName =='FK_Product') {
                        headerEleName = "Product";
                    }
                    let errmessage = headerEleName + " Already exits"
                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();
                    }
                    else if ($thisEle.is('input')) {
                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();
                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else {
                        cvalue = $thisEle.val();
                    }
                    if (prevData.find(a => a[atname] == cvalue)) {
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });
        }
        console.log('check 4');
        if (isValid) {
            console.log('check 4.1');
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                if ($this.is('select')) {
                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    insertData[nameAttr] = $this.val();
                    $this.val('').selectpicker('refresh');
                }
                else if ($this.is('input')) {
                    let inputType = $this.attr('type').toLocaleLowerCase();
                    if (inputType == 'checkbox') {
                        insertData[nameAttr] = $this.is(':checked');
                        tableOptionsTemp.isCheckType.push(nameAttr)
                        $this.prop('checked', false);
                    }
                    else if (inputType == 'hidden') {
                        tableOptionsTemp.hideColumn.push(nameAttr)
                        insertData[nameAttr] = $this.val();
                        $this.val('');
                    }
                    else if (inputType == 'date') {
                        insertData[nameAttr] = $this.val();
                        $this.val('');
                    }
                    else {
                        insertData[nameAttr] = $this.val();
                        $this.val('');
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();
                    $this.val('');
                }
            });
            console.log('check 4.2');
            if (isNew) {
                console.log('check 4.2.1');
                if ($tblcontainer.find('table').length == 0) {
                    console.log('check 4.2.3');
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                }
                else {
                    console.log('check 4.2.1');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                }
                console.log('check 4.2.1');
            }
            else {
                console.log('check 4.3');
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                console.log('check 4.4');
                console.log('table', $tblcontainer.find('table'))
                console.log('check 4.5');
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
            }
            console.log(insertData);
            $tblcontainer.attr('perfect-tempTable-action', 0);
        }
        console.log('check 5');
    }

    var tableOptionsTempOut = {
        iconButton: {
            buttons: [                
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData');
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        let indexname = tableKey + 'index';
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);
                        console.log('Editclick', savedData);
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {

                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                        }
                        else {
                            $thistbl.remove();
                        }
                    }
                }

            ]
        },
        onlyShowColumn: ["SupplierName", "ProductName","SPDetRemarks"],
        hideColumn: ['FK_Product'],
        serialNo: true,
        renameHeader: { "SupplierName": "Supplier", "ProductName": "Product", "SPDetRemarks": "Description" },
        rowAttribute: [],
        isCheckType: []
    };

    function fn_SaveLocalSupplier(ele) {
        debugger;
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            console.log('> Add Local Supplier form IS valid', $thisForm.valid())
            if ($thisForm.valid()) {
                $(ele).prop('disabled', true);
                let ProductDetails = [];
                $thisForm.find('[perfect-tempTable="LocalSupplier"]').find('tbody').find('tr').each(function () {
                    ProductDetails.push($(this).data('pData'));
                })
                console.log("ProductDetails: ", ProductDetails);

                ID_Supplier = 0;
                        _ActionUrl = "@Url.Action("SaveLocalSupplier", "LocalSupplier")";

            var inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                'Name': $thisForm.find('[name="Name"]').val().trim(),
                'ContactPerson':$thisForm.find('[name="ContactPerson"]').val().trim(),
                'Mobile':$thisForm.find('[name="Mobile"]').val().trim(),
                'GSTINNo': $thisForm.find('[name="GSTINNo"]').val().trim(),
                'TransMode': localStorage.getItem("FRM_TRANSMODE"),
                'ProductDetails': ProductDetails,

                };
                localStorage.removeItem("FRM_TRANSMODE");
                if (ProductDetails.length > 0) {
                    $.ajax({
                        url: _ActionUrl,
                        type: "POST",
                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (ajaxOutput) {
                            if (ajaxOutput.Process.IsProcess) {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                    $(ele).prop('disabled', false);

                                    loadLocalSupplierAddForm();
                                });
                       
                            $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                            $thisForm.find('[perfect-ctype="input"]').val('');
                            $thisForm.find('[perfect-ctype="date"]').val('');
                           
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    //toastr.warning(value, "Error");
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                    $(ele).prop('disabled', false);
                                });
                            }

                    },
                    complete: function () {
                        $(ele).prop('disabled', false);
                    }
                });
            }
            else {
               
                    NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'Please enter at least one Product' });
                    $(ele).prop('disabled', false);
            }
        }
    }           
       
    function fn_UpdateLocalSupplier(ele) {
        debugger;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        console.log("is valid", $thisForm.valid());
        let SavedData = $thisForm.data('pData');
        console.log('SavedData', SavedData);

        SupplierID = SavedData.FK_Supplier;

        if ($thisForm.valid()) {
                $(ele).prop('disabled', true);
                let ProductDetails = [];
                $thisForm.find('[perfect-tempTable="LocalSupplier"]').find('tbody').find('tr').each(function () {                   
                    ProductDetails.push($(this).data('pData'));
                })
            console.log("ProductDetails: ", ProductDetails);

                        _ActionUrl = "@Url.Action("UpdateLocalSupplier", "LocalSupplier")";

            var inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                'SupplierID': SupplierID,
                'Name': $thisForm.find('[name="Name"]').val().trim(),
                'ContactPerson':$thisForm.find('[name="ContactPerson"]').val().trim(),
                'Mobile':$thisForm.find('[name="Mobile"]').val().trim(),
                'GSTINNo': $thisForm.find('[name="GSTINNo"]').val().trim(),
                TransMode: localStorage.getItem("FRM_TRANSMODE"),
                'ProductDetails': ProductDetails,

            };

            localStorage.removeItem("FRM_TRANSMODE");
                if (ProductDetails.length > 0) {
                $.ajax({
                    url: _ActionUrl,
                    type: "POST",
                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                    success: function (ajaxOutput) {
                        if (ajaxOutput.Process.IsProcess) {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Updated Successfully' });
                                $(ele).prop('disabled', false);

                                loadLocalSupplierAddForm();
                            });

                            $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                            $thisForm.find('[perfect-ctype="input"]').val('');
                            $thisForm.find('[perfect-ctype="date"]').val('');
                            //let onSuccess = $thisForm.attr('perfect-onFormSuccess')
                            let onSuccess = $thisForm.attr('perfect-onFormSuccess')
                            if (onSuccess) {
                                loadLocalSupplierAddForm();
                            }
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                //toastr.warning(value, "Error");
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }

                    },
                    complete: function () {
                        $(ele).prop('disabled', false);
                    }
                });
            }
            else {
              
                NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'Please enter at least one Product' });
            }
        }
    }           

 
   
    $('#formGroupModalSupplier').on('hide.bs.modal', function () {
       loadLocalSupplierAddForm();
        $('.modal-backdrop').remove();
    });

    function fn_AddToSupplier(element) {
        debugger;

        $('#formGroupModalSupplier').modal('show');

           let $savingContainer = $('#Supplier-sav');
        let $thisFormSupplier = $(element).closest('[perfect-class="form"]');
        let SavedData = $thisFormSupplier.data('pData');
        console.log('SavedData', SavedData);
        let ID_Supplier = SavedData.FK_Supplier;  
        let IsSupplier = SavedData.IsSupplier;
                    $savingContainer.load('@Url.Action("LoadSupplierForm", "Supplier")', function () {
                   let $thisForm = $(this).find('[perfect-class="form"]');                    
                        $thisForm.attr('perfect-onFormSuccess', 'fn_supplierForm_loadState_success');
                        $thisForm.find('[name="IsSupplier"]').val(IsSupplier);    
                        $thisForm.find('[name="ID_Supplier"]').val(ID_Supplier);                     
                        $thisForm.find('[name="GSTINNo"]').val($thisFormSupplier.find('[name="GSTINNo"]').val());
                        $thisForm.find('[name="Name"]').val($thisFormSupplier.find('[name="Name"]').val());
                        $thisForm.find('[name="ContactPerson"]').val($thisFormSupplier.find('[name="ContactPerson"]').val());
                        $thisForm.find('[name="Mobile"]').val($thisFormSupplier.find('[name="Mobile"]').val());

        });
      
    }

   

    function ResetButton() {
        $('.dataTable tr').removeClass("SelectForDelete");
        loadLocalSupplierAddForm();
    }

 

</script>
