@*----------------------------------------------------------------------
    Created By	: Santhisree
    Created On	: 12/09/2022
    Purpose		: Material Usage
    -------------------------------------------------------------------------
    Modification
    On			By					OMID/Remarks
    -------------------------------------------------------------------------
    -------------------------------------------------------------------------*@
@model PerfectWebERP.Models.MaterialUsageModel.MaterialUsageListModel


<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">Material Usage</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="row">
                <div class="col-sm-12">
                    <div class="default-tab">
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="Todolist" data-toggle="tab" href="#MainScreen"><i class="las la-tasks  mr-2"></i>Material Usage  &nbsp;&nbsp;<span><label id="todobadge" class="badge badge-circle badge-info"></label></span> </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="OverdueList" data-toggle="tab" href="#Teaminfo" onclick="fn_AllocationDetails_Project(this)"><i class="las la-book-reader mr-2"></i>Project Material Allocation Details&nbsp;&nbsp;<label id="overduebadge" class="badge badge-circle badge-primary"></label></a>
                            </li>

                        </ul>
                        <div><label></label></div>
                        <div class="tab-content">
                            <div class="tab-pane fade active show" role="tabpanel" id="MainScreen">

                                <div class="row">

                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label name="lblProject" class="col-sm-4 col-form-label">Project&nbsp;<span class="text-danger">*</span></label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="text" class="form-control form-control " name="Project" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                    <input type="hidden" name="ProjectID" class="form-control form-control perfectValidate_string" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="hidden" name="FK_Branch" value="@ViewBag.FK_Branch" />
                                                    <input type="hidden" name="FK_Department" value="@ViewBag.FK_Department" />
                                                    <div class="input-group-append">
                                                        <input type="date" name="ProjectDate" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" hidden />
                                                        <button id="addcountry-jq-searchButton3" PERFECT-ONCLICK-CHECK="FALSE" class="btn btn-primary fa fa-search" type="button" onclick="GetCmnPopUpSearchValAssign(this, 41, 'Project Details',[],['ProjectDate'],MaterialUsageTransMode)" BindName="Project" BindVal="ProjectID" Function="3" perfect-css="button"></button>
                                                    </div>
                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Usage Date</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="date" id="CreateDate" class="form-control perfectValidate_string" name="CreateDate" perfect-class="formGroupControl" onchange="checkdate(this)" perfect-ctype="date" max="2050-01-01" perfect-css="date" />
                                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Stage</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <select class="form-control perfectValidate_string" name="StageID" perfect-selectButtonAction="testing" perfect-class="formGroupControl" onchange="GetTeam(this)" perfect-ctype="select" perfect-css="select">
                                                    <option value="">Please Select </option>


                                                    @if (!(Model.StageList is null))
                                                    {
                                                        foreach (var cat in Model.StageList)
                                                        {
                                                            <option value="@cat.ProjectStagesID">@cat.StageName</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Team</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <select class="form-control perfectValidate_string" name="TeamID" perfect-selectButtonAction="testing" perfect-class="formGroupControl" onchange="ClearEmployee(this)" perfect-ctype="select" perfect-css="select">
                                                    <option value="">Please Select </option>


                                                    @if (!(Model.TeamList is null))
                                                    {
                                                        foreach (var cat in Model.TeamList)
                                                        {
                                                            <option value="@cat.ID_ProjectTeam">@cat.TeamName</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span id="lblEmpl" perfect-class="formGroupLabel">Employee</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="text" class="form-control " name="Employee" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                    <input type="hidden" name="EmployeeID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="hidden" name="DepartmentID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />

                                                    <div class="input-group-append">
                                                        <button id="addemployee-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,51,'Employee List',['TeamID','Team'],['DepartmentID'],MaterialUsageTransMode)" criterea1="TeamID" bindname="Employee" bindval="EmployeeID"></button>
                                                    </div>
                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">

                                        <div id="accordion-Two" class="accordion accordion-active-header">


                                            <div class="accordion__header collapsed" id="MaterialDetails" data-target="#active-header_collapseTwo1" aria-expanded="true">
                                                <span class="accordion__header--icon"></span>
                                                <span class="accordion__header--text">Material Management</span>

                                            </div>
                                            <div id="active-header_collapseTwo1" class="collapse accordion__body" data-parent="#accordion-Two">
                                                <div class="accordion__body--text">
                                                    <div class="row">
                                                        <div class="col-sm-12 " perfect-class="TempTableProduct">
                                                            <br />
                                                            <div class="row">

                                                                <div class="col-sm-3">
                                                                    <div class="form-group row" perfect-class="formGroup">
                                                                        <label  class="col-sm-5 col-form-label">
                                                                        <span name="lblProduct">Product&nbsp;</span>
                                                                        <span class="text-danger">*</span>
                                                                        </label>
                                                                        <div class="col-sm-7">
                                                                            <div class="input-group">
                                                                                <input type="text" class="form-control " perfect-tempTable-MaterialDetailsTable="Product" name="Product" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                                                <input type="hidden" name="ProductID" perfect-tempTable-MaterialDetailsTable="ProductID" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                                <input type="hidden" name="StockId" perfect-tempTable-MaterialDetailsTable="StockId" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                                <input type="hidden" name="Stock" perfect-tempTable-MaterialDetailsTable="Stock" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                                <input type="hidden" name="ProdNumbering" perfect-tempTable-MaterialDetailsTable="ProdNumbering" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                                <input type="hidden" name="AvailableStocks" perfect-tempTable-MaterialDetailsTable="AvailableStocks" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                                <input type="hidden" name="FK_EmployeeStock" perfect-tempTable-MaterialDetailsTable="FK_EmployeeStock" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />

                                                                                <div class="input-group-append">
                                                                                    <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" onclick="getproductdetails(this)" BindName="Product" BindVal="ProductID" Criterea1="ProjectID" Criterea2="StageID" Criterea3="TeamID" Criterea4="EmployeeID" perfect-css="button"></button>
                                                                                </div>
                                                                            </div>
                                                                            <div class="text-danger temptableError"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                                @*<div class="col-sm-3">
            <div class="form-group row" perfect-class="formGroup">
                <label class="col-sm-5 col-form-label">Quantity&nbsp;<span class="text-danger">*</span></label>
                <div class="col-sm-6">
                    <input type="text" class="form-control text-right" perfect-tempTable-MaterialDetailsTable="Quantity" name="Quantity" id="Quantity" oninput="decimalpnt(this,'Quantity',4)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="calcsalpttl(this)" />
                    <div class="text-danger temptableError"></div>
                </div>
                <div id="FldId-error" class="Custominvalid animated fadeInUp producterror" style="display: none;">Please Enter Quantity</div>
            </div>
        </div>*@

                                                                <div class="col-sm-3">
                                                                    <div class="form-group row" perfect-class="formGroup">
                                                                        <label class="col-sm-5 col-form-label">Quantity&nbsp; <span class="text-danger">*</span></label>
                                                                        <div class="col-sm-6">
                                                                            <div class="input-group">
                                                                                <input type="text" class="form-control text-right" perfect-tempTable-MaterialDetailsTable="Quantity" name="Quantity" id="idquantity" oninput="decimalpnt(this,'Quantity',4)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="calcsalpttl(this)" />
                                                                                <div class="input-group-append">
                                                                                    <button id="btn_Slno" @*style="display:none;"*@title="Select Serial Numbers" class="btn btn-primary1 fa fa-list-ol float-right" perfect-css="button" type="button" onclick="fn_getSerialNumbers(this,0,0)" name="SlNumber"></button>
                                                                                </div>
                                                                                <div class="text-danger temptableError"></div>
                                                                            </div>
                                                                            <div id="FldId-error" class="Custominvalid animated fadeInUp producterror" style="display: none;">Please Enter Quantity</div>
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                                <div class="col-sm-3">
                                                                    <div class="form-group row" perfect-class="formGroup">
                                                                        <label class="col-sm-5 col-form-label">
                                                                            <span perfect-class="formGroupLabel">Mode</span>
                                                                            <span class="text-danger">*</span>
                                                                        </label>
                                                                        <div class="col-sm-7">
                                                                            <div class="input-group">
                                                                                <select class="form-control" name="Mode" id="Mode" perfect-tempTable-MaterialDetailsTable="Mode" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" onchange="ShowhideMapping(this)">
                                                                                    <option value="">Please select</option>

                                                                                    @if (!(Model.ModeTypeList is null))
                                                                                    {
                                                                                        foreach (var modelist in Model.ModeTypeList)
                                                                                        {
                                                                                            <option value="@modelist.ID_Mode">@modelist.ModeName</option>
                                                                                        }

                                                                                    }

                                                                                </select>
                                                                            </div>
                                                                            <div class="text-danger temptableError"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-3" id="DivMapping">
                                                                    <div class="form-group row" perfect-class="formGroup">
                                                                        <label class="col-sm-5 col-form-label">Map with Customer</label>
                                                                        <div class="col-sm-6">
                                                                            <input type="checkbox" class="form-check-input" id="MapCustomer" name="MapCustomer" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-temptable-MaterialDetailsTable="MapCustomer" perfect-css="checkbox">
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2" style="display:none">
                                                                    <div class="form-group row" perfect-class="formGroup">
                                                                        <label class="col-sm-8 col-form-label">Warranty/AMC&nbsp;</label>
                                                                        <div class="col-sm-4">
                                                                            <div class="input-group">
                                                                                <div class="text-right ml-auto">
                                                                                    <button id="addcountry-jq-searchButton3" class="btn btn-primary1 fa fa-outdent mr-1" type="button" perfect-css="button" title="Add Warranty Details" onclick="GetWarrantylists(this,0)"></button>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-10 " id="DivUsage">

                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="input-group">
                                                                        <div class="text-right ml-auto">
                                                                            @*<button class="btn btn-primary1" style="margin-top: 4px;" type="button" onclick="createatable(this,'MaterialDetailsTable',['ProductID'])">Add</button>*@
                                                                            <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Product" onclick="createatable(this,'MaterialDetailsTable',['ProductID'])"><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                                                                            <button class="btn btn-light1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="MaterialDetailsclear(this,'MaterialDetailsTable')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                                                            @*<button type="button" class="btn btn-primary mr-3" perfect-css="button" onclick="addToTempTable(this,'ProductType')" name="reset">Add</button>*@

                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-10">
                                                                    <div style="display:none">
                                                                        <input type="text" class="form-control text-right" perfect-tempTable-MaterialDetailsTable="AMCFK_Master" name="AMCFK_Master" id="AMCFK_Master" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                                        <input type="text" class="form-control text-right" perfect-tempTable-MaterialDetailsTable="WarrantyTotalAmt" name="WarrantyTotalAmt" id="WarrantyTotalAmt" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                                        <input type="text" class="form-control text-right" perfect-tempTable-MaterialDetailsTable="AMCMType" name="AMCMType" id="AMCMType" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                                        <input type="text" class="form-control text-right" perfect-tempTable-MaterialDetailsTable="AMCNoOfServices" name="AMCNoOfServices" id="AMCNoOfServices" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                                        <input type="date" class="form-control" perfect-tempTable-MaterialDetailsTable="AMCMDuedate" name="AMCMDuedate" id="AMCMDuedate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" />
                                                                        <input type="date" class="form-control" perfect-tempTable-MaterialDetailsTable="AMCMRenewduedate" name="AMCMRenewduedate" id="AMCMRenewduedate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" />
                                                                        <input type="text" class="form-control text-right" perfect-tempTable-MaterialDetailsTable="AmcTotalAmount" name="AmcTotalAmount" id="AmcTotalAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                                        <input type="text" class="form-control text-right" perfect-tempTable-MaterialDetailsTable="AMCTaxTotalAmt" name="AMCTaxTotalAmt" id="AMCTaxTotalAmt" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                                        <input type="text" class="form-control text-right" perfect-tempTable-MaterialDetailsTable="AMCNetTotalAmt" name="AMCNetTotalAmt" id="AMCNetTotalAmt" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                                        <input type="text" class="form-control text-right" perfect-tempTable-MaterialDetailsTable="AMCRemarks" name="AMCRemarks" id="AMCRemarks" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                                    </div>
                                                                </div>

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">

                                                <div class="table-responsive" perfect-tempTable="MaterialDetailsTable" id="Material" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                                @*<div class="table-responsive" perfect-ProductType="ProductType"></div>*@
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="card-footer text-right" perfect-class="formFooter">
                                    @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                                    {
                                        <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="updateMaterialUsage(this)"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                                    }
                                    @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                                    {
                                        <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="AddMaterialUsage(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                                    }
                                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
									<button type="button" class="btn btn-primary mr-3 d-none" id="btnclose" perfect-css="button" onclick="Close(this)" name="btnclose">Close</button>
                                </div>
                            </div>
                            <div id="Teaminfo" class="tab-pane">
                                <div class="row" style="margin-top:1.5rem;">
                                    <div class="col-sm-10" name="AllocationDetails">
                                    </div>
                                    @*<div class="col-sm-6" name="divDetails">
                                </div>*@
                                    @*<div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table  table-striped" id="ProductDett">
                                            <thead class="thead-primary">
                                                <tr>
                                                    <th>Sl No.</th>
                                                    <th>Department</th>
                                                    <th>Employee</th>
                                                    <th>Employee Type</th>

                                                </tr>
                                            </thead>
                                            <tbody id="TeamDet">
                                                <tr id="0">
                                                    <td colspan="9" style="text-align:center;">No Records...</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <input type="hidden" id="ID_LeadGenerateActionhdns" />
            </div>
            @*Serial Number Pop Up*@
            <div class="modal fade" id="modalProductSerialNumbers" data-backdrop="static" data-keyboard="false" tabindex="1000">
                <div class="modal-dialog modal-dialog-centered modal-md" role="dialog">
                    <div class="modal-content">
                        <div class="modal-header border-0">
                            <h5 class="modal-title">Serial Numbers</h5>
                        </div>
                        <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                            <div class="row" id="divProductSerialNumbers" style="overflow-y: scroll;height:300px;">
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" onclick="fn_ProductSerialNumberPopupHide(this)">
                                OK
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            @*Serial Number Pop Up END*@
            @*AMC Warranty Pop Up*@
            <div class="modal fade" perfect-class="formGroupModalwarranty" id="formGroupModalwarranty">
                <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header border-0">
                            <h5 class="modal-title">Warranty/AMC</h5>
                            <button type="button" class="close" data-dismiss="modal">
                                <span>&times;</span>
                            </button>
                        </div>
                        <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="default-tab">
                                        <ul class="nav nav-tabs" role="tablist">
                                            <li class="nav-item">
                                                <a class="nav-link active" data-toggle="tab" id="warrantyid" href="#warranty"><i class="las la-file-invoice mr-2"></i>Warranty Details</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" data-toggle="tab" href="#amcdetails"><i class="fa fa-wrench mr-2"></i>AMC Details</a>
                                            </li>
                                        </ul>

                                        <div class="tab-content">
                                            <div id="warranty" class="tab-pane active">

                                                <div class="row" style="margin-top:1.5rem;">

                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">Sub Product</label>
                                                            <div class="col-sm-7">

                                                                <div class="input-group">

                                                                    <input type="text" class="form-control" perfect-tempTable-Warranty="subProName" name="subProName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                                    <input type="hidden" perfect-tempTable-Warranty="stkid" name="stkid" readonly perfect-ctype="hidden" />
                                                                    <input type="hidden" perfect-tempTable-Warranty="prodtid" name="prodtid" readonly perfect-ctype="hidden" />

                                                                    <input type="hidden" name="subProductID" perfect-tempTable-Warranty="subProductID" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                    <div class="input-group-append">
                                                                        <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this, 23, 'Sub Product Details', ['ProductID','Product'], [],MaterialUsageTransMode)" BindName="subProName" BindVal="subProductID" Criterea1="ProductID"></button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Type</span>
                                                                <span class="text-danger">*</span>
                                                            </label>
                                                            <div class="col-sm-7">

                                                                <div class="input-group">
                                                                    <select class="form-control" name="WarrantyType" perfect-tempTable-Warranty="WarrantyType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="AMCWarranty(this,1)">
                                                                        <option value="">Please Select </option>


                                                                        @if (!(Model.Warrantytype is null))
                                                                        {
                                                                            foreach (var Module in Model.Warrantytype)
                                                                            {
                                                                                <option value="@Module.WarrantyTypeID">@Module.WarrantyName</option>
                                                                            }
                                                                        }
                                                                    </select>

                                                                </div>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Replace WTY Dt</span>
                                                                <span class="text-danger">*</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <div class="input-group">
                                                                    <input type="date" class="form-control" perfect-tempTable-Warranty="Replcwardt" name="Replcwardt" perfect-class="formGroupControl" max="2050-01-01" perfect-ctype="date" perfect-css="date" onchange="validwartdetail(this, 'Warranty', '.temptableError', true)" />


                                                                </div>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Service WTY Dt</span>
                                                                <span class="text-danger">*</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <div class="input-group">
                                                                    <input type="date" class="form-control" name="Serwardt" perfect-tempTable-Warranty="Serwardt" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" onchange="validwartdetail(this, 'Warranty', '.temptableError', true)" />

                                                                </div>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Amount</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control text-right" id="WarrantyAmount" name="WarrantyAmount" perfect-tempTable-Warranty="WarrantyAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" maxlength="12" readonly />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Tax</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control text-right" id="WarrantyTaxAmount" name="WarrantyTaxAmount" perfect-tempTable-Warranty="WarrantyTaxAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" maxlength="12" readonly />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Net Amount</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control text-right" id="WarrantyNetAmount" name="WarrantyNetAmount" perfect-tempTable-Warranty="WarrantyTaxAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" maxlength="12" readonly />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <div class="col-sm-8">
                                                                <div class="input-group">

                                                                </div>
                                                            </div>
                                                            <div class="col-sm-4">
                                                                <div class="input-group">

                                                                    <div class="input-group-append">
                                                                        <div>
                                                                            <button type="button" class="btn btn-primary1" onclick="createatable(this,'Warranty',['WarrantyType'],wartableOptionsTempOut)"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                                            <button class="btn btn-light1" type="button" onclick="productclear(this, 'Warranty')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-12">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <div class="table-responsive" perfect-tempTable="Warranty" id="Warrantydetailhd" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div id="amcdetails" class="tab-pane">

                                                <div class="row" style="margin-top:1.5rem;">

                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">AMC Type</span>
                                                                <span class="text-danger">*</span>
                                                            </label>
                                                            <div class="col-sm-7">

                                                                <div class="input-group">
                                                                    <select class="form-control" name="AMCType" perfect-tempTable-AMC="AMCType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="AMCWarrantyAMC(this,2)">
                                                                        <option value="">Please Select </option>


                                                                        @if (!(Model.AMCtype is null))
                                                                        {
                                                                            foreach (var Amc in Model.AMCtype)
                                                                            {
                                                                                <option value="@Amc.AMCTypeID">@Amc.AMCName</option>
                                                                            }
                                                                        }
                                                                    </select>

                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">No.Of Service</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control text-right" id="NoOfServices" name="NoOfServices" perfect-tempTable-AMC="NoOfServices" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" maxlength="12" readonly />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Due Date</span>
                                                                <span class="text-danger">*</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <div class="input-group">
                                                                    <input type="date" class="form-control" perfect-tempTable-AMC="AMCDuedate" name="AMCDuedate" perfect-class="formGroupControl" max="2050-01-01" perfect-ctype="date" perfect-css="date" />

                                                                </div>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Renew Due Date</span>
                                                                <span class="text-danger">*</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <div class="input-group">
                                                                    <input type="date" class="form-control" name="AMCRenewduedate" perfect-tempTable-AMC="AMCRenewduedate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" />

                                                                </div>
                                                                <div class="text-danger temptableError"></div>

                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Amount</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control text-right" id="AmcAmount" name="AmcAmount" perfect-tempTable-AMC="AmcAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" maxlength="12" readonly />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Tax</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control text-right" id="AMCTaxAmount" name="AMCTaxAmount" perfect-tempTable-AMC="AMCTaxAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" maxlength="12" readonly />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Net Amount</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control text-right" id="AMCNetAmount" name="AMCNetAmount" perfect-tempTable-AMC="AMCNetAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" maxlength="12" readonly />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Remarks</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <div class="input-group">
                                                                    <textarea rows="2" class="form-control" id="AmRemarks" name="AmRemarks" perfect-tempTable-AMC="AmRemarks" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="this.value = this.value.replace(/[^a-zA-Z0-9&,.\-\s\+]/g,'');" maxlength="150"></textarea>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary light" onclick="warrantydet(this)">Apply</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @*AMC Warranty Pop Up END*@
        </form>

    </div>


</div>


<script>
    (function () {
        //jQuery('form').validate();//<-----  Validate/initialize our form on page load

    })();

    $(document).ready(function () {

        initFunctions('form');
        $('#MeasurementDetails').removeClass('collapsed');
        $('#active-header_collapseTwo').addClass('collapse');
        $('#active-header_collapseTwo').addClass('show');
        $('#MasterProjectDetails').attr('aria-expanded', "true");
        $('#active-header_collapseTwo1').addClass('collapse');
        $('#active-header_collapseTwo1').addClass('show');
        $('#active-header_collapseTwo2').addClass('collapse');
        $('#active-header_collapseTwo2').addClass('show');
		const urlParams = new URLSearchParams(window.location.search);
		if(urlParams.get('ProjectID')>0)
			{
			 
			debugger;
			$('#addcountry-jq-searchButton3').attr('PERFECT-ONCLICK-CHECK',"TRUE");
			$('#addcountry-jq-searchButton3').trigger('click');
			
        }
        ShowhideMapping(this);
    });
    function cleartable(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable="MaterialDetailsTable"]').empty();


        $thisForm.find('[name=AllocationDetails]').empty();
        MaterialDetailsclear(ele, 'MaterialDetailsTable');

    }
	function Close(ele)
	{

	 //  window.open("@Url.Action("Index", "ProjectList") ,'_self');
	var url = "@Url.Action("Index", "ProjectList")" 
	window.open(url, '_self');
	}
    function checkdate(ele) {

        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        console.log('Ldate', $thisForm.find('[name=LeadDates]').val());
        let createdate = $thisForm.find('[name=CreateDate]').val();
        let leaddate = $thisForm.find('[name=ProjectDate]').val();

        if (createdate < leaddate) {
            $thisForm.find('[name="CreateDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Usage Date sholud be greater than or equal to Project Date');
            return false;

        }
        else {

            $thisForm.find('[name="CreateDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
            return true;
        }



    }
    function ClearEmployee(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        $thisForm.find('[name=EmployeeID]').val(0);
        $thisForm.find('[name=Employee]').val('');
    }
    function ClearPro(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        $thisForm.find('[name=ProductID]').val(0);
        $thisForm.find('[name=Product]').val('');
    }
    function decimalpnt(ele, name, range) {

        let input = $('#' + name);
        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
        input.on('keydown', function () {
            if (ele.value.includes('.')) {

            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.length == 8) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }
    var tableOptionsTempOut = {
        iconButton: {
            buttons: [

                {
                   icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';
                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');

                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else if (inputType == 'date') {
                                    console.log('datess', savedData)
                                    console.log('datess', savedData[pf_name])
                                    // $thisNode.val(moment(savedData[pf_name]).format('YYYY-DD-MM'));
                                    $thisNode.val(savedData[pf_name]);
                                }
                                else {

                                    $thisNode.val(savedData[pf_name]);
                                }

                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }


                        });

                        fillSerialNumberTemp(this);
                        fillWarrantyDetails(this, savedData.StockId);
                        $thisForm.data({ amcdatadata: '' });
                        fillamcdetails(this);
                        ShowhideMapping(this, savedData.MapCustomer);
                    }
                },
                {
                 icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            //$thistbl.dataTable({ paging: true, searchbtn: false });
                        }
                        else {
                            $thistbl.remove();
                        }
                        DeleteSerialNumbersRow(this, savedData.StockId);
                    }
                },
            ]
        },



        onlyShowColumn: ["Department_d", "Employee", "EmployeeType_d", "Amount", "Product","Mode_d","Quantity","Mode_d","DurationType_d","Duration","WorkAmount"],
        hideColumn: ["EmployeeTypeID", "MeasurementTypeID", "MeasurementUnitID", 'AMCMType', 'AMCMDuedate', 'AMCMRenewduedate', 'AMCTaxTotalAmt', 'AmcTotalAmount', 'AMCNoOfServices', 'AMCFK_Master', 'AMCRemarks'],
        serialNo: true,
        renameHeader: {
            "Quantity": "Quantity", "EmployeeType_d": "Employeee Type", "WorkType" : "Work Type"},

        rowAttribute: [],
        isCheckType: [],
        isDateType: ["NextActionDate"],
    };

    var Subimg = "";
    function Getsubimg(dataimg) {
        Subimg = dataimg;
    }
    var $imgContainer = $('#Image-form');
      function ImageLoad(ele) {

        $imgContainer.load('@Url.Action("LoadImageForm", "MaterialUsage")', function () {
            getcase('Company');
        debugger
            if (Subimg != "") {
                $.each(Subimg, function (key, value) {

                    var Mode = value.ImgMode;
                    console.log('Mode', Mode);
                    var imgal = value.ImgValue;
                    var ModeName = value.ModeName;
                    Getimgcntrl1(ele, "data:image/;base64," + imgal, Subimg, ModeName, Mode, value.ImgName)
                });
            }


        });
    }
    function calcsalpttl(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let Spric = $thisForm.find('[name="SalePrice"]').val() == "" ? "0" : $thisForm.find('[name="SalePrice"]').val();
        let qtys = $thisForm.find('[name="Quantity"]').val() == "" ? "0" : $thisForm.find('[name="Quantity"]').val();
        $thisForm.find('[name=Amount]').val(parseFloat(Spric) * parseFloat(qtys));
    }

    function getEmployee(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

               //console.log("Input data",inputData)

                $.ajax({
                 url: '@Url.Action("GetEmployeeList", "Branch")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                    type: "GET",


                dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var employeeModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['EmployeeID'] });
                            employeeModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=EmployeeID]').val(ret.EmployeeID);
                                    $thisForm.find('[name=Employee]').val(ret.Employee);

                                   //-----
                                    $.ajax({
                                        url: "@Url.Action("GetEmployeeBaseInfo", "ServiceMapping")",
                                        type: "POST",
                                        data: { employeeID: ret.EmployeeID, __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),},
                                        dataType: "json",
                                        contentType: "application/x-www-form-urlencoded; charset=utf-8",
                                        success: function (ajaxOutEmp) {
                                            //code to make table
                                            //fill table
                                            //show
                                            if (ajaxOutEmp.Process.IsProcess) {

                                                let $tbl = $thisForm.find('.jq_serviceMap_empdetails');

                                                $tbl.find('.jq_serviceMap_empdetails_name').text(ajaxOutEmp.Data[0].EmployeeName);
                                                $tbl.find('.jq_serviceMap_empdetails_num').text(ajaxOutEmp.Data[0].Number);
                                                $tbl.find('.jq_serviceMap_empdetails_dsgn').text(ajaxOutEmp.Data[0].EmployeeDesignation);
                                                $tbl.find('.jq_serviceMap_empdetails_dept').text(ajaxOutEmp.Data[0].EmployeeDepartment);
                                                $tbl.removeClass('d-none');
                                            }

                                        }
                                    });

                                    //------

                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }





                },


            });


    }
     function CalEndDate(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let startDate = $thisForm.find('[name=StartDate]').val().trim();
        let duration = $thisForm.find('[name=PWSDuration]').val();
        debugger
        var days = 0;
        if ($thisForm.find('[name=PWSDurationType]').val() == '4') { /// Month
            var nwEndDate = new Date(startDate).setMonth(new Date(startDate).getMonth() + parseInt(duration));
                $thisForm.find('[name=EndDate]').val(moment(nwEndDate).format('YYYY-MM-DD'));
        }
        else if ($thisForm.find('[name=PWSDurationType]').val() == '3') { /// Week
            days = parseInt(duration) * 7;
            var nwEndDate = new Date(startDate).setDate(new Date(startDate).getDate() + days);
            $thisForm.find('[name=EndDate]').val(moment(nwEndDate).format('YYYY-MM-DD'));
        }
        else if ($thisForm.find('[name=PWSDurationType]').val() == '2') { /// Days
            days = parseInt(duration);
            var nwEndDate = new Date(startDate).setDate(new Date(startDate).getDate() + days);
            $thisForm.find('[name=EndDate]').val(moment(nwEndDate).format('YYYY-MM-DD'));
        }
        else if ($thisForm.find('[name=PWSDurationType]').val() == '1') { /// Hours
            $thisForm.find('[name=EndDate]').val(moment(startDate).format('YYYY-MM-DD'));
        }
    }
    function createatable(ele, tkey, uniq = []) {
        debugger;
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let StockId = $('[name="StockId"]').val();
        let ProductId = $('[name="prodtid"]').val();
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        let isValid = true;
        let unique = (uniq) ? uniq : [];
        let isValidQty = true;
        let errorClass = '.temptableError';
        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;
        if (tableKey == "Warranty") {
            tableOptionsTemp = wartableOptionsTempOut;
            isValid = validwartdetail(ele, tableKey, errorClass, isValid);
        }


        //make index
        console.log('check 1');

        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;
        if (thisactionIndex > 0) {
            //means update
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            //insert
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }//

        let prevData = [];
        $tblcontainer.find('table > tbody').find('tr').each(function () {
            if (isNew) {
                prevData.push($(this).data('pData'));
            }
            else {
                if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                    prevData.push($(this).data('pData'));
                }

            }

        })
       
        if (tableKey == "MaterialDetailsTable") {
            debugger
            let SerialChecking = [];
            let ProdNumbering = $('[name="ProdNumbering"]').val();
            let AvailableStocks = $('[name="AvailableStocks"]').val();
            let Quantity = $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val();
            SerialChecking = (productSerialNumTemp.filter(obj => obj.FK_MasterID.toString() == StockId.toString() && obj.FK_Stock.toString() == StockId.toString().toString())).length;
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Product');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val() == null) {

                isValid = false;

                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Quantity');
            }
            else if ((parseFloat(Quantity) > parseFloat(AvailableStocks)) && parseFloat(Quantity) > 0) {
                isValid = false;
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Quantity Should Be Less than or equal to Available Stock');
            }
            else if (parseFloat(ProdNumbering) > 0 && SerialChecking == 0 && parseFloat(Quantity) > 0) {
                isValid = false;
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Serial Number For Product Based on Qunatity');
            }
            else if ((parseFloat(SerialChecking) > parseFloat(Quantity) || parseFloat(SerialChecking) < parseFloat(Quantity)) && parseFloat(ProdNumbering) > 0 && parseFloat(Quantity) > 0) {
                isValid = false;
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Limit Serial Number For Product Based on given Quantity');
            }
            else if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val() <= 0) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Quantity Should be Greater than Zero ');
            }

            else {

                let qty = 0;

                if (prevData.length != 0) {

                    var arrRslt =prevData.filter(a => a["ProductID"] == parseInt($thisForm.find('[name="ProductID"]').val()));
                    arrRslt.forEach(function (key, i) {
                        qty = parseInt(qty) + parseInt(key.Quantity);
                    });

                }
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
                if (parseInt($thisForm.find('[name="Quantity"]').val()) + qty > parseInt($thisForm.find('[name="Stock"]').val())) {
                    isValid = false;
                    console.log('false');
                    $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Quantity Cannot be Greater than Current Stock');
                }
                else {
                    $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
                }
            }

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Mode"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Mode"]').val() == null) {
                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Mode"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select Mode');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Mode"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

        }

        let upperlimit = $thisForm.find('[name="RegDate"]').val();
        let lowerlimit = $thisForm.find('[name="NextActionDate"]').val();
        var enqDate = new Date(upperlimit);
        var nxtDate = new Date(lowerlimit);
        var today = new Date();

        //if (enqDate.getTime() > nxtDate.getTime()) {
        //    isValid = false;
        //    console.log('inside limit check if')
        //    $thisForm.find('[name="NextActionDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Follow up date should be greaterthan or equal to Enquiry date')
        //}



        debugger
        if (unique.length > 0) {
            //getting previous data

            console.log('previous data', prevData);

            unique.forEach(function (key, i) {
                console.log('unid -> key:' + key + "| index :" + i);
                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                let $thisEleMode = $thisForm.find('[perfect-tempTable-' + tableKey + '= Mode]');
                let headerEleName = tableKey == "MaterialDetailsTable" ? $thisForm.find('[name="lblProduct"]').text() : $thisForm.find('[name="lblEmployee"]').text();
                let atname = $thisEle.attr('name');
                let mdName = $thisEleMode.attr('name');
                let cvalue; let cValueMode;

                debugger;
                //console.log('len')
                if ($thisEle.length != 0) {
                    console.log('len', $thisEle)
                    let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    let errmessage = headerEleName + " Already exits"

                    //getting current value in cval
                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();
                        //alert(cvalue);
                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else { cvalue = $thisEle.val(); }
                    /////Mode///
                    if ($thisEleMode.is('select')) {
                        cValueMode = $thisEleMode.val();
                        //alert(cvalue);
                    }
                    else if ($thisEleMode.is('input')) {

                        let inputEleType = $thisEleMode.attr('type').toLocaleLowerCase();

                        if (inputEleType == 'checkbox') { cValueMode = $thisEleMode.is(':checked'); }
                        else if (inputEleType == 'hidden') { cValueMode = $thisEleMode.val(); }
                        else { cValueMode = $thisEleMode.val(); }
                    }
                    else { cValueMode = $thisEleMode.val(); }

                    // console.log('cvalue ->' + cvalue);

                    //searching in previous data
                    if (prevData.find(a => a[atname] == cvalue && a[mdName] == cValueMode)) {
                        // console.log('Search =>' + cvalue + '| attr :' + atname)
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });

        }

        console.log('isValid', isValid);

        if (isValid) {

            if (tableKey == 'MaterialDetailsTable') {
                Warrantyadd(this);
                $thisForm.data({ amcdatadata: '' });
            }

            console.log('check 4.1');
            // this section make table column data
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                debugger
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('nameAttr', nameAttr);
                console.log('headerName', headerName);

                //if ($this.is('select')) {

                //    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                //    tableOptionsTemp.hideColumn.push(nameAttr)
                //    //displat text of select
                //    if ($this.val() != null) {
                //        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                //        insertData[nameAttr + '_d'] = selectText;
                //    }
                //    else {
                //        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                //        insertData[nameAttr + '_d'] = selectText;
                //    }
                //    //tableOptionsTemp.onlyShowColumn.push(nameAttr + '_d')
                //    insertData[nameAttr] = $this.val();
                //    //insertData[nameAttr] = $this.val();
                //    if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Action"]').val() != 0) { }



                //    if ($thisForm.find('[name="FK_NetAction"]').val() == $this.val()) { }
                //    else if ($thisForm.find('[name="FK_ActionType"]').val() == $this.val()) { }
                //    else if ($thisForm.find('[name="BranchTypeID"]').val() == $this.val()) { }
                //    else if ($thisForm.find('[name="BranchID"]').val() == $this.val()) { }
                //    else if ($thisForm.find('[name="FK_Departement"]').val() == $this.val()) { }
                //    else { $this.val('').selectpicker('refresh'); }


                //}
                //else if ($this.is('input')) {

                //    let inputType = $this.attr('type').toLocaleLowerCase();

                //    if (inputType == 'checkbox') {

                //        insertData[nameAttr] = $this.is(':checked');

                //        tableOptionsTemp.isCheckType.push(nameAttr)
                //        //clear field
                //        $this.prop('checked', false);

                //    }
                //    else if (inputType == 'hidden') {

                //        tableOptionsTemp.hideColumn.push(nameAttr)
                //        insertData[nameAttr] = $this.val();

                //        if ($thisForm.find('[name="FK_Employee"]').val() == $this.val()) { }

                //        else { $this.val(''); }

                //        //clear field

                //    }
                //    else if (inputType == 'date') {


                //        if ($this.val() == '') {

                //            insertData[nameAttr] = null;
                //        }
                //        else {

                //            insertData[nameAttr] = $this.val();
                //        }

                //        //clear field
                //        // $this.val('');
                //    }

                //    else {
                //        insertData[nameAttr] = $this.val();
                //        //$this.val() == "" ? "''" : $this.val();
                //        //clear field

                //        if ($thisForm.find('[name="AssignEmp"]').val() == $this.val()) {

                //        }
                //        else { $this.val(''); }
                //    }
                //}
                //else {
                //    insertData[nameAttr] = $this.val();
                //    if ($thisForm.find('[name="Emp"]').val() == $this.val()) { }
                //    else { $this.val(''); }
                //}

                if ($this.is('select')) {

                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    //displat text of select

                    //displat text of select
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    //let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                    //insertData[nameAttr + '_d'] = selectText;
                    insertData[nameAttr] = $this.val();


                    //clear field
                    $this.val('').selectpicker('refresh');
                }
                else if ($this.is('input')) {

                    let inputType = $this.attr('type').toLocaleLowerCase();

                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp.isCheckType.push(nameAttr)
                        //clear field
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {

                        tableOptionsTemp.hideColumn.push(nameAttr)
                        insertData[nameAttr] = $this.val();

                        //clear field
                        $this.val('');
                    }
                    else if (inputType == 'date') {


                        insertData[nameAttr] = $this.val();

                        //clear field
                        $this.val('');
                    }

                    else {
                        insertData[nameAttr] = $this.val();

                        //clear field
                        $this.val('');
                    }
                }

                else {
                    insertData[nameAttr] = $this.val();

                    //clear field
                    $this.val('');

                }



            });
            console.log('check 4.2', insertData);
            console.log('check 4.2 tableoption', tableOptionsTemp);
            if (isNew) {
                console.log('check 4.2.1');
                //this section nake table.table row
                if ($tblcontainer.find('table').length == 0) {
                    console.log('check 4.2.3');
                    console.log(insertData);
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                    //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false });
                }
                else {
                    console.log('check 4.2.1');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);


                    //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false});
                    //   $tblcontainer.DataTable().draw();
                    //  table.ajax.reload();
                }
                console.log('check 4.2.1');
            }
            else {
                console.log('check 4.3');
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                console.log('check 4.4');
                console.log('table', $tblcontainer.find('table'))
                console.log('check 4.5');
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);


                // $tblcontainer.find('table').dataTable({ paging: false,ordering:false });
            }

            console.log(insertData);
            //alert(1);
            // resetting the edit value
            $tblcontainer.attr('perfect-tempTable-action', 0);

            $('[name=stkid]').val(StockId);
            $('[name=prodtid]').val(ProductId);
            /////////////////////////////serial number///////////////////////////////////////
            if (productSerialNumTemp != null) {
                console.log('productSerialNum ADDED OLD>', productSerialNum);

                productSerialNum = productSerialNum.filter(obj => obj.FK_MasterID.toString() !== StockId.toString());
                productSerialNumTemp = productSerialNumTemp.filter(obj => obj.FK_MasterID.toString() == StockId.toString());


                productSerialNum = productSerialNum.concat(productSerialNumTemp);

                console.log('productSerialNum ADDED Now>', productSerialNum);

                productSerialNumTemp = [];
            }
            ////////////////////////////serial number////////////////////////////////////////
            ShowhideMapping(this);
        }
        console.log('check 5');


       // $thisForm.find('[name=Mode]').val(1).selectpicker('refresh');
    }


    function MaterialDetailsclear(ele, tableKey) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');
        $('#MapCustomer').prop('checked', false);
        $("#DivMapping").hide();
        $("#DivUsage").hide();
        productSerialNumTemp = [];
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);
        TempWarrantyDetails = [];
        $thisForm.data({ amcdatadata: '' });
    }

         function ResetButton(ele) {


        //let $thisForm = $(ele).closest('[perfect-class="form"]');
        //     let pData = $thisForm.data('pData');

        //     if (pData) {
        //         $thisForm.find('[name=CreateDate]').val(moment(pData.Date).format('YYYY-MM-DD'));
        //         $thisForm.find('[name=ProjectID]').val(pData.FK_Project);
        //         $thisForm.find('[name=TeamID]').val(pData.FK_Team);
        //         $thisForm.find('[name=StageID]').val(pData.FK_Stage);
        //         $thisForm.find('[name=EmployeeID]').val(pData.FK_Stage);

        //} else {

        //    $thisForm.find('[perfect-ctype="input"]').val('');
        //    $thisForm.find('[perfect-ctype="number"]').val('');
        //    $thisForm.find('[perfect-ctype="select"]').val('');
        //    $thisForm.find('[perfect-ctype="select"]').selectpicker('refresh');
        //  $thisForm.find('[name=ProjectID]').val('');
        //    $thisForm.find('[perfect-tempTable="MaterialDetailsTable"]').empty();


        //    $thisForm.find('[name=AllocationDetails]').empty();


        //}

        //$thisForm.validate().resetForm();
             MaterialUsageInitialLoad();
			var newParams = new URLSearchParams(window.location.search)
									newParams.delete('ProjectID');
		 history.replaceState({}, document.title, "?" + newParams.toString());
    }

    function getproductdetails(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');

        FK_Project= $thisForm.find('[name=ProjectID]').val(),
        FK_Team= $thisForm.find('[name=TeamID]').val(),
            FK_Stage = $thisForm.find('[name=StageID]').val()

        if (FK_Project == 0) {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please Select Project' });
        }
        else if (FK_Stage == 0) {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please Select Stage' });
        }
        else if (FK_Team == 0) {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please Select Team' });
                }

        else {
            GetCmnPopUpSearchValAssign(ele, 57, 'Product Details', [], ['MRPs', 'SalePrice', 'StockId', 'Stock', 'AvailableStock', 'ID_MaterialAllocation', 'ProdNumbering', 'AvailableStocks','FK_EmployeeStock'], MaterialUsageTransMode)

            productSerialNumTemp = [];
        }

    }


    // Function to add new MaterialUsage


    function AddMaterialUsage(ele) {
        debugger

        let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability

        var today = new Date().toISOString().split('T')[0];
        document.getElementsByName("CreateDate")[0].setAttribute('max', today);
        //$(ele).find('i').removeClass();

        console.log('> Add MaterialUsage form IS valid', $thisForm.valid())
        if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
            if (checkdate(ele)) {


                let $modal2 = $thisForm.find('#zero_configOthercharge');

                let MaterialDetails = [];
                $thisForm.find('[perfect-tempTable="MaterialDetailsTable"]').find('tbody').find('tr').each(function () {
                    MaterialDetails.push($(this).data('pData'));
                })


                let Amount = 0;
                let WorkAmount = 0;
                $('#Material').find('tbody tr').each(function (index, ele) {
                    Amount = Amount + parseFloat($(ele).find('.Amount').text());

                });
                $('#Work').find('tbody tr').each(function (index, ele) {
                    WorkAmount = WorkAmount + parseFloat($(ele).find('.WorkAmount').text());

                });

                if (MaterialDetails.length > 0) {
                    $(ele).prop('disabled', true); // avoiding form submit the double click
                    var inputData = {//<---- Input Json : this is the variable we pass to controller
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        Date: $thisForm.find('[name=CreateDate]').val().trim(),
                        FK_Project: $thisForm.find('[name=ProjectID]').val(),
                        FK_Team: $thisForm.find('[name=TeamID]').val(),
                        FK_Stage: $thisForm.find('[name=StageID]').val(),
                        FK_Employee: $thisForm.find('[name=EmployeeID]').val(),
                        'MaterialDetails': MaterialDetails,
                        LastID: LastID_MaterialUsage,
                        TransMode: MaterialUsageTransMode,
                        'ProductSerialNumbers': productSerialNum,
                        'WarrantyDetails': warrantydetails,
                    };
                    clearSessionValue(LastIDSessionKey);

                    console.log('> Add MaterialUsage ajax input', inputData);

                    let onSuccess = false;
                    $.ajax({
                        url: "@Url.Action("AddNewMaterialUsageDetails", "MaterialUsage")",
                        type: "POST",

                        data: inputData,//<---- Input json : data passed to controller
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                        success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                            if (ajaxOutput.Process.IsProcess) {

                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    //toastr.success(value, "Success");
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                });
                                $thisForm.find('[perfect-ctype="input"]').val('');
                                $thisForm.find('[perfect-ctype="number"]').val('');
								var newParams = new URLSearchParams(window.location.search)
									newParams.delete('ProjectID');
								history.replaceState({}, document.title, "?" + newParams.toString());


                                onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                //if (onSuccess) {
                                window['MaterialUsageInitialLoad']();
                                //}


                                //---------- Do stuff if success

                                console.log('> Add new MaterialUsage success data', ajaxOutput);
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    //toastr.warning(value, "Error");
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                        },
                        complete: function () {
                            $(ele).prop('disabled', false);
                        }

                    });
                }
                else {

                    NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Enter Atleast One Material  !!!' });
                }

            }

            else {
                NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Usage Date sholud be greater than or equal to Project Date' });
            }

        }
    }



    // Function to update a customer
    //$('.addcompany-jq-addnewuserUpdate').on('click',
    function updateMaterialUsage(ele) {


        let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability

        //perfectCRMvalidation.init($thisForm);
        var today = new Date().toISOString().split('T')[0];
        document.getElementsByName("CreateDate")[0].setAttribute('max', today);

        if ($thisForm.valid()) {
            if (checkdate(ele)) {   //<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)


                let pdata = $thisForm.data('pData');

                console.log('> Update MaterialUsage form data saved', pdata);

                let $modal2 = $thisForm.find('#zero_configOthercharge');


                let MaterialDetails = [];
                $thisForm.find('[perfect-tempTable="MaterialDetailsTable"]').find('tbody').find('tr').each(function () {
                    MaterialDetails.push($(this).data('pData'));
                })




                let Amount = 0;
                let WorkAmount = 0;
                $('#Material').find('tbody tr').each(function (index, ele) {
                    Amount = Amount + parseFloat($(ele).find('.Amount').text());

                });
                $('#Work').find('tbody tr').each(function (index, ele) {
                    WorkAmount = WorkAmount + parseFloat($(ele).find('.WorkAmount').text());

                });
                if (MaterialDetails.length > 0) {
                    $(ele).prop('disabled', true);
                    var inputData = {//<---- Input Json : this is the variable we pass to controller
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        Date: $thisForm.find('[name=CreateDate]').val().trim(),
                        FK_Project: $thisForm.find('[name=ProjectID]').val(),
                        FK_Team: $thisForm.find('[name=TeamID]').val(),
                        FK_Stage: $thisForm.find('[name=StageID]').val(),
                        FK_Employee: $thisForm.find('[name=EmployeeID]').val(),
                        'MaterialDetails': MaterialDetails,
                        ProjectMaterialUsageID: pdata["ProjectMaterialUsageID"],
                        LastID: LastID_MaterialUsage,
                        TransMode: MaterialUsageTransMode,
                        'ProductSerialNumbers': productSerialNum,
                        'WarrantyDetails': warrantydetails,
                    };
                    clearSessionValue(LastIDSessionKey);

                    let onSuccess = false;

                    console.log('> Update state ajax input', inputData);
                    $.ajax({
                        url: "@Url.Action("UpdateMaterialUsageDetails", "MaterialUsage")",
                        type: "POST",

                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (ajaxOutput) { //<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                            if (ajaxOutput.Process.IsProcess) {

                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    //toastr.success(value, "Success");
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                });


                                onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                //if (onSuccess) {
                                window['MaterialUsageInitialLoad']();


                                //---------- Do stuff if success
                                //toastr.success("Inside success", "Confirmation Box in table");

                                console.log('> update new MaterialUsage success data', ajaxOutput);
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    //toastr.warning(value, "Error");
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }


                        },
                        complete: function () {
                            $(ele).prop('disabled', false);
                        }

                    });

                }
                else {

                    NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Enter Atleast One Material  !!!' });
                }


            }
            else {
                NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Allocation Date sholud be greater than or equal to Project Date' });
            }

        }
    }

        //////New change///

    function fn_GetEmployee(ele) {


        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $placeDropdown = $thisForm.find('[name=EmployeeID]');//<--- Will give place select html element
        $placeDropdown.empty();
        $placeDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');

        let StageID = $(ele).val();
        let ProjectID = $thisForm.find('[name=ProjectID]').val()
         $.ajax({
                 url: "@Url.Action("GetEmployees", "MaterialUsage")",
                type: "POST",

             data: JSON.stringify({ FK_Stage: StageID, FK_Project: ProjectID}),
                dataType: "json",
                contentType: "application/json",
             success: function (ajaxOutput) {



                 if (ajaxOutput.Process.IsProcess) {

                             $.each(ajaxOutput.Data, function (key, value) {
                                 $placeDropdown.append($('<option/>', { "value": value.EmployeeID }).text(value.EmployeeName)).selectpicker('refresh')
                                 });


                     }
                     else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             //NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': value });
                         });
                     }
                     }

                 });


    }

    function SetControl(ele, tt) {
        debugger
            console.log(tt);
            cleartable(ele);
            productSerialNum = [];
            productSerialNumTemp = [];

            let ProjectID = tt.ID_FIELD;
            let $thisForm = $(ele).closest('[perfect-class="form"]');
            let $placeDropdown = $thisForm.find('[name=StageID]');
            let $teamDropdown = $thisForm.find('[name=TeamID]');
        
        //<--- Will give place select html element
        $placeDropdown.empty();
        $teamDropdown.empty();
        $placeDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');
        $teamDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');
            //$thisForm.find('[name=TeamID]').val('').selectpicker('refresh');
            //let inputData = {
            //    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            //    LeadGenerateID: $thisForm.find('[name=Lead]').val().trim()
            //};
            $.ajax({
                url: "@Url.Action("GetProjectStages", "MaterialUsage")",
                type: "POST",

                data: JSON.stringify({ FK_Project: ProjectID }),
                dataType: "json",
                contentType: "application/json",
                success: function (ajaxOutput) {



                    if (ajaxOutput.Process.IsProcess) {

                        $.each(ajaxOutput.Data, function (key, value) {
                            $placeDropdown.append($('<option/>', { "value": value.ProjectStagesID }).text(value.StageName)).selectpicker('refresh')
                        });


                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            //toastr.warning(value, "Error");
                            //NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': value });
                        });
                    }
                }

            });


    }
    function GetTeam(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
             let ProjectID = $thisForm.find('[name=ProjectID]').val();
             let StageID = $thisForm.find('[name=StageID]').val();
        ClearEmployee(ele);
        ClearPro(ele);
            let $placeDropdown = $thisForm.find('[name=TeamID]');//<--- Will give place select html element
            $placeDropdown.empty();
        $placeDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');
        
            //let inputData = {
            //    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            //    LeadGenerateID: $thisForm.find('[name=Lead]').val().trim()
            //};
            $.ajax({
                url: "@Url.Action("GetProjectTeam", "MaterialUsage")",
                type: "POST",

                data: JSON.stringify({ FK_Project: ProjectID, FK_Stage: StageID  }),
                dataType: "json",
                contentType: "application/json",
                success: function (ajaxOutput) {



                    if (ajaxOutput.Process.IsProcess) {

                        $.each(ajaxOutput.Data, function (key, value) {
                            $placeDropdown.append($('<option/>', { "value": value.ID_ProjectTeam }).text(value.TeamName)).selectpicker('refresh')
                        });


                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            //toastr.warning(value, "Error");
                            //NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': value });
                        });
                    }
                }

            });


        }
    function fn_AllocationDetails_Project(ele) {


        let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability
        let $formFolowDivContainer = $(this).closest('[perfect-class="form"]').closest('.jq_leadgeneration_body').find('.jq_leadgeneration_followup_status');
        let inputData = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            FK_Project: $thisForm.find('[name=ProjectID]').val().trim()
        };
        console.log(inputData);
        if ($thisForm.find('[name=ProjectID]').val().trim() != '' || $thisForm.find('[name=ProjectID]').val().trim() != 0) {
            $.ajax({
                url: "@Url.Action("GetAllocationInfo", "MaterialUsage")",
                type: "POST",
                // headers: { "token_key": "1234" },
                data: inputData,
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxOutput) {
                    debugger;
                    console.log('sss', ajaxOutput)
                    if (ajaxOutput.AllocationDetails.Data != null) {
                        let strHtml = ""; let $ProductHtml = "";
                        for (var t = 0; t < ajaxOutput.distAllocations.length; t++) {
                            let rowCount = 0;

                            strHtml += "<div class='tab-pane'>";
                            strHtml += "<div class='row' style='margin - top: 1.5rem;>";
                            strHtml += "<div class='col-sm-6'>";
                            strHtml += "<label style='width:3%'></label>";
                            strHtml += "<label style='width:20%'><strong style='width:100%'>Stage: </strong><span class='mb-0' style='width:100%'>" + ajaxOutput.distAllocations[t][0]['Stage'] + "</span></label>";
                            strHtml += "<label style='width:20%'><strong style='width:100%'>Team: </strong><span class='mb-0' style='width:100%'>" + ajaxOutput.distAllocations[t][0]['Team'] + "</span></label>";
                            strHtml += "<label style='width:20%'><strong style='width:100%'>Employee: </strong><span class='mb-0' style='width:100%'>" + ajaxOutput.distAllocations[t][0]['Employee'] + "</span></label>";
                            strHtml += "<label style='width:20%'><strong style='width:100%'>Allocation Date: </strong><span class='mb-0' style='width:100%'>" + moment(ajaxOutput.distAllocations[t][0]['Date']).format('DD-MM-YYYY') + "</span></label>";
                            strHtml += "</div></div></div>";



                            strHtml += '<div class="card-body"><div class="table-responsive"><table class="table table-striped"  id="MaterialTable"><thead class="thead-primary"><tr><th>Sl No.</th><th>Mode</th><th>Product</th><th>Quantity</th><th>Amount</th></tr>'
                            strHtml += '</thead ><tbody id="MaterialDt">  ';

                            if (ajaxOutput != null) {
                                $('#MaterialDt').empty();
                                $ProductHtml = "";
                                var ProductData = ajaxOutput.AllocationDetails.Data;
                                if (ProductData) {
                                    $.each(ProductData, function (i, value) {
                                        if (value.FK_Team == ajaxOutput.distAllocations[t][0]["FK_Team"] && value.FK_Stage == ajaxOutput.distAllocations[t][0]["FK_Stage"] && value.FK_Employee == ajaxOutput.distAllocations[t][0]["FK_Employee"]) {
                                            rowCount = (rowCount + 1);
                                            $ProductHtml += "<tr id = " + rowCount + " > ";
                                            $ProductHtml += "<td style='width:20%;'>" + rowCount + "</td>";
                                            $ProductHtml += "<td style='width:20%;'>" + value.Mode + "</td>";
                                            $ProductHtml += "<td>" + value.Product + "</td>";
                                            $ProductHtml += "<td style='text-align: center'>" + value.Quantity + "</td>";
                                            $ProductHtml += "<td style='text-align: center'>" + value.Amount + "</td>";
                                            $ProductHtml += "</tr> ";
                                        }
                                    });
                                }
                                else {
                                    $ProductHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                                }
                                debugger
                                //$thisForm.find('#EmployeeDt').append($ProductHtml);
                                strHtml += $ProductHtml + '</tbody ></table > </div></div>';
                            }
                            //else {
                            //    $ProductHtml += "<tr id='0'><td colspan='8' style'text-align:center'>No Records..</td></tr>";
                            //    $thisForm.find('#EmployeeDt').append($ProductHtml);
                            //    $.each(ajaxOutput.Process.Message, function (key, value) {
                            //        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            //    });
                            //}
                        }
                        $thisForm.find('[name=AllocationDetails]').html(strHtml);

                        initFunctions($thisForm);
                    }
                    else {
                        $('#EmployeeDt').empty();
                        strHtml = "<label class='col - xl - 10' style='text-align:center'>No Materials Allocated For The Selected Project</label> ";
                        $thisForm.find('[name=AllocationDetails]').html(strHtml);
                    }

                }
            });
        }

    }

    ////For serial Numbers///
    var productSerialNum = [];
    var productSerialNumTemp = [];
    var productSerialNumTempListPop = [];

    function fn_getSerialNumbers(ele, Mod, Prodid,CurrentStock) {

            let $thisForm = $(ele).closest('[perfect-class="form"]');
            let productid ='';
            let stockid = 0;
            let Qty = 0;
            let isValid = false;

            serialNumberPopup = false;
            if (Mod == 0 || Mod == 2) {
                productid = $('[name="ProductID"]').val();
                stockid = $('[name="StockId"]').val();
                Qty = parseFloat(isNaN($('[name="Quantity"]').val()) ? 0 : $('[name="Quantity"]').val());
            }

        if (productid != "") {
            isValid = true;
        }
        else {
            isValid = false;
            NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': "Please Select Product" });
        }
        if (Qty > 0) {
            isValid = true;
        }
        else {
            isValid = false;
            NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': "Please Enter Quantity" });
        }

        $("#divProductSerialNumbers").empty();
        debugger
        var inputData = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            'ID_ProjectMaterialUsage': MaterialUsageID,
            'TransMode': MaterialUsageTransMode,
            'FK_Product': productid,
            'StockID': stockid,
            'Mode': 3,
            'FK_Project': $('[name="ProjectID"]').val(),
            'FK_Stage': $('[name="StageID"]').val() ,
            'FK_Team': $('[name="TeamID"]').val() ,
            'FK_Employee': $('[name="EmployeeID"]').val()
        }

        if (isValid) {
                $.ajax({
                     url: "@Url.Action("GetSubProductsDetailInfo", "MaterialUsage")",
                    type: "POST",
                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                    success: function (ajaxOutput) {
                        debugger
                        let Slnumbers = [];
                        if (ajaxOutput.subproduct.Process.IsProcess) {

                            if (ajaxOutput.subproduct.Data.length > 0) {
                                $("#divProductSerialNumbers").empty();
                                console.log('ajaxOutput.subproduct.Data>>>>>', ajaxOutput.subproduct.Data[0].FK_Stock);

                                $.each(ajaxOutput.subproduct.Data, function (key, value) {
                                    let blnChecked = false;
                                    debugger
                                    let tempavailable;
                                    let temData;
                                    console.log('productSerialNum pop up>>',productSerialNum)
                                    tempavailable = productSerialNum.filter(obj => obj.ID_ProductNumberingDetails.toString() == value.ID_ProductNumberingDetails && obj.FK_MasterID != $('[name="StockId"]').val());

                                    temData = productSerialNumTemp.filter(obj => obj.FK_MasterID == $('[name="StockId"]').val());
                                    let unavailable = productSerialNumTemp.filter(obj => obj.FK_MasterID == $('[name="StockId"]').val() && obj.FK_Stock == value.FK_Stock);

                                    if (temData.filter((obj => obj.ID_ProductNumberingDetails == value.ID_ProductNumberingDetails)).length > 0) {
                                        if (temData.filter(obj => obj.FK_MasterID == $('[name="StockId"]').val() && obj.FK_Stock == value.FK_Stock).length > 0) {
                                            blnChecked = true;

                                        }
                                    }

                                    if (tempavailable == 0) {

                                        $("#divProductSerialNumbers").append(`<div class="col-sm-6 DivSlNo">
                                           <div class="form-check form-check-inline" perfect-class="formCheck">
                                             <label class="form-check-label" perfect-class="formCheckLabel">
                                              <input onchange="fn_checkedAllowed(this,${Mod} ,${Qty})" type="checkbox" class="form-check-input pssProductSerialSelect" SerialProduct="${productid}" Serialtext="${value.ProdSerielNo}" Qty="${Qty}" SubOrProd="${Mod}" value="${value.FK_Stock}" name="${value.ID_ProductNumberingDetails}" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" ${(blnChecked ? "checked" : "")}>
                                                <span perfect-class="formCheckInputText">${value.ProdSerielNo}</span>
                                             </label>
                                           </div>
                                        </div>`);
                                    }

                                });
                                if (Mod == 2) {
                                    $('#modalProductSerialNumbers').modal('hide');
                                    SerialNumberExist = true;
                                }
                                else {
                                    $('#modalProductSerialNumbers').modal('show');
                                }
                                serialNumberPopup = true;

                            }
                        }
                        else {
                            if (Mod != 2) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Product Number Settings Not Found' });
                            }
                        }
                    },
                    complete: function () {
                        //ResetAMCandWarranty(ele, oldvalue);
                    }
                });
            }
    }


    function fn_ProductSerialNumberPopupHide(ele) {

        let Qty = parseFloat(isNaN($("#divProductSerialNumbers .pssProductSerialSelect").attr("qty")) ? 0 : $("#divProductSerialNumbers .pssProductSerialSelect").attr("qty"));
        let ProductOrSub = $("#divProductSerialNumbers .pssProductSerialSelect").attr("SubOrProd");
        debugger
        if (fn_setProductSerialNumber(this, Qty, ProductOrSub)) {
            $('#modalProductSerialNumbers').modal('hide');
        }
        else {
            let qty = parseInt(isNaN($('[name="Quantity"]').val()) ? 0 : $('[name="Quantity"]').val());
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': `Please Select Minimum ${Qty} Sl No` });
        }
    }


    function fn_setProductSerialNumber(ele, Qty, ProductOrSub) {
        debugger
        let $thisForm = $('[perfect-class="form"]');

        let Master_stockid = $thisForm.find('[name=StockId]').val();
        let stockid = $('input.pssProductSerialSelect:checkbox:checked').val();
        let SerialProduct = $("#divProductSerialNumbers .pssProductSerialSelect").attr("SerialProduct");
        let SerialNum = $("#divProductSerialNumbers .pssProductSerialSelect").attr("Serialtext");

        let numberOfChecked = parseInt($('input.pssProductSerialSelect:checkbox:checked').length);
        let qty = parseInt(isNaN($thisForm.find('[name="Quantity"]').val()) ? 0 : $thisForm.find('[name="Quantity"]').val());
        if (numberOfChecked == Qty) {
            //remove old slno
            //$("#divProductSerialNumbers").empty();
            debugger
            //console.log('SERIAL NUMBER OLD>>>>', productSerialNumTemp)

            productSerialNumTemp = productSerialNumTemp.filter(obj => obj.UID.toString() !== (Master_stockid.toString() + stockid.toString()));
            //remove old slno
            let UID = Master_stockid.toString() + stockid.toString()
            $('input.pssProductSerialSelect:checkbox:checked').each(function () {
                let sThisVal = $(this).attr('name');
                let serialNumInfo = {};
                serialNumInfo['UID'] = UID;
                serialNumInfo['ProductId'] = SerialProduct;
                serialNumInfo['FK_Stock'] = stockid;
                serialNumInfo['FK_MasterID'] = Master_stockid;
                serialNumInfo['ID_ProductNumberingDetails'] = sThisVal;
                serialNumInfo['ProdSerielNo'] = SerialNum;
                productSerialNumTemp.push(serialNumInfo);
            });
            console.log('SERIAL NUMBER CURRENT>>>>', productSerialNumTemp)
            console.log('MAIN SERIAL NUMBER CURRENT>>>>', productSerialNum)


            return true;
        }
        else {
            return false;
        }
        //console.log(productSerialNum)
    }


    function fn_checkedAllowed(ele, Mod, Qty) {
        debugger
        let $thisForm = $('[perfect-class="form"]');
        let numberOfChecked = parseInt($('input.pssProductSerialSelect:checkbox:checked').length);
        let qty;
        if (Mod == 0) {
            qty = parseFloat(isNaN($thisForm.find('[name="Quantity"]').val()) ? 0 : $thisForm.find('[name="Quantity"]').val());
        }
        else {
            qty = Qty;
        }
        debugger
        if (numberOfChecked > qty) {
            $(ele).prop('checked', false)
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': `Your limit is ${qty}` });
        }
    }
    function fillSerialNumberTemp(ele) {
        productSerialNumTemp = [];
        debugger
        if (productSerialNum != null) {
            if (productSerialNum.length > 0) {
                productSerialNumTemp = productSerialNumTemp.concat(productSerialNum);
            }
        }
    }
    function DeleteSerialNumbersRow(ele, StockId) {
        if (productSerialNum != null) {
            if (productSerialNum.length > 0) {
                productSerialNum = productSerialNum.filter(obj => obj.FK_MasterID.toString() !== StockId);
            }
        }
    }
    function SerialNumberButtonsState(ele) {
        let $thisForm = $('[perfect-class="form"]');
        let $numEnable = $thisForm.find('[name="ProdNumbering"]').val();

        if ($numEnable == 1) {
            document.getElementById('btn_Slno').style.display = 'block';
        }
        else {
            document.getElementById('btn_Slno').style.display = 'none';
        }
    }
    ////For Serial Numbers end
    ////Warranty AMC
    var warrantydetails = [];
    var TempWarrantyDetails = [];

    function GetWarrantylists(ele, mode) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let Amctype = $thisForm.find('[name="AMCMType"]').val();
        let NoOfServices = $thisForm.find('[name="AMCNoOfServices"]').val();
        let AMCDuedate = $thisForm.find('[name="AMCMDuedate"]').val();
        let AMCRenewduedate = $thisForm.find('[name="AMCMRenewduedate"]').val();
        let AmcAmount = $thisForm.find('[name="AmcTotalAmount"]').val();
        let AMCTaxAmount = $thisForm.find('[name="AMCTaxTotalAmt"]').val();
        let AMCNetAmount = $thisForm.find('[name="AMCNetTotalAmt"]').val();
        let AmRemarks = $thisForm.find('[name="AMCRemarks"]').val();

        productclear(ele, "Warranty");
        if ($thisForm.find('[name="ProductID"]').val() == '' || $thisForm.find('[name="ProductID"]').val() == null) {
            NotificationMessage({ 'message': 'Please Select Product' });
        }
        else {
            let prdid = $thisForm.find('[name="ProductID"]').val();
            let stkid = $thisForm.find('[name="StockId"]').val();
            $thisForm.find('[name="stkid"]').val(stkid);
            $thisForm.find('[name="prodtid"]').val(prdid);
            var warobject = [];
            debugger
            console.log("$thisForm.data('pwarranty')>>>>>>>", $thisForm.data('pwarranty'))

            if (TempWarrantyDetails != null) {
                if (TempWarrantyDetails.length > 0) {
                    warobject = TempWarrantyDetails.filter(obj => obj.stkid.toString() === stkid.toString());
                }
            }

            $('#formGroupModalwarranty').modal({ backdrop: 'static', keyboard: false })
            console.log('warobject', warobject)
            if (mode == 0) {
                $('#formGroupModalwarranty').modal('show');
            }
            else {
                $('#formGroupModalwarranty').modal('hide');
            }

            if (warobject != null) {
                if (warobject.length > 0) {
                    if (warobject[0]['stkid'] == stkid) {
                        fillgrid('Warranty', wartableOptionsTempOut, $thisForm, warobject);
                    }

                } else {
                    $thisForm.find('[perfect-tempTable= "Warranty"]').empty();
                }
            }
            console.log('WARRAYNTY NET AMOUNT', warobject)
            debugger

            let AMCdet = $thisForm.data('amcdatadata');
            if (AMCdet) {
                if (AMCdet[0]['AMCFK_Master'] == stkid) {
                    if ($thisForm.data('amcdatadata')) {
                        $.each(AMCdet, function (key, value1) {
                            $thisForm.find('[name="AMCFK_Master"]').val(value1.AMCFK_Master);
                            $thisForm.find('[name="AMCType"]').val(value1.AMCType).selectpicker('refresh');
                            $thisForm.find('[name="NoOfServices"]').val(value1.NoOfServices);
                            $thisForm.find('[name="AMCDuedate"]').val(value1.AMCDuedate);
                            $thisForm.find('[name="AMCRenewduedate"]').val(value1.AMCRenewduedate);
                            $thisForm.find('[name="AmcAmount"]').val(value1.AmcAmount);
                            $thisForm.find('[name="AMCTaxAmount"]').val(value1.AMCTaxAmount);
                            $thisForm.find('[name="AMCNetAmount"]').val(value1.AMCNetAmount);
                            $thisForm.find('[name="AmRemarks"]').val(value1.AmRemarks);
                        });

                    }
                }
            }
            else {
                $thisForm.find('[name="AMCFK_Master"]').val('');
                $thisForm.find('[name="AMCType"]').val('').selectpicker('refresh');
                $thisForm.find('[name="NoOfServices"]').val('');
                $thisForm.find('[name="AMCDuedate"]').val('');
                $thisForm.find('[name="AMCRenewduedate"]').val('');
                $thisForm.find('[name="AmcAmount"]').val('');
                $thisForm.find('[name="AMCTaxAmount"]').val('');
                $thisForm.find('[name="AMCNetAmount"]').val('');
                $thisForm.find('[name="AmRemarks"]').val('');
            }
        }

    }
    function productclear(ele, tablekey) {

        let $thisform = $(ele).closest('[perfect-class="form"]');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');

        let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);
        debugger
        if (tablekey == "MaterialDetailsTable") {
            TempWarrantyDetails = [];
        }
        else if (tablekey == "Warranty") {

            //warrantydetails = [];
        }
        else if (tablekey == "Payment") {

        }

    }
    var wartableOptionsTempOut = {
        iconButton: {
            buttons: [
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';

                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);

                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');

                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if (inputType == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }

                                else {

                                    $thisNode.val(savedData[pf_name]);
                                }

                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }


                        });



                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {

                        let savedData = $(this).closest('tr').data('pData')
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            //$thistbl.dataTable({ paging: true, searchbtn: false });
                        }
                        else {
                            $thistbl.remove();
                        }

                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        let dprdid;
                        let stkcid;
                        let dwartyp;
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            console.log('pf_name', pf_name)
                            if (pf_name == "WarrantyType") {
                                dwartyp = savedData[pf_name];
                                console.log('WarrantyTypename', pf_name)
                            }
                        });
                        stkcid = $thisForm.find('[name="StockId"]').val();
                    }
                },
            ]
        },

        rowAttribute: ['WarrantyTaxAmount', 'WarrantyAmount'],
        renameHeader: { "subProName": "Sub Product", "Replcwardt": "Replace WTY Dt", "Serwardt": "Service WTY Dt", "WarrantyType_d": " Type", "WarrantyNetAmount": "NetAmount" },
        hideColumn: ['subProductID', 'prodtid', 'stkid', 'WarrantyTaxAmount', 'WarrantyAmount'],
        serialNo: true,
        isDateType: ["Replcwardt", "Serwardt"],

    }



    
    function AMCWarranty(ele, type) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        var InputData =
        {
            Mode: 1,
            FK_Type: $thisForm.find('[name="WarrantyType"]').val(),
            Date: $thisForm.find('[name="CreateDate"]').val(),
            Quantity: $thisForm.find('[name="Quantity"]').val(),
        }



        $.ajax({
            url: "@Url.Action("GetAMCWarrantydetails", "Sales")",
            type: "POST",
            data: InputData,
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (ajaxOutput) {
                if (ajaxOutput.Process.IsProcess) {
                    if (ajaxOutput.Data[0].ErrCode != -100) {
                        $thisForm.find('[name="Replcwardt"]').val(moment(ajaxOutput.Data[0].ReplaceWarrantyDate).format('YYYY-MM-DD'));
                        $thisForm.find('[name="Serwardt"]').val(moment(ajaxOutput.Data[0].ServiceWarrantyDate).format('YYYY-MM-DD'));
                        $thisForm.find('[name="WarrantyAmount"]').val(Number(ajaxOutput.Data[0].Amount).toFixed(2));
                        $thisForm.find('[name="WarrantyTaxAmount"]').val(Number(ajaxOutput.Data[0].TaxAmount).toFixed(2));
                        $thisForm.find('[name="WarrantyNetAmount"]').val(Number(ajaxOutput.Data[0].NetAmount).toFixed(2));
                    }
                    else {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': ajaxOutput.Data[0].ErrMsg });
                        $thisForm.find('[name="Replcwardt"]').val(moment('').format('YYYY-MM-DD'));
                        $thisForm.find('[name="Serwardt"]').val(moment('').format('YYYY-MM-DD'));
                        $thisForm.find('[name="WarrantyAmount"]').val('');
                        $thisForm.find('[name="WarrantyTaxAmount"]').val('');
                        $thisForm.find('[name="WarrantyNetAmount"]').val('');
                    }
                }

            },
            complete: function () {
                $(ele).prop('disabled', false);

            }
        });

    }

    function AMCWarrantyAMC(ele, type) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        var InputData =
        {
            Mode: 2,
            FK_Type: $thisForm.find('[name="AMCType"]').val(),
            Date: $thisForm.find('[name="CreateDate"]').val(),
            Quantity: $thisForm.find('[name="Quantity"]').val(),
        }


        $.ajax({
            url: "@Url.Action("GetAMCWarrantydetails", "Sales")",
            type: "POST",
            data: InputData,
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (ajaxOutput) {
                if (ajaxOutput.Process.IsProcess) {
                    if (ajaxOutput.Data[0].ErrCode != -100) {
                        $thisForm.find('[name="NoOfServices"]').val(ajaxOutput.Data[0].NoOfServices);
                        $thisForm.find('[name="AMCDuedate"]').val(moment(ajaxOutput.Data[0].AMCDuedate).format('YYYY-MM-DD'));
                        $thisForm.find('[name="AMCRenewduedate"]').val(moment(ajaxOutput.Data[0].AMCRenewduedate).format('YYYY-MM-DD'));
                        $thisForm.find('[name="AmcAmount"]').val(Number(ajaxOutput.Data[0].AmcAmount).toFixed(2));
                        $thisForm.find('[name="AMCTaxAmount"]').val(Number(ajaxOutput.Data[0].AMCTaxAmount).toFixed(2));
                        $thisForm.find('[name="AMCNetAmount"]').val(Number(ajaxOutput.Data[0].AMCNetAmount).toFixed(2));
                    }
                    else {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': ajaxOutput.Data[0].ErrMsg });
                        $thisForm.find('[name="NoOfServices"]').val('');
                        $thisForm.find('[name="AMCDuedate"]').val(moment('').format('YYYY-MM-DD'));
                        $thisForm.find('[name="AMCRenewduedate"]').val(moment('').format('YYYY-MM-DD'));
                        $thisForm.find('[name="AmcAmount"]').val('');
                        $thisForm.find('[name="AMCTaxAmount"]').val('');
                        $thisForm.find('[name="AMCNetAmount"]').val('');
                    }
                }

            },
            complete: function () {
                $(ele).prop('disabled', false);

            }
        });

    }

    function validwartdetail(ele, tableKey, errorClass, isValid) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="WarrantyType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="WarrantyType"]').val() == null) {

            isValid = false;
            console.log('false');
            $thisForm.find('[perfect-tempTable-' + tableKey + '="WarrantyType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Type');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="WarrantyType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Replcwardt"]').val() == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="Replcwardt"]').val() == '') {

            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="Replcwardt"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Replace WTY Date');
        }
        else {

            let repldt = $thisForm.find('[name=Replcwardt]').val();
            repldt = new Date(repldt);
            repldt.setHours(0, 0, 0, 0)

            let today = new Date();
            today.setHours(0, 0, 0, 0)

            console.log(today)
            console.log(repldt)
            if (today > repldt) {
                isValid = false;
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Replcwardt"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Replace WTY date should be greater than or equal to todays date');

            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Replcwardt"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }


        }
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Serwardt"]').val() == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="Serwardt"]').val() == '') {

            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="Serwardt"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Service WTY Date');
        }
        else {
            let servcdt = $thisForm.find('[name=Serwardt]').val();
            servcdt = new Date(servcdt);
            servcdt.setHours(0, 0, 0, 0)

            let today = new Date();
            today.setHours(0, 0, 0, 0)

            if (today > servcdt) {
                isValid = false;
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Serwardt"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Service WTY date should be greater than or equal to todays date');

            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Serwardt"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }


        }

        return isValid;

    }
    function warrantydet(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let prdid = $thisForm.find('[name="ProductID"]').val();
        let stkid = $thisForm.find('[name="StockId"]').val();

        let AMCType = $thisForm.find('[name="AMCType"]').val();
        let NoOfServices = $thisForm.find('[name="NoOfServices"]').val();
        let AMCDuedate = $thisForm.find('[name="AMCDuedate"]').val();
        let AMCRenewduedate = $thisForm.find('[name="AMCRenewduedate"]').val();
        let AmcAmount = $thisForm.find('[name="AmcAmount"]').val();
        let AMCTaxAmount = $thisForm.find('[name="AMCTaxAmount"]').val();
        let AMCNetAmount = $thisForm.find('[name="AMCNetAmount"]').val();
        let AmRemarks = $thisForm.find('[name="AmRemarks"]').val();

        debugger
        var uwarobject = [];
        if (TempWarrantyDetails != null) {
            uwarobject = TempWarrantyDetails.filter(obj => obj.stkid.toString() === stkid.toString());
            const indexOfObject = TempWarrantyDetails.findIndex(object => {
                return object.stkid.toString() === stkid.toString();
            });

            TempWarrantyDetails.splice(indexOfObject, uwarobject.length);
        }
        console.log(warrantydetails);
        $thisForm.find('[perfect-tempTable="Warranty"]').find('tbody').find('tr').each(function () {
            console.log('sadd', $(this).data('pData'))
            TempWarrantyDetails.push($(this).data('pData'));
        })
        console.log('warrantydetails', warrantydetails)

        var AMC = [];
        let Amcdetails = {
            AMCFK_Master: stkid,
            AMCType: AMCType,
            NoOfServices: NoOfServices,
            AMCDuedate: AMCDuedate,
            AMCRenewduedate: AMCRenewduedate,
            AmcAmount: AmcAmount,
            AMCTaxAmount: AMCTaxAmount,
            AMCNetAmount: AMCNetAmount,
            AmRemarks: AmRemarks
        }
        AMC.push(Amcdetails);
        console.log('Amcdetails', Amcdetails);

        $thisForm.data({ amcdatadata: AMC });

        let AMCdet = $thisForm.data('amcdatadata');
        if ($thisForm.data('amcdatadata')) {
            $.each(AMCdet, function (key, value1) {
                $thisForm.find('[name="AMCFK_Master"]').val(value1.AMCFK_Master);
                $thisForm.find('[name="AMCMType"]').val(value1.AMCType).selectpicker();
                $thisForm.find('[name="AMCNoOfServices"]').val(value1.NoOfServices);
                $thisForm.find('[name="AMCMDuedate"]').val(moment(value1.AMCDuedate).format('YYYY-MM-DD'));
                $thisForm.find('[name="AMCMRenewduedate"]').val(moment(value1.AMCRenewduedate).format('YYYY-MM-DD'));
                $thisForm.find('[name="AmcTotalAmount"]').val(value1.AmcAmount);
                $thisForm.find('[name="AMCTaxTotalAmt"]').val(value1.AMCTaxAmount);
                $thisForm.find('[name="AMCNetTotalAmt"]').val(value1.AMCNetAmount);
                $thisForm.find('[name="AMCRemarks"]').val(value1.AmRemarks);
            });
        }

        $('#formGroupModalwarranty').modal('hide');
    }

    function Warrantyadd(ele) {
        let $thisForm = $('[perfect-class="form"]');
        let stkid = $thisForm.find('[name="StockId"]').val();

        var uwarobject = [];
        if (warrantydetails != null) {
            if (warrantydetails.length > 0) {
                debugger
                uwarobject = warrantydetails.filter(obj => obj.stkid.toString() === stkid.toString());
                const indexOfObject = warrantydetails.findIndex(object => {
                    return object.stkid.toString() === stkid.toString();
                });
                warrantydetails.splice(indexOfObject, uwarobject.length);
            }
        }
        if (TempWarrantyDetails != null) {
            if (TempWarrantyDetails.length > 0) {
                warrantydetails = warrantydetails.concat(TempWarrantyDetails);
            }
        }

        TempWarrantyDetails = [];
    }

    function fillWarrantyDetails(ele, StockId) {

        debugger
        TempWarrantyDetails = [];
        uwarobject = [];
        if (warrantydetails != null) {
            if (warrantydetails.length > 0) {
                debugger
                uwarobject = warrantydetails.filter(obj => obj.stkid.toString() === StockId.toString());
                const indexOfObject = warrantydetails.findIndex(object => {
                    return object.stkid.toString() === StockId.toString();
                });
            }
        }

        TempWarrantyDetails = TempWarrantyDetails.concat(uwarobject);
    }
    function fillamcdetails(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let AmcFK_Master = $thisForm.find('[name="AMCFK_Master"]').val();
        let Amctype = $thisForm.find('[name="AMCMType"]').val();
        let NoOfServices = $thisForm.find('[name="AMCNoOfServices"]').val();
        let AMCDuedate = $thisForm.find('[name="AMCMDuedate"]').val();
        let AMCRenewduedate = $thisForm.find('[name="AMCMRenewduedate"]').val();
        let AmcAmount = $thisForm.find('[name="AmcTotalAmount"]').val();
        let AMCTaxAmount = $thisForm.find('[name="AMCTaxTotalAmt"]').val();
        let AMCNetAmount = $thisForm.find('[name="AMCNetTotalAmt"]').val();
        let AmRemarks = $thisForm.find('[name="AMCRemarks"]').val();

        if (Amctype != 0) {
            var AMC = [];
            let Amcdetails = {
                AMCFK_Master: AmcFK_Master,
                AMCType: Amctype,
                NoOfServices: NoOfServices,
                AMCDuedate: AMCDuedate,
                AMCRenewduedate: AMCRenewduedate,
                AmcAmount: AmcAmount,
                AMCTaxAmount: AMCTaxAmount,
                AMCNetAmount: AMCNetAmount,
                AmRemarks: AmRemarks
            }
            AMC.push(Amcdetails);
            $thisForm.data({ amcdatadata: AMC });
        }
    }
    function fillgrid(tablk, wartableOptionsTempOut, $thisForm, data) {
        let tableOptionsTemp = wartableOptionsTempOut;
        let insertData = [];
        let tableKey = tablk;
        let indexname = tableKey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $.each(data, function (keyOne, valOne) {
            let pData = {};
            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])
            //---

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');

                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {
                        tableOptionsTemp.hideColumn.push(nameAttr);
                        pData[nameAttr + '_d'] = $this.find('[value="' + valOne[nameAttr] + '"]').text();
                        pData[nameAttr] = valOne[nameAttr];
                    }
                    else if ($this.is('input')) {
                        if (tableKey == 'Purchase') {
                           
                        }

                        pData[nameAttr] = valOne[nameAttr];
                    }
                    else if ($this.is('hidden')) {

                        pData[nameAttr] = valOne[nameAttr];
                    }
                    else {
                        pData[nameAttr] = valOne[nameAttr];
                    }
                }
            });

            insertData.push(pData);
            console.log('pData', pData)
            console.log('insertData', insertData)
        });
        $tblcontainer.empty();
        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTemp));
    }
    ////Warranty AMC End

    function ShowhideMapping(ele,Mode) {        
        if ($('#Mode').val() == 1 || Mode == 1) {            
            $("#DivMapping").show();
            $("#DivUsage").show();
        }
        else {
            $('#MapCustomer').prop('checked', false);
            $("#DivMapping").hide();
            $("#DivUsage").hide();
        }        
    }

</script>



