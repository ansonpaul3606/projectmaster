
@model PerfectWebERP.Models.Mediapromotion.MediaPromotionList
<div class="card ">
    <div class="card-header">
        <h4 class="card-title col-12">@ViewBag.PageTitle</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Promotion Name</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="hidden" class="form-control" name="ID_Media" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="hidden" value="0" />
                                <input type="text" class="form-control perfectValidate_name" placeholder="" name="PrmName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Media</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" id="FK_MediaMaster" name="FK_MediaMaster" placeholder="Please Select" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select"onchange="Loadsubmedialist(this)">
                                    <option value="">Please select</option>
                                    @if (!(Model.MediaList is null))
                                    {
                                        foreach (var menuGroup in Model.MediaList)
                                        {
                                            <option value="@menuGroup.FK_MediaMaster">@menuGroup.MediaName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>

                    </div>
                    <div class="col-sm-4">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Sub Media</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" id="FK_MediaSubMaster" name="FK_MediaSubMaster" placeholder="Please Select" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please select</option>
                                    @if (!(Model.SubMediaList is null))
                                    {
                                        foreach (var menuGroup in Model.SubMediaList)
                                        {
                                            <option value="@menuGroup.FK_MediaSubMaster">@menuGroup.SubMediaName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>

                    </div>



                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Start Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" id="PrmStartDate" class="form-control perfectValidate_date" name="PrmStartDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" onchange="fndatecheck(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>

                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">End Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" id="PrmEndDate" class="form-control perfectValidate_date" name="PrmEndDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" onchange="fndatecheck(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>

                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Amount</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_string text-right" maxlength="12" id="PrmAmount" placeholder="" name="PrmAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'PrmAmount',3)" onchange="fn_AmountChnge(this)" />

                            </div>

                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Description</span>
                            </label>
                            <div class="col-sm-8">
                                <textarea class="form-control perfectValidate_string_nm" perfect-class="formGroupControl" name="PrmDescription" rows="5" placeholder="" perfect-ctype="input" perfect-css="input"></textarea>
                            </div>
                        </div>

                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">Payment Method</label>
                            <div class="col-sm-5">
                                <div class="input-group">
                                    <div class="input-group-append">
                                        &nbsp;<button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-money" type="button" perfect-css="button" title="Add Payment Method" onclick="GetPaymentlists(this)"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal fade" perfect-class="formGroupModalpayment" id="formGroupModalpayment">
                        <div class="modal-dialog  modal-dialog-centered modal-md" role="document">
                            <div class="modal-content">
                                <div class="modal-header border-0">
                                    <h5 class="modal-title">Payment Method</h5>
                                    <button type="button" class="close" data-dismiss="modal">
                                        <span>&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                                    <div class="row">


                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">Method <span class="text-danger">*</span></label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <select class="form-control" perfect-tempTable-Payment="PaymentMethod" name="PaymentMethod" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                            <option value="">Please Select </option>


                                                            @if (!(Model.PaymentView is null))
                                                            {
                                                                foreach (var Module in Model.PaymentView)
                                                                {
                                                                    <option value="@Module.PaymentmethodID">@Module.Name</option>
                                                                }
                                                            }
                                                        </select>


                                                    </div>
                                                    <div class="text-danger temptableError"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">
                                                    <span perfect-class="formGroupLabel">Ref No.</span>

                                                </label>
                                                <div class="col-sm-8">

                                                    <div class="input-group">
                                                        <input type="text" class="form-control perfectValidate_string_nm" perfect-tempTable-Payment="Refno" name="Refno" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="250" />

                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">
                                                    <span perfect-class="formGroupLabel">Amount</span>
                                                    <span class="text-danger">*</span>
                                                </label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <input type="text" class="form-control perfectValidate_string_nm text-right" perfect-tempTable-Payment="PAmount" id="PAmount" name="PAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'PAmount',3)" onchange="Pamount(this)" maxlength="12" />

                                                    </div>
                                                    <div class="text-danger temptableError"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-9">


                                        </div>
                                        <div class="col-sm-3 text-right">
                                            <div class="input-group">

                                                <div class="input-group-append">
                                                    <div>
                                                        <button type="button" class="btn btn-primary1 " onclick="createtable(this,'Payment',['PaymentMethod'],paytableOptionsTempOut)"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                        <button class="btn btn-light1" type="button" onclick="productclear(this,'Payment')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">
                                                    <span perfect-class="formGroupLabel" style="font-weight:500;">Bal. Amount :</span>

                                                </label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">

                                                        <label class="col-form-label">
                                                            <span perfect-class="formGroupLabel" style="font-weight:500;" name="BalAmt"></span>
                                                        </label>
                                                        @*<input type="text" class="form-control" perfect-temptable-payment="BalAmt" name="BalAmt" perfect-class="" perfect-ctype="input" perfect-css="input" readonly="" style="border:white;background:white;font-weight: 500;">*@
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">

                                                <div class="table-responsive" perfect-tempTable-Payment="" perfect-tempTable="Payment" id="Paymentdethead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                                <div class="text-danger temptableError"></div>

                                            </div>
                                        </div>


                                    </div>
                                    <div class="modal-footer">
                                        @*<button type="button" onclick="CreateProductCheckDescription(this);" class="btn btn-primary">Add</button>*@
                                        <button type="button" class="btn btn-primary light" onclick="Billttlnetchck(this)">Apply</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
               




                <div class="card-footer text-right" perfect-class="formFooter">
                    @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                    {
                        <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="UpdateMedia(this,'Update')"><i class="fa fa-refresh fa-spin  loaderClass"></i>Update</button>
                    }
                    @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                    {
                        <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="UpdateMedia(this,'Add')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                    }
                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                </div>
                </div>
         </form>
    </div>
</div>
<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>
<script>
    (function () {
        jQuery("select").selectpicker();

    })();

    function decimalpnt(ele, id, range) {

        let input = $('#' + id);
        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
        input.on('keydown', function () {
            if (ele.value.includes('.')) {

            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.length == 9) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }

    function fndatecheck(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let upperlimit = $thisForm.find('[name="PrmEndDate"]').val();
        let lowerlimit = $thisForm.find('[name="PrmStartDate"]').val();

        upperlimit = new Date(upperlimit);
        upperlimit.setHours(0, 0, 0, 0)

        lowerlimit = new Date(lowerlimit);
        lowerlimit.setHours(0, 0, 0, 0)

        if (upperlimit < lowerlimit) {

            //console.log('inside limit check if')
            $thisForm.find('[name="PrmEndDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('End date should be greater than or equal to start date');
            $thisForm.find('[name="PrmEndDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').show();
            $thisForm.find('[name="PrmEndDate"]').trigger('blur');
            return false;
        }


        else {

            $thisForm.find('[name="PrmEndDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('');
            return true;
        }



    }

    function createtable(ele, tkey, uniq = [], tableOptionsTempOut) {


        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;
        console.log('tableOptionsTemp', tableOptionsTemp)
        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';

        //make index
        console.log('check 1');

        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        console.log('tableOptionsTemp.rowAttribute', tableOptionsTemp.rowAttribute)
        let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {
            //means update
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            //insert
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }
        //
        if (tableKey == 'Warranty') {

            isValid = validwartdetail(ele, tableKey, errorClass, isValid);
        }
        else if (tableKey == 'Payment') {
            isValid = validpaymntdetail(ele, tableKey, errorClass, isValid);
        }
        else if (tableKey == 'Purchase') {
            isValid = validsaledetail(ele, tableKey, errorClass, isValid);
        }

        if (unique.length > 0) {
            //getting previous data
            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }

                }

            })
            console.log('previous data', prevData);

            unique.forEach(function (key, i) {
                console.log('unid -> key:' + key + "| index :" + i);
                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                // let headerEleName = $thisForm.find('[name="lblProName"]').text();
                let atname = $thisEle.attr('name');
                let cvalue;
                console.log('atname', atname);
                console.log('$thisEle.length', $thisEle.length);
                if ($thisEle.length != 0) {
                    console.log('len', $thisEle)
                    let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    let errmessage = key + " Already exits"

                    //getting current value in cval
                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();
                        //alert(cvalue);
                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();
                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); console.log('cvalue ->', cvalue); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else { cvalue = $thisEle.val(); }



                    //searching in previous data
                    if (prevData.find(a => a[atname] == cvalue)) {
                        // console.log('Search =>' + cvalue + '| attr :' + atname)
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });

        }

        console.log('isValid', isValid);

        if (isValid) {

            console.log('check 4.1');
            // this section make table column data
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('nameAttr', nameAttr);
                console.log('headerName', headerName);

                if ($this.is('select')) {

                    //tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    //displat text of select
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    //tableOptionsTemp.onlyShowColumn.push(nameAttr + '_d')
                    insertData[nameAttr] = $this.val();
                    //insertData[nameAttr] = $this.val();

                    $this.val('').selectpicker('refresh');


                }
                else if ($this.is('input')) {

                    insertData[nameAttr] = $this.val();
                    console.log('insertData[nameAttr]', insertData[nameAttr])
                    if (nameAttr == "prodtid") { }
                    else if (nameAttr == "stkid") { }
                    else {
                        $this.val('');
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();

                    $this.val('');
                }

            });
            console.log('check 4.2', insertData);
            console.log('check 4.2 tableoption', tableOptionsTemp);
            if (isNew) {
                console.log('check 4.2.1');
                //this section nake table.table row
                if ($tblcontainer.find('table').length == 0) {
                    console.log('check 4.2.3');
                    console.log(insertData);
                    console.log(',tableOptionsTemp', tableOptionsTemp)
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));

                    //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false });
                }
                else {
                    console.log('check 4.2.1');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);


                }

            }
            else {

                let table = $tblcontainer.find('table').DataTable()
                table.destroy()

                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);

            }

            console.log(insertData);
            //alert(1);
            // resetting the edit value
            $tblcontainer.attr('perfect-tempTable-action', 0);

            if (tableKey == 'Warranty') {

                BindWarrantyAmount(ele);
            }
            else if (tableKey == 'Payment') {
                BillAmountbind(ele);
            }
            else if (tableKey == 'Purchase') {
                $thisForm.find('[name=prdbtn]').removeAttr("disabled", "disabled")

                $thisForm.data({ pwarranty: warrantydetails });
                console.log('check 123', $thisForm.data('pwarranty'));
                $thisForm.data({ addpImageselect: $thisForm.data('pImageselect') });
                console.log('addpImageselect', $thisForm.data('addpImageselect'))
                BindBilldetails(ele);

            }

        }


        console.log('check 5');
    }

    function productclear(ele, tablekey) {

        let $thisform = $(ele).closest('[perfect-class="form"]');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');

        let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);

        if (tablekey = "Purchase") {
            $thisform.find('[name=prdbtn]').removeAttr("disabled", "disabled")

        }
        else if (tablekey = "Warranty") {

        }
        else if (tablekey = "Payment") {

        }
    }

    function Billttlnetchck(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let balamt = $thisForm.find('[name=BalAmt]').text();


        if (parseFloat(balamt) == 0) {
            $('#formGroupModalpayment').modal('hide');
            $thisForm.find('[perfect-tempTable="Payment"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
        }
        else {

            $thisForm.find('[perfect-tempTable="Payment"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Balance Amt. should be Zero');

        }
    }
    var paytableOptionsTempOut = {
        iconButton: {
            buttons: [

                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';

                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);

                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');

                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }

                                else {

                                    $thisNode.val(savedData[pf_name]);
                                }

                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }


                        });



                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            //$thistbl.dataTable({ paging: true, searchbtn: false });
                        }
                        else {
                            $thistbl.remove();
                        }
                        BillAmountbind($tablecontainer);
                    }
                },
            ]
        },

        rowAttribute: [],
        onlyShowColumn: ['PAmount', 'Refno', 'PaymentMethod_d'],
        renameHeader: { "PAmount": "Amount1R", "Refno": "Ref No", "PaymentMethod_d": "Method" },
        hideColumn: ['BalAmt'],

        serialNo: true,

    };
    function fn_AmountChnge(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let netamt = parseFloat($thisForm.find('[name="PrmAmount"]').val()) == "" ? "0" : parseFloat($thisForm.find('[name="PrmAmount"]').val());
        let billamt = 0;
        let bilamt = 0;

        if (isNaN(netamt)) {
            netamt = 0;
        }

        bilamt = netamt;
        $('#Paymentdethead').find('tbody tr').each(function (index, ele) {
            billamt += parseFloat($(ele).find('.PAmount').text());

        });
        bilamt = parseFloat(bilamt) - billamt;

        $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));

    }

    function BillAmountbind(ele) {
   
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let netamt = "";
        netamt = parseFloat($thisForm.find('[name="PrmAmount"]').val()) == "" ? "0" : parseFloat($thisForm.find('[name="PrmAmount"]').val());

        let billamt = 0;
        let bilamt = 0;

        if ($thisForm.find('[name=BalAmt]').text() == '') {
            bilamt = 0;
        }
        else {
            bilamt = netamt;
        }

        $('#Paymentdethead').find('tbody tr').each(function (index, ele) {
            billamt += parseFloat($(ele).find('.PAmount').text());

        });
        bilamt = parseFloat(bilamt) - billamt;

        $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));
        if (bilamt == 0) {

            return true;

        }
        else {

            return false;

        }
    }

    function GetPaymentlists(ele) {
        $('#formGroupModalpayment').modal({ backdrop: 'static', keyboard: false })

        $('#formGroupModalpayment').modal('show');

    }

    function Pamount(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let amtp = $thisForm.find('[name="PAmount"]').val() == "" ? "0" : $thisForm.find('[name="PAmount"]').val();

        $thisForm.find('[name="PAmount"]').val(parseFloat(amtp).toFixed(2))
    }

    function fillTableSales(ele, tkey, data, tableOptionsTempOut) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableOptionsTempfill = tableOptionsTempOut;
        let insertData = []
        let tableKey = tkey;
        let indexname = tkey + 'index';
        tableOptionsTempfill.rowAttribute.push(indexname);
        tableOptionsTempfill.hideColumn.push(indexname);
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $.each(data, function (keyOne, valOne) {

            let pData = {};

            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])
            //---

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('tfhyrtname', nameAttr)
                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {
                        // tableOptionsTempfill.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTempfill.hideColumn.push(nameAttr);
                        //displat text of select
                        pData[nameAttr + '_d'] = $this.find('[value="' + valOne[nameAttr] + '"]').text();
                        pData[nameAttr] = valOne[nameAttr];
                        console.log('select', $this.find('options[value="' + valOne[nameAttr] + '"]').text());

                    }
                    else if ($this.is('input')) {

                        let inputType = $this.attr('type').toLocaleLowerCase();
                        console.log(inputType)


                        if (inputType == 'date') {

                            if (valOne[nameAttr] == null) {
                                pData[nameAttr] = valOne[nameAttr];
                            }
                            else {
                                pData[nameAttr] = moment(valOne[nameAttr]).format('YYYY-MM-DD');
                            }


                        }
                        else {
                            pData[nameAttr] = valOne[nameAttr];


                        }
                    }
                    else {
                        pData[nameAttr] = valOne[nameAttr];


                    }
                }



            });

            insertData.push(pData);


            //----

        });
        $tblcontainer.empty();
        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTempfill));
        // $tblcontainer.find('table').dataTable({ paging: true });

    }

   

    function UpdateMedia(ele,actiontype) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.valid()) {
            if (fndatecheck(ele)) {
                if (BillAmountbind(ele)) {

                    let paymentdetails = [];
                    $thisForm.find('[perfect-tempTable="Payment"]').find('tbody').find('tr').each(function () {
                        paymentdetails.push($(this).data('pData'));
                    })
                    debugger
                    $(ele).prop('disabled', true);

                    var inputData = {
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        'ID_Media': isNaN(parseInt($thisForm.find('[name=ID_Media]').val())) ? 0 : parseInt($thisForm.find('[name=ID_Media]').val()),
                        'PrmName': $thisForm.find('[name=PrmName]').val().trim(),
                        'PrmStartDate': $thisForm.find('[name=PrmStartDate]').val().trim(),
                        'PrmEndDate': $thisForm.find('[name=PrmEndDate]').val().trim(),
                        'PrmAmount': $thisForm.find('[name=PrmAmount]').val().trim(),
                        'FK_MediaMaster': $thisForm.find('[name="FK_MediaMaster"]').val().trim(),
                        'FK_MediaSubMaster': $thisForm.find('[name="FK_MediaSubMaster"]').val().trim(),
                        'PrmDescription': $thisForm.find('[name=PrmDescription]').val().trim(),
                        'PaymentDetail': paymentdetails


                          
                    };
                    let _ActionUrl = "";
                    if (actiontype == "Add") { _ActionUrl = "@Url.Action("AddMedia", "MediaPromotion")"; } else { _ActionUrl = "@Url.Action("UpdateMedia", "MediaPromotion")"; }

                    $.ajax({
                        url: (actiontype == "Add") ? "@Url.Action("AddMedia", "MediaPromotion")" : "@Url.Action("UpdateMedia", "MediaPromotion")",
                        type: "POST",
                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (data) {

                            if (data.Process.IsProcess) {

                                $.each(data.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                });
                                $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                $thisForm.find('[perfect-ctype="input"]').val('');
                                $thisForm.find('[perfect-ctype="date"]').val('');
                                $thisForm.find('[perfect-ctype="hidden"]').val('');


                                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                if (onSuccess) {
                                    initialloadMediaPromotionform();
                                }
                            }
                            else {
                                $.each(data.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                        },
                        complete: function () {
                            $(ele).prop('disabled', false);
                        }
                    });
                }
                else {
                    $(ele).prop('disabled', false);
                    NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'In Payment Method Balance Amt. Should be  Zero ' });
                }

            }
        }
    }
    function ResetButton() {
        initialloadMediaPromotionform();
    }
    function Loadsubmedialist(ele) {
       
          let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $placeDropdown = $thisForm.find('[name=FK_MediaSubMaster]');//<--- Will give place select html element
        $placeDropdown.empty();
        $placeDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');

        let FK_MediaMaster = $thisForm.find('[name=FK_MediaMaster]').val();
      

       
         $.ajax({
                 url: "@Url.Action("GetSubmediamaster", "MediaPromotion")",
                type: "POST",
             data: { 'FK_MediaMaster': $('[name="FK_MediaMaster"]').val() },
             dataType: "json",
             contentType: 'application/x-www-form-urlencoded;charset=utf-8',
             success: function (ajaxOutput) {



                 if (ajaxOutput.Process.IsProcess) {

                             $.each(ajaxOutput.Data, function (key, value) {
                                 $placeDropdown.append($('<option/>', { "value": value.FK_MediaSubMaster }).text(value.SubMediaName)).selectpicker('refresh')
                                 });
                     if ($placeDropdown.attr('perfect-onloadSelect')) {
                         $placeDropdown.val($placeDropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                     }

                     }
                     else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                            
                         });
                     }
                     }

                 });


    }

    function validpaymntdetail(ele, tableKey, errorClass, isValid) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val() == null) {

            isValid = false;
            console.log('false', $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val());
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Payment Method');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val() < 1) {
            console.log('false', $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val());
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter a value greater than or equal to 1');
        }
        else {

            $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }


        return isValid;

    }
</script>