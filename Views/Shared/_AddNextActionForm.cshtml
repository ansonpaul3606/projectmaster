
@model PerfectWebERP.Models.NextActionModel.NextActionListModel

<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">@ViewBag.PageTitle</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">

                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Name</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_name" name="NextAction" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="generateShortName(this)" />
                            </div>
                        </div>
                    </div>


                    <div class="col-sm-6">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Short Name</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_shortName" name="ShortName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>





                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Action Module</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select id="module" class="form-control perfectValidate_string" onchange="fillActionStatus(this)" name="ActionModuleID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">

                                    <option value="">Please Select </option>

                                    @if (!(Model.ActionModuleList is null))
                                    {
                                        foreach (var actionModuleList in Model.ActionModuleList)
                                        {
                                            if (actionModuleList.ActionModuleID == 1 && System.Configuration.ConfigurationManager.AppSettings["Lead"] == "1")
                                            {
                                                <option value="@actionModuleList.ActionModuleID">@actionModuleList.ActionModuleName</option>
                                                break;
                                            }
                                            else
                                            {
                                                <option value="@actionModuleList.ActionModuleID">@actionModuleList.ActionModuleName</option>
                                            }
                                        }

                                    }

                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Action Status</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select id="status" class="form-control perfectValidate_string" name="ActionStatusID"  perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" perfect-onLoadSelect="">
                                    <option value="">Please Select</option>
                                </select>
                            </div>
                        </div>


                    </div>

                    <div class="col-sm-6 stageid">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Action Stage</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select id="ActionStage" class="form-control perfectValidate_string" name="ActionStageID" perfect-selectButton="nextActionStage Name" perfect-selectButtonAction="ActionStageAdding" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" perfect-onLoadSelect="">
                                    <option value="">Please select</option>

                                    @if (!(Model.ActionStatusNewList is null))
                                    {
                                        foreach (var ActionStatus in Model.ActionStatusNewList)
                                        {
                                            <option value="@ActionStatus.ID_Mode">@ActionStatus.ModeName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Sort Order</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <div class=" input-group mb-2">
                                    <input type="number" class="form-control perfectValidate_numeric_nm" placeholder="" name="SortOrder" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="input" value="@Model.SortOrder" min="0" />
                                </div>
                            </div>
                        </div>



                    </div>
                </div>


            </div>

            <div class="card-footer text-right" perfect-class="formFooter">
                @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                {
                    <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="updateNextAction(this)"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                }
                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="AddNextAction(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                </div>
        </form>

    </div>


</div>


<script>
    (function () {
        //jQuery('form').validate();//<-----  Validate/initialize our form on page load
        jQuery('select').selectpicker();
    })();




         function ResetButton(ele) {

             $('.stageid').hide();
             $('.dataTable tr').removeClass("SelectForDelete");
             loadNextActionAddForm();
    }


    // Function to add new NextAction


          function AddNextAction(ele) {


            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability

              if ($thisForm.find('[name="ActionModuleID"]').val() == 1) {
                  _ActionStageID = $thisForm.find('[name="ActionStageID"]').val();
                  $thisForm.find('[name="ActionStageID"]').addClass('perfectValidate_string');
              }
              else if ($thisForm.find('[name="ActionModuleID"]').val() == 2) {
                  _ActionStageID = 0;
                  $thisForm.find('[name="ActionStageID"]').removeClass('perfectValidate_string');
              }
            //$(ele).find('i').removeClass();

            console.log('> Add NextAction form IS valid', $thisForm.valid())
            if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

            $(ele).prop('disabled', true); // avoiding form submit the double click


            var inputData = {//<---- Input Json : this is the variable we pass to controller
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                NextAction: $thisForm.find('[name=NextAction]').val().trim(),
                ShortName: $thisForm.find('[name=ShortName]').val().trim(),
                ActionModuleID: $thisForm.find('[name=ActionModuleID]').val().trim(),
                ActionStatusID: $thisForm.find('[name=ActionStatusID]').val().trim(),
                SortOrder: $thisForm.find('[name=SortOrder]').val().trim(),
                ActionStageID: _ActionStageID/*$thisForm.find('[name=ActionStageID]').val().trim()*/,
            };


            console.log('> Add NextAction ajax input',inputData);


             $.ajax({
                 url: "@Url.Action("AddNewNextActionDetails", "NextAction")",
                type: "POST",

                 data: inputData,//<---- Input json : data passed to controller
                 dataType: "json",
                 contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                 success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                     if (ajaxOutput.Process.IsProcess) {

                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.success(value, "Success");
                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                         });
                         $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                         $thisForm.find('[perfect-ctype="input"]').val('');
                         $thisForm.find('[perfect-ctype="number"]').val('');



                         let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                         if (onSuccess) {
                             window[onSuccess]();
                         }

                         //---------- Do stuff if success

                         console.log('> Add new NextAction success data', ajaxOutput);
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });

        }

        }








    // Function to update 
    //$('.addcompany-jq-addnewuserUpdate').on('click',
        function updateNextAction(ele) {


            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability
            let _ActionStageID;
            if ($thisForm.find('[name="ActionModuleID"]').val() == 1) {                
                _ActionStageID = $thisForm.find('[name="ActionStageID"]').val();
                $thisForm.find('[name="ActionStageID"]').addClass('perfectValidate_string');
            }
            else if ($thisForm.find('[name="ActionModuleID"]').val() == 2) {
                _ActionStageID = 0;              
                $thisForm.find('[name="ActionStageID"]').removeClass('perfectValidate_string');
            }
            //perfectCRMvalidation.init($thisForm);

            if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                $(ele).prop('disabled', true);

                let pdata = $thisForm.data('pData');

                console.log('> Update NextAction form data saved',pdata);
                let inputData = {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    NextActionID: pdata.NextActionID,
                    NextAction: $thisForm.find('[name=NextAction]').val().trim(),
                    ShortName: $thisForm.find('[name=ShortName]').val().trim(),
                    ActionModuleID: $thisForm.find('[name=ActionModuleID]').val().trim(),
                    ActionStatusID: $thisForm.find('[name=ActionStatusID]').val().trim(),
                    SortOrder: $thisForm.find('[name=SortOrder]').val().trim(),
                    ActionStageID: _ActionStageID /*$thisForm.find('[name=ActionStageID]').val().trim()*/,
            };




            console.log('> Update nextaction ajax input',inputData);
                $.ajax({
                 url: "@Url.Action("UpdateNextActionDetails", "NextAction")",
                type: "POST",

                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                 success: function (ajaxOutput) { //<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                     if (ajaxOutput.Process.IsProcess) {

                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.success(value, "Success");
                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                         });


                         let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                         if (onSuccess) {
                             window[onSuccess]();
                         }

                         //---------- Do stuff if success
                         //toastr.success("Inside success", "Confirmation Box in table");

                         console.log('> update new NextAction success data', ajaxOutput);
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }


                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });

        }

        }



    function nextactionAdding() {
        let $tempModel = createSearchModalDOM().modal;

        $tempModel.find('.modal-title').addClass("d-none");
        $tempModel.show
        $tempModel.find('.modal-dialog').addClass('modal-xl')

        $tempModel.find('.modal-body').load('@Url.Action("GetNextActionForm", "NextAction")', function () {
            perfectCRMvalidation.init($(this).find('[perfect-class="form]'));
            initFunctions($(this));

        });
      
    }

    //Function To get Action Status According to Action Module 


    //$(function () {
    //    $("#module").change(function () {
    //        var selectedID = $(this).val();
    //        alert(" ID: " + selectedID);
    //    });
    //});

     function fillActionStatus(ele) {
         debugger
         let _ActionModuleID;
         let $this = $(ele).closest('[perfect-class="form"]');
         if ($this.find('[name="ActionModuleID"]').val() == 1) {
             $('.stageid').show();
             _ActionModuleID = $this.find('[name="ActionModuleID"]').val();
             $this.find('[name="ActionStageID"]').addClass('perfectValidate_string');            
         }
         else if ($this.find('[name="ActionModuleID"]').val() =="") {
             _ActionModuleID = 0;
             $('.stageid').hide();
             $this.find('[name="ActionStageID"]').removeClass('perfectValidate_string');
         }
         else {
             $('.stageid').hide();
             $this.find('[name="ActionStageID"]').val("").selectpicker('refresh');
             _ActionModuleID = $this.find('[name="ActionModuleID"]').val();
             $this.find('[name="ActionStageID"]').removeClass('perfectValidate_string');
         }
            let ActionModuleID = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                ActionModuleID: _ActionModuleID
            };
       
        $.ajax({
            url: '@Url.Action("GetActionStatusList", "NextAction")',
            type: "POST",
            data: ActionModuleID,//<---- Input json : data passed to controller
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded;charset=utf-8',
            success: function (ajaxOutput) {
               // <option value="">Please Select </option>
               // 

                if (ajaxOutput.Process.IsProcess) {
                    $this.find('[name="ActionStatusID"]').empty();
                    $this.find('[name="ActionStatusID"]').append($('<option/>', { value: "" }).text("Please Select"));

                    $.each(ajaxOutput.Data, function (keyOne, valueOne) {
                        $this.find('[name="ActionStatusID"]').append($('<option/>', { value: valueOne.ActionStatusID }).text(valueOne.ActionStatusName)).selectpicker('refresh');
                    });
                    
                }
                else {
                    $this.find('[name="ActionStatusID"]').empty();
                    $this.find('[name="ActionStatusID"]').append($('<option/>', { value: "" }).text("Please Select"));
                    $this.find('[name="ActionStatusID"]').val("").selectpicker('refresh');

                }


            },
            complete: function () {
                let $thisSelect = $this.find('[name="ActionStatusID"]');
                if ($thisSelect.attr('perfect-onLoadSelect')) {
                    $thisSelect.val($thisSelect.attr('perfect-onLoadSelect')).selectpicker('refresh');
                    $thisSelect.attr('perfect-onLoadSelect', '');
                }
                    
                
               
            }
        });
         if ($this.find('[name="NextAction"]').val()!= null) {
             $('#NextAction-error').hide();
         }
         if ($this.find('[name="ShortName"]').val() != null) {
             $('#ShortName-error').hide();
         }
         if ($this.find('[name="ActionModuleID"]').val() != null) {
             $('#ActionStage-error').hide();
         }
         if ($this.find('[name="ActionStatusID"]').val() != null) {
             $('#status-error').hide();
         }
         if ($this.find('[name="ActionStageID"]').val() != null) {
             $('#module-error').hide();
         }
         
         
         
        }


    function generateShortName(ele) {
        let $form = $(ele).closest('[perfect-class="form"]');
        var fullName = $form.find('[name="NextAction"]').val();
        var shortName = generateShortNameFromFullName(fullName);
        $form.find('[name="ShortName"]').val(shortName);

        if ($form.find('[name="NextAction"]').val() == null) {
            ('#NextAction-error').hide();
        }
    }


</script>



