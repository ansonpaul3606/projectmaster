@model PerfectWebERP.Models.PlaceModel.Locationlist



<style>
</style>

<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">Place</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>



    <div class="card-body msubmaster">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            @Html.AntiForgeryToken()@*aniforgery*@
            <div class="">

                <div class="row">


                    <div class="col-sm-6">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Name</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_string " placeholder="" name="Place" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="generatePlaceShortName(this)" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Short Name</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_shortName" placeholder="" name="ShortName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Post</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" name="PostID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" perfect-selectButton="AddPost" perfect-selectButtonAction="PostAdding">
                                    <option value="">Please select</option>
                                    @if (!(Model.PostList is null))
                                    {
                                        foreach (var postList in Model.PostList)
                                        {
                                            <option value="@postList.PostID">@postList.PostName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>

                    </div>
                    <div class="col-sm-6">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Sort Order</span>
                                <span class="text-danger"></span>
                            </label>
                            <div class="col-sm-8">
                                <input type="number" class="form-control perfectValidate_numeric_nm" placeholder="" name="SortOrder" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="input" value="@Model.SortOrder" />
                            </div>
                        </div>

                    </div>



                </div>

            </div>
            <div class="card-footer text-right" perfect-class="formFooter">

                @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                {
                    <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="updtePlace(this)"><i class="fa fa-refresh fa-spin  loaderClass"></i>Update</button>
                }
                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="AddPlace(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
            </div>
        </form>
        <div class="md-2 modal fade" perfect-class="formGroupModalPost" id="formGroupModalPost">
            <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
                <div class="modal-content">
                    <div class="modal-header border-0">
                        <h5 class="modal-title">Post</h5>
                        <button type="button" class="close" data-dismiss="modal">
                            <span>&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                        <div class="row">

                            <div class="col-sm-12" id="custmr-savspost">

                            </div>


                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>


</div>



<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>

<script>
    (function () {

        jQuery("select").selectpicker();//<-----  Validate/initialize selectpicker(the dropdown/combobox)
        //jQuery('form').validate();//<-----  Validate/initialize our form on page load


        // initFunctions('form')
        // $('[name=CustomerDate]').val(moment().format('YYYY-MM-DD'));//using moment .js or set in YYYY-MM-DD fromat 2021-12-30

    })();
    function AddPlace(ele) {


            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability



            console.log('> Add place form IS valid', $thisForm.valid())
        if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

            $(ele).prop('disabled', true);

            var inputData = {//<---- Input Json : this is the variable we pass to controller
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(), //antiForgery
                Place: $thisForm.find('[name=Place]').val().trim(),
                PostID: $thisForm.find('[name=PostID]').val().trim(),
                ShortName: $thisForm.find('[name=ShortName]').val().trim(),
                TransMode: localStorage.getItem("FRM_TRANSMODE"),
                SortOrder: $thisForm.find('[name=SortOrder]').val().trim(),

            };


            //console.log('> Add place ajax input',inputData);

             $.ajax({
                 url: "@Url.Action("AddNewPlace", "Place")",//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                 // headers: { "token_key": "1234" },
                 data:inputData,//<---- Input json : data passed to controller
                dataType: "json",
                 contentType: "application/x-www-form-urlencoded; charset=utf-8",
                 success: function (data) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                     if (data.Process.IsProcess) {

                         $.each(data.Process.Message, function (key, value) {
                             //toastr.success(value, "Success");
                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                         });
                         $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                         $thisForm.find('[perfect-ctype="input"]').val('');
                         $thisForm.find('[perfect-ctype="date"]').val('');


                         let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                         if (onSuccess) {

                             window[onSuccess]($thisForm);

                             //loadPlaceList();

                         }

                         //---------- Do stuff if success

                         console.log('> Add new place success data', data);
                     }
                     else {
                         $.each(data.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }



                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });

        }

        }


    function ResetButton(ele) {
        $('.dataTable tr').removeClass("SelectForDelete");
        loadAddForn();

       
    }



    function updtePlace(ele) {


            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability


            //$(ele).find('i').removeClass();

        console.log('> Add place form IS valid', $thisForm.valid())
        var savedData = $thisForm.data('pData');

        if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

            $(ele).prop('disabled', true);

            console.log('saved',savedData);

            var inputData = {//<---- Input Json : this is the variable we pass to controller
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                PlaceID: savedData.PlaceID,
                Place: $thisForm.find('[name=Place]').val().trim(),
                PostID: $thisForm.find('[name=PostID]').val().trim(),
                ShortName: $thisForm.find('[name=ShortName]').val().trim(),
                TransMode: localStorage.getItem("FRM_TRANSMODE"),
                SortOrder: $thisForm.find('[name=SortOrder]').val().trim(),

            };

            localStorage.removeItem("FRM_TRANSMODE");
            console.log('> Add place ajax input',inputData);

             $.ajax({
                 url: "@Url.Action("Update", "Place")",//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                 // headers: { "token_key": "1234" },
                 data: inputData,//<---- Input json : data passed to controller
                dataType: "json",
                 contentType: "application/x-www-form-urlencoded; charset=utf-8",
                 success: function (data) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                     if (data.Process.IsProcess) {

                         $.each(data.Process.Message, function (key, value) {
                             //toastr.success(value, "Success");
                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                         });
                         $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                         $thisForm.find('[perfect-ctype="input"]').val('');
                         $thisForm.find('[perfect-ctype="date"]').val('');


                         let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                         if (onSuccess) {

                             window[onSuccess]($thisForm);

                            // loadPlaceList();

                         }

                         //---------- Do stuff if success

                         console.log('> Add new place success data', data);
                     }
                     else {
                         $.each(data.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }



                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });

        }

        }

   
    function PostAdding(ele) {


            $('#formGroupModalPost').modal('show');
        let $savimgContainer = $('#custmr-savspost');
        $savimgContainer.load('@Url.Action("PostView", "Post")?mtd=@ViewBag.PostTransMode', function () {

            let $thisForm = $(this).find('[perfect-class="form"]');
            $thisForm.validate({ messages: validationMessagepost });
            $thisForm.attr('perfect-onFormSuccess', 'fn_loadPost_success');
            $('#HeaderIdPost').hide();
            $('#formGroupModalPost').modal('show');
        });

    }
    function loadAddPostForm() {
        let $savimgContainers = $('#custmr-savspost');
        $savimgContainers.load('@Url.Action("PostView", "Post")?mtd=@ViewBag.PostTransMode', function () {

            let $thisForm = $(this).find('[perfect-class="form"]');
            $thisForm.validate({ messages: validationMessagepost });
            $thisForm.attr('perfect-onFormSuccess', 'fn_loadPost_success');
            $('#HeaderIdPost').hide();
            $('#formGroupModalPost').modal('show');
        });
    }
    var validationMessagepost = {
        'PostName': {
            'required': 'Please Enter Name',
            'stringonly': 'Invalid Name selected',

        },
        'PostShortName': {
            'required': 'Please Enter Short Name',
            'alphanumeric': 'Invalid  Short Name selected',

        },
        'PostCode': {
            'required': 'Please Enter Pin Code',

        },
        'AreaID': {
            'required': 'Please select a Area',
            'stringonly': 'Invalid Area selected',

        },

    };
   
    function fn_loadPost_success(ele) {
     
 
        $(ele).closest('.modal').modal('hide');

        GetListPost();
       
     }

    function GetListPost() {
        let $thisForm = $('[perfect-class="form"]');
        $.ajax({
            url: '@Url.Action("GetPostLists", "Place")',
            type: "Get",
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {              
                let $menuDropdown = $thisForm.find('[name=PostID]');//<--- Will give place select html element

               
               $menuDropdown.empty().selectpicker('refresh');
                $menuDropdown.append($('<option/>', { "value": "" }).text("Please Select")).selectpicker('refresh');

                if (ajaxOutput.Process.IsProcess) {
                    console.log(ajaxOutput);
                    $.each(ajaxOutput.Data, function (key, value) {
                        $menuDropdown.append($('<option/>', { "value": value.PostID }).text(value.PostName)).selectpicker('refresh');

                    });
               
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        //toastr.warning(value, "Error");
                        NotificationMessage({ 'type': 'warning', 'heading': 'warning', 'message': value });
                    });
                }
            },

          complete: function () { initFunctions($thisForm); }
        });
    }

    function generatePlaceShortName(ele) {
        let $form = $(ele).closest('[perfect-class="form"]');
        var fullName = $form.find('[name="Place"]').val();
        var shortName = generateShortNameFromFullName(fullName);
        $form.find('[name="ShortName"]').val(shortName);
    }
</script>