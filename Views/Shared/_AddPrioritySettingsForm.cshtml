
@model PerfectWebERP.Models.PrioritySettingsModel.PrioritySettingsModelView


<div class="card ">
    <div class="card-header">
        <h6 class="card-title col-12">@ViewBag.PageTitle </h6>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">


                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Effect Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">

                                    <input type="date" id="EffectDate" class="form-control perfectValidate_date" name="EffectDate" perfect-class="formGroupControl" perfect-ctype="date" max="2050-01-01" perfect-css="date" />

                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">

                                <span perfect-class="formGroupLabel">Category</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_numeric" name="CategoryID" id="Categoryid" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" onchange="clearproduct(this)">

                                    <option value="">Please Select </option>

                                    @if (!(Model.CategoryList is null))
                                    {
                                        foreach (var categorylist in Model.CategoryList)
                                        {
                                            <option value="@categorylist.CategoryID">@categorylist.CategoryName</option>
                                        }

                                    }

                                </select>

                            </div>

                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Product</span>

                            </label>
                            <div class="col-sm-8 ">
                                <div class="input-group">
                                    <input type="text" class="form-control product" name="ProductName" id="ProductName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="FK_Product" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this, 29, 'Product List', [])" BindName="ProductName" BindVal="FK_Product" Function="1" Criterea1="CategoryID" Criterea2=""></button>

                                    </div>
                                    <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12">
                        <div class="daccordion__header">
                            <span class="accordion__header--text">Criteria DETAILS</span>
                        </div>
                        <br />

                        <div class="row">


                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Priority</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8 PerError">
                                        <select class="form-control" name="PriorityID" perfect-tempTable-Criteria="Priority" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">

                                            <option value="">Please select</option>
                                            @if (!(Model.PriorityList is null))
                                            {
                                                foreach (var PriorityList in Model.PriorityList)
                                                {

                                                    <option value="@PriorityList.ID_Mode">@PriorityList.ModeName</option>
                                                }
                                            }

                                        </select>
                                        @*<div class="text-danger temptableError"></div>*@
                                        <span class="invalid-feedback animated fadeInUp d-block temptableError"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Criteria</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8 PerError">
                                        <select class="form-control" name="CriteriaID" perfect-tempTable-Criteria="Criteria" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="Showcount(this)">

                                            <option value="">Please select</option>
                                            @if (!(Model.CriteriaLists is null))
                                            {
                                                foreach (var CriteriaLists in Model.CriteriaLists)
                                                {

                                                    <option value="@CriteriaLists.ID_Mode">@CriteriaLists.ModeName</option>
                                                }
                                            }

                                        </select>
                                        <div class="text-danger temptableError"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">

                                        <span perfect-class="formGroupLabel">Days</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-7">
                                        <input type="text" class="form-control text-right " perfect-tempTable-Criteria="Days" name="Days" id="Days" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'Days',0)" min="0" maxlength="13" />
                                        <div class="text-danger temptableError"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-2 DivCount">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-3 col-form-label">
                                        <span perfect-class="formGroupLabel">Count</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control text-right " perfect-tempTable-Criteria="Count" name="Count" id="Count" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'Count',0)" min="0" maxlength="13" />
                                        <div class="text-danger temptableError"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <div class="col-sm-6">
                                    <input type="checkbox" class="form-check-input" id="Warning" name="Warning" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-tempTable-Criteria="Warning" title="Not Convert to Warm/Cold,Only Shows Warning message" perfect-css="checkbox"><span perfect-class="formCheckInputText">Warning Only</span>
                                </div>

                            </div>


                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Warning Before(D)</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control text-right " perfect-tempTable-Criteria="Warningbefore" name="Warningbefore" id="Warningbefore" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'Warningbefore',0)" min="0" maxlength="13" />

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Amount</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control text-right " perfect-tempTable-Criteria="Amount" name="Amount" id="Amount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'Amount',3)" min="0" maxlength="13" />

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Amount Criteria</span>

                                    </label>
                                    <div class="col-sm-7">
                                        <select class="form-control" name="AmountCriteria" perfect-class="formGroupControl" perfect-tempTable-Criteria="AmountCriteria" id="AmountCriteria" perfect-ctype="select" perfect-css="select">
                                            <option value="">Please select</option>
                                            <option value="1"><</option>
                                            <option value="2"><=</option>
                                            <option value="3">=</option>
                                            <option value="4">></option>
                                            <option value="5">>=</option>

                                        </select>
                                        <div class="text-danger temptableError"></div>
                                    </div>
                                </div>
                            </div>


                            <div class="col-sm-2">
                                <button type="button" class="btn btn-primary1"id="idsubtableadd" perfect-css="button" onclick="CriteriaDetailsTable_create(this,'Criteria',[])" name="reset" align="center"><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                                <button class="btn btn-light1" type="button" id="idsubtableclear"data-toggle="tooltip" data-placement="top" data-html="true" onclick="clearCriteria(this,'Criteria')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                            </div>



                            <div class="col-sm-12 mt-2">

                                <div class="table-responsive" perfect-tempTable="Criteria" id="Criteriadetail" perfect-tempTable-lastindex="0" perfect-tempTable-action="0">

                                </div>
                            </div>
                        </div>

                            @*</div>*@
                        </div>
                </div>


                <div class="card-footer text-right" perfect-class="formFooter">
                   
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_Prioritysettings_update(this,'new')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                </div>
            </div>
        </form>
    </div>



</div>
<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>

<script>

    $(document).ready(function () {
        let $thisform = $('[perfect-class="form"]');
        $('.DivCount').hide();
    });
    function getfunction(ele) {
    }
    function clearproduct(ele) {
        let $thisform = $('[perfect-class="form"]');
        $thisform.find('[name="ProductName"]').val('');
        $thisform.find('[name="FK_Product"]').val(0);
    }

    function CriteriaDetailsTable_create(ele, tkey, uniq = []) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';

        //make index


        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;
        if (thisactionIndex > 0) {
            //means update
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            //insert
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }
        //
       

        let Counts = $('[name=Count]').val() == null || $('[name=Count]').val() == "" || $('[name=Count]').val() == undefined ? 0 : $('[name=Count]').val();

        $('[name=Count]').val(Counts);

        let Warningbefores = $('[name=Warningbefore]').val() == null || $('[name=Warningbefore]').val() == "" || $('[name=Warningbefore]').val() == undefined ? 0 : $('[name=Warningbefore]').val();
        $('[name=Warningbefore]').val(Warningbefores);
        let Amounts = $('[name=Amount]').val() == null || $('[name=Amount]').val() == "" || $('[name=Amount]').val() == undefined ? 0 : $('[name=Amount]').val();
        $('[name=Amount]').val(Amounts);
        debugger
        let valid = true;
     
        if ($thisForm.find("[name='PriorityID']").val() > 0) {
            $thisForm.find("[name='PriorityID']").closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        else if ($thisForm.find("[name='PriorityID']").val() == "" || $thisForm.find("[name='PriorityID']").val() <= 0 || $thisForm.find("[name='PriorityID']").val() == undefined) {
            isValid = false;
            $thisForm.find("[name='PriorityID']").closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Priority');
        }

        if ($thisForm.find("[name='CriteriaID']").val() > 0) {
            $thisForm.find("[name='CriteriaID']").closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        else if ($thisForm.find("[name='CriteriaID']").val() == "" || $thisForm.find("[name='CriteriaID']").val() <= 0 || $thisForm.find("[name='CriteriaID']").val() == undefined) {
            isValid = false;
            $thisForm.find("[name='CriteriaID']").closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Criteria');
        }
        if ($thisForm.find("[name='Days']").val() > 0) {
            $thisForm.find("[name='Days']").closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        else if ($thisForm.find("[name='Days']").val() == "" || $thisForm.find("[name='Days']").val() <= 0 || $thisForm.find("[name='Days']").val() == undefined) {
            isValid = false;
            $thisForm.find("[name='Days']").closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Day');
        }

        if ($thisForm.find("[name='CriteriaID']").val() >= 4) {
            if ($thisForm.find("[name='Count']").val() > 0) {
                $thisForm.find("[name='Count']").closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
            else if ($thisForm.find("[name='Count']").val() == "" || $thisForm.find("[name='Count']").val() <= 0 || $thisForm.find("[name='Count']").val() == undefined) {
                isValid = false;
                $thisForm.find("[name='Count']").closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Count');
            }
        }
      

        let prevData = [];
        $tblcontainer.find('table > tbody').find('tr').each(function () {
            if (isNew) {
                prevData.push($(this).data('pData'));
            }
            else {
                if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                    prevData.push($(this).data('pData'));
                }

            }

        })
        //if (unique.length > 0) {
        //    //getting previous data
        //    let prevData = [];
        //    $tblcontainer.find('table > tbody').find('tr').each(function () {
        //        if (isNew) {
        //            prevData.push($(this).data('pData'));
        //        }
        //        else {
        //            if (parseInt($(this).attr(indexname)) != thisactionIndex) {
        //                prevData.push($(this).data('pData'));
        //            }

        //        }

        //    })


        //    unique.forEach(function (key, i) {
        //        console.log('unid -> key:' + key + "| index :" + i);
        //        let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
        //        //let headerEleName = $thisForm.find('[name="lblProName"]').text();
        //        let atname = $thisEle.attr('name');
        //        let cvalue;

        //        //console.log('len')
        //        if ($thisEle.length != 0) {
        //            console.log('len', $thisEle)
        //            let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
        //            let errmessage = headerEleName + " Already exits"

        //            //getting current value in cval
        //            if ($thisEle.is('select')) {
        //                cvalue = $thisEle.val();
        //                //alert(cvalue);
        //            }
        //            else if ($thisEle.is('input')) {

        //                let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

        //                if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
        //                else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
        //                else { cvalue = $thisEle.val(); }
        //            }
        //            else { cvalue = $thisEle.val(); }

        //            // console.log('cvalue ->' + cvalue);

        //            //searching in previous data
        //            if (prevData.find(a => a[atname] == cvalue)) {
        //                // console.log('Search =>' + cvalue + '| attr :' + atname)
        //                $errorElement.text(errmessage);
        //                isValid = false;
        //            }
        //        }
        //    });
            
        //}

        if (prevData.find(a => a['PriorityID'] == $('[name=PriorityID]').val() && a['CriteriaID'] == $('[name=CriteriaID]').val())) {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Already Exists' });
            isValid = false;
        }
        else if (prevData.find(a => a['PriorityID'] == $('[name=PriorityID]').val() && $('[name=CriteriaID]').val() === "")) {
            if (prevData.find(a => a['PriorityID'] == $('[name=PriorityID]').val())) {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Already Exists' });
                isValid = false;
            }
        }
        else if (prevData.find(a => a['PriorityID'] == $('[name=PriorityID]').val() && $('[name=CriteriaID]').val() != "")) {
            if (prevData.find(a => a['PriorityID'] == $('[name=PriorityID]').val() && a['CriteriaID'] === "")) {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Already Exists' });
                isValid = false;
            }
            else if (prevData.find(a => a['PriorityID'] == $('[name=PriorityID]').val() && a['CriteriaID'] == $('[name=CriteriaID]').val())) {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Already Exists' });
                isValid = false;
            }
        }

        if (isValid && valid) {


            
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('nameAttr', nameAttr);

              
                if ($this.is('select')) {
                   
                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    //displat text of select
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    //tableOptionsTemp.onlyShowColumn.push(nameAttr + '_d')

                    insertData[nameAttr] = $this.val();
                   
                    $this.val('').selectpicker('refresh');


                 

                }
                else if ($this.is('input')) {

                    let inputType = $this.attr('type').toLocaleLowerCase();

                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp.isCheckType.push(nameAttr)
                        //clear field
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {

                        tableOptionsTemp.hideColumn.push(nameAttr)
                        insertData[nameAttr] = $this.val();

                       

                        

                    }
                  
                    else if (inputType == 'date') {

                        if ($this.val() == '') {

                            insertData[nameAttr] = '';

                        }
                        else {

                            insertData[nameAttr] = moment($this.val()).format('YYYY-MM-DD');
                            $this.val(moment().format('YYYY-MM-DD'));

                        }

                    }
                    else {
                        insertData[nameAttr] = $this.val();
                        $this.val('');
                      
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();
                    $this.val('');
                   
                }

             


            });

            if (isNew) {

                //this section nake table.table row
                if ($tblcontainer.find('table').length == 0) {

                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                   
                }
                else {

                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);


                  
                }

            }
            else {

                let table = $tblcontainer.find('table').DataTable()
                table.destroy()

                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);


              
            }


           
            $tblcontainer.attr('perfect-tempTable-action', 0);
        }
        return isValid;

    }

    var tableOptionsTempOut = {

        iconButton: {
            buttons: [

                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')
                       
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';
                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {

                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }

                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }


                        });



                    }
                },

                {


                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            //$thistbl.dataTable({ paging: false,  ordering: false });

                        }
                        else {
                            $thistbl.remove();
                        }
                      

                    }
                },

            ]
        },

        onlyShowColumn: [],
        hideColumn: ['SLNo'],
        serialNo: true,
        renameHeader: {
            'PriorityID': 'Priority', 'CriteriaID': 'Criteria', 'Days': 'Day', 'Count': 'Count'
           
        },
        rowAttribute: [],
        isCheckType: []
    };
    function clearCriteria(ele, tablekey) {


        let $thisform = $(ele).closest('[perfect-class="form"]');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');

        let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);

        if (tablekey = "Criteria") {

        }

    }
    function Showcount(ele) {

        let $thisform = $(ele).closest('[perfect-class="form"]');
        let criteriavalue = $thisform.find('[name="CriteriaID"]').val();
        if (criteriavalue == 4 || criteriavalue == 5) {
            $('.DivCount').show();
        }
        else {
            $('.DivCount').hide();
        }
    }
    function fn_Prioritysettings_update(element,actionType)
    {
        debugger
        let $thisForm = $(element).closest('[perfect-class="form"]');
        if ($thisForm.valid())
        {
          
            let $errorMsg = '';
            let $blnSuccess = false;
                    $(element).prop('disabled', true);


            let criteriadetails = [];
            $thisForm.find('[perfect-tempTable="Criteria"]').find('tbody').find('tr').each(function () {
                criteriadetails.push($(this).data('pData'));
            })



            if (criteriadetails.length <= 0) {
                $blnSuccess = false;
                $errorMsg = 'Please Fill Criteria Details';
            }
            else {
                $blnSuccess = true;
            }

            let _ID_Criteria = 0;
                    let _ActionUrl = "";

                    if (actionType === "new") {
                    
                        _ActionUrl = "@Url.Action("AddPrioritySettings", "PrioritySettings")";    
                    }
                  


                    let inputData = {
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        EffectDate: $('input[name="EffectDate"]').val(),
                        CategoryID: $('select[name="CategoryID"] option:selected').val(),
                        ProductID: $('input[name="FK_Product"]').val(),
                        CriteriaDetails: criteriadetails
                            
            };

            if ($blnSuccess)
                            {
                               $.ajax({
                                         url: _ActionUrl,
                                         type: "POST",
                                         data: inputData,
                                         dataType: "json",
                                         contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                         success: function (ajaxOutput) {
                                             console.log(ajaxOutput, 'ajaxOutput ...>>ln808')
                                             debugger
                                             if (ajaxOutput.IsProcess) {
                                                 $.each(ajaxOutput.Message, function (key, value) {
                                                     NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                                     $(element).prop('disabled', false);
                                                   
                                                     fn_Prioritysettings_initialload();
                                                 });
                                             }
                                             else {
                                                 $.each(ajaxOutput.Message, function (key, value) {
                                                     NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                     $(element).prop('disabled', false);
                                                    
                                                     fn_Prioritysettings_initialload();
                                                 });
                                             }

                                             $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                             $thisForm.find('[perfect-ctype="input"]').val('');
                                             $thisForm.find('[perfect-ctype="date"]').val('');
                                             let onSuccess = $thisForm.attr('perfect-onFormSuccess')
                                             if (onSuccess) {
                                                 window[onSuccess]();

                                             }
                                         },
                                         complete: function ()
                                         {
                                                $(element).prop('disabled', false);
                                         }
                                    });
                            }
                            else
                            {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': $errorMsg });
                        $(element).prop('disabled', false);
                            }
        }
    }
    function ResetButton() {
        fn_loadPrioritysettingsAddForm();
    }
    </script>