

@model PerfectWebERP.Models.ProductRateSettingsModel.Productratesettingsview
<div class="card">
    <div class="card-header">
        <h4 class="card-title col-12">Product Price Settings</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">
                  
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Price Type</span>
                                <span class="text-danger">*</span>
                                <input type="hidden" name="ID_ProductRateSetting" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control" name="ID_Name"  perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="FK_PriceFixingType" class="perfectValidate_numeric" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">

                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,90,'Price Type List',[])" Criterea1="0" Criterea2="0" BindName="ID_Name" BindVal="FK_PriceFixingType"></button>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>



                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel"> Effect Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date" name="EffectDate" perfect-class="formGroupControl" perfect-ctype="date" max="2050-01-01" perfect-css="date" onchange="datechecking(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel"> Expiry Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date" name="ExpiryDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" onchange="datechecking(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>

                                <div id="ExpiryDate-error" class="Custominvalid animated fadeInUp ExpiryDateerror" style="display: none;">Expiry Date should be greater than  Or Equal to Effect Date</div>

                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <input type="checkbox" class="form-control-check-input" name="MnuLstVisible" value="MnuLstVisible" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" style="margin-top: 11px;"><span>&nbsp;&nbsp; Active</span>
                    </div>

                </div>

               
                <div class="row">
                    <div class="col-sm-12">
                        <div class="daccordion__header">
                            <span class="accordion__header--text">Product Details</span>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 " perfect-class="TempTableAuthorizationLevel">
                                <br />

                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Category</span>
                                                <span class="text-danger">*</span>
                                            </label>

                                            <div class="col-sm-8">
                                                <select class="form-control" name="FK_Category" id="Categoryid" perfect-tempTable-ProductDT="Category"perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" onchange="clearproduct(this)">

                                                    <option value="">Please Select </option>

                                                    @if (!(Model.CategoryList is null))
                                                    {
                                                        foreach (var categorylist in Model.CategoryList)
                                                        {
                                                            <option value="@categorylist.FK_Category">@categorylist.Category</option>
                                                        }

                                                    }

                                                </select>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Product</span>
                                               
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="text" class="form-control " name="Product" perfect-tempTable-ProductDT="Product" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                    <input type="hidden" name="FK_Product" perfect-tempTable-ProductDT="FK_Product"class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <div class="input-group-append">

                                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,85,'Product List',[],['MinRate','MaxRate'])" Criterea1="FK_Category" Criterea2="0" BindName="Product" BindVal="FK_Product"></button>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Discount In</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <select class="form-control" name="DiscountInType" perfect-tempTable-ProductDT="DiscountInType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                        <option value="">Please Select </option>
                                                        <option value="1">Amount</option>
                                                        <option value="2">Percentage</option>
                                                    </select>
                                                    <input type="text"  class="form-control text-right" perfect-tempTable-ProductDT="DiscountInValue" name="DiscountInValue"  oninput="decimalpnt(this,'DiscountInValue',3)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  maxlength="12" />

                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4">
                                       
                                    </div>
                                    <div class="col-sm-4">
                                     
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                              
                                            </label>
                                            <div class="col-sm-4">
                                              
                                            </div>
                                            <div class="col-sm-4">
                                                <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Product" onclick="fn_createProductTable(this,'ProductDT',['Category'])"><i class="fa fa-plus" aria-hidden="true"></i></button>

                                                <button class="btn btn-light1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="clearsubtableproduct(this,'ProductDT')"><i class="fa fa-refresh" aria-hidden="true"></i></button>




                                            </div>
                                        </div>

                                    </div>

                                </div>


                                <div class="card-footer text-right" perfect-class="formFooter">

                                </div>
                                <div class="row">
                                    <div class="col-sm-12" style="padding-right:25px;padding-left:25px;">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <div class="table-responsive" perfect-tempTable="ProductDT" id="ProductDTHead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
          
            <div class="card-footer text-right" perfect-class="formFooter">

                @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                {
                <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_Updateproductratesetting(this,'update')"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                }
                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_Updateproductratesetting(this,'new')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                <button type="button" class="btn btn-light" perfect-css="button" onclick="fn_resetProductRateSettings(this)" name="reset">Clear</button>
            </div>
        </form>
</div>
    </div>
 

<script>
 //on load functions
    $(document).ready(function () {
        initFunctions('form');
    });
    function datechecking(ele) {


        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let effectdate = $thisForm.find('[name=EffectDate]').val();
        let expirydate = $thisForm.find('[name=ExpiryDate]').val();


        effectdate = new Date(effectdate);
        effectdate.setHours(0, 0, 0, 0)

        expirydate = new Date(expirydate);
        expirydate.setHours(0, 0, 0, 0)


        let today = new Date();
        today.setHours(0, 0, 0, 0);

        if (effectdate < today) {
           
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Entered date should be greater than or equal to Todays date' });

        }

        else if (expirydate < effectdate) {

            
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Expiry Date should be greater than or equal to Effect Date' });

        }

        else {

            $thisForm.find('[name="ExpiryDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
            $thisForm.find('[name="EffectDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
                return true;
            }




    }
    function decimalpnt(ele, name, range) {

        let input = $('#' + name);
        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
        input.on('keydown', function () {
            if (ele.value.includes('.')) {

            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.length == 10) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }
    function clearproduct(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[name=ProductID]').val(0);
        $thisForm.find('[name=Product]').val('');

    }
    var tableOptionsTempOut = {
        iconButton: {
            buttons: [

                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        let indexname = tableKey + 'index';
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {

                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            $thistbl.dataTable({ paging: true });
                        }
                        else {
                            $thistbl.remove();
                        }
                    }
                },
            ]
        },
        onlyShowColumn: [],
        hideColumn: ['FK_Category','FK_Product'],
        serialNo: true,
        renameHeader: {'FK_Category':'Category' },
        rowAttribute: [],
        isCheckType: []



    };
    function fn_createProductTable(element, tkey, uniq) {
        let $thisForm = $(element).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';


        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }



        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Category"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Category"]').val().length == null) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="Category"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select Category');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Category"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
       
        

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="DiscountInValue"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="DiscountInValue"]').val().length == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="DiscountInType"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="DiscountInType"]').val().length == null) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="DiscountInType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select the Discount In');
        }
       else if ($thisForm.find('[perfect-tempTable-' + tableKey + '="DiscountInValue"]').val() < 1) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="DiscountInType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Value Greater Than Zero');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="DiscountInType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
       
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="DiscountInType"]').val() == 2) {
            debugger
            let valmethod = $thisForm.find('[perfect-tempTable-' + tableKey + '="DiscountInValue"]').val();
            if (valmethod > 100) {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="DiscountInValue"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Percentage in Between 1 to 100');
                isValid = false;
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="DiscountInValue"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
        }
        


        if (unique.length > 0) {
            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }

                }

            })

            if (prevData.find(a => a['Category'] == $('[name=Category]').val() && a['FK_Product'] == $('[name=FK_Product]').val())) {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Already Exists' });
                isValid = false;
            }
            else if (prevData.find(a => a['Category'] == $('[name=Category]').val())) {
                if (prevData.find(a => a['Category'] == $('[name=FK_Category]').val())) {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Already Exists' });
                    isValid = false;
                }
            }
            else if (prevData.find(a => a['Category'] == $('[name=Category]').val() && $('[name=FK_Product]').val() != "")) {
                if (prevData.find(a => a['Category'] == $('[name=Category]').val() && a['FK_Product'] === "")) {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Already Exists' });
                    isValid = false;
                }
                else if (prevData.find(a => a['Category'] == $('[name=Category]').val() && a['FK_Product'] == $('[name=FK_Product]').val())) {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Already Exists' });
                    isValid = false;
                }
            }
           

        }

        if (isValid) {
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                if ($this.is('select')) {

                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    insertData[nameAttr] = $this.val();

                    $this.val('').selectpicker('refresh');
                }
                else if ($this.is('input')) {

                    let inputType = $this.attr('type').toLocaleLowerCase();

                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp.isCheckType.push(nameAttr)
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {
                        insertData[nameAttr] = $this.val();
                        $this.val('');

                    }

                    else {
                        insertData[nameAttr] = $this.val();

                        $this.val('');
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();

                    $this.val('');
                }
            });

            if (isNew) {
                if ($tblcontainer.find('table').length == 0) {
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                }
                else {
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                }
            }
            else {
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
            }

            $tblcontainer.attr('perfect-tempTable-action', 0);
            //$thisForm.find('[name="AldAmountTo"]').attr('readonly', true);
        }
    }

//to save data
    function fn_Updateproductratesetting(element, actionType) {

        let $thisForm = $(element).closest('[perfect-class="form"]');
        debugger
        let effectdate = $thisForm.find('[name=EffectDate]').val();
        let expirydate = $thisForm.find('[name=ExpiryDate]').val();

        effectdate = new Date(effectdate);
        effectdate.setHours(0, 0, 0, 0)

        expirydate = new Date(expirydate);
        expirydate.setHours(0, 0, 0, 0)


        let today = new Date();
        today.setHours(0, 0, 0, 0);
        if (expirydate < effectdate) {

            $thisForm.find('[name="ExpiryDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Expiry Date should be greater than or equal to Effect Date');


        }   
        else if (effectdate < today) {
            $thisForm.find('[name="EffectDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Entered date should be greater than or equal to Todays date');
        }
        else {
            //main else 1


                if ($thisForm.valid()) {//vakid if 1

                    let $errorMsg = '';
                    let $blnSuccess = false;
                    $(element).prop('disabled', true);


                    let productlist = [];
                    $thisForm.find('[perfect-tempTable="ProductDT"]').find('tbody').find('tr').each(function () {
                        productlist.push($(this).data('pData'));
                    })



                    if (productlist.length <= 0) {
                        $blnSuccess = false;
                        $errorMsg = 'Please Fill Product Details';
                    }
                    else {
                        $blnSuccess = true;
                    }

                    let _ID_Productratesettings = 0;
                    let _ActionUrl = "";

                    //ok
                    if (actionType === "new") {
                        _ID_Productratesettings = 0;
                        _ActionUrl = "@Url.Action("AddNewProductRateSettings", "ProductRateSettings")";
                    }
                    else if (actionType === "update") {
                        _ID_Productratesettings = $thisForm.find('[name="ID_ProductRateSetting"]').val();
                        _ActionUrl = "@Url.Action("UpdateProductRateSettings", "ProductRateSettings")";
                    }
                    else {}
                    //ok

                    let inputData = {
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        'ID_ProductRateSetting': _ID_Productratesettings,
                        'FK_PriceFixingType': $thisForm.find('[name="FK_PriceFixingType"]').val(),
                        'EffectDate': $thisForm.find('[name="EffectDate"]').val(),
                        'ExpiryDate': $thisForm.find('[name="ExpiryDate"]').val(),
                        'Active': $thisForm.find('[name=MnuLstVisible]').is(":checked"),
                        'ProductRateSettingDetails': productlist
                    };

                    if ($blnSuccess) {
                        $.ajax({
                            url: _ActionUrl,
                            type: "POST",
                            data: inputData,
                            dataType: "json",
                            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                            success: function (ajaxOutput) {//if($blnSuccess) ajax success
                                if (ajaxOutput.Process.IsProcess) {
                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                        $(element).prop('disabled', false);
                                        ProductRateSettingsInitialLoad();
                                    });
                                }
                                else {
                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                        $(element).prop('disabled', false);
                                        ProductRateSettingsInitialLoad();
                                    });
                                }

                                $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                $thisForm.find('[perfect-ctype="input"]').val('');
                                $thisForm.find('[perfect-ctype="date"]').val('');
                                let onSuccess = $thisForm.attr('perfect-onFormSuccess')
                                if (onSuccess) {
                                    window[onSuccess]();

                                }
                            },//if($blnSuccess) ajax success
                            complete: function () {
                                $(element).prop('disabled', false);
                            }
                        });
                    }


                    else {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': $errorMsg });
                        $(element).prop('disabled', false);
                    }
                }

            }
    }









    function fn_resetProductRateSettings(ele)
    {
        ProductRateSettingsInitialLoad();
    }


    function ComDetailsTable_Fill(ele, tkey, data, tableOptionsTempOut) {

        let $thisForm = $(ele)

        let tableOptionsTemp = tableOptionsTempOut;
        let insertData = []
        let tableKey = tkey;

        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);

        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');


        $.each(data, function (keyOne, valOne) {

            let pData = {};

            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])
            //---

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                console.log('name', valOne[nameAttr])
                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {


                        tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTemp.hideColumn.push(nameAttr);
                        //displat text of select

                        let selectText = ($this.val().length == 1) ? '' : $this.find('[value="' + valOne[nameAttr] + '"]').text();

                        pData[nameAttr + '_d'] = selectText;
                        pData[nameAttr] = valOne[nameAttr];
                        console.log('select', $this.find('options[value="' + valOne[nameAttr] + '"]').text());
                        console.log('selectText', $this.find('[value="' + valOne[nameAttr] + '"]').text());

                    }
                    else if ($this.is('input')) {

                        let inputType = $this.attr('type').toLocaleLowerCase();
                        console.log('inputType', inputType)
                        if (inputType == 'checkbox') {

                            pData[nameAttr] = valOne[nameAttr];

                            tableOptionsTemp.isCheckType.push(nameAttr);

                            console.log('checkbox', nameAttr)


                        }
                        else if (inputType == 'hidden') {

                            tableOptionsTemp.hideColumn.push(nameAttr);
                            pData[nameAttr] = valOne[nameAttr];


                        }

                        else if (inputType == 'date') {


                            pData[nameAttr] = moment(valOne[nameAttr]).format('DD-MM-YYYY');


                        }
                        else {
                            pData[nameAttr] = valOne[nameAttr];


                        }
                    }
                    else {
                        pData[nameAttr] = valOne[nameAttr];


                    }
                }



            });

            insertData.push(pData);
            console.log('insertdata', insertData)

            //----

        });

        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTemp));
        // $tblcontainer.find('table').dataTable({ paging: true });

    }

    function clearsubtableproduct(ele, tablekey) {


        let $thisform = $(ele).closest('[perfect-class="form"]');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');
        let errorClass = '.temptableError';
        $thisform.find('[perfect-tempTable-' + 'ProductDT' + '="DiscountInType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        $thisform.find('[perfect-tempTable-' + 'ProductDT' + '="Category"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');

        let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);

        if (tablekey = "ProductDT") {

        }

    }
</script>



