

@model PerfectWebERP.Models.ProductRecoveryModel.ProductRecoveryView
<style>
    .btnPerfectDelete {
        color: red;
        border: none
    }

    .DeleteRow2 {
    }

    .tableFixHead {
        overflow: auto;
        height: 300px;
    }

        .tableFixHead thead tr {
            position: sticky;
            top: 0;
            z-index: 1;
        }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 8px 16px;
    }
</style>



<div class="card ">
    <div class="card-header">
        <h4 class="card-title col-12">@ViewBag.PageTitle</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Recovery Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date" name="ProdRecoveryDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Customer</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control perfectValidate_string" name="CustomeName" perfect-class="formGroupControl" placeholder="" perfect-ctype="input" perfect-css="input" readonly>
                                    <input type="hidden" class="form-control " name="FK_Customer" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input">
                                    <div class="input-group-append">
                                        <button id="addarea-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,7,'Customer List',[],['ID_Customer','CustomeName','Address','MobileNo','State'])" criterea1="0" BindName="CustomeName" BindVal="FK_Customer" Function="2"></button>

                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <br /> <br />
                <div class="row">
                    <div class="col-12" id="id_ProdGrid" style="display:none">

                        <div class="card">
                            <div class="profile-personal-info" style="margin-bottom:-14px;">
                                @*<h4 class='text-primary'> DETAILS</h4>*@
                            </div>
                            <div class="card-body" style="padding:0px">
                                <div perfect-class="ModuleContainer" id="ProRtable" class="">
                                    <div class="table-responsive tableFixHead">
                                        <table class="table table-hover table-striped text-black">
                                            <thead class="thead-primary">
                                                <tr>
                                                    <th></th>
                                                    <th class="text-left" style="display:none">FK_CustomerWiseEMI</th>
                                                    <th class="text-left">Bill Date</th>
                                                    <th class="text-left">Product</th>
                                                    <th class="text-left">EMI No</th>
                                                    <th class="text-right">Due Amount</th>
                                                    <th class="text-right">Fine</th>
                                                    <th class="text-right">Balance</th>
                                                    <th class="text-right" style="display:none">FK_Sales</th>
                                                    <th class="text-left" style="display:none">FK_Product</th>
                                                    <th class="text-left">Remarks</th>
                                                </tr>
                                            </thead>
                                            <tbody id="ProReCTbody"></tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <input type="hidden" name="ID_ItemConversion" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                </div>
                <hr>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-body">
                                <div id="accordion-nine" class="accordion accordion-active-header">
                                    <div class="accordion__item">
                                        <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseOpeningstock">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text">PickUp Request</span>
                                            <span class="accordion__header--indicator"></span>
                                        </div>
                                        <div id="active-header_collapseOpeningstock" class="collapse accordion__body" data-parent="">
                                            <div class="accordion__body--text">
                                                <div class="col-sm-12" perfect-class="TempTableOpeningStock">
                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-4 col-form-label">
                                                                    <span perfect-class="formGroupLabel">PickUp Date</span>
                                                                </label>
                                                                <div class="col-sm-8">
                                                                    <input type="date" class="form-control" name="PickUpDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" onchange="datechck(this)" />
                                                                    <div class="invalid-feedback animated fadeInUp temptableErrors"></div>
                                                                </div>

                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-4 col-form-label">
                                                                    <span perfect-class="formGroupLabel">PickUp Time</span>
                                                                </label>
                                                                <div class="col-sm-8">
                                                                    <input type="time" class="form-control" placeholder="" id="PickTime" name="PickUpTime" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-4 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Employee</span>
                                                                </label>
                                                                <div class="col-sm-8">
                                                                    <div class="input-group">
                                                                        <input type="text" class="form-control perfectValidate_string" name="Employee" perfect-class="formGroupControl" placeholder="" perfect-ctype="input" perfect-css="input" readonly>
                                                                        <input type="hidden" class="form-control " name="FK_Employee" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input">
                                                                        <div class="input-group-append">
                                                                            <button id="addarea-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,6,'Employee List',[],['Department'])" BindName="Employee" BindVal="FK_Employee" Function="1"></button>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-3">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-4 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Vehicle  Details</span>
                                                                </label>
                                                                <div class="col-sm-8">
                                                                    <div class="input-group">
                                                                        <input type="text" class="form-control perfectValidate_string_nm" name="VehicleDet" id="VehicDet" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="150" />
                                                                    </div>
                                                                    <div class="text-danger temptableError"></div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Description</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control perfectValidate_string_nm" name="ProdRecNarration" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="500" />

                                </div>
                                <div class="text-danger temptableError"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer text-right" perfect-class="formFooter">
                    @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                    {
                        <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="UpdateProductRecovery(this,'Update')"><i class="fa fa-refresh fa-spin  loaderClass"></i>Update</button>
                    }
                    @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                    {
                        <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="UpdateProductRecovery(this,'Add')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                    }
                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                </div>

            </div>
        </form>

    </div>
</div>


<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>
<script>

    (function () {

        jQuery("select").selectpicker();

        let $thisForm = $(this).find('[perfect-class="form"]');
        $('#VehicDet').attr('disabled', true);
        $('#PickTime').attr('disabled', true);

    })();

    $(document).ready(function () {
        initFunctions('form');

        let $thisForm = $(this).find('[perfect-class="form"]');
        var today = new Date();
        var day = today.getDate() > 9 ? today.getDate() : "0" + today.getDate(); // format should be "DD" not "D" e.g 09
        var month = (today.getMonth() + 1) > 9 ? (today.getMonth() + 1) : "0" + (today.getMonth() + 1);
        var year = today.getFullYear();

        $thisForm.find('[name="ProdRecoveryDate"]').attr('max', year + "-" + month + "-" + day);
        $('[name="Employee"]').removeClass('perfectValidate_string');
    });
    function getfunctionAssign(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let RecDate = $thisForm.find('[name="ProdRecoveryDate"]').val();
        if (RecDate != "") {
            fn_EmiCustomerDetails();
        }
        else {
            NotificationMessage({'type':'error','heading':'Error','message':'Please Select Recovery Date'})
        }

    }
    function fn_EmiCustomerDetails() {
        debugger
        let $thisForm = $('[perfect-class="form"]');

        var inputData = {
            'FK_Customer': $thisForm.find('[name="FK_Customer"]').val(),
            'CollectionDate': $thisForm.find('[name="ProdRecoveryDate"]').val()
        }

        $.ajax({
            url: "@Url.Action("GetCustomerTransactionDue", "ProductRecovery")",
            type: "POST",
            data: inputData,
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (data) {
                debugger
                if (data.Process.IsProcess) {
                    debugger
                    let ItemData = data.data;
                    $("#ProReCTbody tr").remove();
                    if (ItemData) {
                        document.getElementById('id_ProdGrid').style.display = 'block';

                        let $tbody = $thisForm.find('[perfect-class="ModuleContainer"]').find('tbody');
                        debugger
                        $.each(ItemData, function (i, values) {
                            
                            if (values.FK_Product != 0) {
                                let rowCount = (i + 1);
                                let $row = $('<tr/>', { id: rowCount, class: "trvalue" });

                                $row.append($('<td>', { class: "ChkProd" }).html(
                                    $('<label>').append(
                                        $('<input />', {
                                            type: 'checkbox',
                                            name: 'ItemCheckPro',
                                            'perfect-class': 'formCheckInput',
                                            'perfect-ctype': "checkbox",
                                            checked: 'checked' // Add the checked attribute here
                                        })
                                    ).append('') // Replace '' with your desired label text
                                        .on('change', function () {

                                        })
                                ))

                                    .append($('<td>', { class: "FK_CustomerWiseEMI", style:'display:none' }).text(values.FK_CustomerWiseEMI))
                                    .append($('<td>', { class: "BillDate" }).text(values.BillDate))
                                    .append($('<td>', { class: "Product" }).text(values.Product))
                                    .append($('<td>', { class: "EMINo" }).text(values.EMINo))
                                    .append($('<td>', { class: "Amount text-right" }).text((values.Amount).toFixed(2)))
                                    .append($('<td>', { class: "Fine text-right" }).text((values.Fine).toFixed(2)))
                                    .append($('<td>', { class: "Balance text-right" }).text((values.Balance).toFixed(2)))
                                    .append($('<td>', { class: "FK_Sales", style: 'display:none' }).text(values.FK_Sales))
                                    .append($('<td>', { class: "FK_Product", style: 'display:none'  }).text(values.FK_Product))

                                    .append($('<td>', { class: "Remark" }).html(
                                        $('<input/>', {
                                            type: 'text',
                                            class: 'form-control text-left',
                                            maxlength: '500',
                                            name: "Remark",
                                            id: "Rmrkid",
                                            oninput: "removeSpaces(this)",
                                            // You can set an initial value for the remark here if needed
                                            // value: 'Initial Remark Value'
                                        })

                                    ))


                                $tbody.append($row);
                            }
                            else {
                                $("#ProReCTbody tr").remove();
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Not Found' })
                            }

                        });


                    }
                    else {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'No Records Found.' })
                        ProductRecovery_initLoad();

                    }
                }
                else {
                    
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'No Records Found.' })
                    ProductRecovery_initLoad();
                }

            },
            error: function (xhr, textStatus, errorThrown) {
                var errorResponse = JSON.parse(xhr.responseText);
                var errorMessage = errorResponse.Process.Message;
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': errorMessage });
            }
        });

    }
    function removeSpaces(input) {
        // Remove spaces at the beginning and end
        input.value = input.value.replace(/^\s+/, '');
        input.value = input.value.replace(/[|!#^~`]/g, '');
    }
    function UpdateProductRecovery(ele, actiontype) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        var ProRecTable = $('#ProReCTbody tr.trvalue');
        var ProductRecoveryDetails = [];

        if (ProRecTable.length > 0) {

            ProRecTable.each(function () {

                if ($(this).find('.ChkProd input[type="checkbox"]').is(":checked")) {
                    var originalDate = $(this).find(".BillDate").text();

                    // Split the date string by "/"
                    var dateParts = originalDate.split("/");
                    // Rearrange the date parts in "yyyy-mm-dd" format
                    var formattedDate = dateParts[2] + "-" + dateParts[1] + "-" + dateParts[0];

                    var ArrItem = {
                        FK_CustomerWiseEMI: $(this).find(".FK_CustomerWiseEMI").text(),
                        BillDate: formattedDate, // Use the formatted date here
                        Product: $(this).find(".Product").text(),
                        EMINo: $(this).find(".EMINo").text(),
                        Amount: $(this).find(".Amount").text(),
                        Fine: $(this).find(".Fine").text(),
                        Balance: $(this).find(".Balance").text(),
                        FK_Sales: $(this).find(".FK_Sales").text(),
                        FK_Product: $(this).find(".FK_Product").text(),
                        Remark: $(this).find('.Remark input').val()
                    };
                    ProductRecoveryDetails.push(ArrItem);
                }

            });

        }debugger

        if ($thisForm.valid()) {

            if (ProductRecoveryDetails.length > 0) {
                if (getfunction(ele)) {
                    if (datechck(ele)) {
                        debugger
                        var InputData = {
                            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                            TransMode: ProRecoTransMode,
                            ProdRecoveryDate: $thisForm.find('[name="ProdRecoveryDate"]').val(),
                            FK_Customer: $thisForm.find('[name="FK_Customer"]').val(),
                            PickUpDate: $thisForm.find('[name="PickUpDate"]').val(),
                            PickUpTime: $thisForm.find('[name="PickUpTime"]').val(),
                            FK_Employee: $thisForm.find('[name="FK_Employee"]').val(),
                            VehicleDet: $thisForm.find('[name="VehicleDet"]').val(),
                            ProdRecNarration: $thisForm.find('[name="ProdRecNarration"]').val(),
                            ProductRecoveryDetails: ProductRecoveryDetails,
                            LastID: LastID_ProductRecovery
                        }
                        clearSessionValue(LastIDSessionKey);
                        let _ActionUrl = "";
                        if (actiontype == "Add") { _ActionUrl = "@Url.Action("AddProductRecoverydata", "ProductRecovery")"; } else { _ActionUrl = "@Url.Action("UpdateProductRecoverydata", "ProductRecovery")"; }

                        $.ajax({
                            url: (actiontype == "Add") ? "@Url.Action("AddProductRecoverydata", "ProductRecovery")" : "@Url.Action("UpdateProductRecoverydata", "ProductRecovery")",
                            type: "POST",
                            data: InputData,
                            dataType: "json",
                            contentType: "application/x-www-form-urlencoded; charset=utf-8",
                            success: function (ajaxOutput) {

                                if (ajaxOutput.Process.IsProcess) {

                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                    });
                                    let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                    if (onSuccess) {
                                        window[onSuccess]();
                                    }
                                }
                                else {
                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                    });

                                }
                            },
                            complete: function () {
                                $(ele).prop('disabled', false);
                            }

                        });
                    }
                }

            }
            else {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': "Please Select Atleast One Data" });
            }
        }

    }
    function ResetButton(ele) {
        ProductRecovery_initLoad();
    }
    function datechck(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let Pickupdt = $thisForm.find('[name="PickUpDate"]').val();
        let RecoDdt = $thisForm.find('[name="ProdRecoveryDate"]').val();

        var Pickdt = new Date(Pickupdt);
        Pickdt.setHours(0, 0, 0, 0)

        var ProRecodt = new Date(RecoDdt);
        ProRecodt.setHours(0, 0, 0, 0)

        let errorClass6 = '.temptableErrors';
        if (Pickdt >= ProRecodt) {

            $thisForm.find('[name="PickUpDate"]').closest('[perfect-class="formGroup"]').find(errorClass6).attr("style", "display:none");
            $thisForm.find('[name="PickUpDate"]').closest('[perfect-class="formGroup"]').find(errorClass6).text('');
            isValid = true;
            $('#VehicDet').attr('disabled', false);
            $('#PickTime').attr('disabled', false);

        }
        else if (Pickdt <= ProRecodt) {

             $thisForm.find('[name="PickUpDate"]').closest('[perfect-class="formGroup"]').find(errorClass6).attr("style", "display:block");
             $thisForm.find('[name="PickUpDate"]').closest('[perfect-class="formGroup"]').find(errorClass6).text('PickUp Date should be greater than or equal to Recovery Date');
             isValid = false;
            return false;
        }

        if (Pickupdt != "") {
            $('[name="Employee"]').addClass('perfectValidate_string');

            let empl = parseFloat($('[name="FK_Employee"]').val()) || 0;
            if (empl === 0) { return false; } else { return true; }

        }
        //else if (Pickupdt == "") {
        //    return false;
        //}
        else {
            $('[name="Employee"]').val("");
            $('[name="FK_Employee"]').val(0);
            $('#VehicDet').attr('disabled', true);
            $('#PickTime').attr('disabled', true);
            $thisForm.find('[name="VehicleDet"]').val("");
            $thisForm.find('[name="PickUpTime"]').val("");
            $('[name="Employee"]').removeClass('perfectValidate_string');
           
            return true;
        }
        //return true
    }

    function getfunction(ele){

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let Pickupdt = $thisForm.find('[name="PickUpDate"]').val();
        let emp = $thisForm.find('[name="FK_Employee"]').val();

        if (emp != 0 && Pickupdt == "") {

            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please Select PickUp date' });
            return false
        }
        else {
            return true;
        }

    }


</script>
