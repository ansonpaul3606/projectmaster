@*----------------------------------------------------------------------
    Created By	: Kavya K
    Created On	: 25/11/2022
    Purpose		: ProductionStage
    -------------------------------------------------------------------------
    Modification
    On			By					OMID/Remarks
    -------------------------------------------------------------------------
    -------------------------------------------------------------------------*@



<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">Product Stage Settings</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">

                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Product</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="hidden" name="ID_ProductionStage" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" value="0" />
                                    <input type="text" class="form-control perfectValidate_string" name="ProductName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                    <input type="hidden" name="ProductID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" value="" />
                                    <input type="hidden" name="StockId" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />

                                    <div class="input-group-append">
                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,81,'Product List',['FK_Product'],ProductionsettingTransMode)" Criterea1="0" Criterea2="0" BindName="ProductName" BindVal="ProductID"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Effect Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date" name="PSDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Stage</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control perfectValidate_string" name="StageName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                    <input type="hidden" name="FK_Stage" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" value="" />

                                    <div class="input-group-append">
                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,72,'Production Stage List',['FK_Stage'],ProductionsettingTransMode)" Criterea1="0" Criterea2="0" BindName="StageName" BindVal="FK_Stage"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Team</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control perfectValidate_string" name="TeamName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                    <input type="hidden" name="FK_Team" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" value="" />

                                    <div class="input-group-append">
                                        <button id="addaccounthead-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,71,'Production Team List',['FK_Team'],ProductionsettingTransMode)" Criterea1="ProductID" Criterea2="0" BindName="TeamName" BindVal="FK_Team"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Duration Type</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" name="PSDurationType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please Select</option>
                                    @if (!(Model.DurationType is null))
                                    {
                                        foreach (var DT in Model.DurationType)
                                        {
                                            <option value="@DT.ID_Mode">@DT.ModeName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Duration </span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control text-right perfectValidate_numeric" placeholder="" name="PSDurationPrd" min="1" maxlength="10" oninput="decimalpnt(this, 'PSDurationPrd', 0);" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Parallel Count</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-4">
                                <input type="text" class="form-control text-right perfectValidate_numeric" min="1" placeholder="" name="PSPrllCount" oninput="decimalpnt(this, 'PSPrllCount', 0);" maxlength="10" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                            <div class="col-sm-4">

                                <input type="checkbox" class="form-check-input" name="PSEmpWise" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" style="margin-top: 11px;margin-left:0%;">
                                <label style="margin-top: 10px;margin-left:16%;"> Employee Wise</label>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Work Percentage</span>
                            </label>
                            <div class="col-sm-8">

                                <input type="text" class="form-control text-right" min="0" max="100" maxlength="5" name="PSWorkPer" id="PSWorkPer" oninput="decimalpnt(this, 'PSWorkPer', 3);" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    @*<div class="row">*@
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Remarks</span>

                            </label>
                            <div class="col-sm-8">
                                <textarea rows="2" name="PSRemarks" perfect-ctype="input" class="form-control" maxlength="500"></textarea>
                            </div>
                        </div>
                    </div>
                    @*</div>*@
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="daccordion__header">
                            <span class="accordion__header--text">Input Materials</span>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 " perfect-class="TempTableProduct">
                                <br />
                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label name="lblProduct" class="col-sm-5 col-form-label">Material<span class="text-danger">&nbsp;*</span></label>
                                            <div class="col-sm-7">
                                                <div class="input-group">
                                                    <input type="text" class="form-control " perfect-tempTable-MaterialDetailsTable="Product_Name" name="Product_Name" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                    <input type="hidden" name="FK_Product" perfect-tempTable-MaterialDetailsTable="FK_Product" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="hidden" name="PSMMode" perfect-tempTable-MaterialDetailsTable="PSMMode" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" value="I" />
                                                    <div class="input-group-append">

                                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,82,'Product List',[],ProductionsettingTransMode)" Criterea1="0" Criterea2="0" BindName="Product_Name" BindVal="FK_Product"></button>
                                                    </div>
                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-3 col-form-label">Quantity<span class="text-danger">&nbsp;*</span></label>
                                            <div class="col-sm-5">
                                                <input type="text" maxlength="13" class="form-control text-right" perfect-tempTable-MaterialDetailsTable="Quantity" name="Quantity" id="inQuantity" oninput="decimalpnt(this, 'inQuantity', 4);" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                <div class="text-danger temptableError mtrlQtyerror">
                                                </div>
                                            </div>
                                            <div class="col-sm-4">
                                                <input type="checkbox" class="form-check-input" name="PSMStockUpdate" perfect-tempTable-MaterialDetailsTable="PSMStockUpdate" perfect-class="formCheckInput" perfect-ctype="checkbox" style="margin-top: 11px;margin-left:1%;" perfect-css="checkbox">
                                                <label style="margin-top: 10px;margin-left:18%;"> Effect Stock</label>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-2">
                                        <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Material" onclick="createtable(this,'MaterialDetailsTable',['FK_Product'])" style="margin-left:0px" ;><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                                        <button class="btn btn-light1 " id="btnresetMtrl" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="MaterialDetailsclear(this,'MaterialDetailsTable')" style="margin-left:-2px" ;><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group row" perfect-class="formGroup">
                                <div class="table-responsive" perfect-tempTable="MaterialDetailsTable" id="Material" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                            </div>
                        </div>

                    </div>
                    <div class="col-sm-6">
                        <div class="daccordion__header">
                            <span class="accordion__header--text">Output Products</span>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 " perfect-class="TempTableProduct">
                                <br />
                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label name="lblProduct" class="col-sm-5 col-form-label">Product<span class="text-danger">&nbsp;*</span></label>
                                            <div class="col-sm-7">
                                                <div class="input-group">
                                                    <input type="text" class="form-control " perfect-tempTable-ProductDetailsTable="Product" name="Product" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                    <input type="hidden" name="FK_Product" perfect-tempTable-ProductDetailsTable="FK_Product" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="hidden" name="PSMMode" perfect-tempTable-ProductDetailsTable="PSMMode" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" value="O" />
                                                    <div class="input-group-append">
                                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,83,'Product List',[],ProductionsettingTransMode)" Criterea1="0" Criterea2="0" BindName="Product" BindVal="FK_Product"></button>
                                                    </div>
                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-3 col-form-label">Quantity<span class="text-danger">&nbsp;*</span></label>
                                            <div class="col-sm-5">
                                                <input type="text" class="form-control text-right" maxlength="13" perfect-tempTable-ProductDetailsTable="Quantity" name="Quantity" id="outQuantity" oninput="decimalpnt(this,'outQuantity',4)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />


                                                <div class="text-danger temptableError productQtyerror"></div>
                                                @*<div id="FldId-error" class="Custominvalid animated fadeInUp producterror" style="display: none;">Please Enter Quantity</div>*@
                                            </div>
                                            <div class="col-sm-4">
                                                <input type="checkbox" class="form-check-input" name="PSMStockUpdate" perfect-tempTable-ProductDetailsTable="PSMStockUpdate" perfect-class="formCheckInput" perfect-ctype="checkbox" style="margin-top: 11px;margin-left:1%;" perfect-css="checkbox">
                                                <label style="margin-top: 10px;margin-left:18%;"> Add to Stock</label>
                                            </div>


                                        </div>
                                    </div>
                                    <div class="col-sm-2" text-right">
                                        <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Product" onclick="fn_createtable(this,'ProductDetailsTable',['FK_Product'])" style="margin-left:0px" ;><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                                        <button class="btn btn-light1" id="btnresetPdct" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="ProductDetailsclear(this,'ProductDetailsTable')" style="margin-left:-2px" ;><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                    </div>

                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="form-group row" perfect-class="formGroup">
                                    <div class="table-responsive" perfect-tempTable="ProductDetailsTable" id="Material" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                </div>
                            </div>

                        </div>

                    </div>
                    <div class="col-sm-12">
                        <div class="daccordion__header">
                            <span class="accordion__header--text">Resources</span>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 " perfect-class="TempTableProduct">
                                <br />
                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label name="lblProduct" class="col-sm-5 col-form-label">Resource Type<span class="text-danger">&nbsp;*</span></label>
                                            <div class="col-sm-7">
                                                <div class="input-group">
                                                    <input type="text" class="form-control" perfect-tempTable-ResourceDetailsTable="ResourceType" name="ResourceType" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                    <input type="hidden" name="FK_ProjectResources" perfect-tempTable-ResourceDetailsTable="FK_ProjectResources" class="perfectValidate_numeric_nm" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <div class="input-group-append">
                                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,144,'Resource List',[],ProductionsettingTransMode)" Criterea1="0" Criterea2="0" BindName="ResourceType" BindVal="FK_ProjectResources"></button>
                                                    </div>
                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-5 col-form-label">Quantity<span class="text-danger">&nbsp;</span></label>
                                            <div class="col-sm-6">
                                                <input type="text" class="form-control text-right" maxlength="13" perfect-tempTable-ResourceDetailsTable="Quantity" name="Quantity" id="resQuantity" oninput="decimalpnt(this,'resQuantity',4)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0"  />
                                                

                                                <div class="text-danger temptableError mtrlQtyerror"></div>
                                                @*<div id="FldId-error" class="Custominvalid animated fadeInUp producterror" style="display: none;">Please Enter Quantity</div>*@
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-5 col-form-label">Amount<span class="text-danger">&nbsp;*</span></label>
                                            <div class="col-sm-6">
                                                <input type="text" class="form-control text-right" maxlength="13" perfect-tempTable-ResourceDetailsTable="Amount" name="Amount" id="Amount" oninput="decimalpnt(this,'Amount',4)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                <div class="text-danger temptableError productQtyerror"></div>
                                                @*<div id="FldId-error" class="Custominvalid animated fadeInUp producterror" style="display: none;">Please Enter Quantity</div>*@
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-2" text-right">
                                        <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Resource" onclick="fn_createresource(this,'ResourceDetailsTable',['FK_ProjectResources'])" style="margin-left:0px" ;><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                                        <button class="btn btn-light1" id="btnresetRes" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="ResourceDetailsclear(this,'ResourceDetailsTable')" style="margin-left:-2px" ;><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                    </div>

                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="form-group row" perfect-class="formGroup">
                                    <div class="table-responsive" perfect-tempTable="ResourceDetailsTable" id="Resource" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
                <hr />
                <div class="row">
                    @*File Upload*@
                    <div class="col-sm-6">

                        <div class="form-group row" perfect-class="formGroup">
                            <div class="col-sm-12">
                                <div id="prdimg" class="tab-pane active" style="padding-left:12px">
                                    <div class="row">
                                        <div class="col-sm-1">
                                        </div>
                                        <div class="col-sm-5">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <div class="upload-btnup-wrapper">
                                                    <button type="button" id="btndocsUpload" class="btnup btn"><span class="accordion__header--text">Upload Documents</span></button>

                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @* End File Upload*@





                </div>



            </div>

            @*<div class="col-sm-12" id="Image-form">
                </div>*@






            <div class="card-footer text-right" perfect-class="formFooter">
                <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_ProductionStageForm_update(this,'update')"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_ProductionStageForm_update(this,'new')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
            </div>


        </form>
    </div>
</div>
<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>
<script>
    /*File Upload*/
    var PssfupDocsList = [];
    $("#btndocsUpload").click(function () {
        let $thisForm = $(this).closest('[perfect-class="form"]');
        let MasterId = $thisForm.find('[name="ID_ProductionStage"]').val();
        let header = "Production Stage Documents";
        OpenModalForUpload(MasterId, ProductionsettingTransMode, header);
    })
     /*End File Upload*/
 $(document).ready(function ()
 {


     initFunctions('form');
     localStorage.clear();
 });
    function decimalpnt(ele, id, range) {

        let input = $('#' + id);
        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
        input.on('keydown', function () {
            if (ele.value.includes('.')) {

            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.length == 9) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }
    function getfunctionAssign(ele) {

    }

    function createtable(ele, tkey, uniq = []) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;
        let unique = (uniq) ? uniq : [];
        let isValid = true;
        let errorClass = '.temptableError';
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Product_Name"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Product_Name"]').val() == "") {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="Product_Name"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Material');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Product_Name"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if (parseFloat($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val()) == 0 || isNaN(parseFloat($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val()))) {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find('.mtrlQtyerror').text('Please Enter Valid Quantity');



        } else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find('.mtrlQtyerror').text('');
        }
        if (isValid) {
            let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
            let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
            let indexname = tkey + 'index';
            tableOptionsTemp.rowAttribute.push(indexname);
            tableOptionsTemp.hideColumn.push(indexname);
            let updateCond = '';
            let isNew = true;
            if (thisactionIndex > 0) {
                insertData[indexname] = thisactionIndex;
                updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
                isNew = false;
            }
            else {
                insertData[indexname] = lastIndex + 1;
                $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
                isNew = true;
            }

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                let $errorElement = $this.closest('[perfect-class="formGroup"]').find(errorClass);
                if ($this.is('select')) {
                    if ($this.val().length > 0) {
                        $errorElement.text('');
                    }
                    else {
                        isValid = false;
                        if (headerName == 'FK_Product') {
                            headerName = "Product";
                        }

                        $errorElement.text('Please Select ' + headerName);
                    }
                }
                else if ($this.is('input')) {
                    let inputType = $this.attr('type').toLocaleLowerCase();
                    if (inputType == 'checkbox') {
                    }
                    else if (inputType == 'hidden') {
                    }
                    else {
                        if ($this.val().length > 0) {
                            $errorElement.text('');
                        }
                        else {

                            isValid = false;
                            if (headerName == 'FK_Product') {
                                headerName = "Product";
                            }
                            else if (headerName == "Product_Name") {
                                headerName = "Product";
                            }

                            $errorElement.text('Please Select ' + headerName);
                        }
                    }
                }
            });
            if (unique.length > 0) {
                let prevData = [];
                $tblcontainer.find('table > tbody').find('tr').each(function () {
                    if (isNew) {
                        prevData.push($(this).data('pData'));
                    }
                    else {
                        if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                            prevData.push($(this).data('pData'));
                        }
                    }
                })



                unique.forEach(function (key, i) {

                    let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                    let headerEleName = $thisForm.find('[name="ProductName"]').text();
                    let atname = $thisEle.attr('name');
                    let cvalue;
                    if ($thisEle.length != 0) {
                        console.log('len', $thisEle)
                        let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                        let errmessage = headerEleName + " Already exits"

                        //getting current value in cval
                        if ($thisEle.is('select')) {
                            cvalue = $thisEle.val();
                        }
                        else if ($thisEle.is('input')) {

                            let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                            if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                            else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                            else { cvalue = $thisEle.val(); }
                        }
                        else { cvalue = $thisEle.val(); }
                        //searching in previous data
                        if (prevData.find(a => a[atname] == cvalue)) {
                            $errorElement.text(errmessage);
                            isValid = false;
                        }
                    }
                });
            }

            if (isValid) {
                $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                    let $this = $(this);
                    let headerName = $this.attr('perfect-tempTable-' + tableKey);
                    let nameAttr = $this.attr('name');

                    if ($this.is('select')) {
                        tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTemp.hideColumn.push(nameAttr)
                        if ($this.val() != null) {
                            let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        else {
                            let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        insertData[nameAttr] = $this.val();
                        $this.val('').selectpicker('refresh');
                    }
                    else if ($this.is('input')) {
                        let inputType = $this.attr('type').toLocaleLowerCase();
                        if (inputType == 'checkbox') {
                            insertData[nameAttr] = $this.is(':checked');
                            tableOptionsTemp.isCheckType.push(nameAttr)
                            $this.prop('checked', false);
                        }
                        else if (inputType == 'hidden') {
                            tableOptionsTemp.hideColumn.push(nameAttr)
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                        else if (inputType == 'date') {
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                        else {
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                    }
                    else {
                        insertData[nameAttr] = $this.val();
                        $this.val('');
                    }
                });
                console.log('check 4.2');
                if (isNew) {
                    console.log('check 4.2.1');
                    if ($tblcontainer.find('table').length == 0) {
                        console.log('check 4.2.3');
                        $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                    }
                    else {
                        console.log('check 4.2.1');
                        let table = $tblcontainer.find('table').DataTable()
                        table.destroy()
                        pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                    }
                    console.log('check 4.2.1');
                }
                else {
                    console.log('check 4.3');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    console.log('check 4.4');
                    console.log('table', $tblcontainer.find('table'))
                    console.log('check 4.5');
                    pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
                }
                console.log(insertData);
                $tblcontainer.attr('perfect-tempTable-action', 0);
            }
            console.log('check 5');
        }

    }
    var tableOptionsTempOut = {
        iconButton: {
            buttons: [
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData');
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        let indexname = tableKey + 'index';
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);
                        console.log('Editclick', savedData);
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {

                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                        }
                        else {
                            $thistbl.remove();
                        }
                        $("#btnresetMtrl").click();
                    }
                }

            ]
        },
        onlyShowColumn: ["Product_Name", "Quantity", "PSMStockUpdate"],
        hideColumn: ['FK_Product'],
        serialNo: true,
        renameHeader: { "Product_Name": "Material", "Quantity": "Quantity", "PSMStockUpdate": "Effect Stock" },
        rowAttribute: [],
        isCheckType: [],
        Scroll: true
    };

    function fn_createresource(ele, tkey, uniq = []) {
        debugger
        var quantity = parseFloat($('[name="Quantity"]').val().trim() == "" ? "0" : $('[name="Quantity"]').val().trim());
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        let insertData = {};
        let tableOptionsTemp = restableOptionsTempOut;
        let unique = (uniq) ? uniq : [];
        let isValid = true;
        let errorClass = '.temptableError';
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ResourceType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ResourceType"]').val() == "") {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="ResourceType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Resource Type');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ResourceType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        //if (parseFloat($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val()) == 0 || isNaN(parseFloat($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val()))) {
        //    isValid = false;
        //    $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find('.mtrlQtyerror').text('Please Enter Valid Quantity');



        //} else {
        //    $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find('.mtrlQtyerror').text('');
        //}
        if (parseFloat($thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').val()) == 0 || isNaN(parseFloat($thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').val()))) {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Amount');
        } else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        if (isValid) {
            let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
            let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
            let indexname = tkey + 'index';
            tableOptionsTemp.rowAttribute.push(indexname);
            tableOptionsTemp.hideColumn.push(indexname);
            let updateCond = '';
            let isNew = true;
            if (thisactionIndex > 0) {
                insertData[indexname] = thisactionIndex;
                updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
                isNew = false;
            }
            else {
                insertData[indexname] = lastIndex + 1;
                $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
                isNew = true;
            }



            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                let $errorElement = $this.closest('[perfect-class="formGroup"]').find(errorClass);
                if ($this.is('select')) {
                    if ($this.val().length > 0) {
                        $errorElement.text('');
                    }
                    else {
                        isValid = false;
                        if (headerName == 'FK_ProjectResources') {
                            headerName = "Resource Type";
                        }

                        $errorElement.text('Please Select ' + headerName);
                    }
                }
                else if ($this.is('input')) {
                    let inputType = $this.attr('type').toLocaleLowerCase();
                    if (inputType == 'checkbox') {
                    }
                    else if (inputType == 'hidden') {
                    }
                    //else {
                    //    if ($this.val().length > 0) {
                    //        $errorElement.text('');
                    //    }
                    //    else {

                    //        isValid = false;
                    //        if (headerName == 'FK_ProjectResources') {
                    //            headerName = "Resource Type";
                    //        }
                    //        else if (headerName == "ResourceType") {
                    //            headerName = "Resource Type";
                    //        }

                    //        $errorElement.text('Please Select ' + headerName);
                    //    }
                    //}
                }
            });
            if (unique.length > 0) {
                let prevData = [];
                $tblcontainer.find('table > tbody').find('tr').each(function () {
                    if (isNew) {
                        prevData.push($(this).data('pData'));
                    }
                    else {
                        if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                            prevData.push($(this).data('pData'));
                        }
                    }
                })



                unique.forEach(function (key, i) {

                    let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                    let headerEleName = $thisForm.find('[name="ResourceType"]').text();
                    let atname = $thisEle.attr('name');
                    let cvalue;
                    if ($thisEle.length != 0) {
                        console.log('len', $thisEle)
                        let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                        let errmessage = headerEleName + " Already exits"

                        //getting current value in cval
                        if ($thisEle.is('select')) {
                            cvalue = $thisEle.val();
                        }
                        else if ($thisEle.is('input')) {

                            let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                            if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                            else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                            else { cvalue = $thisEle.val(); }
                        }
                        else { cvalue = $thisEle.val(); }
                        //searching in previous data
                        if (prevData.find(a => a[atname] == cvalue)) {
                            $errorElement.text(errmessage);
                            isValid = false;
                        }
                    }
                });
            }

            if (isValid) {
                $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                    let $this = $(this);
                    let headerName = $this.attr('perfect-tempTable-' + tableKey);
                    let nameAttr = $this.attr('name');

                    if ($this.is('select')) {
                        tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTemp.hideColumn.push(nameAttr)
                        if ($this.val() != null) {
                            let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        else {
                            let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        insertData[nameAttr] = $this.val();
                        $this.val('').selectpicker('refresh');
                    }
                    else if ($this.is('input')) {
                        let inputType = $this.attr('type').toLocaleLowerCase();
                        if (inputType == 'checkbox') {
                            insertData[nameAttr] = $this.is(':checked');
                            tableOptionsTemp.isCheckType.push(nameAttr)
                            $this.prop('checked', false);
                        }
                        else if (inputType == 'hidden') {
                            tableOptionsTemp.hideColumn.push(nameAttr)
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                        else if (inputType == 'date') {
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                        else {
                            if (nameAttr == "Quantity") {
                                insertData[nameAttr] = $this.val().trim() == "" ? "0" : $this.val();
                            } else {
                                insertData[nameAttr] = $this.val();
                            }
                            $this.val('');
                        }
                    }
                    else {
                        insertData[nameAttr] = $this.val();
                        $this.val('');
                    }
                });
                console.log('check 4.2');
                if (isNew) {
                    console.log('check 4.2.1');
                    if ($tblcontainer.find('table').length == 0) {
                        console.log('check 4.2.3');
                        $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                    }
                    else {
                        console.log('check 4.2.1');
                        let table = $tblcontainer.find('table').DataTable()
                        table.destroy()
                        pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                    }
                    console.log('check 4.2.1');
                }
                else {
                    console.log('check 4.3');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    console.log('check 4.4');
                    console.log('table', $tblcontainer.find('table'))
                    console.log('check 4.5');
                    pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
                }
                console.log(insertData);
                $tblcontainer.attr('perfect-tempTable-action', 0);
            }
            console.log('check 5');
        }

    }
    var restableOptionsTempOut = {
        iconButton: {
            buttons: [
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData');
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        let indexname = tableKey + 'index';
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);
                        console.log('Editclick', savedData);
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {

                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        ///$thistbl.destroy();
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                        }
                        else {
                            $thistbl.remove();
                        }
                        $("#btnresetRes").click();
                    }
                }

            ]
        },
        onlyShowColumn: ["ResourceType", "Quantity","Amount"],
        hideColumn: ['FK_ProjectResources'],
        serialNo: true,
        renameHeader: { "ResourceType": "Resource Type", "Quantity": "Quantity", "Amount":"Amount"},
        rowAttribute: [],
        isCheckType: [],
        Scroll: true
    };


    function fn_createtable(ele, tkey, uniq = [])
    {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        let insertData = {};
        let tableOptionsTemp = ProdtableOptionsTempOut;
        let unique = (uniq) ? uniq : [];
        let isValid = true;
        let errorClass = '.temptableError';
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Product"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Product"]').val() == "")
        {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Product"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Product');
        }
        else
        {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Product"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        if (parseFloat($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val()) == 0 || isNaN(parseFloat($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val()))) {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find('.productQtyerror').text('Please Enter Valid Quantity');
        } else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find('.productQtyerror').text('');
        }
        if (isValid) {
            let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
            let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
            let indexname = tkey + 'index';
            tableOptionsTemp.rowAttribute.push(indexname);
            tableOptionsTemp.hideColumn.push(indexname);
            let updateCond = '';
            let isNew = true;
            if (thisactionIndex > 0) {
                insertData[indexname] = thisactionIndex;
                updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
                isNew = false;
            }
            else {
                insertData[indexname] = lastIndex + 1;
                $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
                isNew = true;
            }
            console.log('check 3');
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                let $errorElement = $this.closest('[perfect-class="formGroup"]').find(errorClass);
                if ($this.is('select')) {
                    if ($this.val().length > 0) {
                        $errorElement.text('');
                    }
                    else {
                        isValid = false;
                        if (headerName == 'FK_Product') {
                            headerName = "Product";
                        }

                        $errorElement.text('Please Select ' + headerName);
                    }
                }
                else if ($this.is('input')) {
                    let inputType = $this.attr('type').toLocaleLowerCase();
                    if (inputType == 'checkbox') {

                    }
                    else if (inputType == 'hidden') {
                    }
                    else {
                        if ($this.val().length > 0) {
                            $errorElement.text('');
                        }
                        else {

                            isValid = false;
                            if (headerName == 'FK_Product') {
                                headerName = "Product";
                            }

                            $errorElement.text('Please Select ' + headerName);
                        }
                    }
                }
            });
            if (unique.length > 0) {
                let prevData = [];
                $tblcontainer.find('table > tbody').find('tr').each(function () {
                    if (isNew) {
                        prevData.push($(this).data('pData'));
                    }
                    else {
                        if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                            prevData.push($(this).data('pData'));
                        }
                    }
                })

                console.log('previous data', prevData);

                unique.forEach(function (key, i) {
                    console.log('unid -> key:' + key + "| index :" + i);
                    let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                    let headerEleName = $thisForm.find('[name="Product"]').text();
                    let atname = $thisEle.attr('name');
                    let cvalue;

                    if ($thisEle.length != 0) {
                        console.log('len', $thisEle)
                        let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                        let errmessage = headerEleName + " Already exits"

                        //getting current value in cval
                        if ($thisEle.is('select')) {
                            cvalue = $thisEle.val();
                        }
                        else if ($thisEle.is('input')) {

                            let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                            if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                            else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                            else { cvalue = $thisEle.val(); }
                        }
                        else { cvalue = $thisEle.val(); }

                        //searching in previous data
                        if (prevData.find(a => a[atname] == cvalue)) {
                            $errorElement.text(errmessage);
                            isValid = false;
                        }
                    }
                });
            }
            console.log('check 4');
            if (isValid) {
                console.log('check 4.1');
                $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                    let $this = $(this);
                    let headerName = $this.attr('perfect-tempTable-' + tableKey);
                    let nameAttr = $this.attr('name');
                    if ($this.is('select')) {
                        tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTemp.hideColumn.push(nameAttr)
                        if ($this.val() != null) {
                            let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        else {
                            let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        insertData[nameAttr] = $this.val();
                        $this.val('').selectpicker('refresh');
                    }
                    else if ($this.is('input')) {
                        let inputType = $this.attr('type').toLocaleLowerCase();
                        if (inputType == 'checkbox') {
                            insertData[nameAttr] = $this.is(':checked');
                            tableOptionsTemp.isCheckType.push(nameAttr)
                            $this.prop('checked', false);
                        }
                        else if (inputType == 'hidden') {
                            tableOptionsTemp.hideColumn.push(nameAttr)
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                        else if (inputType == 'date') {
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                        else {
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                    }
                    else {
                        insertData[nameAttr] = $this.val();
                        $this.val('');
                    }
                    if (headerName == 'PSMStockUpdate' && insertData[nameAttr] == false) {
                        insertData[nameAttr] = false;
                    }
                    else if ($this.val() == 'on' && headerName == 'PSMStockUpdate') {
                        insertData[nameAttr] = true;
                    }

                });
                console.log('check 4.2');
                if (isNew) {
                    console.log('check 4.2.1');
                    if ($tblcontainer.find('table').length == 0) {
                        console.log('check 4.2.3');
                        $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                    }
                    else {
                        console.log('check 4.2.1');
                        let table = $tblcontainer.find('table').DataTable()
                        table.destroy()
                        pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                    }
                    console.log('check 4.2.1');
                }
                else {
                    console.log('check 4.3');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    console.log('check 4.4');
                    console.log('table', $tblcontainer.find('table'))
                    console.log('check 4.5');
                    pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
                }
                console.log(insertData);
                $tblcontainer.attr('perfect-tempTable-action', 0);
            }
            console.log('check 5');
        }
    }

    var ProdtableOptionsTempOut = {
        iconButton: {
            buttons: [
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData');
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        let indexname = tableKey + 'index';
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);
                        console.log('Editclick', savedData);
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {

                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                        }
                        else {
                            $thistbl.remove();
                        } $("#btnresetPdct").click();
                    }
                }

            ]
        },
        onlyShowColumn: ["Product", "Quantity","PSMStockUpdate"],
        hideColumn: ['FK_Product'],
        serialNo: true,
        renameHeader: { "Product": "Product", "Quantity": "Quantity","PSMStockUpdate":"Add to Stock" },
        rowAttribute: [],
        isCheckType: []
    };
    var i = 0;
    var nameAttr;





    function MaterialDetailsclear(ele, tableKey)
    {
        console.log("MaterialDetailsclearDelete");
        $thisForm = $(ele).closest('[perfect-class="form"]');

        $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find('.mtrlQtyerror').text('');
        $thisForm.find('[perfect-tempTable-' + tableKey + '="Product_Name"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');
        $thisForm.find('[perfect-tempTable="' + tableKey + '"]').attr('perfect-tempTable-action', "0");
        let lastIndex = 0;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        if ($tblcontainer.find("tbody tr").length > 0) {
            lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;

        } $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex);
    }

    function ProductDetailsclear(ele, tableKey)
    {
        console.log("clearprdtDelete");
        $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');

        $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find('.productQtyerror').text('');
        $thisForm.find('[perfect-tempTable-' + tableKey + '="Product"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');



        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="checkbox"]').prop("checked", false);



        $thisForm.find('[perfect-tempTable="' + tableKey + '"]').attr('perfect-tempTable-action', "0");

        let lastIndex = 0;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        if ($tblcontainer.find("tbody tr").length > 0) {
            lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;

        } $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex);
    }

    function ResourceDetailsclear(ele, tableKey) {
        $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find('.').text('');
        $thisForm.find('[perfect-tempTable-' + tableKey + '="ResourceType"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
        $thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');
        $thisForm.find('[perfect-tempTable="' + tableKey + '"]').attr('perfect-tempTable-action', "0");

        let lastIndex = 0;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        if ($tblcontainer.find("tbody tr").length > 0) {
            lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;

        } $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex);
    }


    function Imageclear(ele, tableKey)
    {
        $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');
    }

    function ResetButton(ele)
    {

        productionstagesettingsInitialLoad();
    }



    function fn_ProductionStageForm_update(element, actionType)
    {

        let $thisForm = $(element).closest('[perfect-class="form"]');
        console.log("Is_Valid", $thisForm.valid());
        let FK_Product = $thisForm.find('[name = "ProductID"]').val();
        let FK_Stage = $thisForm.find('[name="FK_Stage"]').val();
        let FK_Team = $thisForm.find('[name="FK_Team"]').val();
        let $errorMsg = '';
        let $blnSuccess = false;
        let MaterialDetailsItems = [];
        let ProductDetailsItems = [];
        let ResourceDetailsItems = [];
        let ImageDetailsItems = [];

        var _valid = true;
        if ($thisForm.valid())
        {

            $thisForm.find('[perfect-tempTable="MaterialDetailsTable"]').find('tbody').find('tr').each(function ()
            {
             MaterialDetailsItems.push($(this).data('pData'));
            })

            $thisForm.find('[perfect-tempTable="ProductDetailsTable"]').find('tbody').find('tr').each(function ()
            {
             ProductDetailsItems.push($(this).data('pData'));
            })
            $thisForm.find('[perfect-tempTable="ResourceDetailsTable"]').find('tbody').find('tr').each(function ()
            {
                ResourceDetailsItems.push($(this).data('pData'));
            })


            if (MaterialDetailsItems.length <= 0) {
                _valid = false;
            }
            if (_valid)
            {
                $blnSuccess = true;




                let ID_ProductionStage = 0;
                let _ActionUrl = "";

                if (actionType === "new") {
                    ID_ProductionStage = 0;
                    _ActionUrl = "@Url.Action("AddNewProductionStage", "ProductionStageSetting")";
                }
                else if (actionType === "update") {
                    ID_ProductionStage = $thisForm.find('[name="ID_ProductionStage"]').val();
                    _ActionUrl = "@Url.Action("UpdateProductionStage", "ProductionStageSetting")";
                }
                let inputData = {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    'ID_ProductionStage': ID_ProductionStage,
                    'PSDate': moment($thisForm.find('[name="PSDate"]').val()).format('YYYY-MM-DD'),
                    'FK_Product': FK_Product,
                    'FK_Stage': FK_Stage,
                    'FK_Team': FK_Team,
                    'PSDurationType': $thisForm.find('[name="PSDurationType"]').val(),
                    'PSDurationPrd': $thisForm.find('[name="PSDurationPrd"]').val(),
                    'PSPrllCount': $thisForm.find('[name="PSPrllCount"]').val(),
                    'PSEmpWise': $thisForm.find('[name=PSEmpWise]').is(":checked"),
                    'PSWorkPer': $thisForm.find('[name="PSWorkPer"]').val().trim() == "" ? "0" : $thisForm.find('[name="PSWorkPer"]').val(),
                    'TransMode': ProductionsettingTransMode,
                    'PSRemarks': $thisForm.find('[name="PSRemarks"]').val(),
                    'InputMaterialDetails': MaterialDetailsItems,
                    'OutputProductsDetails': ProductDetailsItems,
                    'ResourceDetails': ResourceDetailsItems,
                    'ImageList': PssfupDocsList,
                    'LastID': LastID_Productionsetting
                }
                clearSessionValue(LastIDSessionKey);
                console.log("Input", inputData);
                if ($blnSuccess) {
                    $.ajax({
                        url: _ActionUrl,
                        type: "POST",
                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (ajaxOutput) {
                            debugger;
                            if (ajaxOutput.Process.IsProcess) {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                });


                            $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                            $thisForm.find('[perfect-ctype="input"]').val('');
                            $thisForm.find('[perfect-ctype="date"]').val('');
                            let onSuccess = $thisForm.attr('perfect-onFormSuccess')
                            if (onSuccess) {
                                window[onSuccess]();
                                productionstagesettingsInitialLoad();
                                }
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                    $(element).prop('disabled', false);
                                });
                            }
                        },
                        complete: function () {
                            $(element).prop('disabled', false);
                        }
                    });
                }
                else {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': $errorMsg });
                    $(element).prop('disabled', false);
                }
            }
            else {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': "Add Atleast One Input Material !!" });

            }
        }
        else
        {
            $(element).prop('disabled', false);
        }
    }

</script>


