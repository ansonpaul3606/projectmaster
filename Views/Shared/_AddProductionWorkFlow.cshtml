@*----------------------------------------------------------------------
    Created By	: Kavya K
    Created On	: 29/11/2022
    Purpose		: ProductionWorkFlow Designing
    -------------------------------------------------------------------------
    Modification
    On			By					OMID/Remarks
    -------------------------------------------------------------------------
     17/12/2022     Kavya K         Save , Update
    -------------------------------------------------------------------------*@

@model PerfectWebERP.Models.ProductionWorkFlowModel.ProductionWorkFlowView
<style>
</style>

<div class="card ">
    <div class="card-header">
        <h4 class="card-title col-12">Production Work Flow</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">

                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Product</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">

                                    <input type="text" class="form-control perfectValidate_string" name="ProductName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly="readonly" />
                                    <input type="hidden" name="FK_Product" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" value="" />

                                    <div class="input-group-append">
                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,81,'Product List',['FK_Product'],ProductionWorkFlowTransMode)" Criterea1="0" Criterea2="0" BindName="ProductName" BindVal="FK_Product"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Effect Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-7">
                                <input type="date" ID="PWDateInput" class="form-control perfectValidate_date" name="PWDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" onchange="pwdatencheck(this)"/>
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4" style="display:none">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Sl No</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="hidden" name="ID_ProductionWorkFlow" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                </div>

                <hr />

                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel" name="lblStageName">Stage</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control" perfect-tempTable-Stage="StageName" name="StageName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  readonly="readonly"/>
                                    <input type="hidden" name="FK_ProductionStage" perfect-tempTable-Stage="FK_ProductionStage" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" value="" />

                                    <div class="input-group-append">
                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,110,'Stage List',['FK_ProductionStage'],ProductionWorkFlowTransMode)" Criterea1="FK_Product" Criterea2="0" BindName="StageName" BindVal="FK_ProductionStage"></button>
                                    </div>
                                </div><div class="text-danger temptableError"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-5 col-form-label">
                                <span perfect-class="formGroupLabel">Priority</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-6">
                                <div class="input-group" style="margin-left:10px;">
                                    <input type="text" class="form-control text-right" maxlength="9" placeholder="" perfect-tempTable-Stage="Priority" name="Priority" oninput="decimalpnt(this,'Priority',0)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />

                                    <div class="text-danger temptableError"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <div class="col-sm-6  col-form-label">
                                &nbsp;&nbsp; <input type="checkbox"  style="margin-top: 1px;" class="form-check-input" perfect-tempTable-Stage="Returnstage" name="Returnstage" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox">Return to Any Stage
                            </div>
                            <div class="col-sm-5  col-form-label">
                                &nbsp;&nbsp;   <input type="checkbox" style="margin-top: 1px;"  class="form-check-input" perfect-tempTable-Stage="AcceptJobs" name="AcceptJobs" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox">Accept Jobs
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-2">
                        <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Stage" onclick="fn_createtable(this,'Stage',['FK_ProductionStage','Priority'])" style="margin-left:-18px" ;><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                        <button class="btn btn-light1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="Stageclear(this,'Stage')" style="margin-left:-2px" ;><i id="btnresetWrkFlw" class="fa fa-refresh" aria-hidden="true"></i></button>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group row" perfect-class="formGroup">
                            <div class="table-responsive" perfect-tempTable="Stage" id="Stage" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                        </div>
                    </div>
                </div>

                <div class="card-footer text-right" perfect-class="formFooter">

                    <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_ProductionWorkFlowForm_update(this,'update')"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>

                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_ProductionWorkFlowForm_update(this,'new')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>

                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                </div>

            </div>
        </form>
    </div>
</div>

<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>
<script>
    var nameAttr = "";
    //on load functions
    $(document).ready(function () {
        initFunctions('form');

    });
    function decimalpnt(ele, id, range) {

        let input = $('#' + id);
        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
        input.on('keydown', function () {
            if (ele.value.includes('.')) {

            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.length == 9) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }
    function ResetButton(element) {
        fn_Productionworkflow_initialLoad();
    }


        var today = new Date().toISOString().split('T')[0];
        document.getElementById('PWDateInput').setAttribute('min', today);


    function fn_createtable(ele, tkey, uniq = []) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        let insertData = {};
        let tableOptionsTemp = ProductionWorkFlowTempOut;
        let unique = (uniq) ? uniq : [];
        let isValid = true;
        let errorClass = '.temptableError';

     


      
        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        console.log(thisactionIndex);
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;
        if (thisactionIndex > 0) {
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }
        console.log('check 3');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
            let $this = $(this);
            let headerName = $this.attr('perfect-tempTable-' + tableKey);
            let nameAttr = $this.attr('name');
            let $errorElement = $this.closest('[perfect-class="formGroup"]').find(errorClass);
            if ($this.is('select')) {
                if ($this.val().length > 0) {
                    $errorElement.text('');
                }
                else {
                    isValid = false;
                    if (headerName == 'FK_Product') {
                        headerName = "Product";
                    }

                    $errorElement.text('Please Select ' + headerName);
                }
            }
            else if ($this.is('input')) {
                let inputType = $this.attr('type').toLocaleLowerCase();
                if (inputType == 'checkbox') {
                }
                else if (inputType == 'hidden') {
                }
                else {
                   
                    if ($this.val().length > 0) {
                        $errorElement.text('');
                        if (headerName == 'Priority' && $this.val() <= 0) {
                            console.log(headerName + "2");
                            $errorElement.text('Please Enter Valid Priority'); isValid = false;
                        } 
                    }
                    else {
                       
                        isValid = false;

                        if (headerName == 'StageName') {
                            headerName = "Stage";
                        } 
                        else if (headerName == "FK_ProductionStage") {
                            headerName = "Stage";
                        }
                     
                            $errorElement.text('Please Select ' + headerName);
                        
                    }
                }
            }
        });
        if (isValid) {
            if (unique.length > 0) {
                let prevData = [];
                $tblcontainer.find('table > tbody').find('tr').each(function () {
                    if (isNew) {
                        prevData.push($(this).data('pData'));
                    }
                    else {
                        if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                            prevData.push($(this).data('pData'));
                        }
                    }
                })
                console.log('previous data', prevData);
                unique.forEach(function (key, i) {
                    console.log('unid -> key:' + key + "| index :" + i);
                    let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                    let headerEleName = $thisEle.attr('perfect-tempTable-' + tableKey);
                    let atname = $thisEle.attr('name');
                    let cvalue;
                    if ($thisEle.length != 0) {
                       
                        let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                        if (headerEleName == 'FK_ProductionStage') {
                            headerEleName = "Stage";
                        }
                        let errmessage = headerEleName + " Already exits"
                        if ($thisEle.is('select')) {
                            cvalue = $thisEle.val();
                        }
                        else if ($thisEle.is('input')) {
                            let inputEleType = $thisEle.attr('type').toLocaleLowerCase();
                            if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                            else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                            else { cvalue = $thisEle.val(); }
                        }
                        else {
                            cvalue = $thisEle.val();
                          
                        }
                        console.log(atname + "nnnnnn" + cvalue);
                        if (prevData.find(a => a[atname] == cvalue)) {
                            $errorElement.text(errmessage);
                            isValid = false;
                        }
                    }
                });
            }
            if (isValid) {
                console.log('check 4');

                console.log('check 4.1');
                $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                    let $this = $(this);
                    let headerName = $this.attr('perfect-tempTable-' + tableKey);
                    let nameAttr = $this.attr('name');
                    if ($this.is('select')) {
                        tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTemp.hideColumn.push(nameAttr)
                        if ($this.val() != null) {
                            let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        else {
                            let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        insertData[nameAttr] = $this.val();
                        $this.val('').selectpicker('refresh');
                    }
                    else if ($this.is('input')) {
                        let inputType = $this.attr('type').toLocaleLowerCase();
                        if (inputType == 'checkbox') {
                            insertData[nameAttr] = $this.is(':checked');
                            tableOptionsTemp.isCheckType.push(nameAttr)
                            $this.prop('checked', false);
                        }
                        else if (inputType == 'hidden') {
                            tableOptionsTemp.hideColumn.push(nameAttr)
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                        else if (inputType == 'date') {
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                        else {
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                    }
                    else {
                        insertData[nameAttr] = $this.val();
                        $this.val('');
                    }
                });
                console.log('check 4.2');
                if (isNew) {
                    console.log('check 4.2.1');
                    if ($tblcontainer.find('table').length == 0) {
                        console.log('check 4.2.3');
                        $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                    }
                    else {
                        console.log('check 4.2.1');
                        let table = $tblcontainer.find('table').DataTable()
                        table.destroy()
                        pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                    }
                    console.log('check 4.2.1');
                }
                else {
                    console.log('check 4.3');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    console.log('check 4.4');
                    console.log('table', $tblcontainer.find('table'))
                    console.log('check 4.5');
                    pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
                }
                console.log(insertData);
                $tblcontainer.attr('perfect-tempTable-action', 0);
            }
        }
        console.log('check 5');
    }

    var tableOptionsTempOut = {
        iconButton: {
            buttons: [
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData');
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        let indexname = tableKey + 'index';
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);
                        console.log('Editclick', savedData);
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {

                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                        }
                        else {
                            $thistbl.remove();
                        } $("#btnresetWrkFlw").click();
                    }
                }

            ]
        },
        onlyShowColumn: ["StageName", "Priority","Returnstage","AcceptJobs"],
        hideColumn: ['FK_ProductionStage','FK_Product'],
        serialNo: true,
        renameHeader: { "StageName": "Stage", "Priority": "Priority", "Returnstage": "Return to Any Stage","AcceptJobs":"Accept Jobs" },
        rowAttribute: [],
        isCheckType: []
    };

    function Stageclear(element, tableKey) {
        $thisForm = $(element).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="checkbox"]').prop("checked", false);
        $thisForm.find('[perfect-tempTable="' + tableKey + '"]').attr('perfect-tempTable-action', "0");
    }


 // Function to Add & Update ProductionWorkFlow
    function fn_ProductionWorkFlowForm_update(element, actionType) {
        debugger;

        $(element).prop('disabled', true);
        let $thisForm = $(element).closest('[perfect-class="form"]');
        let $errorMsg = "Enter Atleast One Stage";
        console.log("Valid", $thisForm.valid());
      
        if (pwdatencheck(element))
        {

        if ($thisForm.valid()) {
           
            let ProductionWorkFlowItems = [];

            $thisForm.find('[perfect-tempTable="Stage"]').find('tbody').find('tr').each(function () {
                ProductionWorkFlowItems.push($(this).data('pData'));
            })

            if (ProductionWorkFlowItems.length > 0) {

                $(element).prop('disabled', true);



                let ID_ProductionWorkFlow = 0;
                let FK_ProductionWorkFlow = 0;
                let _ActionUrl = "";

                if (actionType === "new") {
                    ID_ProductionWorkFlow = 0;
                    FK_ProductionWorkFlow = 0;
                    _ActionUrl = "@Url.Action("AddNewProductionWorkFlow", "ProductionWorkFlow")";
                }
                else if (actionType === "update") {
                    ID_ProductionWorkFlow = $thisForm.find('[name="ID_ProductionWorkFlow"]').val();
                    FK_ProductionWorkFlow = $thisForm.find('[name="ID_ProductionWorkFlow"]').val();
                    _ActionUrl = "@Url.Action("UpdateProductionWorkFlow", "ProductionWorkFlow")";
                }

                let FK_Product = $thisForm.find('[name="FK_Product"]').val();
                let PWDate = $thisForm.find('[name="PWDate"]').val();

                let inputData = {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    'ID_ProductionWorkFlow': ID_ProductionWorkFlow,
                    'FK_ProductionWorkFlow': FK_ProductionWorkFlow,
                    'TransMode': ProductionWorkFlowTransMode,
                    'FK_Product': FK_Product,
                    'PWDate': PWDate,
                    'ProductionworkflowDetails': ProductionWorkFlowItems,
                    'LastID': LastID_Productionworkflow
                };
                clearSessionValue(LastIDSessionKey);
                $.ajax({
                    url: _ActionUrl,
                    type: "POST",
                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                    success: function (ajaxOutput) {
                        if (ajaxOutput.Process.IsProcess) {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                            });


                            $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                            $thisForm.find('[perfect-ctype="input"]').val('');
                            $thisForm.find('[perfect-ctype="date"]').val('');
                            let onSuccess = $thisForm.attr('perfect-onFormSuccess')
                            if (onSuccess) {
                                window[onSuccess]();
                                fn_Productionworkflow_initialLoad();
                            }
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                $(element).prop('disabled', false);
                            });
                        }
                    },
                    complete: function () {
                        $(element).prop('disabled', false);
                    }
                });
            }
            else {

                $(element).prop('disabled', false);
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': "Add Atleast One details !!" });
            }
            }


    
       
        }
        else {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Effect date should be greater than or equal to Todays date'});
            $(element).prop('disabled', false);
        }
    }

    function pwdatencheck(element) {

        debugger
        let $thisForm = $(element).closest('[perfect-class="form"]');
        //invalid-feedback
        let RegDate = $thisForm.find('[name="PWDate"]').val();
        

        //var today = new Date();
        RegDate = new Date(RegDate);
        RegDate.setHours(0, 0, 0, 0)


        let today = new Date();
        today.setHours(0, 0, 0, 0);


        if (RegDate < today) {
            $thisForm.find('[name="PWDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Effect date should be greater than or equal to Todays date')
            return false;

        }
        else {

            $thisForm.find('[name="PWDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('');
            return true;
        }


    }
</script>


