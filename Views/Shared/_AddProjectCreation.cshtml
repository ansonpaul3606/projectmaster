@*/*----------------------------------------------------------------------
    Created By	: Santhisree
    Created On	: 27/07/2022
    Purpose		: Project Creation
    -------------------------------------------------------------------------
    Modification
    On			By					OMID/Remarks
    -------------------------------------------------------------------------
    -------------------------------------------------------------------------*/*@
@model PerfectWebERP.Models.ProjectCreationModel.ProjectCreationListModel


<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">Project Creation</h4>
        @if (@ViewBag.PagedAccessRights.UsrrlMsView)
        {
            <div class="spanid">
                <span class="spanviewlist" title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
            </div>
        }
        else
        {
            <div class="spanid" hidden>
                <span class="spanviewlist" title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
            </div>
        }
       
    </div>
    <div class="card-body">
        <form id="form" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="row">
                <div class="col-sm-12">
                    <div class="default-tab">
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="Todolist" data-toggle="tab" href="#MainScreen"><i class="las la-tasks  mr-2"></i> Project Creation &nbsp;&nbsp;<span><label id="todobadge" class="badge badge-circle badge-info"></label></span> </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="OverdueList" data-toggle="tab" href="#Customerinfo" onclick="fn_LeadManagementFollowup_loadLeadMgtFollowupForm(this)"><i class="las la-book-reader mr-2"></i> Lead Info&nbsp;&nbsp;<label id="overduebadge" class="badge badge-circle badge-primary"></label></a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="UpcomingList" data-toggle="tab" href="#History" onclick="fn_LeadManagement_History(this)"><i class="las la-history mr-2"></i>History&nbsp;&nbsp;<label id="tasksbadge" class="badge badge-circle badge-success"></label></a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="SiteVisitList" data-toggle="tab" href="#SiteVisit" onclick="fn_SiteVisit_Details(this)"><i class="las la-tasks mr-2"></i>Site Visit Details&nbsp;&nbsp;<label id="tasksbadge" class="badge badge-circle badge-success"></label></a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="CostPreparationList" data-toggle="tab" href="#CostPreparation" onclick="fn_CostPreparation_Details(this)"><i class="las la-tasks mr-2"></i>Cost Preparation Details&nbsp;&nbsp;<label id="tasksbadge" class="badge badge-circle badge-success"></label></a>
                            </li>

                        </ul>
                        <div><label></label></div>
                        <div class="tab-content">
                            <div class="tab-pane fade active show" role="tabpanel" id="MainScreen">

                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Branch</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                                                {
                                                    <select class="form-control perfectValidate_numeric" name="BranchID" perfect-elemet="Branch" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                        <option value="">Please Select </option>

                                                        @if (!(Model.BranchList is null))
                                                        {
                                                            foreach (var branch in Model.BranchList)
                                                            {
                                                                if (branch.BranchID == ViewBag.FK_Branch)
                                                                {
                                                                    <option value="@branch.BranchID" selected>@branch.Branch</option> }
                                                                else
                                                                {
                                                                    <option value="@branch.BranchID">@branch.Branch</option>}

                                                            }
                                                        }


                                                    </select>
                                                }
                                                else
                                                {
                                                    <select class="form-control perfectValidate_numeric" name="BranchID" perfect-elemet="Branch" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" disabled>
                                                        <option value="">Please Select </option>

                                                        @if (!(Model.BranchList is null))
                                                        {
                                                            foreach (var branch in Model.BranchList)
                                                            {
                                                                if (branch.BranchID == ViewBag.FK_Branch)
                                                                {
                                                                    <option value="@branch.BranchID" selected>@branch.Branch</option> }
                                                                else
                                                                {
                                                                    <option value="@branch.BranchID">@branch.Branch</option>}

                                                            }
                                                        }


                                                    </select>

                                                }
                                            </div>
                                        </div>

                                    </div>

                                    <div class="col-sm-6 DivLeadNo">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">

                                                <span perfect-class="formGroupLabel">Lead No</span>
                                                <span class="text-danger">*</span>

                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">

                                                    <input type="text" class="form-control" name="Lead" data-id="LeadNo-error" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" placeholder="Select Lead Number" onchange="fn_GetFinalAmount(this)" readonly />
                                                    <input type="hidden" name="LeadNo" class="form-control perfectValidate_numeric Ledger" data-id="LeadNo-error" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="date" name="LeadDates" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" hidden />
                                                    <input type="hidden" name="FK_Lead" class="form-control" data-id="LeadNo-error" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="hidden" name="FK_Customer" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="hidden" name="FK_CustomerOthers" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />

                                                    <div class="input-group-append">
                                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,138,'Lead List',[],['FK_Lead','ID_LeadGenerate','CustomeName','LeadDates', 'MobileNo','Address','FK_Customer','FK_CustomerOthers'])" Criterea1="0" Criterea2="0" Function="3" BindName="Lead" BindVal="LeadNo"></button>
                                                        <button id="customerbtn" class="btn btn-primary" type="button" perfect-css="button" onclick="fn_loadCustomerUpdateForm(this)" title="Edit Customer"> <img src="~/Content/images/user-edit.png" style="width:23px"/></button>

                                                    </div>


                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Created On</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="date" id="CreateDate" class="form-control" name="CreateDate" perfect-class="formGroupControl" perfect-ctype="date" onchange="checkdatewithLDdate(this)" max="2050-01-01" perfect-css="date" />
                                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>

                                                <div id="CreateDate-error" class="Custominvalid animated fadeInUp CreateDateerror" style="display: none;">Created On Date sholud be greater than  Or Equal to Lead Date</div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Project Name</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="hidden" name="ProjectID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                <input type="text" class="form-control " placeholder="" name="Name" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" required />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Short Name</span>
                                                @*<span class="text-danger">*</span>*@
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control " placeholder="" name="ShortName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Category</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <select class="form-control perfectValidate_string" name="CategoryID" perfect-selectButtonAction="testing" perfect-class="formGroupControl" perfect-ctype="select" onchange="fn_selectSubcategory(this)" perfect-css="select">
                                                    <option value="">Please Select </option>
                                                    @*<option value="1">Inventory</option>*@

                                                    @if (!(Model.CategoryList is null))
                                                    {
                                                        foreach (var cat in Model.CategoryList)
                                                        {
                                                            <option value="@cat.CategoryID">@cat.CategoryName</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Sub Category</span>
                                                @*<span class="text-danger">*</span>*@
                                            </label>
                                            <div class="col-sm-8">
                                                <select class="form-control" name="SubCategotyID" perfect-selectButtonAction="countryadding" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                    <option value="0">Please Select </option>
                                                    @*<option value="1">Test</option>*@
                                                    @if (!(Model.SubCategoryList is null))
                                                    {
                                                        foreach (var Subcat in Model.SubCategoryList)
                                                        {
                                                            <option value="@Subcat.ID_SubCategory">@Subcat.SubCatName</option>
                                                        }
                                                    }
                                                    @*@foreach (var districtList in Model.DistrictList)
                                                    {
                                                        <option value="@districtList.ID_District">@districtList.DistrictName</option>
                                                    }*@

                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Project Amount</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="hidden" class="form-control" name="Proamount1" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                <input type="text" class="form-control perfectValidate_decimal text-right" name="Proamount" perfect-class="formGroupControl" id="Proamount" oninput="decimalpnt(this,'Proamount',3)" perfect-ctype="input" perfect-css="input" onchange="fn_Amount(this)" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Discount Amount</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="hidden" class="form-control" name="DisAmount1" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                <input type="text" class="form-control text-right" name="DisAmount" perfect-class="formGroupControl" id="DisAmount" oninput="decimalpnt(this,'DisAmount',3)" perfect-ctype="input" perfect-css="input" onchange="fn_Amount(this)" />
                                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Finalization Amount</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="hidden" class="form-control" name="SalePrice" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                <input type="text" class="form-control perfectValidate_decimal text-right" name="FinalAmount" perfect-class="formGroupControl" id="FinalAmount" oninput="decimalpnt(this,'FinalAmount',3)" perfect-ctype="input" perfect-css="input" onchange="fn_Amount(this)" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Start Date</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="date" id="StartDate" class="form-control" name="StartDate" perfect-class="formGroupControl" perfect-ctype="date" max="2050-01-01" perfect-css="date" onchange="CalEndDate(this)" />
                                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                                                <div id="StartDate-error" class="Custominvalid animated fadeInUp StartDateerror" style="display: none;">Start Date sholud be greater than or equal to Created On Date</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Duration Type</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <select class="form-control perfectValidate_numeric" name="DurationType" perfect-tempTable-WorkDetailsTable="DurationType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" onchange="CalEndDate(this)">

                                                        <option value="">Please Select </option>

                                                        @if (!(Model.DurationTypeList is null))
                                                        {
                                                            foreach (var durationTypeList in Model.DurationTypeList)
                                                            {
                                                                <option value="@durationTypeList.ID_Mode">@durationTypeList.ModeName</option>
                                                            }

                                                        }

                                                    </select>
                                                </div>
                                            </div>
                                            <div class="text-danger temptableError"></div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Duration</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="hidden" class="form-control " name="SalePrice" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                <input type="text" class="form-control text-left perfectValidate_numeric" perfect-tempTable-WorkDetailsTable="Duration" name="Duration" perfect-class="formGroupControl" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" maxlength="6" fperfect-ctype="input" perfect-css="input" onchange="CalEndDate(this)" />
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">End Date</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="date" id="EndDate" class="form-control" name="EndDate" perfect-class="formGroupControl " perfect-ctype="date" max="2050-01-01" perfect-css="date" />
                                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Tax Group</span>
                                                @*<span class="text-danger">*</span>*@
                                            </label>
                                            <div class="col-sm-8">
                                                <select class="form-control " id="taxgroup" name="FK_TaxGroup" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="taxchange(this)">
                                                    <option value="0">Please Select </option>
                                                    @if (!(Model.TaxgroupList is null))
                                                    {
                                                        foreach (var unit in Model.TaxgroupList)
                                                        {
                                                            <option value="@unit.TaxGroupID">@unit.TaxGroupName</option>
                                                        }
                                                    }

                                                </select>
                                            </div>
                                        </div>
                                    </div>



                                    @*File Upload*@
                                    <div class="col-sm-6">

                                        <div class="form-group row" perfect-class="formGroup">
                                            <div class="col-sm-12">
                                                <div id="prdimg" class="tab-pane active" style="padding-left:12px">
                                                    <div class="row">
                                                        <div class="col-sm-1">
                                                        </div>
                                                        <div class="col-sm-5">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <div class="upload-btnup-wrapper">
                                                                    <button type="button" id="btndocsUpload" class="btnup btn"><span class="accordion__header--text">Upload Documents</span></button>

                                                                </div>

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @* End File Upload*@






                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">

                                            </label>
                                            <div class="col-sm-8">
                                                &nbsp;&nbsp;&nbsp;&nbsp;
                                                <input type="checkbox" class="form-check-input" name="ProjIncludeTax" id="taxinclude" perfect-class="formCheckInput" onchange="fn_Check(this)" perfect-ctype="checkbox" perfect-css="checkbox"><span perfect-class="formCheckInputText">Include Tax on Finalization Amount</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" name="buybacksection" style="display:none">
                                    <div class="col-sm-12" style="margin-top: 38px;">
                                        <div class="daccordion__header" style="margin-bottom: 22px;">
                                            <span class="accordion__header--text">BUY BACK</span>
                                        </div>
                                        <div class="row">

                                            <br />
                                            <div class="col-sm-3" id="ProductDiv">
                                                <div class="form-group row" perfect-class="formGroup">
                                                    <label class="col-sm-3 col-form-label">Item&nbsp;<span class="text-danger">*</span></label>
                                                    <div class="col-sm-8">
                                                        <div class="input-group">
                                                            <input type="text" class="form-control " perfect-tempTable-buyback="ProdName" name="ProdName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                            <input type="hidden" name="FK_Product" perfect-tempTable-buyback="FK_Product" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                            <div class="input-group-append">
                                                                @*<button id="addcountry-jq-searchButton33" name="prdfbtn" class="btn btn-primary fa fa-search" type="button" onclick="
                                                                (this, 131, 'Product Details', [], [],SalesTransMode)" BindName="ProdName" BindVal="FK_Product" Criterea1="FK_Branch" Criterea2="FK_Department" perfect-css="button"></button>*@

                                                                <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,85,'Product List',[],['MinRate','MaxRate'])" Criterea2="0" BindName="ProdName" BindVal="FK_Product"></button>
                                                            </div>
                                                            <div class="text-danger temptableError"></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="form-group row" perfect-class="formGroup">
                                                    <label class="col-sm-4 col-form-label">Quantity<span class="text-danger">&nbsp;*</span></label>
                                                    <div class="col-sm-6">
                                                        <input type="text" maxlength="13" class="form-control text-right" perfect-tempTable-buyback="Quantity" name="Quantity" id="Quantity" oninput="decimalpnt(this,'Quantity',3)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                        <div class="text-danger temptableError mtrlQtyerror">
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>


                                            <div class="col-sm-2">
                                                <div class="form-group row" perfect-class="formGroup">
                                                    <label class="col-sm-4 col-form-label">Rate<span class="text-danger">&nbsp;*</span></label>
                                                    <div class="col-sm-7">
                                                        <input type="text" maxlength="13" class="form-control text-right" perfect-tempTable-buyback="Rate" name="Rate" id="Rate" oninput="decimalpnt(this, 'Rate', 3)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                        <div class="text-danger temptableError mtrlQtyerror">
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-sm-2">
                                                <div class="form-group row" perfect-class="formGroup">
                                                    <label class="col-sm-5 col-form-label">Serial No</label>
                                                    <div class="col-sm-7">
                                                        <input type="text" maxlength="13" class="form-control text-right" perfect-tempTable-buyback="SerialNo" name="SerialNo" id="inQuantity" oninput="blockDecimal(this)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                                        <div class="text-danger temptableError mtrlQtyerror">
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>

                                            <div class="col-sm-2" text-right">
                                                <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Product" onclick="createbuybacktable(this,'buyback',['FK_Product'],restableOptionsTempOut)" style="margin-left:0px" ;><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                                                <button class="btn btn-light1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="ProductDetailsclear(this,'buyback')" style="margin-left:-2px" ;><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="col-xl-12">
                                    <div class="col-sm-12" style="margin-left:-24px;margin-bottom:40px">
                                        <div class="table-responsive" perfect-tempTable="buyback" name="BuyBackTable" id="BuyBackTable" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4" style="display:none" name="Buybackamt">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Buy Back Amount</span>

                                            </label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control text-right" placeholder="" readonly id="Buybcksum" name="buybacksumamt" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-footer text-right" perfect-class="formFooter">
                                    @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                                    {
                                        <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="updateProjectCreation(this)"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                                    }
                                    @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                                    {
                                        <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="AddProjectCreation(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                                    }
                                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                                </div>
                                <div class="modal fade show" id="registration" style="display:none; padding-right: 17px" aria-modal="true">
                                    <div class="modal-dialog modal-dialog-centered" role="document">
                                        <div class="modal-content">

                                            <div class="modal-body">
                                                <div class="row">
                                                    <div class="col-md-4"></div>
                                                    <div class="col-md-4">
                                                        <img src="~/Assets/images/success.png" style="height:100px" />
                                                    </div>
                                                    <div class="col-md-4"></div>
                                                </div>
                                                <div id="Registration">

                                                </div>

                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="close" data-dismiss="modal" onclick="closeregister(this)">
                                                    <span style="font-size:15px">Close</span>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="Customerinfo" class="tab-pane">
                                <div class="row" style="margin-top:1.5rem;">
                                    <div class="col-sm-6" name="Leadinfodetails">
                                    </div>
                                    <div class="col-sm-6" name="divDetails">
                                    </div>

                                    <div class="card-body">
                                        <h4>Product Details</h4>
                                        <div class="table-responsive">
                                            <table class="table  table-striped" id="ProductDett">
                                                <thead class="thead-primary">
                                                    <tr>
                                                        <th>Sl No.</th>
                                                        <th>Product</th>
                                                        <th>Qty</th>
                                                        <th>Category</th>
                                                        <th>Priority</th>
                                                        <th>Status</th>
                                                        <th>Action</th>
                                                        <th>Action Type</th>
                                                        @*<th>Customer Reamrks</th>*@
                                                        @*<th>Agent Remarks</th>*@
                                                        <th>Follow Up Date</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="ProductDet">
                                                    <tr id="0">
                                                        <td colspan="9" style="text-align:center;">No Records...</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="History" class="tab-pane">
                                <br />
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group col-md-6">
                                            <div class="form-check mb-2">
                                                <input type="checkbox" class="form-check-input" id="Mode" name="ViewAll" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" onchange="fn_LeadManagement_History(this)" />
                                                <label class="form-check-label" for="check1">View All Products</label>
                                            </div>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <table class="table  table-striped" id="Product">
                                                    <thead class="thead-primary">
                                                        <tr>
                                                            @*<th>Product</th>*@
                                                            <th>Enquiry About</th>
                                                            @*<th>Description</th>*@
                                                            <th>Action</th>
                                                            <th>Action Date</th>
                                                            <th>Status</th>
                                                            @*<th>Customer Reamrks</th>*@
                                                            <th>Employee Remarks</th>
                                                            <th>Followed By</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="ProductTbody">
                                                        <tr id="0">
                                                            <td colspan="9" style="text-align:center;">No Records...</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12" name="divHistory">
                                    </div>
                                </div>
                            </div>
                            <div id="SiteVisit" class="tab-pane">
                                <div class="row" style="margin-top:1.5rem;">
                                    <div class="col-sm-6" name="divSVDetails">
                                    </div>
                                    <div class="col-sm-6" name="divSVDetails1">
                                    </div>

                                    <div class="card-body">
                                        <h4>Employee Details</h4>
                                        <div class="table-responsive">
                                            <table class="table  table-striped" id="ProductDett">
                                                <thead class="thead-primary">
                                                    <tr>
                                                        <th>Sl No.</th>
                                                        <th>Department</th>
                                                        <th>Employee</th>
                                                        <th>Role</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="EmployeeDet">
                                                    <tr id="0">
                                                        <td colspan="9" style="text-align:center;">No Records...</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <div class="card-body">
                                        <h4>Measurement Details</h4>
                                        <div class="table-responsive">
                                            <table class="table  table-striped" id="ProductDett">
                                                <thead class="thead-primary">
                                                    <tr>
                                                        <th>Sl No.</th>
                                                        <th>Work Type</th>
                                                        <th>Measurement Type</th>
                                                        <th>Value</th>
                                                        <th>Unit</th>
                                                        <th>Remarks</th>

                                                    </tr>
                                                </thead>
                                                <tbody id="MeasurementDet">
                                                    <tr id="0">
                                                        <td colspan="9" style="text-align:center;">No Records...</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="CostPreparation" class="tab-pane">
                                <div class="row" style="margin-top:1.5rem;">
                                    <div class="col-sm-12" name="divCPDetails">
                                    </div>


                                    <div class="card-body col-sm-4">
                                        <h4>Employee Details</h4>
                                        <div class="table-responsive">
                                            <table class="table  table-striped" id="ProductDett">
                                                <thead class="thead-primary">
                                                    <tr>
                                                        <th>Sl No.</th>
                                                        <th>Department</th>
                                                        <th>Employee</th>
                                                        <th>Role</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="EmployeeDett">
                                                    <tr id="0">
                                                        <td colspan="9" style="text-align:center;">No Records...</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <div class="card-body col-sm-4">
                                        <h4>Material Details</h4>
                                        <div class="table-responsive">
                                            <table class="table  table-striped" id="ProductDett">
                                                <thead class="thead-primary">
                                                    <tr>
                                                        <th>Sl No.</th>
                                                        <th>Product</th>
                                                        <th style='text-align: center;'>Qty</th>
                                                        <th style='text-align: right;'>Amount</th>

                                                    </tr>
                                                </thead>
                                                <tbody id="MaterialDet">
                                                    <tr id="0">
                                                        <td colspan="9" style="text-align:center;">No Records...</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="card-body col-sm-4">
                                        <h4>Work Details</h4>
                                        <div class="table-responsive">
                                            <table class="table  table-striped" id="ProductDett">
                                                <thead class="thead-primary">
                                                    <tr>
                                                        <th>Sl No.</th>
                                                        <th>Work Type</th>
                                                        <th>Duration Type</th>
                                                        <th>Duration</th>
                                                        <th style='text-align: right;'>Work Amount</th>

                                                    </tr>
                                                </thead>
                                                <tbody id="WorkDet">
                                                    <tr id="0">
                                                        <td colspan="9" style="text-align:center;">No Records...</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <input type="hidden" id="ID_LeadGenerateActionhdns" />


            </div>
        </form>
        <div class="md-2 modal fade" perfect-class="formGroupModalcustmrformGroupModalcustmr" id="formGroupModalcustmr">
            <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
                <div class="modal-content">
                    <div class="modal-header border-0">
                        <h5 class="modal-title">Edit Customer</h5>
                        <button type="button" class="close" data-dismiss="modal">
                            <span>&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                        <div class="row">

                            <div class="col-sm-12" id="custmr-savs">

                            </div>


                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>


</div>


<script>
    (function () {
        //jQuery('form').validate();//<-----  Validate/initialize our form on page load

    })();
    var PssfupDocsList = [];
    var CusOth = false;
    var CustomerID = 0;
    $("#btndocsUpload").click(function () {
        let $thisForm = $(this).closest('[perfect-class="form"]');
        let MasterId = $thisForm.find('[name="ProjectID"]').val() == "" ? "0" : $thisForm.find('[name="ProjectID"]').val();
        let header = "Project Documents";
        OpenModalForUpload(MasterId,'', header);
    })

    $(document).ready(function () {

        initFunctions('form');
        $('#MaterialDetails').removeClass('collapsed');
        $('#active-header_collapseTwo').addClass('collapse');
        $('#active-header_collapseTwo').addClass('show');
        $('#MasterProjectDetails').attr('aria-expanded', "true");
        $('#active-header_collapseTwo1').addClass('collapse');
        $('#active-header_collapseTwo1').addClass('show');
        $('#active-header_collapseTwo2').addClass('collapse');
        $('#active-header_collapseTwo2').addClass('show');
        displayBuyBack();


        //var $includeTaxCheckbox = $('#taxinclude');

        //$includeTaxCheckbox.prop('disabled', true);

    });
     function displayBuyBack() {
        debugger

        let $thisForm = $('[perfect-class="form"]');
        $.ajax({
            url: '@Url.Action("ShowBuyBack", "ProjectCreation")',
            type: "Get",
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                if (ajaxOutput.Process.IsProcess) {
                    $.each(ajaxOutput.Data, function (key, value) {
                        if (value.GsValue == true) {


                            $thisForm.find('[name="buybacksection"]').show();
                            $thisForm.find('[name="Buybackamt"]').show();


                        }
                        else {
                            $thisForm.find('[name="buybacksection"]').hide();
                            $thisForm.find('[name="Buybackamt"]').hide();

                        }

                    });
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }

            },


        });



    }




    function calculateAndDisplaySum(ele) {
        debugger
        var sum = 0;
        $('#BuyBackTable tbody tr').each(function () {
            var value = parseFloat($(this).find('td:eq(3)').text()) || 0;
            sum += value;
        });
        $('#Buybcksum').val(sum);

    }

    function createbuybacktable(ele, tkey, uniq = []) {
        debugger
        //var quantity = parseFloat($('[name="Quantity"]').val().trim() == "" ? "0" : $('[name="Quantity"]').val().trim());
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        let insertData = {};
        let tableOptionsTemp = restableOptionsTempOut;
        let unique = (uniq) ? uniq : [];
        let isValid = true;
        let errorClass = '.temptableError';
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProdName"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdName"]').val() == "") {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Product');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val() == "") {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Quantity');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Rate"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Rate"]').val() == "") {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="Rate"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Rate');
        }
        var rate = parseFloat($thisForm.find('[perfect-tempTable-' + tableKey + '="Rate"]').val()) || 0;
        var billtotal = parseFloat($thisForm.find('[name="FinalAmount"]').val()) || 0;
        if (rate >= billtotal) {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Rate"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Buy Back Amount must be less than Finalization Amount');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Rate"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        if (isValid) {
            let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
            let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
            let indexname = tkey + 'index';
            tableOptionsTemp.rowAttribute.push(indexname);
            tableOptionsTemp.hideColumn.push(indexname);
            let updateCond = '';
            let isNew = true;
            if (thisactionIndex > 0) {
                insertData[indexname] = thisactionIndex;
                updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
                isNew = false;
            }
            else {
                insertData[indexname] = lastIndex + 1;
                $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
                isNew = true;
            }
            if (unique.length > 0) {
                let prevData = [];
                $tblcontainer.find('table > tbody').find('tr').each(function () {
                    if (isNew) {
                        prevData.push($(this).data('pData'));
                    }
                    else {
                        if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                            prevData.push($(this).data('pData'));
                        }
                    }
                })



                unique.forEach(function (key, i) {

                    let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                    let headerEleName = $thisForm.find('[name="ProductName"]').text();
                    let atname = $thisEle.attr('name');
                    let cvalue;
                    if ($thisEle.length != 0) {
                        console.log('len', $thisEle)
                        let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                        let errmessage = headerEleName + " Already exits"

                        //getting current value in cval
                        if ($thisEle.is('select')) {
                            cvalue = $thisEle.val();
                        }
                        else if ($thisEle.is('input')) {

                            let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                            if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                            else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                            else { cvalue = $thisEle.val(); }
                        }
                        else { cvalue = $thisEle.val(); }
                        //searching in previous data
                        if (prevData.find(a => a[atname] == cvalue)) {
                            $errorElement.text(errmessage);
                            isValid = false;
                        }
                    }
                });
            }

            if (isValid) {
                $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                    let $this = $(this);
                    let headerName = $this.attr('perfect-tempTable-' + tableKey);
                    let nameAttr = $this.attr('name');

                    if ($this.is('select')) {
                        tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTemp.hideColumn.push(nameAttr)
                        if ($this.val() != null) {
                            let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        else {
                            let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                            insertData[nameAttr + '_d'] = selectText;
                        }
                        insertData[nameAttr] = $this.val();
                        $this.val('').selectpicker('refresh');
                    }
                    else if ($this.is('input')) {
                        let inputType = $this.attr('type').toLocaleLowerCase();
                        if (inputType == 'checkbox') {
                            insertData[nameAttr] = $this.is(':checked');
                            tableOptionsTemp.isCheckType.push(nameAttr)
                            $this.prop('checked', false);
                        }
                        else if (inputType == 'hidden') {
                            tableOptionsTemp.hideColumn.push(nameAttr)
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }

                        else if (inputType == 'date') {
                            insertData[nameAttr] = $this.val();
                            $this.val('');
                        }
                        else {
                            if (nameAttr == "Quantity") {
                                insertData[nameAttr] = $this.val().trim() == "" ? "0" : $this.val();
                            } else {
                                insertData[nameAttr] = $this.val();
                            }
                            $this.val('');
                        }
                    }
                    else {
                        insertData[nameAttr] = $this.val();
                        $this.val('');
                    }
                });
                console.log('check 4.2');
                if (isNew) {
                    console.log('check 4.2.1');
                    if ($tblcontainer.find('table').length == 0) {
                        console.log('check 4.2.3');
                        $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                    }
                    else {
                        console.log('check 4.2.1');
                        let table = $tblcontainer.find('table').DataTable()
                        table.destroy()
                        pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                    }
                    console.log('check 4.2.1');
                }
                else {
                    console.log('check 4.3');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    console.log('check 4.4');
                    console.log('table', $tblcontainer.find('table'))
                    console.log('check 4.5');
                    pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
                }
                console.log(insertData);
                $tblcontainer.attr('perfect-tempTable-action', 0);
            }
            console.log('check 5');
        }
        calculateAndDisplaySum(ele);
        fn_Amount(ele);

    }
    var restableOptionsTempOut = {
        iconButton: {
            buttons: [
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData');
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        let indexname = tableKey + 'index';
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);
                        console.log('Editclick', savedData);
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {

                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        debugger
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let $thisForm = $(this).closest('[perfect-class="form"]');
                        ///$thistbl.destroy();
                        let table = $thistbl.DataTable();
                        table.destroy();

                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                        }
                        else {
                            $thistbl.remove();
                            $thisForm.find('[name="buybacksumamt"]').val('');
                        }
                        calculateAndDisplaySum();
                      

                        $("#btnresetRes").click();

                    }
                }

            ]
        },
        onlyShowColumn: ["ProdName", "Quantity", "Rate", "SerialNo"],
        hideColumn: ['FK_Product'],
        serialNo: true,
        renameHeader: { "ProdName": "Item", "Quantity": "Quantity", "Rate": "Rate", "SerialNo": "Serial No" },
        rowAttribute: [],
        isCheckType: [],
        Scroll: true
    };
  
    function decimalpnt(ele, name, range) {

        let input = $('#' + name);
        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
        input.on('keydown', function () {
            if (ele.value.includes('.')) {

            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.length == 10) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }

    var tableOptionsTempOut = {
        iconButton: {
            buttons: [
                {
                    icon: "fa fa-trash",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            //$thistbl.dataTable({ paging: true, searchbtn: false });
                        }
                        else {
                            $thistbl.remove();
                        }

                    }
                },
                {
                    icon: "fa fa-pencil",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';
                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');

                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else if (inputType == 'date') {
                                    console.log('datess', savedData)
                                    console.log('datess', savedData[pf_name])
                                    // $thisNode.val(moment(savedData[pf_name]).format('YYYY-DD-MM'));
                                    $thisNode.val(savedData[pf_name]);
                                }
                                else {

                                    $thisNode.val(savedData[pf_name]);
                                }

                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }


                        });



                    }
                },
            ]
        },



        onlyShowColumn: ["Department_d", "Employee", "EmployeeType_d", "Amount", "Product","Quantity","WorkType_d","DurationType_d","Duration","WorkAmount"],
        hideColumn: [ "EmployeeTypeID", "MeasurementTypeID","MeasurementUnitID"],
        serialNo: true,
        renameHeader: {
            "Quantity": "Quantity", "EmployeeType_d": "Employeee Type", "WorkType" : "Work Type"},

        rowAttribute: [],
        isCheckType: [],
        isDateType: ["NextActionDate"],
    };

    var Subimg = "";
    function Getsubimg(dataimg) {
        Subimg = dataimg;
    }
    var $imgContainer = $('#Image-form');
      function ImageLoad(ele) {

        $imgContainer.load('@Url.Action("LoadImageForm", "ProjectCreation")', function () {
            getcase('Company');
        debugger
            if (Subimg != "") {
                $.each(Subimg, function (key, value) {

                    var Mode = value.ImgMode;
                    console.log('Mode', Mode);
                    var imgal = value.ImgValue;
                    var ModeName = value.ModeName;
                    Getimgcntrl1(ele, "data:image/;base64," + imgal, Subimg, ModeName, Mode, value.ImgName)
                });
            }


        });
    }

    function checkdatewithLDdate(ele) {


        let $thisForm = $(ele).closest('[perfect-class="form"]');
        console.log('Ldate', $thisForm.find('[name=LeadDates]').val());
        let createdate = $thisForm.find('[name=CreateDate]').val();
        let leaddate = $thisForm.find('[name=LeadDates]').val();
        if (createdate < leaddate) {
            $thisForm.find('[name="CreateDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Created On Date sholud be greater than or equal to Lead Date');
            return false;

        }
        else {

            $thisForm.find('[name="CreateDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
            return true;
        }



    }
    function getEmployee(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

               //console.log("Input data",inputData)

                $.ajax({
                 url: '@Url.Action("GetEmployeeList", "Branch")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                    type: "GET",


                dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var employeeModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['EmployeeID'] });
                            employeeModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=EmployeeID]').val(ret.EmployeeID);
                                    $thisForm.find('[name=Employee]').val(ret.Employee);

                                   //-----
                                    $.ajax({
                                        url: "@Url.Action("GetEmployeeBaseInfo", "ServiceMapping")",
                                        type: "POST",
                                        data: { employeeID: ret.EmployeeID, __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),},
                                        dataType: "json",
                                        contentType: "application/x-www-form-urlencoded; charset=utf-8",
                                        success: function (ajaxOutEmp) {
                                            //code to make table
                                            //fill table
                                            //show
                                            if (ajaxOutEmp.Process.IsProcess) {

                                                let $tbl = $thisForm.find('.jq_serviceMap_empdetails');

                                                $tbl.find('.jq_serviceMap_empdetails_name').text(ajaxOutEmp.Data[0].EmployeeName);
                                                $tbl.find('.jq_serviceMap_empdetails_num').text(ajaxOutEmp.Data[0].Number);
                                                $tbl.find('.jq_serviceMap_empdetails_dsgn').text(ajaxOutEmp.Data[0].EmployeeDesignation);
                                                $tbl.find('.jq_serviceMap_empdetails_dept').text(ajaxOutEmp.Data[0].EmployeeDepartment);
                                                $tbl.removeClass('d-none');
                                            }

                                        }
                                    });

                                    //------

                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }





                },


            });


    }
    function ShowOtherCharges(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let Othrinfo = [];
        if ($thisForm.data('pOthrChgData')) {
            if ($thisForm.data('pOthrChgData').length > 0) {

                Othrinfo = $thisForm.data('pOthrChgData');
            }
            else {
                Othrinfo.push($thisForm.data('pOthrChgData'));
            }

            let sum = 0;
            console.log('has tax info', Othrinfo)
            var CheckListHTML = '';
            $.each(Othrinfo, function (i, value) {
                sum = sum + parseFloat(value.OctyAmount);
                let options = ''
                options += '<option value=' + value.TransTypeID + '>' + value.TransType + '</option>'
                let $dropdown = '<select class="form-control" >' + options + '</select>';
                CheckListHTML += "<tr>";
                CheckListHTML += "<td>" + value.SlNo + "</td>";
                CheckListHTML += "<td Class='jq_ID_OtherChargeType_td' Style='Display:none'>" + value.ID_OtherChargeType + "</td>";
                CheckListHTML += "<td Class='jq_Type_td'>" + value.OctyName + "</td>";
                CheckListHTML += "<td class='jq_TransType_td'>" + $dropdown + "</td>";
                CheckListHTML += "<td class='jq_OtherChagAmnt_td' ><input class='form-control text-right' type='number'  value='" + value.OctyAmount + "'' /></td>";

                CheckListHTML += "</tr>";
            })

            $("#OtherChargebody").html(CheckListHTML)
            $('#formGroupModalformGroupModalOtherCharge').modal('show');
        }
        else {
            BindChargeDetails("1", 'formGroupModalOtherCharge', ele)
        }

    }
      function BindChargeDetails(Mode, ModalID, ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        var InputData =
        {

            TransMode: 'PRSV',
            }

        $.ajax({
            url: "@Url.Action("GetOtherCharges","SiteVisit")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                if (ajaxOutput.OtherCharges.Process.IsProcess) {
                         var CheckListHTML = '';
                         let sum = 0;
                         if (ajaxOutput.OtherCharges.Data.length > 0) {
                             //---
                             let options =''
                             $.each(ajaxOutput.Transtypelist.Data, function (i, value) {
                                 options += '<option value=' + value.TransTypeID + '>' + value.TransType+'</option>'
                             });
                            //---
                             $.each(ajaxOutput.OtherCharges.Data, function (i, value) {
                                 console.log('Transtypelist',ajaxOutput.Transtypelist.Data)

                                 let $dropdown = '<select class="form-control" >' + options + '</select>';
                                 if (othrchargelst != '') {
                                     $.each(othrchargelst, function (key, value1) {

                                         if (value1.idotherchg == value.ID_OtherChargeType) {

                                             value.OctyAmount = value1.amtothr;

                                         }

                                     });

                                 }
                                 sum = sum + parseFloat(value.OctyAmount);
                                 CheckListHTML += "<tr>";
                                 CheckListHTML += "<td>" + value.SlNo + "</td>";
                                 CheckListHTML += "<td Class='jq_ID_OtherChargeType_td' Style='Display:none'>" + value.ID_OtherChargeType + "</td>";
                                 CheckListHTML += "<td Class='jq_Type_td'>" + value.OctyName + "</td>";
                               CheckListHTML += "<td class='jq_TransType_td'>" + $dropdown + "</td>";
                                 CheckListHTML += "<td class='jq_OtherChagAmnt_td' ><input  class='form-control text-right' type='number'  value='" + value.OctyAmount + "' ' /></td> /></td>";

                                 CheckListHTML += "</tr>";
                             })
                         }
                         else {
                             CheckListHTML += "<div class='form-group col-md-6'>";
                             CheckListHTML += "<div class='form-check mb-2'>";
                             CheckListHTML += "<label class='form-check-label' for='check1'>No Records...</label>";
                             CheckListHTML += "</div></div>"
                         }
                         //let $model = createSearchModalDOM();
                         //$model.modal.find('.modal-body').append(CheckListHTML);
                         //$model.show

                         $("#formGroupModalOtherChargebody").html(CheckListHTML)
                         $('#formGroupModalOtherCharge').modal('show');
                        // $thisForm.find('[name=TaxAmount]').val(sum);
                     }
                     else {
                    $.each(ajaxOutput.OtherCharges.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                    $('select').selectpicker('refresh');
                }
            });
    }
    var othrchargelst;
    function BindOtherChargeAmount(ele) {
        console.log('inside binddatat fn')
        let $modal = $(ele).closest('.modal');
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let sum = 0;
        othrchargelst = [];
        $modal.find('table tbody').find('tr').each(function () {
            let value = parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val())
            if (isNaN(value)) { value=0}
            if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 0 || isNaN(parseInt($(this).find('.jq_TransType_td').find('select').val()) )) {
                value = value * 0;
            }
            else if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 1) {
                value = value * 1;
            }
            else {
                value = value * 1;
            }
            sum = sum + value;

            let othrcharge = {
                idotherchg: $(this).find('.jq_ID_OtherChargeType_td').text(),
                amtothr: parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val())
            };
            othrchargelst.push(othrcharge);
            console.log('othrchargelst', othrchargelst)

        });

        $thisForm.find('[name=OtherCharge]').val(sum);
        BindTotalAmount(ele);

    }



    function createatable(ele, tkey, uniq = []) {
        debugger;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';

        //make index
        console.log('check 1');

        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;
        if (thisactionIndex > 0) {
            //means update
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            //insert
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }//
        debugger
        if (tableKey == 'EmployeeDetailsTable') {
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeID"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeID"]').val == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeID"]').val == '') {
                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select Employee');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Department"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Department"]').val == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="Department"]').val == '') {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Department"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Department');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Department"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeType"]').val() == null) {

            isValid = false;
            console.log('false');
            $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Employee Type');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
        }

        if (tableKey == "MaterialDetailsTable") {
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Product');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="ProductID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Quantity');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Amount');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Amount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

        }
        if (tableKey == "WorkDetailsTable") {
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select WorkType');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="DurationType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="DurationType"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="DurationType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select DurationType');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="DurationType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Duration"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Duration"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Duration"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Duration');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Duration"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="WorkAmount"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkAmount"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter WorkAmount');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

        }

        let upperlimit = $thisForm.find('[name="RegDate"]').val();
        let lowerlimit = $thisForm.find('[name="NextActionDate"]').val();
        var enqDate = new Date(upperlimit);
        var nxtDate = new Date(lowerlimit);
        var today = new Date();





        debugger
        if (unique.length > 0) {
            //getting previous data
            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }

                }

            })
            console.log('previous data', prevData);

            unique.forEach(function (key, i) {
                console.log('unid -> key:' + key + "| index :" + i);
                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                let headerEleName = tableKey == "MaterialDetailsTable" ? $thisForm.find('[name="lblProduct"]').text() : $thisForm.find('[name="lblEmployee"]').text();
                let atname = $thisEle.attr('name');
                let cvalue;

                debugger;
                //console.log('len')
                if ($thisEle.length != 0) {
                    console.log('len', $thisEle)
                    let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    let errmessage = headerEleName + " Already exits"

                    //getting current value in cval
                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();

                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else { cvalue = $thisEle.val(); }

                    // console.log('cvalue ->' + cvalue);

                    //searching in previous data
                    if (prevData.find(a => a[atname] == cvalue)) {
                        // console.log('Search =>' + cvalue + '| attr :' + atname)
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });

        }

        console.log('isValid', isValid);

        if (isValid) {

            console.log('check 4.1');
            // this section make table column data
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('nameAttr', nameAttr);
                console.log('headerName', headerName);

                if ($this.is('select')) {

                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    //displat text of select
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    //tableOptionsTemp.onlyShowColumn.push(nameAttr + '_d')
                    insertData[nameAttr] = $this.val();
                    //insertData[nameAttr] = $this.val();
                    if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Action"]').val() != 0) { }



                    if ($thisForm.find('[name="FK_NetAction"]').val() == $this.val()) { }
                    else if ($thisForm.find('[name="FK_ActionType"]').val() == $this.val()) { }
                    else if ($thisForm.find('[name="BranchTypeID"]').val() == $this.val()) { }
                    else if ($thisForm.find('[name="BranchID"]').val() == $this.val()) { }
                    else if ($thisForm.find('[name="FK_Departement"]').val() == $this.val()) { }
                    else { $this.val('').selectpicker('refresh'); }


                }
                else if ($this.is('input')) {

                    let inputType = $this.attr('type').toLocaleLowerCase();

                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp.isCheckType.push(nameAttr)
                        //clear field
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {

                        tableOptionsTemp.hideColumn.push(nameAttr)
                        insertData[nameAttr] = $this.val();

                        if ($thisForm.find('[name="FK_Employee"]').val() == $this.val()) { }

                        else { $this.val(''); }

                        //clear field

                    }
                    else if (inputType == 'date') {


                        if ($this.val() == '') {

                            insertData[nameAttr] = null;
                        }
                        else {

                            insertData[nameAttr] = $this.val();
                        }

                        //clear field
                        // $this.val('');
                    }

                    else {
                        insertData[nameAttr] = $this.val();
                        //$this.val() == "" ? "''" : $this.val();
                        //clear field

                        if ($thisForm.find('[name="AssignEmp"]').val() == $this.val()) {

                        }
                        else { $this.val(''); }
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();
                    if ($thisForm.find('[name="AssignEmp"]').val() == $this.val()) { }
                    else { $this.val(''); }
                }




            });
            console.log('check 4.2', insertData);
            console.log('check 4.2 tableoption', tableOptionsTemp);
            if (isNew) {
                console.log('check 4.2.1');
                //this section nake table.table row
                if ($tblcontainer.find('table').length == 0) {
                    console.log('check 4.2.3');
                    console.log(insertData);
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                    //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false });
                }
                else {
                    console.log('check 4.2.1');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);


                    //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false});
                    //   $tblcontainer.DataTable().draw();
                    //  table.ajax.reload();
                }
                console.log('check 4.2.1');
            }
            else {
                console.log('check 4.3');
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                console.log('check 4.4');
                console.log('table', $tblcontainer.find('table'))
                console.log('check 4.5');
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);


                // $tblcontainer.find('table').dataTable({ paging: false,ordering:false });
            }

            console.log(insertData);

            // resetting the edit value
            $tblcontainer.attr('perfect-tempTable-action', 0);
        }
        BindTotalAmount(ele)
        console.log('check 5');
    }
         function ResetButton(ele) {

             debugger;
        //let $thisForm = $(ele).closest('[perfect-class="form"]');
        //let pData = $thisForm.data('pData');
        //     if (pData) {

        //         $thisForm.find('[name=Lead]').val(pData.LeadGenerationID);

        //         $thisForm.find('[name=CreateDate]').val(moment(pData.CreateDate).format('YYYY-MM-DD'));
        //         $thisForm.find('[name=AddAmount]').val(pData.AdditionalCost);
        //         $thisForm.find('[name=Name]').val(pData.Name);
        //         $thisForm.find('[name=ShortName]').val(pData.ShortName);
        //         $thisForm.find('[name=CategoryID]').val(pData.Category);
        //         $thisForm.find('[name=SubCategotyID]').val(pData.SubCategory);
        //         $thisForm.find('[name=FinalAmount]').val(pData.FinalAmount);
        //         $thisForm.find('[name=DurationType]').val(pData.DurationType).selectpicker('refresh');
        //         $thisForm.find('[name=StartDate]').val(moment(pData.StartDate).format('YYYY-MM-DD'));
        //         $thisForm.find('[name=EndDate]').val(moment(pData.EndDate).format('YYYY-MM-DD'));
        //         $thisForm.find('[name=Duration]').val(pData.Duration);


        //     } else {
        //         $thisForm.find('[perfect-ctype="input"]').val('');
        //         $thisForm.find('[perfect-ctype="number"]').val('');
        //         $thisForm.find('[perfect-ctype="select"]').val('');
        //         $thisForm.find('[perfect-ctype="select"]').selectpicker('refresh');
        //         $thisForm.find('[name="CreateDate"]').val(moment(new Date()).format('YYYY-MM-DD'));
        //         $thisForm.find('[name="StartDate"]').val(moment(new Date()).format('YYYY-MM-DD'));
        //         $thisForm.find('[name="EndDate"]').val(moment(new Date()).format('YYYY-MM-DD'));

        //         $('#ProductDet').empty();

        //         $thisForm.find('[name=Leadinfodetails]').empty();
        //         $thisForm.find('[name=Lead]').val('');
        //         $thisForm.find('[name=divDetails]').empty();
        //         $("#ProductTbody").empty();
        //         $("#Mode").prop('checked', false);

        //         $thisForm.find('[name=divSVDetails]').empty();
        //         $thisForm.find('[name=divCPDetails]').empty();
        //         $("#EmployeeDet").empty();
        //         $("#MeasurementDet").empty();
        //         $("#EmployeeDett").empty();
        //         $("#MaterialDet").empty();
        //         $("#WorkDet").empty();
        //     }

        //$thisForm.validate().resetForm();

             projectcreationInitialLoad();
    }


    // Function to add new ProjectCreation

     function fn_selectSubcategory(ele) {



        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $placeDropdown = $thisForm.find('[name=SubCategotyID]');//<--- Will give place select html element
        $placeDropdown.empty();
        $placeDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');

        let CategoryID = $(ele).val();


         $.ajax({
                 url: "@Url.Action("GetSubcategory", "ProjectCreation")",
                type: "POST",

             data: JSON.stringify({ CategoryID: CategoryID}),
                dataType: "json",
                contentType: "application/json",
             success: function (ajaxOutput) {



                 if (ajaxOutput.Process.IsProcess) {

                             $.each(ajaxOutput.Data, function (key, value) {
                                 $placeDropdown.append($('<option/>', { "value": value.ID_SubCategory }).text(value.SubCatName)).selectpicker('refresh')
                                 });


                     }
                     else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {

                         });
                     }
                     }

                 });


    }

    function getfunction(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[name=DisAmount]').val(0); 
        console.log('123');
    }

    function getfunctionAssign(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
       
        console.log('', $thisForm.find('[name="Individual"]').val());
        var check = $thisForm.find('[name=Individual]').val();
        $thisForm.find('[name="ContactMobile"]').removeClass('perfectValidate_mobile');
        $thisForm.find('[name="ContactMobile"]').addClass('perfectValidate_mobile_nm');
        if ($thisForm.find('[name="Individual"]').val()== "true") {

            $thisForm.find('.jq_institution_details').addClass('d-none');
            $thisForm.find('[name="ContactPerson"]').removeClass('perfectValidate_name');
            $thisForm.find('[name="ContactMobile"]').removeClass('perfectValidate_mobile');
            $thisForm.find('[name="ContactEmail"]').removeClass('perfectValidate_email_nm');
            $thisForm.find('[name="ContactPerson"]').val('');
            $thisForm.find('[name="ContactMobile"]').val('');
            $thisForm.find('[name="ContactEmail"]').val('');
        }
        else {

            $thisForm.find('.jq_institution_details').removeClass('d-none');
            //$thisForm.find('[name="ContactPerson"]').addClass('perfectValidate_name');
           // $thisForm.find('[name="ContactMobile"]').addClass('perfectValidate_mobile');
            $thisForm.find('[name="ContactEmail"]').addClass('perfectValidate_email_nm');
        }

    }
    function fn_GetFinalAmount(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        console.log('1234');
        let inputData = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            LeadGenerateID: $thisForm.find('[name=Lead]').val().trim()
        };
        // let ModeDropdown = $thisForm.find('[name=Mode]')
         //if ($thisForm.find('[name=Mode]').val() == "") {
         //    $thisForm.find('[name=Mode]').val(0);
         //}
         //alert($thisForm.find('[name=Mode]').val())
         $.ajax({
                 url: "@Url.Action("GetFinalAmount", "ProjectCreation")",
                type: "POST",

             data: inputData,
                dataType: "json",
                contentType: "application/json",
             success: function (ajaxOutput) {



                 if (ajaxOutput.Process.IsProcess) {

                             $.each(ajaxOutput.Data, function (key, value) {
                                 $thisForm.find('[name=FinalAmount]').val();
                                 $thisForm.find('[name=DisAmount]').val(0); 
                                 });


                     }
                     else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             //NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': value });
                         });
                     }
                     }

                 });


    }
    function AddProjectCreation(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability
        //$(ele).find('i').removeClass();

        console.log('> Add ProjectCreation form IS valid', $thisForm.valid())
        let upperlimit = $thisForm.find('[name="StartDate"]').val();
        let lowerlimit = $thisForm.find('[name="EndDate"]').val();

        let createlimit = $thisForm.find('[name="CreateDate"]').val();
        let FinalAmount = $thisForm.find('[name=FinalAmount]').val();
        let startDate = $thisForm.find('[name=StartDate]').val().trim();
        let ProjectAmount = $thisForm.find('[name=Proamount]').val();
        $thisForm.find('[name=EndDate]').attr('min', moment(startDate).format('YYYY-MM-DD'))

        if (upperlimit > lowerlimit) {

            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'End Date should greater than Start Date' });

        }
        if (createlimit > upperlimit) {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Start Date should greater than Created On Date' });

        }
        else if (FinalAmount == 0)
        {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Final Amount should be greater than zero' });
        }
        else if (ProjectAmount == 0) {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Project Amount should be greater than zero' });
        }

        else {
            if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                if (checkdatewithLDdate(ele)) {
                    $(ele).prop('disabled', true); // avoiding form submit the double click

                    let $modal2 = $thisForm.find('#zero_configOthercharge');

                    let buybackdetails = [];
                    $thisForm.find('[perfect-tempTable="buyback"]').find('tbody').find('tr').each(function () {
                        buybackdetails.push($(this).data('pData'));
                    })



                    var inputData = {//<---- Input Json : this is the variable we pass to controller
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        'ProjectID': isNaN(parseInt($thisForm.find('[name=ProjectID]').val())) ? 0 : parseInt($thisForm.find('[name=ProjectID]').val()),

                        LeadGenerationID: $thisForm.find('[name=LeadNo]').val(),
                        BranchID: $thisForm.find('[name=BranchID]').val(),
                        CreateDate: $thisForm.find('[name=CreateDate]').val().trim(),
                        Name: $thisForm.find('[name=Name]').val().trim(),
                        ShortName: $thisForm.find('[name=ShortName]').val().trim(),
                        Category: $thisForm.find('[name=CategoryID]').val(),
                        SubCategory: $thisForm.find('[name=SubCategotyID]').val(),
                        DiscountAmount: $thisForm.find('[name=DisAmount]').val(),
                        BuyBackAmount: $thisForm.find('[name=buybacksumamt]').val(),
                        FinalAmount: FinalAmount,
                        ProjectAmount: ProjectAmount,
                        StartDate: $thisForm.find('[name=StartDate]').val().trim(),
                        EndDate: $thisForm.find('[name=EndDate]').val().trim(),
                        Duration: $thisForm.find('[name=Duration]').val(),
                        DurationType: $thisForm.find('[name=DurationType]').val(),
                        FK_TaxGroup: $thisForm.find('[name=FK_TaxGroup]').val(),
                        ProjIncludeTax: $thisForm.find('[name="ProjIncludeTax"]').is(':Checked'),
                        TransMode: ProjectCreationTransMode,
                        LastID: LastID_ProjectCreation,
                        'buyback': buybackdetails,
                        'ImageList': PssfupDocsList,


                    };

                    clearSessionValue(LastIDSessionKey);

                    console.log('> Add ProjectCreation ajax input', inputData);


                    $.ajax({
                        url: "@Url.Action("AddNewProjectCreationDetails", "ProjectCreation")",
                        type: "POST",

                        data: inputData,//<---- Input json : data passed to controller
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                        success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                            console.log("ajaxOutput>>11", ajaxOutput);
                            console.log("ajaxOutputProcesssuccess", ajaxOutput.Process.IsProcess)
                            debugger;
                            if (ajaxOutput.Process.IsProcess) {

                               // $.each(ajaxOutput.Process.Message, function (key, value) {
                                    //toastr.success(value, "Success");
                                    let $register = '';

                                    $register += "<br/><div class='row'>";

                                    $register += "<div class='col-2'></div>";
                                    $register += "<div class='col-10'><span><h3>Saved Successfully</h3></span></div></div>";
                                    $register += "</div>";
                                    $register += "<br/><div class='row'>";


                                $register += "<div class='col-12'><span style='text-align:center'><h5>Customer Number : <strong>" + ajaxOutput.CusNumber  + "</strong></h5></span></div></div>";
                                $register += "<div class='col-12'><span style='text-align:center'><h5>Project Number : <strong>" + ajaxOutput.ProjectNo + "</strong></h5></span></div></div>";
                                   
                                    $register += "</div>";

                                    $('#Registration').empty();
                                    $('#Registration').append($register);
                                    $('#registration').modal({ backdrop: 'static', keyboard: false })
                                    $('#registration').modal('show');
                                    //NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                    
                              // });
                                $thisForm.find('[perfect-ctype="input"]').val('');
                                $thisForm.find('[perfect-ctype="number"]').val('');


                                //let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                //if (onSuccess) {
                                //    window[onSuccess]();
                                //}

                                //---------- Do stuff if success

                                console.log('> Add new ProjectCreation success data', ajaxOutput);
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    //toastr.warning(value, "Error");
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                        },
                        complete: function () {
                            $(ele).prop('disabled', false);
                        }

                    });
                }
                else {

                    NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Create On Date sholud be greater than or equal Lead Date' });
                }

            }

            else { }

        }
    }

    function CalEndDate(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let startDate = $thisForm.find('[name=StartDate]').val();
        let duration = $thisForm.find('[name=Duration]').val();
        $thisForm.find('[name=EndDate]').attr('min', moment(startDate).format('YYYY-MM-DD'))
        var days = 0;
        if ($thisForm.find('[name=DurationType]').val() == '4') { /// Month
            var nwEndDate = new Date(startDate).setMonth(new Date(startDate).getMonth() + parseInt(duration));
                $thisForm.find('[name=EndDate]').val(moment(nwEndDate).format('YYYY-MM-DD'));
        }
       else if ($thisForm.find('[name=DurationType]').val() == '3') { /// Week
            days = parseInt(duration) * 7;
            var nwEndDate = new Date(startDate).setDate(new Date(startDate).getDate() + days);
            $thisForm.find('[name=EndDate]').val(moment(nwEndDate).format('YYYY-MM-DD'));
        }
        else if ($thisForm.find('[name=DurationType]').val() == '2') { /// Days
            days = parseInt(duration);
            var nwEndDate = new Date(startDate).setDate(new Date(startDate).getDate() + days);
            $thisForm.find('[name=EndDate]').val(moment(nwEndDate).format('YYYY-MM-DD'));
        }
        else if ($thisForm.find('[name=DurationType]').val() == '1') { /// Hours
            $thisForm.find('[name=EndDate]').val(moment(startDate).format('YYYY-MM-DD'));
            days = parseInt(duration);
            var nwEndDate = new Date(startDate).setHours(new Date(startDate).getHours() + parseInt(duration));
            $thisForm.find('[name=EndDate]').val(moment(nwEndDate).format('YYYY-MM-DD'));
        }
        $thisForm.find('[name=EndDate]').attr('min', moment(nwEndDate).format('YYYY-MM-DD'));
    }


    // Function to update a customer
    //$('.addcompany-jq-addnewuserUpdate').on('click',



    function updateProjectCreation(ele) {
    debugger;
    let $thisForm = $(ele).closest('[perfect-class="form"]');

    let upperlimit = $thisForm.find('[name="StartDate"]').val();
    let lowerlimit = $thisForm.find('[name="EndDate"]').val();
    let startDate = $thisForm.find('[name=StartDate]').val().trim();
    let createlimit = $thisForm.find('[name="CreateDate"]').val();
    let FinalAmount = $thisForm.find('[name=FinalAmount]').val();
        let ProjectAmount = $thisForm.find('[name=Proamount]').val();
        let pdata = $thisForm.data('pData');
        var input = {
            FK_Project: pdata["ProjectID"],
        };

    $.ajax({
        url: '@Url.Action("EnableEdit", "ProjectCreation")',
        type: "Get",
        dataType: "json",
        data:input,
        contentType: "application/json",
        success: function (ajaxOutput) {
            console.log('ajaxOutput>>Succ', ajaxOutput)
            let continueExecution = true;

            if (ajaxOutput.Process.IsProcess) {
                $.each(ajaxOutput.Data, function (key, value) {
                    if (value.PrBillMode == 2) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Projects Billing Already done for this project' });
                        continueExecution = false;
                        return false; // exit the loop
                    }
                });
            }

            if (continueExecution) {
                $thisForm.find('[name=EndDate]').attr('min', moment(startDate).format('YYYY-MM-DD'))
                if (upperlimit > lowerlimit) {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'End Date should greater than Start Date' });
                }
                if (createlimit > upperlimit) {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Start Date should greater than Created On Date' });
                } else if (FinalAmount == 0) {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Final Amount should be greater than zero' });
                } else if (ProjectAmount == 0) {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Project Amount should be greater than zero' });
                } else {
                   
                    if ($thisForm.valid()) {
                        if (checkdatewithLDdate(ele)) {
                            $(ele).prop('disabled', true);

                            let pdata = $thisForm.data('pData');
                            let $modal2 = $thisForm.find('#zero_configOthercharge');

                            let buybackdetails = [];
                            $thisForm.find('[perfect-tempTable="buyback"]').find('tbody').find('tr').each(function () {
                                buybackdetails.push($(this).data('pData'));
                            })

                            var inputData = {
                                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                LeadGenerationID: $thisForm.find('[name=LeadNo]').val(),
                                BranchID: $thisForm.find('[name=BranchID]').val(),
                                CreateDate: $thisForm.find('[name=CreateDate]').val().trim(),
                                Name: $thisForm.find('[name=Name]').val().trim(),
                                ShortName: $thisForm.find('[name=ShortName]').val().trim(),
                                Category: $thisForm.find('[name=CategoryID]').val(),
                                SubCategory: $thisForm.find('[name=SubCategotyID]').val(),
                                ProjectAmount: ProjectAmount,
                                DiscountAmount: $thisForm.find('[name=DisAmount]').val(),
                                BuyBackAmount: $thisForm.find('[name=buybacksumamt]').val(),
                                FinalAmount: FinalAmount,
                                StartDate: $thisForm.find('[name=StartDate]').val().trim(),
                                EndDate: $thisForm.find('[name=EndDate]').val().trim(),
                                Duration: $thisForm.find('[name=Duration]').val(),
                                DurationType: $thisForm.find('[name=DurationType]').val(),
                                ProjectID: pdata["ProjectID"],
                                FK_TaxGroup: $thisForm.find('[name=FK_TaxGroup]').val(),
                                ProjIncludeTax: $thisForm.find('[name="ProjIncludeTax"]').is(':Checked'),
                                TransMode: ProjectCreationTransMode,
                                LastID: LastID_ProjectCreation,
                                'buyback': buybackdetails,
                                'ImageList': PssfupDocsList,
                            };
                            clearSessionValue(LastIDSessionKey);

                            $.ajax({
                                url: "@Url.Action("UpdateProjectCreationDetails", "ProjectCreation")",
                                type: "POST",
                                data: inputData,
                                dataType: "json",
                                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                success: function (ajaxOutput) {
                                    if (ajaxOutput.Process.IsProcess) {
                                        $.each(ajaxOutput.Process.Message, function (key, value) {
                                            NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                        });
                                        let onSuccess = $thisForm.attr('perfect-onFormSuccess');
                                        if (onSuccess) {
                                            window[onSuccess]();
                                        }
                                        console.log('> update new ProjectCreation success data', ajaxOutput);
                                    } else {
                                        $.each(ajaxOutput.Process.Message, function (key, value) {
                                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                        });
                                    }
                                },
                                complete: function () {
                                    $(ele).prop('disabled', false);
                                }
                            });
                        } else {
                            NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Create On Date sholud be greater than Lead Date' });
                        }
                    } else {}
                }
            }
        }
    });
}
        @*function updateProjectCreation(ele) {

            debugger
            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability

            //perfectCRMvalidation.init($thisForm);
            let upperlimit = $thisForm.find('[name="StartDate"]').val();
            let lowerlimit = $thisForm.find('[name="EndDate"]').val();
            let startDate = $thisForm.find('[name=StartDate]').val().trim();
            let createlimit = $thisForm.find('[name="CreateDate"]').val();

            let FinalAmount = $thisForm.find('[name=FinalAmount]').val();
            let ProjectAmount = $thisForm.find('[name=Proamount]').val();

            $thisForm.find('[name=EndDate]').attr('min', moment(startDate).format('YYYY-MM-DD'))
            if (upperlimit > lowerlimit) {

                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'End Date should greater than Start Date' });

            }
            if (createlimit > upperlimit) {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Start Date should greater than Created On Date' });

            }
            else if (FinalAmount == 0) {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Final Amount should be greater than zero' });
            }
            else if (ProjectAmount == 0) {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Project Amount should be greater than zero' });
            }

            else {

                   if ($thisForm.valid()) {
                    if (checkdatewithLDdate(ele)) {
                    //<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                    $(ele).prop('disabled', true);

                    let pdata = $thisForm.data('pData');

                    console.log('> Update ProjectCreation form data saved', pdata);



                    let $modal2 = $thisForm.find('#zero_configOthercharge');

                        let buybackdetails = [];
                        $thisForm.find('[perfect-tempTable="buyback"]').find('tbody').find('tr').each(function () {
                            buybackdetails.push($(this).data('pData'));
                        })


                    var inputData = {//<---- Input Json : this is the variable we pass to controller
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        //ProjectID: isNaN(parseInt($thisForm.find('[name=ProjectID]').val())) ? 0 : parseInt($thisForm.find('[name=ProjectID]').val()),
                        LeadGenerationID: $thisForm.find('[name=LeadNo]').val(),
                        BranchID: $thisForm.find('[name=BranchID]').val(),
                        CreateDate: $thisForm.find('[name=CreateDate]').val().trim(),
                        Name: $thisForm.find('[name=Name]').val().trim(),
                        ShortName: $thisForm.find('[name=ShortName]').val().trim(),
                        Category: $thisForm.find('[name=CategoryID]').val(),
                        SubCategory: $thisForm.find('[name=SubCategotyID]').val(),
                        ProjectAmount: ProjectAmount,
                        DiscountAmount: $thisForm.find('[name=DisAmount]').val(),
                        BuyBackAmount: $thisForm.find('[name=buybacksumamt]').val(),
                        FinalAmount: FinalAmount,
                        StartDate: $thisForm.find('[name=StartDate]').val().trim(),
                        EndDate: $thisForm.find('[name=EndDate]').val().trim(),
                        Duration: $thisForm.find('[name=Duration]').val(),
                        DurationType: $thisForm.find('[name=DurationType]').val(),
                        ProjectID: pdata["ProjectID"],
                        FK_TaxGroup: $thisForm.find('[name=FK_TaxGroup]').val(),
                        ProjIncludeTax: $thisForm.find('[name="ProjIncludeTax"]').is(':Checked'),
                        TransMode: ProjectCreationTransMode,
                        LastID: LastID_ProjectCreation,
                        'buyback': buybackdetails,
                        'ImageList': PssfupDocsList,


                    };
                        clearSessionValue(LastIDSessionKey);


                    console.log('>Update state ajax input', inputData);
                    $.ajax({
                        url: "@Url.Action("UpdateProjectCreationDetails", "ProjectCreation")",
                        type: "POST",

                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (ajaxOutput) { //<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                            if (ajaxOutput.Process.IsProcess) {

                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    //toastr.success(value, "Success");
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                });


                                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                if (onSuccess) {
                                    window[onSuccess]();
                                }

                                //---------- Do stuff if success
                                //toastr.success("Inside success", "Confirmation Box in table");

                                console.log('> update new ProjectCreation success data', ajaxOutput);
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    //toastr.warning(value, "Error");
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }


                        },
                        complete: function () {
                            $(ele).prop('disabled', false);
                        }

                    });


                    }
                    else {

                        NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Create On Date sholud be greater than Lead Date' });
                    }

                }

                else { }

            }
    }*@

    function BindTotalAmount(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let Amount = 0;
        let WorkAmount = 0;
        let Othercharg = 0;
        let totAmount = 0;
        let addAmount = 0;

        debugger
        $('#Material').find('tbody tr').each(function (index, ele) {
            Amount = Amount + parseFloat($(ele).find('.Amount').text());

        });
        $('#Work').find('tbody tr').each(function (index, ele) {
            WorkAmount = WorkAmount + parseFloat($(ele).find('.WorkAmount').text());

        });
        Othercharg = $thisForm.find('[name=OtherCharge]').val() == "" ? "0" : $thisForm.find('[name=OtherCharge]').val();
        addAmount = $thisForm.find('[name=AddAmount]').val() == "" ? "0" : $thisForm.find('[name=AddAmount]').val();
        totAmount = Amount + WorkAmount + parseFloat(Othercharg) + parseFloat(addAmount)
        $thisForm.find('[name=TotAmount]').val(totAmount);

    }
    function calcsalpttl(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let Spric = $thisForm.find('[name="SalePrice"]').val() == "" ? "0" : $thisForm.find('[name="SalePrice"]').val();
        let qtys = $thisForm.find('[name="Quantity"]').val() == "" ? "0" : $thisForm.find('[name="Quantity"]').val();
        $thisForm.find('[name=Amount]').val(parseFloat(Spric) * parseFloat(qtys));
    }

    function taxchange(ele) {
        debugger
        var $taxTypeDropdown = $('#taxgroup');
        var $includeTaxCheckbox = $('#taxinclude');

        $includeTaxCheckbox.prop('disabled', true);

        var selectedValue = $taxTypeDropdown.val();

        if (selectedValue === "0") {

            $includeTaxCheckbox.prop('disabled', true);
            $includeTaxCheckbox.prop('checked', false);
        } else {
            $includeTaxCheckbox.prop('disabled', false);
        }
    }


    function fn_Check(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let chkval = $thisForm.find('[name="ProjIncludeTax"]').is(":checked") ? 1 : 0;

        let txval = $thisForm.find('[name="FK_TaxGroup"]').val();
        var $includeTaxCheckbox = $('#taxinclude');

        if (chkval == 1) {

            if (txval == "0") {
                $includeTaxCheckbox.prop('disabled', true);
                $includeTaxCheckbox.prop('checked', false);
            }
            else{
                $includeTaxCheckbox.prop('disabled', false);
            }
        }

    }



    function fn_Amount(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let ProjectAmount = $thisForm.find('[name=Proamount]').val();
        let Discountamount = $thisForm.find('[name=DisAmount]').val();
        let buybackamt = $thisForm.find('[name=buybacksumamt]').val();
        let $errorMessage = $thisForm.find('[name="DisAmount"]').closest('[perfect-class="formGroup"]').find('.limit-check');

        if (!Discountamount || Discountamount.trim() === "") {
            let finalamount = ProjectAmount - buybackamt;
            $thisForm.find('[name=FinalAmount]').val(finalamount);
            $errorMessage.text('');
        }
        else {

            let finalamount = ProjectAmount - Discountamount - buybackamt;
            $thisForm.find('[name=FinalAmount]').val(finalamount);

            //if (ProjectAmount < Discountamount) {
            if (finalamount < 0) {
                $errorMessage.text('Discount amount should be less than Project amount');
            } else {
                $errorMessage.text('');
            }

        }
    
    }

    
 
    //function taxchange(ele) {
    //    debugger
    //    var $taxTypeDropdown = $('#taxgroup');
    //    var $includeTaxCheckbox = $('#taxinclude');

    //    // Check the value of the dropdown on page load
    //    if ($taxTypeDropdown.val() === '0') {
    //        // If "Select Tax Type" is selected, disable the checkbox
    //        $includeTaxCheckbox.prop('disabled', true);
    //    } else {
    //        // If any other option is selected, enable the checkbox
    //        $includeTaxCheckbox.prop('disabled', false);
    //    }

    //    // Add an event listener for the dropdown change event
    //    $taxTypeDropdown.on('change', function () {
    //        if ($taxTypeDropdown.val() === '0') {
    //            // If "Select Tax Type" is selected, disable the checkbox
    //            $includeTaxCheckbox.prop('disabled', true);
    //        } else {
    //            // If any other option is selected, enable the checkbox
    //            $includeTaxCheckbox.prop('disabled', false);
    //        }
    //    });
    //}

// Ca

   //////New change///

    function fn_LeadManagementFollowup_loadLeadMgtFollowupForm(ele) {

        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability
        let $formFolowDivContainer = $(this).closest('[perfect-class="form"]').closest('.jq_leadgeneration_body').find('.jq_leadgeneration_followup_status');
        const leadstr = $thisForm.find('[name=Lead]').val().trim();
        const leadnum = Number(leadstr.replace(/[^0-9]/g, ''));
        const leadNo = $thisForm.find('[name=LeadNo]').val().trim();
        let inputData = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            LeadGenerateID: leadNo
        };
        console.log(inputData);
        if ($thisForm.find('[name=Lead]').val().trim() != '' || $thisForm.find('[name=Lead]').val().trim() != 0) {
            $.ajax({
                url: "@Url.Action("GetLeadGenInfo", "SiteVisit")",
                type: "POST",
                // headers: { "token_key": "1234" },
                data: inputData,
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxOutput) {
                    console.log('sss2', ajaxOutput)
                    debugger
                    //$formFolowDivContainer.load('@Url.Action("LoadLeadGenerateAction", "LeadManagement")', function () {
                    //    let $thisForm = $(this).find('[perfect-class="form"]');

                    //    $thisForm.attr('perfect-onFormSuccess', 'fn_LeadManagementActionFormClear');



                        //if (ajaxOutput.FoUpDetails.Process.IsProcess) {
                        //process is success
                        initFunctions($thisForm);
                        //console.log('sss', $thisForm)

                        //   $thisForm.data({ pData: ajaxOutput.FoUpDetails.Data[0] });           //FK_Product0
                        // Fill fields

                   if (ajaxOutput.prInfo.Process.IsProcess){
                        let strHtml = "";

                        let LeadinfoHtml = "";




                        strHtml += "<div class='card'><div class='card-body pb-0'>";
                        strHtml += "<ul class='list-group list-group-flush'>";
                       strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Customer</strong><span class='mb-0'>" + ajaxOutput.prInfo.Data[0]['LgCusName'] + "</span></li>";
                        strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Address</strong><span class='mb-0'>" + ajaxOutput.prInfo.Data[0]['LgCusAddress'] + "</span></li>";
                        strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Mobile Number</strong><span class='mb-0'>" + ajaxOutput.prInfo.Data[0]['LgCusMobile'] + "</span></li>";
                        //strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Target Date</strong><span class='mb-0'>" + moment(ajaxOutput.prInfo.Data[0]['NextActionDate']).format('DD-MM-YYYY') + "</span></li>";
                        if (ajaxOutput.prInfo.Data[0]['NextActionDate'] == null) {
                            nextdate = '';

                        }
                        else {
                            nextdate = moment(ajaxOutput.prInfo.Data[0]['NextActionDate']).format('DD-MM-YYYY');

                        }
                        //strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Target Date</strong><span class='mb-0'>" + ajaxOutput.prInfo.Data[0]['NextActionDate']+ "</span></li>";
                        strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Target Date</strong><span class='mb-0'>" + nextdate + "</span></li>";
                        strHtml += "</ul></div>";




                        $('#Followupuser').html("<b>" + ajaxOutput.prInfo.Data[0]['LgCusName'] + "</b>" + "/" + "<b>" + ajaxOutput.prInfo.Data[0]['LeadNo'] + "</b>");
                        $thisForm.find('[name=divDetails]').html(strHtml);



                        $thisForm.find('[name="LeadNo"]').text();
                        $thisForm.find('[name="ProductCategory"]').text(ajaxOutput.prInfo.Data[0]['CatName']);
                        $thisForm.find('[name="lblfollowuptype"]').text(ajaxOutput.prInfo.Data[0]['ActnTypeName']);

                        LeadinfoHtml += "<div class='card'><div class='card-body pb-0'>";
                        LeadinfoHtml += "<ul class='list-group list-group-flush'>";
                        LeadinfoHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Lead No.</strong><span class='mb-0'>" + ajaxOutput.prInfo.Data[0]['LgLeadNo'] + "</span></li>";
                        LeadinfoHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Lead Date</strong><span class='mb-0'>" + moment(ajaxOutput.prInfo.Data[0]['LeadDate']).format('DD-MM-YYYY') + "</span></li>";
                        LeadinfoHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Email</strong><span class='mb-0'>" + ajaxOutput.prInfo.Data[0]['LgCusEmail'] + "</span></li>";
                        LeadinfoHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Collected By</strong><span class='mb-0'>" + ajaxOutput.prInfo.Data[0]['LgCollectedBy'] + "</span></li>";

                        LeadinfoHtml += "</ul></div>";
                        $thisForm.find('[name=Leadinfodetails]').html(LeadinfoHtml);
                    }


                    var $ProductHtml = '';
                         if (ajaxOutput.subproduct.Process.IsProcess){
                            $('#ProductDet').empty();
                            var ProductData = ajaxOutput.subproduct.Data;
                            if (ProductData) {
                                $.each(ProductData, function (i, value) {
                                    let rowCount = (i + 1);
                                    $ProductHtml += "<tr id=" + rowCount + ">";
                                    $ProductHtml += "<td style='width:10%;'>" + rowCount + "</td>";
                                    $ProductHtml += "<td style='width:20%;'>" + value.ProdName + "</td>";
                                    $ProductHtml += "<td>" + value.LgpPQuantity + "</td>";
                                    $ProductHtml += "<td>" + value.CatName + "</td>";
                                    $ProductHtml += "<td >" + value.PriorityName + "</td>";
                                    $ProductHtml += "<td >" + value.Status + "</td>";
                                    $ProductHtml += "<td >" + value.NxtActnName + "</td>";
                                    $ProductHtml += "<td >" + value.ActnTypeName + "</td>";
                                    //$ProductHtml += "<td>" + value.ActnTypeName + "</td>";
                                    debugger
                                    if (value.NextActionDate!=null)
                                    $ProductHtml += "<td style='width:20%;'>" + moment(value.NextActionDate).format('DD/MM/YYYY') + "</td>";

                                    $ProductHtml += "</tr>";
                                });
                            }
                            else {
                                $ProductHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                            }
                            $thisForm.find('#ProductDet').append($ProductHtml);
                        }
                        else {
                            $ProductHtml += "<tr id='0'><td colspan='8' style'text-align:center'>No Records..</td></tr>";
                            $thisForm.find('#ProductDet').append($ProductHtml);
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }

                        //}

                        //});
                    }
            });
        }


    }


    function fn_LeadManagement_History(ele) {
        debugger
        ;
        //
        // var $thisForm = $(ele).closest('[perfect-class="form-Assign"]');
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let prdOnly = true;;
        if ($thisForm.find('[name=ViewAll]').is(":checked")) {
            prdOnly = false;
        }


        const leadstr = $thisForm.find('[name=Lead]').val().trim();
        const leadnum = Number(leadstr.replace(/[^0-9]/g, ''));

        let inputData = {            //
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
           // 'LeadGenerateProduct': $thisForm.find('[name="Lead"]').val(),
            'LeadGenerateProduct': $thisForm.find('[name="FK_Lead"]').val(),
            'PrductOnly': prdOnly
        };


        $.ajax({
            url: '@Url.Action("GetLeadActionHistoryList", "SiteVisit")',
            type: "POST",
            data: inputData,
            dataType: "json",
            contentType: "application/x-www-form-urlencoded;charset=utf-8",
            success: function (ajaxOutput) {
                var $ProductHtml = '';
                debugger
                console.log(ajaxOutput,'sss3')
                if (ajaxOutput != null) {
                    $('#ProductTbody').empty();
                    var ProductData = ajaxOutput.Data;
                        if (ProductData)
                        {
                            $.each(ProductData, function (i, value) {
                                let rowCount = (i + 1);
                                $ProductHtml += "<tr id=" + rowCount + ">";
                              //  $ProductHtml += "<td style='width:20%;'>" + value.Product + "</td>";
                                $ProductHtml += "<td style='width:20%;'>" + value.EnquiryAbout + "</td>";
                               // $ProductHtml += "<td>" + value.LgpDescription + "</td>";
                                $ProductHtml += "<td >" + value.Action + "</td>";
                                $ProductHtml += "<td style='width:20%;'>" + (value.ActionDate) + "</td>";
                                //$ProductHtml += "<td style='width:20%;'>" + (value.ActionDate ? moment(value.ActionDate).format('DD/MM/YYYY') : '') + "</td>";
                                //$ProductHtml += "<td style='width:20%;'>" + (value.ActionDate && moment(value.ActionDate).format('YYYY-MM-DD') !== '1900-01-01' ? moment(value.ActionDate).format('DD/MM/YYYY') : '') + "</td>";

                                $ProductHtml += "<td>" + value.Status + "</td>";
                               // $ProductHtml += "<td>" + value.CustomerReamrks + "</td>";
                                $ProductHtml += "<td>" + value.Agentremarks + "</td>";
                                $ProductHtml += "<td>" + value.FollowedBy + "</td>";
                                $ProductHtml += "</tr>";
                            });
                        }
                        else {
                            $ProductHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                        }
                    $thisForm.find('#ProductTbody').append($ProductHtml);
                }
                else {
                    $ProductHtml += "<tr id='0'><td colspan='8' style'text-align:center'>No Records..</td></tr>";
                    $thisForm.find('#ProductTbody').append($ProductHtml);
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            },
            complete: function () {
                $(ele).prop('disabled', false);
            }

        });

        $(document).on('click', '.CloseEmpModal', function () {
            $(this).closest('.modal').modal('hide');
        });
        };

    function fn_SiteVisit_Details(ele) {


        let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability
        let $formFolowDivContainer = $(this).closest('[perfect-class="form"]').closest('.jq_leadgeneration_body').find('.jq_leadgeneration_followup_status');

        const leadstr = $thisForm.find('[name=Lead]').val().trim();
        const leadnum = Number(leadstr.replace(/[^0-9]/g, ''));

            let inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                //LeadGenerateID: $thisForm.find('[name=Lead]').val().trim()
                LeadGenerateID: $thisForm.find('[name="FK_Lead"]').val(),
        };
        console.log(inputData);
         $.ajax({
                url: "@Url.Action("GetSiteVisitInfo", "CostPreparation")",
                type: "POST",
                // headers: { "token_key": "1234" },
                data: inputData,
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
             success: function (ajaxOutput) {
                 console.log('sss', ajaxOutput)
                 if (ajaxOutput.siteVisitId != 0) {
                     debugger

                     if (ajaxOutput.SiteVisitDetails.Process.IsProcess) {
                         let strHtml = "";

                         let LeadinfoHtml = "";




                         strHtml += "<div class='card'><div class='card-body pb-0'>";
                         strHtml += "<ul class='list-group list-group-flush'>";
                         strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Site Visit Date</strong><span class='mb-0'>" + moment(ajaxOutput.SiteVisitDetails.Data[0].VisitDate).format('DD-MM-YYYY') + "</span></li>";
                         debugger
                         strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Site Visit Time</strong><span class='mb-0'>" + moment(ajaxOutput.SiteVisitDetails.Data[0].VisitTime, 'HH:mm').format('hh:mm A') + "</span></li>";

                         strHtml += "</ul></div>";


                         $thisForm.find('[name=divSVDetails]').html(strHtml);



                         LeadinfoHtml += "<div class='card'><div class='card-body pb-0'>";
                         LeadinfoHtml += "<ul class='list-group list-group-flush'>";
                         LeadinfoHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Inspection Note1</strong><div class='col-10'><span class='mb-0'>" + ajaxOutput.SiteVisitDetails.Data[0]['Note1'] + "</span></div></li>";
                         LeadinfoHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Inspection Note2</strong><div class='col-10'><span class='mb-0'>" + ajaxOutput.SiteVisitDetails.Data[0]['Note2'] + "</span></div></li>";
                         LeadinfoHtml += "</ul></div>";

                         $thisForm.find('[name=divSVDetails1]').html(LeadinfoHtml);
                     }




                     var $EmployeeHtml = '';
                     var $MeasurementHtml = '';
                     if (ajaxOutput != null) {
                         $('#EmployeeDet').empty();
                         var EmployeeData = ajaxOutput.EmployeeDetails.Data;
                         if (EmployeeData) {
                             $.each(EmployeeData, function (i, value) {
                                 let rowCount = (i + 1);
                                 $EmployeeHtml += "<tr id=" + rowCount + ">";
                                 $EmployeeHtml += "<td style='width:20%;'>" + rowCount + "</td>";
                                 $EmployeeHtml += "<td style='width:20%;'>" + value.DepartmentName + "</td>";
                                 $EmployeeHtml += "<td>" + value.Employee + "</td>";
                                 $EmployeeHtml += "<td>" + value.EmployeeTypeName + "</td>";

                                 $EmployeeHtml += "</tr>";
                             });
                         }
                         else {
                             $EmployeeHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                         }
                         $thisForm.find('#EmployeeDet').append($EmployeeHtml);


                         $('#MeasurementDet').empty();
                         var MeasurementData = ajaxOutput.MeasurementDetails.Data;
                         if (MeasurementData) {
                             $.each(MeasurementData, function (i, value) {
                                 let rowCount = (i + 1);
                                 $MeasurementHtml += "<tr id=" + rowCount + ">";
                                 $MeasurementHtml += "<td style='width:20%;'>" + rowCount + "</td>";
                                 $MeasurementHtml += "<td style='width:20%;'>" + value.WorkTypeName + "</td>";
                                 $MeasurementHtml += "<td>" + value.MeasurementTypeName + "</td>";
                                 $MeasurementHtml += "<td style='text-align: left'>" + value.MeasurementValue + "</td>";
                                 $MeasurementHtml += "<td>" + value.MeasurementUnitName + "</td>";
                                 $MeasurementHtml += "<td>" + value.MDRemarks + "</td>";
                                 $MeasurementHtml += "</tr>";
                             });
                         }
                         else {
                             $MeasurementHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                         }
                         $thisForm.find('#MeasurementDet').append($MeasurementHtml);
                     }
                     else {
                         $EmployeeHtml += "<tr id='0'><td colspan='8' style'text-align:center'>No Records..</td></tr>";
                         $thisForm.find('#EmployeeDet').append($EmployeeHtml);
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });

                         $MeasurementHtml += "<tr id='0'><td colspan='8' style'text-align:center'>No Records..</td></tr>";
                         $thisForm.find('#MeasurementDet').append($MeasurementHtml);
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }

                     //}

                     //});
                 }
                 else {
                     let strHtml = "";

                     strHtml += "<div class='card'><div class='card-body pb-0'>";
                     strHtml += "<ul class='list-group list-group-flush'>";
                     // strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><span class='mb-0'><strong>No Records</strong>  </span></li>";

                     strHtml += "</ul></div>";

                     $thisForm.find('[name=divSVDetails]').html(strHtml);
                     $thisForm.find('[name=divSVDetails1]').html(strHtml);
                     $('#MeasurementDet').empty();
                     $('#EmployeeDet').empty();
                     $MeasurementHtml = "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";

                     $thisForm.find('#MeasurementDet').append($MeasurementHtml);
                     $EmployeeHtml = "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";

                     $thisForm.find('#EmployeeDet').append($EmployeeHtml);

                 }
             }
         });

    }
     function fn_CostPreparation_Details(ele) {


        let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability
         let $formFolowDivContainer = $(this).closest('[perfect-class="form"]').closest('.jq_leadgeneration_body').find('.jq_leadgeneration_followup_status');

         const leadstr = $thisForm.find('[name=Lead]').val().trim();
         const leadnum = Number(leadstr.replace(/[^0-9]/g, ''));
         const LeadNo = $thisForm.find('[name=LeadNo]').val().trim();
         //alert(LeadNo);
            let inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                LeadGenerateID: $thisForm.find('[name="FK_Lead"]').val(),
                //LeadGenerateID: $thisForm.find('[name=Lead]').val().trim()
        };
        console.log(inputData);
         $.ajax({
                url: "@Url.Action("GetCostPreparationInfo", "ProjectCreation")",
                type: "POST",
                // headers: { "token_key": "1234" },
                data: inputData,
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
             success: function (ajaxOutput) {
                 console.log('sss', ajaxOutput)
                 if (ajaxOutput.CostPreparationId != 0) {
                     debugger
                     initFunctions($thisForm);


                     if (ajaxOutput.CostPreparationDetails.Process.IsProcess) {
                         let strHtml = "";

                         let LeadinfoHtml = "";




                         strHtml += "<div class='card'><div class='card-body pb-0'>";
                         strHtml += "<ul class='list-group list-group-flush'>";
                         //strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Prepared Date</strong><span class='mb-0'>" + moment(ajaxOutput.CostPreparationDetails.Data[0].VisitDate).format('DD-MM-YYYY') + "</span></li>";
                         //strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Total Amount</strong><span class='mb-0'>" + ajaxOutput.CostPreparationDetails.Data[0]['TotalAmount'] + "</span></li>";
                         //strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Remarks</strong><span class='mb-0'>" + ajaxOutput.CostPreparationDetails.Data[0]['Remarks'] + "</span></li>";


                         strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong style='width:170px'>Prepared Date: </strong><span class='mb-0' style='width:100%'>" + moment(ajaxOutput.CostPreparationDetails.Data[0].VisitDate).format('DD-MM-YYYY') + "</span></li>";
                         strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong style='width:170px'>Amount: </strong><span class='mb-0' style='width:100%'>" + ajaxOutput.CostPreparationDetails.Data[0]['TotalAmount'] + "</span></li>";
                         strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong style='width:170px'>Remarks: </strong><span class='mb-0' style='width:100%'>" + ajaxOutput.CostPreparationDetails.Data[0]['Remarks'] + "</span></li>";
                         //strHtm


                         strHtml += "</ul></div>";

                         $thisForm.find('[name=divCPDetails]').html(strHtml);
                     }


                     var $EmployeeHtml = '';
                     var $MaterialHtml = '';
                     var $WorkHtml = '';
                     if (ajaxOutput != null) {
                         $('#EmployeeDett').empty();
                         var EmployeeData = ajaxOutput.EmployeeDetails.Data;
                         if (EmployeeData) {
                             $.each(EmployeeData, function (i, value) {
                                 let rowCount = (i + 1);
                                 $EmployeeHtml += "<tr id=" + rowCount + ">";
                                 $EmployeeHtml += "<td style='width:20%;'>" + rowCount + "</td>";
                                 $EmployeeHtml += "<td style='width:20%;'>" + value.DepartmentName + "</td>";
                                 $EmployeeHtml += "<td>" + value.Employee + "</td>";
                                 $EmployeeHtml += "<td>" + value.EmployeeTypeName + "</td>";

                                 $EmployeeHtml += "</tr>";
                             });
                         }
                         else {
                             $EmployeeHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                         }
                         $thisForm.find('#EmployeeDett').append($EmployeeHtml);


                         $('#MaterialDet').empty();
                         var MaterialData = ajaxOutput.MaterialDetails.Data;
                         if (MaterialData) {
                             $.each(MaterialData, function (i, value) {
                                 let rowCount = (i + 1);
                                 $MaterialHtml += "<tr id=" + rowCount + ">";
                                 $MaterialHtml += "<td style='width:20%;'>" + rowCount + "</td>";
                                 $MaterialHtml += "<td style='width:20%;'>" + value.Product + "</td>";
                                 $MaterialHtml += "<td style='text-align: center;'>" + value.Quantity + "</td>";
                                 $MaterialHtml += "<td style='text-align: right;'>" + value.Amount + "</td>";

                                 $MaterialHtml += "</tr>";
                             });
                         }
                         else {
                             $MaterialHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                         }
                         $thisForm.find('#MaterialDet').append($MaterialHtml);

                         debugger
                         $('#WorkDet').empty();
                         var WorkData = ajaxOutput.WorkDetails.Data;
                         if (WorkData) {
                             $.each(WorkData, function (i, value) {
                                 let rowCount = (i + 1);
                                 $WorkHtml += "<tr id=" + rowCount + ">";
                                 $WorkHtml += "<td style='width:20%;'>" + rowCount + "</td>";
                                 $WorkHtml += "<td style='width:20%;'>" + value.WorkTypeName + "</td>";
                                 $WorkHtml += "<td>" + value.DurationTypeName + "</td>";
                                 $WorkHtml += "<td>" + value.Duration + "</td>";
                                 $WorkHtml += "<td style='text-align: right;'>" + value.WorkAmount + "</td>";
                                 $WorkHtml += "</tr>";
                             });
                         }
                         else {
                             $WorkHtml += "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";
                         }
                         $thisForm.find('#WorkDet').append($WorkHtml);
                     }
                     else {
                         $EmployeeHtml += "<tr id='0'><td colspan='8' style'text-align:center'>No Records..</td></tr>";
                         $thisForm.find('#EmployeeDet').append($EmployeeHtml);
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });

                         $MaterialHtml += "<tr id='0'><td colspan='8' style'text-align:center'>No Records..</td></tr>";
                         $thisForm.find('#MaterialDet').append($MaterialHtml);
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });

                         $WorkHtml += "<tr id='0'><td colspan='8' style'text-align:center'>No Records..</td></tr>";
                         $thisForm.find('#WorkDet').append($WorkHtml);
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }

                     //}

                     //});
                 }
                 else {
                     let strHtml = "";

                     strHtml += "<div class='card'><div class='card-body pb-0'>";
                     strHtml += "<ul class='list-group list-group-flush'>";
                     // strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><span class='mb-0'><strong>No Records</strong>  </span></li>";

                     strHtml += "</ul></div>";

                     $thisForm.find('[name=divCPDetails]').html(strHtml);
                     $('#MaterialDet').empty();
                     $('#EmployeeDett').empty();
                     $('#WorkDet').empty();
                     $MeasurementHtml = "<tr id='0'><td colspan='4' style'text-align:center'>No Records..</td></tr>";

                     $thisForm.find('#MaterialDet').append($MeasurementHtml);
                     $thisForm.find('#EmployeeDett').append($MeasurementHtml);
                     $thisForm.find('#WorkDet').append($MeasurementHtml);

                 }
             }
         });

    }

    function SetControl(ele,tt) {
        console.log(tt);
        let LeadID = tt.ID_FIELD;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        //let inputData = {
        //    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
        //    LeadGenerateID: $thisForm.find('[name=Lead]').val().trim()
        //};
         $.ajax({
                 url: "@Url.Action("GetTotalAmount", "ProjectCreation")",
                type: "POST",

             data: JSON.stringify({ LeadGenerateID: LeadID}),
                dataType: "json",
                contentType: "application/json",
             success: function (ajaxOutput) {

                 console.log(ajaxOutput);
                 $thisForm.find('[name=FinalAmount]').val(ajaxOutput.TotAmount);

                 $thisForm.find('[name=DisAmount]').val(''); 
                 $thisForm.find('[name=Proamount]').val(''); 
                 let $errorMessage = $thisForm.find('[name="DisAmount"]').closest('[perfect-class="formGroup"]').find('.limit-check');
                 $errorMessage.text('');
                     }

             });


    }

    function closeregister(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-ctype="input"]').val('');

        $thisForm.find('[perfect-ctype="hidden"]').val('');
        $thisForm.find('[perfect-ctype="date"]').val('');
        let onSuccess = $thisForm.attr('perfect-onFormSuccess')
        if (onSuccess) {
            window[onSuccess]();
        }
    }
    function fn_customerForm_loadState(ele) {
        if ($('[name="Lead"]').val() != "") {

            $('#formGroupModalcustmr').modal('show');

            let $savimgContainer = $('#custmr-savs');

            $savimgContainer.load('@Url.Action("LoadCustomerForm", "Customer")?mtd=@ViewBag.CusTransmode', function () {

                let $thisForm = $(this).find('[perfect-class="form"]');
                // ... Custom validation message
                $thisForm.validate({ messages: sdvalidationMessage });
                // ... Custom validation message
                $thisForm.attr('perfect-onFormSuccess', 'fn_loadCustomerUpdateForm');
                $('#cardheaderid').hide();
              //  initFunctions($thisForm);
                $('#formGroupModalcustmr').modal('show');


            });


        }
        else {
            NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Please Select Lead No.' });
        }
    }
    function fn_loadCustomerUpdateForm() {
        if ($('[name="Lead"]').val() != "") {
            $('#formGroupModalcustmr').modal('show');
            let $savimgContainer = $('#custmr-savs');
            var fk_cust = $('[name="FK_Customer"]').val();
        
        if ($('[name="FK_Customer"]').val() == 0) {
            CusOth = true;
            CustomerID = $('[name="FK_CustomerOthers"]').val();
        }
        else {
            CusOth = 0;
            CustomerID = $('[name="FK_Customer"]').val();
        }

        let inputData = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            FK_Customer: CustomerID,
            CusOth: CusOth
        };

        $.ajax({
            url: "@Url.Action("BindCustomerdetails", "ProjectCreation")", 
            type: "POST",
            // headers: { "token_key": "1234" },
            data: inputData,
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (ajaxOutput) {

                if (ajaxOutput.Process.IsProcess) {
                    //process is success
                    $savimgContainer.load('@Url.Action("LoadCustomerForm", "Customer")?mtd=@ViewBag.mtd', function () {

                        let $thisForm = $(this).find('[perfect-class="form"]');
                        // initFunctions($thisForm);
                        //console.log('sss', $thisForm)
                        console.log('sss>>>>', ajaxOutput)
                        $thisForm.validate({ messages: validationMessage });                     
                        $thisForm.data({ pData: ajaxOutput.Data[0] });     
                        // Fill fields      
                        $thisForm.find('[name="CustomerTypeID"]').val(ajaxOutput.Data[0]['CustomerTypeID'] == 0 ? '' : ajaxOutput.Data[0]['CustomerTypeID']).selectpicker('refresh');
                        $thisForm.find('[name="CustomerType"]').val(ajaxOutput.Data[0]['CustomerType']);
                        $thisForm.find('.CustEditinPrj').addClass('d-none');
                        $thisForm.find('.CustEditinPrj').addClass('d-none');
                       
                      //  $thisForm.find('[name="spContactMobile"]').hide();
                        $('#cardheaderid').hide();
                        $thisForm.find('[name="BranchTypeID"]').removeClass('perfectValidate_numeric');
                        $thisForm.find('[name="BranchID"]').removeClass('perfectValidate_numeric');
                       // $thisForm.find('[name="ContactPerson"]').removeClass('perfectValidate_name')
                       // $thisForm.find('[name="ContactMobile"]').removeClass('perfectValidate_mobile')
                       // $thisForm.find('[name="ContactMobile"]').addClass('perfectValidate_mobile_nm')

                        $thisForm.find('[name="FK_Customer"]').val(fk_cust);
                        $thisForm.find('[name="Name"]').val(ajaxOutput.Data[0]['Name']);
                        $('.Customerid').show();
                      
                        $thisForm.find('[name="Address1"]').val(ajaxOutput.Data[0]['Address1']);
                        $thisForm.find('[name="Landmark"]').val(ajaxOutput.Data[0]['Landmark']);

                        $thisForm.find('[name="CountryID"]').val(ajaxOutput.Data[0]['CountryID']);
                        $thisForm.find('[name="StatesID"]').val(ajaxOutput.Data[0]['StatesID']);
                        $thisForm.find('[name="DistrictID"]').val(ajaxOutput.Data[0]['DistrictID']);
                        $thisForm.find('[name="PostID"]').val(ajaxOutput.Data[0]['PostID']);
                        $thisForm.find('[name="AreaID"]').val(ajaxOutput.Data[0]['AreaID']);
                        $thisForm.find('[name="PlaceID"]').val(ajaxOutput.Data[0]['PlaceID']);
                        $thisForm.find('[name="PinCode"]').val(ajaxOutput.Data[0]['PinCode']);
                        $thisForm.find('[name="Country"]').val(ajaxOutput.Data[0]['Country']);
                        $thisForm.find('[name="States"]').val(ajaxOutput.Data[0]['States']);
                        $thisForm.find('[name="District"]').val(ajaxOutput.Data[0]['District']);
                        $thisForm.find('[name="Post"]').val(ajaxOutput.Data[0]['Post']);
                        $thisForm.find('[name="Area"]').val(ajaxOutput.Data[0]['Area']);
                        $thisForm.find('[name="Place"]').val(ajaxOutput.Data[0]['Place']);


                        $thisForm.find('[name="Mobile"]').val(ajaxOutput.Data[0]['Mobile'])
                        $thisForm.find('[name="Phone"]').val(ajaxOutput.Data[0]['Phone']);
                        $thisForm.find('[name="Email"]').val(ajaxOutput.Data[0]['Email']);

                        $thisForm.find('[name="GSTINNo"]').val(ajaxOutput.Data[0]['GSTINNo']);

                        $thisForm.find('[name="OccupationID"]').val(ajaxOutput.Data[0]['OccupationID']).selectpicker('refresh');
                        $thisForm.find('[name="ContactPerson"]').val(ajaxOutput.Data[0]['ContactPerson']);

                       
                       

                        $thisForm.find('[name="ContactMobile"]').val(ajaxOutput.Data[0]['ContactMobile']);
                        $thisForm.find('[name="ContactEmail"]').val(ajaxOutput.Data[0]['ContactEmail']);
                        if (ajaxOutput.Data[0]['Individual']) {                           

                            $thisForm.find('.jq_institution_details').addClass('d-none');
                            $thisForm.find('[name="ContactPerson"]').removeClass('perfectValidate_name')
                            $thisForm.find('[name="ContactMobile"]').removeClass('perfectValidate_mobile')
                            $thisForm.find('[name="ContactEmail"]').removeClass('perfectValidate_email')
                        }
                        else {

                             $thisForm.find('.jq_institution_details').removeClass('d-none');
                                $thisForm.find('[name="ContactPerson"]').addClass('perfectValidate_name')
                                $thisForm.find('[name="ContactMobile"]').addClass('perfectValidate_mobile')
                                $thisForm.find('[name="ContactEmail"]').addClass('perfectValidate_email_nm')
                        }


                        // stuff to do after filling data
                        $sideMenuOptions.close();//<---  Close side menu
                        $thisForm.find('button[name=add]').addClass('d-none');//<--- hide add cunsomer button
                        $thisForm.find('button[name=update]').addClass('d-none');
                       // $thisForm.find('button[name=update]').removeClass('d-none');//<--- show update cunsomer button  
                        $thisForm.find('button[name=updateCusOther]').removeClass('d-none');
                       // $thisForm.attr('perfect-onFormSuccess', 'fn_customerIndex_initialLoad');

                    });
                }
                else {
                    //Error occured
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        $('.dataTable tr').removeClass("SelectForDelete");

                    });
                }
            }
        });
    }else {
        NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Please Select Lead No.' });
    }
        };
    //function fn_scustomerIndex_initialLoad() {

    //    $('#formGroupModalcustmr').modal('hide');

    //}
    var sdvalidationMessage = {
        //'BranchID': {
        //    'required': 'Please select a branch',
        //    'digits': 'Invalid Branch selected'
        //},
        'CustomerTypeID': {
            'required': 'Please select a Customer Type',
            'digits': 'Invalid Customer Type selected'
        },
       

        'Name': {
            'required': 'Please enter customer name',
            'maxlength': jQuery.validator.format('Customer name should be less than {0} characters'),
            'stringonly': 'Special characters are not allowed in customer name'
        },
        'Address1': {
            'required': 'Please enter address ',
            'maxlength': jQuery.validator.format('Address  should be less than {0} characters'),
            'stringonly': 'Special characters are not allowed in Address'
        },


        'CountryID': {
            'required': 'Please select country',
            'digits': 'Invalid Country selected'
        },
        'StatesID': {
            'required': 'Please select state',
            'digits': 'Invalid State selected'
        },
        'DistrictID': {
            'required': 'Please select district',
            'digits': 'Invalid District selected'
        },

        'Mobile': {
            'required': 'Please enter mobile',
            'anyphonenumber': 'Invalid Mobile No',
            'minlength': jQuery.validator.format('Mobile No should be more than {0} characters'),
            'maxlength': jQuery.validator.format('Mobile No should be less than {0} characters')
        },
        'Phone': {

            'anyphonenumber': 'Invalid Phone No',
            'minlength': jQuery.validator.format('Phone No should be more than {0} characters'),
            'maxlength': jQuery.validator.format('Phone No should be less than {0} characters')
        },



        'CategoryID': {
            'required': 'Please select a Category',
            'digits': 'Invalid Category Mode selected'
        },
        'ContactPerson': {
            'required': 'Please enter Contact Person',
            'maxlength': jQuery.validator.format('Contact Person should be less than {0} characters'),
            'stringonly': 'Special characters are not allowed in Contact Person name'
        },

        'ContactMobile': {
            'required': 'Please enter  Mobile',
            'anyphonenumber': 'Invalid Mobile No',
            'minlength': jQuery.validator.format('Mobile No should be more than {0} characters'),
            'maxlength': jQuery.validator.format('Mobile No Phone should be less than {0} characters')
        },

        //'BranchTypeID': {
        //    'required': 'Please select a Branch Type',
        //    'digits': 'Invalid Branch Type selected'
        //},



    };
</script>



