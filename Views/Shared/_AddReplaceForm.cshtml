<div class="card ">
    <div class="card-header">
        <h4 class="card-title col-12" id="Caption">@ViewBag.PageTitle</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Replace Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date" name="TransDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" />
                                @*<input type="date" class="form-control " name="InvoiceDates" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" style="display:none" />*@
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Supplier</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control " name="SuppName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" class="form-control perfectValidate_string" name="SuppID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <input type="hidden" name="ID_Replace" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />

                                    <div class="input-group-append">
                                        <button id="SupplierButton" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,20,'Supplier List',['','','PurchaseRetID','ReferenceNo'],['SupplierID','SupplierName','CustomeName'])" BindName="SuppName" BindVal="SuppID" Function="2"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">                            
                            <label class="col-sm-4 col-form-label">
                                <input type="checkbox" class="form-check-input" name="PurchaseReturn" id="PurchaseReturn" onchange="CheckPurchaseReturn(this)" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox">
                                <span perfect-class="formGroupLabel">Purchase Return</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control " name="ReferenceNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" class="form-control " name="PurchaseRetID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <input type="hidden" name="FK_Branch" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" value="@ViewBag.FK_Branch" />
                                    <div class="input-group-append">
                                        <button id="PurchaseRetButton" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this, 136, 'Purchase Return List', ['',''], ['SuppName','SuppID','BillDates'])" Criterea1="SuppID" BindName="ReferenceNo" BindVal="PurchaseRetID" Function="1"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="daccordion__header">
                            <span class="accordion__header--text">From</span>
                        </div>
                        <br />
                        <div class="row ProductAddSection">
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Product</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <div class="input-group">
                                            <input type="text" class="form-control" perfect-tempTable-ReplaceFrom="ProName" name="ProName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                            <input type="hidden" class="form-control" perfect-tempTable-ReplaceFrom="ProductID" name="ProductID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                            <input type="hidden" class="form-control" perfect-tempTable-ReplaceFrom="StockId" name="StockId" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                            <input type="hidden" class="form-control" perfect-tempTable-ReplaceFrom="FK_PurchaseReturn" name="FK_PurchaseReturn" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                            <input type="hidden" class="form-control" perfect-tempTable-ReplaceFrom="CurrentStocks" name="CurrentStocks" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                            <input type="hidden" class="form-control" perfect-tempTable-ReplaceFrom="RpdSalesPrice" name="RpdSalesPrice" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                            <input type="hidden" class="form-control" perfect-tempTable-ReplaceFrom="RpdMRP" name="RpdMRP" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                            <div class="input-group-append">
                                                <button id="ProductButton" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this, 137, 'Product Details', [], ['UnitID','CurrentStocks','PpdRate','StockId','Department','RpdSalesPrice','RpdMRP'],ReplaceTransMode)" Criterea1="0" Criterea2="0" BindName="ProName" BindVal="ProductID" Function="4"></button>
                                            </div>
                                            <div class="text-danger temptableError"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Unit</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <select class="form-control" perfect-tempTable-ReplaceFrom="UnitID" name="UnitID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="QtyChange(this)">
                                            <option value="">Please Select </option>
                                            @*<option value="1">Test</option>*@
                                            @if (!(Model.UnitList is null))
                                            {
                                                foreach (var unit in Model.UnitList)
                                                {
                                                    <option value="@unit.ID_Unit" UnitCountS="@unit.UnitCount">@unit.UnitName</option>
                                                }
                                            }

                                        </select>
                                        <div class="text-danger temptableError"></div>
                                    </div>
                                </div>
                                
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        Quantity&nbsp;
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control text-right" id="PpdQuantity" perfect-tempTable-ReplaceFrom="PpdQuantity" name="PpdQuantity" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13" onchange="QtyChange(this)" />
                                        <div class="text-danger temptableError"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        Free Quantity&nbsp;                                        
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control text-right" id="RetQty" perfect-tempTable-ReplaceFrom="FreeQuantity" name="FreeQuantity" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13" readonly />
                                        <div class="text-danger temptableError"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        ActQty&nbsp;
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control text-right" id="PpdActualQuantity" perfect-tempTable-ReplaceFrom="PpdActualQuantity" name="PpdActualQuantity" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13" readonly />
                                        <div class="text-danger temptableError"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        Rate&nbsp;
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control text-right" id="PpdRate" perfect-tempTable-ReplaceFrom="PpdRate" name="PpdRate" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13" readonly />
                                        <div class="text-danger temptableError"></div>
                                    </div>
                                </div>
                            </div>
                            @*<div class="col-sm-3">
            <div class="form-group row" perfect-class="formGroup">
                <label class="col-sm-4 col-form-label">
                    Tax&nbsp;
                    <span class="text-danger">*</span>
                </label>
                <div class="col-sm-8">
                    <input type="text" class="form-control text-right" id="TaxAmount" perfect-tempTable-ReplaceFrom="TaxAmount" name="TaxAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13" readonly />
                    <div class="text-danger temptableError"></div>
                </div>
            </div>
        </div>*@
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Tax </span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <div class="input-group">
                                            <input type="text" class="form-control text-right" perfect-tempTable-ReplaceFrom="TaxAmount" placeholder="" name="TaxAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />

                                            <div class="input-group-append">
                                                <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="checkpurrateTax(this)"></button>
                                                <div class="modal fade" perfect-class="formGroupModalTax" id="formGroupModalTax">
                                                    <div class="modal-dialog modal-dialog-centered" role="document">
                                                        <div class="modal-content  rounded-0">
                                                            <div class="modal-header border-0">
                                                                <h5 class="modal-title">Tax Details</h5>
                                                                <button type="button" class="close" data-dismiss="modal">
                                                                    <span>&times;</span>
                                                                </button>
                                                            </div>

                                                            <table id="zero_config" class="table mb-0  table-striped  text-black">
                                                                <thead class="bg-primary text-white">
                                                                    <tr>
                                                                        <th class="t-head">Sl No</th>
                                                                        <th class="t-head" style="Display:none">ProductID</th>
                                                                        <th class="t-head" style="Display:none">FK_TaxType</th>
                                                                        <th class="t-head">TaxType</th>
                                                                        <th class="t-head">Percentage</th>
                                                                        <th class="t-head">Amount</th>

                                                                    </tr>
                                                                </thead>
                                                                <tbody class="modal-body" id="formGroupModalTaxbody"></tbody>
                                                                <tfoot>
                                                                </tfoot>
                                                            </table>

                                                            <div class="modal-footer">
                                                                <button type="button" class="btn btn-primary1" data-dismiss="modal" onclick="BindTaxAmount(this)">Ok</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <span class="temptableError"></span>
                                        <div class="col-sm-8 ml-2">
                                            <input type="checkbox" class="form-check-input" name="IncludeTax" id="taxinclude" perfect-class="formCheckInput" perfect-tempTable-ReplaceFrom="IncludeTax" perfect-ctype="checkbox" perfect-css="checkbox" onchange="checkpurrateTax(this,1)"><span perfect-class="formCheckInputText">Include Tax</span>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        Total Amount&nbsp;
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control  text-right" id="NetPurchase" perfect-tempTable-ReplaceFrom="NetPurchase" name="NetPurchase" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13" readonly />
                                        <div class="text-danger temptableError"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-9">

                            </div>
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label"></label>
                                    <div class="col-sm-8">
                                        <button type="button" id="purtupsave" class="btn btn-primary1" onclick="fn_AddFromProducts(this,'ReplaceFrom',['StockId'],PurchaseRetOptionsTempOut)" data-placement="top" data-html="true" title="Add Product Details"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                        <button type="button" id="reset" class="btn btn-light1" perfect-css="button" onclick="productclear(this,'ReplaceFrom')" name="reset" title="Reset"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel"></span>
                            </label>
                            <div class="col-sm-12">
                                <input type="hidden" name="customerIndex" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="hidden" perfect-tempTable-Shortage="Sl No" value="" />
                                <div class="table-responsive tableFixHead" perfect-tempTable="ReplaceFrom" id="ReplaceFromDetailshead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <hr />
                <div class="row">
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                Bill Total&nbsp;
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control  text-right" id="TotalAmountFrom" name="TotalAmountFrom" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13" readonly />
                            </div>
                        </div>
                    </div>
                    @*<div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel text-right">Discount Amt/Perc</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control text-right " placeholder="" name="DiscountFrom" id="DiscountFrom" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="13" onchange="PurchaseNetDiscount(this, 2);RoundOffCalc(this);" onkeyup="PurchaseNetDiscount(this, 2);" oninput="decimalpnt(this,'Discount',3)" onkeypress="return isNumberKey(event)" />
                                    <input type="text" class="form-control text-right " placeholder="" name="DiscountPercFrom" id="DiscountPercFrom" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="13" onchange="PurchaseNetDiscount(this, 1);RoundOffCalc(this);" onkeyup="PurchaseNetDiscount(this, 1);" oninput="minmax(0,100,this,3)"  onkeypress="return isNumberKey(event)" />
                                </div>
                            </div>
                        </div>
                    </div>*@
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                Round Off&nbsp;
                               
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control  text-right" id="RoundofFrom" name="RoundofFrom" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="13" readonly />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                Net Amount&nbsp;
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control  text-right" id="NetAmountFrom" name="NetAmountFrom" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13" readonly />
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                @*to*@
                <div class="row">
                    <div class="col-sm-12">
                        <div class="daccordion__header">
                            <span class="accordion__header--text">To</span>
                        </div>
                        <br />
                        <div class="row ">
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Product</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <div class="input-group">
                                            <input type="text" class="form-control" perfect-tempTable-ReplaceTo="PurProduct" name="PurProduct" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                            <input type="hidden" class="form-control" perfect-tempTable-ReplaceTo="PurProductID" name="PurProductID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                            <input type="hidden" class="form-control" perfect-tempTable-ReplaceTo="PurFK_Stock" name="PurFK_Stock" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                            @*<input type="hidden" class="form-control" perfect-tempTable-Shortage="FK_Unit" name="FK_Unit" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />*@
                                            <div class="input-group-append">
                                                <button id="ProductButton2" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,122,'Product Details',[])" Criterea1="0" Criterea2="0" BindName="PurProduct" BindVal="PurProductID" Function="5"></button>
                                            </div>
                                            <div class="text-danger temptableError"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Unit</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <select class="form-control" perfect-tempTable-ReplaceTo="PurUnitID" name="PurUnitID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="CalcActualQuantity(this)">
                                            <option value="">Please Select </option>
                                            @*<option value="1">Test</option>*@
                                            @if (!(Model.UnitList is null))
                                            {
                                                foreach (var unit in Model.UnitList)
                                                {
                                                    <option value="@unit.ID_Unit" UnitCountS="@unit.UnitCount">@unit.UnitName</option>
                                                }
                                            }

                                        </select>
                                    </div>
                                </div>
                                <span class="temptableError"></span>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Barcode</span>

                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" perfect-tempTable-ReplaceTo="PpdBarCode" name="PpdBarCode" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onkeypress="return blockSpecialChar(event)" maxlength="15" />
                                    </div>
                                </div>
                                <span class="temptableError"></span>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">QR Code</span>

                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" perfect-tempTable-ReplaceTo="PpdQRCode" name="PpdQRCode" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onkeypress="return blockSpecialChar(event)" maxlength="15" />
                                    </div>
                                </div>
                                <span class="temptableError"></span>
                            </div>

                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Quantity </span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <div class="input-group">
                                            <input type="text" class="form-control text-right" perfect-tempTable-ReplaceTo="PurQty" name="PurQty" id="PurQty" oninput="decimalpnt(this,'PurQty',4)" @*onchange="ShowTax(this,0),CalcActualQuantity(this)"*@ onchange="CalcActualQuantity(this)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13" />

                                            <div class="input-group-append">
                                                <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-plus" type="button" perfect-css="button" onclick="ShowQuantityDetails(this)" title="Quantity Details"></button>
                                                <div class="modal fade" perfect-class="formGroupModalQuantity" id="formGroupModalQuantity">
                                                    <div class="modal-dialog modal-dialog-centered " role="document">
                                                        <div class="modal-content  rounded-lg">
                                                            <div class="modal-header border-0">
                                                                <h5 class="modal-title">Quantity Details</h5>
                                                                <button type="button" class="close" data-dismiss="modal" onclick="Clearqtypop(this)">
                                                                    <span>&times;</span>
                                                                </button>
                                                            </div>
                                                            <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                                                                <div class="form-row">
                                                                    @*<div class="col-sm-12">
                                                    <div class="form-group row" perfect-class="formGroup">
                                                        <label class="col-sm-5 col-form-label">
                                                            <span perfect-class="formGroupLabel"> Shortage</span>
                                                        </label>
                                                        <div class="col-sm-6">
                                                            <input type="text" class="form-control text-right" perfect-tempTable-ReplaceTo="PurShortage" name="PurShortage" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" id="PpdShortage" oninput="decimalpnt(this,'PurShortage',4)" min="0" maxlength="13" />
                                                            <div class="text-danger temptableError"></div>
                                                        </div>

                                                    </div>
                                                </div>*@
                                                                    <div class="col-sm-12">
                                                                        <div class="form-group row" perfect-class="formGroup">
                                                                            <label class="col-sm-5 col-form-label">
                                                                                <span perfect-class="formGroupLabel"> Free</span>
                                                                            </label>
                                                                            <div class="col-sm-6">
                                                                                <input type="text" class="form-control text-right" perfect-tempTable-ReplaceTo="PurFreeQuantity" name="PurFreeQuantity" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" id="PurFreeQuantity" oninput="decimalpnt(this,'PurFreeQuantity',4)" min="0" maxlength="13" />
                                                                            </div>
                                                                            <div class="text-danger temptableError"></div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-sm-12">
                                                                        <div class="form-group row" perfect-class="formGroup">
                                                                            <label class="col-sm-5 col-form-label">
                                                                                <span perfect-class="formGroupLabel"> Less Quantity</span>
                                                                            </label>
                                                                            <div class="col-sm-6">
                                                                                <input type="text" class="form-control text-right" perfect-tempTable-ReplaceTo="Purless" name="Purless" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" id="Ppdless" oninput="decimalpnt(this,'Purless',4)" min="0" maxlength="13" />
                                                                                <div class="text-danger temptableError"></div>
                                                                            </div>

                                                                        </div>
                                                                    </div>

                                                                </div>
                                                                <div class="modal-footer">
                                                                    <button type="button" class="btn btn-primary1" perfect-css="button" onclick="BindQuantityDetails(this)" name="reset">Apply</button>
                                                                    <button type="button" id="clearquantity" class="btn btn-light1" perfect-css="button" name="reset" onclick="ClearQuantity(this)">Clear</button>
                                                                </div>
                                                                <div class="col-md-12 mt-3" perfect-class="formGroupModalQuantitybody">


                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="modal-footer border-0"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <span class="temptableError"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        ActQty&nbsp;
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control text-right" id="PurActQty" perfect-tempTable-ReplaceTo="PurActQty" name="PurActQty" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13" readonly />
                                        <div class="text-danger temptableError"></div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Pur.Rate</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <div class="input-group">
                                            <input type="text" class="form-control text-right" perfect-tempTable-ReplaceTo="PurRate" name="PurRate" id="PurRate" oninput="decimalpnt(this,'PurRate',3)" @*onchange="BindNetAmount(this),ShowTax(this,0),PurchaseDiscount(this,1,5)"*@ @*onchange="PurchaseDiscount(this)"*@ onchange="checkTax(this, 1);" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="12" />
                                            <div class="input-group-append">
                                                <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-plus" type="button" perfect-css="button" onclick="ShowPurchaserateDetailsReplace(this)" title="Purchase Discount Details"></button>
                                                <div class="modal fade" perfect-class="formGroupModalPurchaserate" id="formGroupModalPurchaserate">
                                                    <div class="modal-dialog modal-dialog-centered " role="document">
                                                        <div class="modal-content  rounded-lg">
                                                            <div class="modal-header border-0">
                                                                <h5 class="modal-title">Purchase Discount Details</h5>
                                                                <button type="button" class="close" data-dismiss="modal" onclick="cleardiscountpopup(this)">
                                                                    <span>&times;</span>
                                                                </button>
                                                            </div>
                                                            <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                                                                <div class="form-row">

                                                                    <div class="col-sm-12">
                                                                        <div class="form-group row" perfect-class="formGroup">
                                                                            <label class="col-sm-5 col-form-label">
                                                                                <span perfect-class="formGroupLabel"> Discount %</span>
                                                                            </label>
                                                                            <div class="col-sm-6">
                                                                                <input type="text" class="form-control text-right" perfect-tempTable-ReplaceTo="PurDiscper" name="PurDiscper" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="PurchaseDiscountCalculation(this,1)" oninput="minmax(0,100,this,3)" @*onkeypress="return isNumberKey(event)"*@ />
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-sm-12">
                                                                        <div class="form-group row" perfect-class="formGroup">
                                                                            <label class="col-sm-5 col-form-label">
                                                                                <span perfect-class="formGroupLabel"> Discount</span>
                                                                            </label>
                                                                            <div class="col-sm-6">
                                                                                <input type="text" class="form-control text-right" perfect-tempTable-ReplaceTo="PurDisc" name="PurDisc" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="PurchaseDiscountPerCalculation(this)" oninput="decimalpnt(this,'PurDisc',3)" min="0" maxlength="12" />
                                                                                <div class="text-danger temptableError"></div>
                                                                            </div>

                                                                        </div>
                                                                    </div>
                                                                    <div class="col-sm-12">
                                                                        <div class="form-group row" perfect-class="formGroup">
                                                                            <label class="col-sm-5 col-form-label">
                                                                                <span perfect-class="formGroupLabel"></span>
                                                                            </label>
                                                                            <div class="col-sm-6 ">
                                                                                <button type="button" class="btn btn-primary1" perfect-css="button" data-dismiss="modal" onclick="BindTopurchaseDetails(this)" name="reset">Apply</button>
                                                                                <button type="button" class="btn btn-light1" perfect-css="button" onclick="cleardiscount(this)" name="reset">Clear</button>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-12 mt-1" perfect-class="formGroupModalPurchaseratebody">

                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <span class="temptableError"></span>

                                    </div>
                                </div>
                            </div>

                            @*<div class="col-sm-3">
            <div class="form-group row" perfect-class="formGroup">
                <label class="col-sm-4 col-form-label">
                    Tax&nbsp;
                    <span class="text-danger">*</span>
                </label>
                <div class="col-sm-8">
                    <input type="text" class="form-control text-right" id="PurTaxAmount" perfect-tempTable-ReplaceTo="PurTaxAmount" name="PurTaxAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13" readonly />
                    <div class="text-danger temptableError"></div>
                </div>
            </div>
        </div>*@
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Tax </span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <div class="input-group">
                                            <input type="number" class="form-control text-right" perfect-tempTable-ReplaceTo="PurTaxAmount" placeholder="" name="PurTaxAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />

                                            <div class="input-group-append">
                                                <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="checkTax(this)"></button>
                                                <div class="modal fade" perfect-class="formGroupModalTax2" id="formGroupModalTax2">
                                                    <div class="modal-dialog modal-dialog-centered" role="document">
                                                        <div class="modal-content  rounded-0">
                                                            <div class="modal-header border-0">
                                                                <h5 class="modal-title">Tax Details</h5>
                                                                <button type="button" class="close" data-dismiss="modal">
                                                                    <span>&times;</span>
                                                                </button>
                                                            </div>

                                                            <table id="zero_config2" class="table mb-0  table-striped  text-black">
                                                                <thead class="bg-primary text-white">
                                                                    <tr>
                                                                        <th class="t-head">Sl No</th>
                                                                        <th class="t-head" style="Display:none">ProductID</th>
                                                                        <th class="t-head" style="Display:none">FK_TaxType</th>
                                                                        <th class="t-head">TaxType</th>
                                                                        <th class="t-head">Percentage</th>
                                                                        <th class="t-head">Amount</th>

                                                                    </tr>
                                                                </thead>
                                                                <tbody class="modal-body" id="formGroupModalTaxbody2"></tbody>
                                                                <tfoot>
                                                                </tfoot>
                                                            </table>

                                                            <div class="modal-footer">
                                                                <button type="button" class="btn btn-primary1" data-dismiss="modal" onclick="BindPurTaxAmount(this)">Ok</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <span class="temptableError"></span>
                                        <div class="col-sm-8 ml-2">
                                            <input type="checkbox" class="form-check-input" name="PurIncludeTax" id="purtaxinclude" perfect-class="formCheckInput" perfect-tempTable-ReplaceTo="PurIncludeTax" perfect-ctype="checkbox" perfect-css="checkbox" onchange="checkTax(this,1)"><span perfect-class="formCheckInputText">Include Tax</span>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        Total Amount&nbsp;
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control text-right" id="PurTotalAmt" perfect-tempTable-ReplaceTo="PurTotalAmt" name="PurTotalAmt" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13" readonly />
                                        <div class="text-danger temptableError"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        MRP&nbsp;

                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control text-right" id="PurMRP" perfect-tempTable-ReplaceTo="PurMRP" name="PurMRP" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13"  />
                                        <div class="text-danger temptableError"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        Sales Price&nbsp;

                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control text-right" id="PurSalesPrice" perfect-tempTable-ReplaceTo="PurSalesPrice" name="PurSalesPrice" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13"  />
                                        <div class="text-danger temptableError"></div>
                                    </div>
                                </div>
                            </div>
                            @*<div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Expiry date</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="date" class="form-control" perfect-tempTable-ReplaceTo="PurExpiryDate" name="PurExpiryDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" />
                                        <div class="text-danger temptableError"></div>

                                    </div>
                                </div>
                            </div>*@
                            <div class="col-sm-3">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label"></label>
                                    <div class="col-sm-8">
                                        <button type="button" id="purtupsave" class="btn btn-primary1" onclick="fn_AddFromProducts(this,'ReplaceTo',['PurProductID'],PurchaseReplaceOptionsTempOut)" data-placement="top" data-html="true" title="Add Product Details"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                        <button type="button" id="reset" class="btn btn-light1" perfect-css="button" onclick="productclear(this,'ReplaceTo')" name="reset" title="Reset"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel"></span>
                            </label>
                            <div class="col-sm-12">
                                <input type="hidden" name="customerIndex" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="hidden" perfect-tempTable-Shortage="Sl No" value="" />
                                <div class="table-responsive tableFixHead" perfect-tempTable="ReplaceTo" id="ReplaceToDetailshead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <hr />
                <div class="row">
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                Bill Total&nbsp;
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control  text-right" id="TotalAmountTo" name="TotalAmountTo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13" readonly />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel text-right">Discount Amt/Perc</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control text-right " placeholder="" name="DiscountTo" id="DiscountTo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="13" onchange="PurToNetDiscount(this, 2);"  oninput="decimalpnt(this,'Discount',3)" onkeypress="return isNumberKey(event)" />
                                    <input type="text" class="form-control text-right " placeholder="" name="DiscountPercTo" id="DiscountPercTo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="13" onchange="PurToNetDiscount(this, 1);"  oninput="minmax(0,100,this,3)" @*oninput="decimalpnt(this,'DiscountPerc',3)"*@ onkeypress="return isNumberKey(event)" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                Round Off&nbsp;                               
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control text-right" id="RoundofTo" name="RoundofTo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  maxlength="13" readonly />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                Net Amount&nbsp;
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control  text-right" id="NetAmountTo" name="NetAmountTo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" maxlength="13" readonly />
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="card-footer text-right" perfect-class="formFooter">
                <button id="pupdate" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_ReplaceUpdate(this,'update')"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_ReplaceUpdate(this,'new')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                <button type="button" id="mainresetbutton" class="btn btn-light" perfect-css="button" onclick="ResetButtons(this)" name="reset">Clear</button>
            </div>
        </form>
    </div>
</div>
<script>
    $(document).ready(function () {
        $("#PurchaseRetButton").prop("disabled", "disabled");
    });
    function ResetButton(ele) {
        fn_Replace_initialload();
    }

    //#FROM Section
    function productclear(ele, tablekey) {

        let $thisform = $(ele).closest('[perfect-class="form"]');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');

        let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);
        debugger
        if (tablekey == "ReplaceFrom") {            
            $("#ProductButton").removeAttr("disabled", "disabled");

        }
        else if (tablekey == "ReplaceTo") {
            $("#ProductButton2").removeAttr("disabled", "disabled");
            $thisform.data({ quantitydata: '' });
            $thisform.data({ pdiscdata: '' });
        }
       
    }
    function getfunctionAssign(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        $('[name="PurchaseReturn"]').prop('checked', false);

        $thisForm.find('[name="ReferenceNo"]').val('');
        $thisForm.find('[name="PurchaseRetID"]').val('');
        $("#PurchaseRetButton").prop("disabled", "disabled");
        $(".ProductAddSection").show();

        $thisForm.find('[perfect-tempTable-ReplaceFrom]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-ReplaceFrom]').val('');

        let $tblcontainer = $thisForm.find('[perfect-tempTable="ReplaceFrom"]');
        $tblcontainer.empty();
        CalculateReplaceTotal(ele);
    }

    function CheckPurchaseReturn(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        if ($('#PurchaseReturn').is(":checked")) {
            $thisForm.find('[name="PurchaseRetID"]').prop("disabled", false);
            $("#PurchaseRetButton").prop("disabled", false);
            $(".ProductAddSection").hide();
            $thisForm.find('[name="PurchaseRetID"]').addClass('perfectValidate_string');
            Fromtax = [];           
        }
        else {
            $thisForm.find('[name="ReferenceNo"]').val('');
            $thisForm.find('[name="PurchaseRetID"]').val('');
            $("#PurchaseRetButton").prop("disabled", "disabled");
            $(".ProductAddSection").show();
            $thisForm.find('[name="PurchaseRetID"]').removeClass('perfectValidate_string');

            $thisForm.find('[perfect-tempTable-ReplaceFrom]').val('').selectpicker('refresh');
            $thisForm.find('[perfect-tempTable-ReplaceFrom]').val('');

            let $tblcontainer = $thisForm.find('[perfect-tempTable="ReplaceFrom"]');
            $tblcontainer.empty();
        }
        CalculateReplaceTotal(ele);
    }

    function getfunction(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable-ReplaceFrom]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-ReplaceFrom]').val('');

        let $tblcontainer = $thisForm.find('[perfect-tempTable="ReplaceFrom"]');
        $tblcontainer.empty();

        fn_PurchaseReturn_ProductFill();
    }

    function fn_PurchaseReturn_ProductFill() {

        let $thisForm = $(this).closest('[perfect-class="form"]');
        let inputData = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            'ID_PurchaseReturn': $('[name="PurchaseRetID"]').val(),
        };

        $.ajax({
            url: "@Url.Action("GetPurchaseReturnInfo", "Replace")",
            type: "POST",
            data: inputData,
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (ajaxOutput) {
                console.log('sss', ajaxOutput)
                $formContainer.load('@Url.Action("LoadReplaceForm", "Replace")?mtd=@ViewBag.mtd', function () {
                    let $thisForm = $(this).find('[perfect-class="form"]');
                    if (ajaxOutput.objList != null) {
                        if (ajaxOutput.objList.length > 0) {

                            $thisForm.data({ prtData: ajaxOutput.objList});

                            let table;
                            if ($('#PurchaseReturn').is(":checked")) {
                                table = PurchaseRetOptionsTempOutFill;
                            }
                            else {
                                table = PurchaseRetOptionsTempOut;
                            }

                            if (ajaxOutput.objList) {
                                fillTable($thisForm, 'ReplaceFrom', ajaxOutput.objList, table);
                            }
                            
                        }
                    }

                });
            },

        });
    }
    function validReplaceFromdetail(ele, tableKey, errorClass, isValid) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProName"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProName"]').val() == null) {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Product');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        //------
        console.log("UNIT ID>>", $thisForm.find('[perfect-tempTable-' + tableKey + '="UnitID"]').val())
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="UnitID"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="UnitID"]').val() == "" || $thisForm.find('[perfect-tempTable-' + tableKey + '="UnitID"]').val() == null) {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="UnitID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Unit');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="UnitID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        //------
        if (parseFloat($thisForm.find('[perfect-tempTable-' + tableKey + '="PpdQuantity"]').val()) < 1) {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PpdQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter a value greater than or equal to 1');
        }
        else if (parseFloat($thisForm.find('[perfect-tempTable-' + tableKey + '="CurrentStocks"]').val()) < parseFloat($thisForm.find('[perfect-tempTable-' + tableKey + '="PpdQuantity"]').val())) {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PpdQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Quantity Should be less than or equal to Current Stock');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PpdQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        //------

        return isValid;
    }

    function validReplaceTodetail(ele, tableKey, errorClass, isValid) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PurProduct"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="PurProduct"]').val() == null) {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PurProduct"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Product');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PurProduct"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        //------
        console.log("UNIT ID>>", $thisForm.find('[perfect-tempTable-' + tableKey + '="UnitID"]').val())
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PurUnitID"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="PurUnitID"]').val() == "" || $thisForm.find('[perfect-tempTable-' + tableKey + '="PurUnitID"]').val() == null) {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PurUnitID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Unit');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PurUnitID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        //------
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PurQty"]').val() < 1) {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PurQty"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter a value greater than or equal to 1');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PurQty"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        //------
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PurRate"]').val() < 1) {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PurRate"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter a Purchase Rate');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PurRate"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        //------
        let mrp = $thisForm.find('[perfect-tempTable-' + tableKey + '="PurMRP"]').val();
        let saleprice = $thisForm.find('[perfect-tempTable-' + tableKey + '="PurSalesPrice"]').val();

        if ((parseFloat(mrp)) != "" || ((saleprice)) != "") {
            if (((parseFloat(mrp)) < (parseFloat(saleprice))) && ((parseFloat(mrp)) != "" && (parseFloat(saleprice)) != "") && ((parseFloat(mrp)) != 0 && (parseFloat(saleprice)) != 0)) {
                isValid = false;
                $thisForm.find('[perfect-tempTable-' + tableKey + '="PurSalesPrice"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Sales Price Should not be greater than MRP');
            }
            else if ((parseFloat(mrp)) == "" && (parseFloat(saleprice)) != "") {
                isValid = false;
                $thisForm.find('[perfect-tempTable-' + tableKey + '="PurMRP"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Please Enter MRP');
            }
            else if ((parseFloat(mrp)) != "" && (parseFloat(saleprice)) == "") {
                isValid = false;
                $thisForm.find('[perfect-tempTable-' + tableKey + '="PurSalesPrice"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Please Enter Sale Price');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="PurSalesPrice"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="PurMRP"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
            }
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PurSalesPrice"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PurMRP"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');

        }
        //------
        return isValid;
    }

    function fn_AddFromProducts(ele, tkey, uniq = [], tableOptionsTempOut) {


        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';
        //make index

        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);

        let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {
            //means update
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            //insert
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }

        if (tableKey == 'ReplaceFrom') {
            isValid = validReplaceFromdetail(ele, tableKey, errorClass, isValid);
        }
        else if (tableKey == 'ReplaceTo') {
            isValid = validReplaceTodetail(ele, tableKey, errorClass, isValid);
        }

        if (unique.length > 0) {
            //getting previous data
            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }
                }
            })


            unique.forEach(function (key, i) {
                debugger;
                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                // let headerEleName = $thisForm.find('[name="lblProName"]').text();
                let atname = $thisEle.attr('name');
                let cvalue;

                if ($thisEle.length != 0) {
                    let $errorElement;
                    //*existency customized only for sales page
                    let errmessage = "";
                    if (key == "StockId") {
                        errmessage = "Product Already exists"
                        $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    }
                    else {
                        errmessage = key + " Already exists"
                    }
                    //*existency customized only for sales page

                    //getting current value in cval
                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();

                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();
                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') {
                            cvalue = $thisEle.val(); console.log('cvalue ->', cvalue);


                        }
                        else { cvalue = $thisEle.val(); }
                    }
                    else { cvalue = $thisEle.val(); }



                    //searching in previous data
                    if (prevData.find(a => a[atname] == cvalue)) {
                        // console.log('Search =>' + cvalue + '| attr :' + atname)
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });

        }



        if (isValid) {
            if (isNew) {
                if (tableKey == 'ReplaceTo') {

                    PurTaxSave(ele);
                }
                else if (tableKey == 'ReplaceFrom') {
                    FromTaxSave(ele);
                }
            }
            else {
                if (tableKey == 'ReplaceTo') {
                    PurTaxret(ele);
                }
                else if (tableKey == 'ReplaceFrom') {
                    FromTaxret(ele);
                }
            }
            FromTaxCalled = 0;
            ToTaxCalled = 0;
            // this section make table column data
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');

                if ($this.is('select')) {
                    switch (headerName) {
                        case "UnitID":
                            headerName = "Unit";
                            break;
                        case "PurUnitID":
                            headerName = "Unit";
                            break;
                        default:
                            break
                    }
                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    insertData[nameAttr] = $this.val();

                    $this.val('').selectpicker('refresh');
                }


                else if ($this.is('input')) {

                    //insertData[nameAttr] = $this.val();
                    let inputType = $this.attr('type');

                    if (inputType == 'checkbox') {
                        insertData[nameAttr] = $this.is(':checked');
                        //clear field
                        $this.prop('checked', false);
                    }
                    else {
                        insertData[nameAttr] = $this.val();
                        //clear field
                        $this.val('');
                    }

                    if (nameAttr == "prodtid") { }
                    else if (nameAttr == "stkid") { }
                    else {
                        $this.val('');
                    }



                }
                else {
                    insertData[nameAttr] = $this.val();

                    $this.val('');
                }

            });

            if (isNew) {
                

                if ($tblcontainer.find('table').length == 0) {

                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                }
                else {
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                }


            }
            else {
                

                let table = $tblcontainer.find('table').DataTable()
                table.destroy()

                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);


            }

            $tblcontainer.attr('perfect-tempTable-action', 0);
            if (tableKey == 'ReplaceTo') {
                CalculateToReplaceTotal(ele);
                $("#ProductButton2").removeAttr("disabled", "disabled");
            }
            else if (tableKey == 'ReplaceFrom') {
                CalculateReplaceTotal(ele);
                $("#ProductButton").removeAttr("disabled", "disabled");
            }

        }
    }

    function fillTable(ele, tkey, data, tableOptionsTempOut) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let tableOptionsTemp = tableOptionsTempOut;
        let insertData = []
        let tableKey = tkey;

        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);

        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');


        $.each(data, function (keyOne, valOne) {

            let pData = {};

            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])
            //---

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                console.log('name', valOne[nameAttr])
                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {
                        switch (headerName) {
                            case "UnitID":
                                headerName = "Unit";
                                break;
                            case "PurUnitID":
                                headerName = "Unit";
                                break;
                            default:
                                break
                        }

                        tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTemp.hideColumn.push(nameAttr);
                        //displat text of select
                        pData[nameAttr + '_d'] = $this.find('[value="' + valOne[nameAttr] + '"]').text();
                        pData[nameAttr] = valOne[nameAttr];
                        console.log('select', $this.find('options[value="' + valOne[nameAttr] + '"]').text());

                    }
                    else if ($this.is('input')) {

                        let inputType = $this.attr('type').toLocaleLowerCase();
                        console.log(inputType)
                        if (inputType == 'checkbox') {
                            debugger
                            pData[nameAttr] = valOne[nameAttr];

                            tableOptionsTemp.isCheckType.push(nameAttr);

                            console.log('checkbox', nameAttr)


                        }
                        else if (inputType == 'hidden') {

                            tableOptionsTemp.hideColumn.push(nameAttr);
                            pData[nameAttr] = valOne[nameAttr];


                        }
                        else if (inputType == 'date') {


                            pData[nameAttr] = moment(valOne[nameAttr]).format('YYYY-MM-DD');


                        }
                        else {
                            pData[nameAttr] = valOne[nameAttr];


                        }
                    }
                    else {
                        pData[nameAttr] = valOne[nameAttr];


                    }
                }


            });

            insertData.push(pData);
            //----

        });
        $tblcontainer.empty();
        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTemp));

        if (tableKey == 'ReplaceTo') {
             CalculateToReplaceTotal(ele);
        }
        else if (tableKey == 'ReplaceFrom') {
            CalculateReplaceTotal(ele);
        }

        
    }
    var PurchaseRetOptionsTempOutFill = {
        
        rowAttribute: [],
        onlyShowColumn: ['ProName', 'UnitID_d', 'PpdQuantity', 'FreeQuantity', 'PpdActualQuantity', 'PpdRate', 'TaxAmount', 'NetPurchase',],
        renameHeader: { 'ProName': 'Product', 'PpdQuantity': 'Qty', 'FreeQuantity': 'FreeQuantity', 'PpdActualQuantity': 'ActQty', 'PpdRate': 'Rate', 'TaxAmount': 'Tax', 'NetPurchase': 'TotalAmount ' },
        hideColumn: ['FK_PurchaseReturn', 'ProductID', 'StockId', 'IncludeTax', 'RpdMRP', 'RpdSalesPrice'],
        isCheckType: [],
        serialNo: true,
    }
    var PurchaseRetOptionsTempOut = {
        iconButton: {
            class: "EditDelete",
            buttons: [
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';
                        $("#ProductButton").prop("disabled", "disabled");
                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);

                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {

                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });

                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                        }
                        else {
                            $thistbl.remove();
                        }
                        RemoveFromTax(this, savedData.StockId);
                        CalculateReplaceTotal(this);
                    }
                },
            ]
        },
        rowAttribute: [],
        onlyShowColumn: ['ProName', 'UnitID_d', 'PpdQuantity', 'FreeQuantity', 'PpdActualQuantity', 'PpdRate', 'TaxAmount','NetPurchase',],
        renameHeader: { 'ProName': 'Product', 'PpdQuantity': 'Qty', 'FreeQuantity': 'FreeQuantity', 'PpdActualQuantity': 'ActQty', 'PpdRate': 'Rate', 'TaxAmount': 'Tax', 'NetPurchase': 'TotalAmount ' },
        hideColumn: ['FK_PurchaseReturn', 'ProductID', 'StockId', 'IncludeTax', 'RpdMRP','RpdSalesPrice'],
        isCheckType: [],
        serialNo: true,
    }
    var PurchaseReplaceOptionsTempOut = {
        iconButton: {
            
            buttons: [
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';
                        $("#ProductButton2").prop("disabled", "disabled");
                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);

                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            debugger
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {

                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                        BindQuantityDetails(this, 1);
                        BindTopurchaseDetails(this, 1);
                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                        }
                        else {
                            $thistbl.remove();
                        }
                        CalculateToReplaceTotal(this);
                        RemoveToTax(this, savedData.PurProductID);
                    }
                },
            ]
        },
        rowAttribute: [],
        onlyShowColumn: ['PurProduct', 'PurUnitID_d', 'PpdBarCode', 'PpdQRCode', 'PurQty', 'PurActQty', 'PurRate', 'PurDisc', 'PurActQty', 'PurActQty', 'PurTaxAmount', 'PurTotalAmt'],
        renameHeader: { 'PurProduct': 'Product', 'PpdBarCode': 'Bar Code', 'PpdQRCode': 'QR Code', 'PurQty': 'Qty', 'PurActQty': 'Act.Qty', 'PurRate': 'Pur.Rate', 'PurTaxAmount': 'Tax', 'PurTotalAmt': 'TotalAmount', 'PurDisc': 'Pur.Discount' },
        hideColumn: ['PurProductID', 'PurDiscper', 'PurFreeQuantity', 'Purless', 'PurMRP', 'PurSalesPrice','PurIncludeTax'],
        isCheckType: [],
        serialNo: true,
    }
    //From - Total Calculation Start
    function CalculateReplaceTotal(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let roundof = 0;
        let Net = 0;
        let NetAmount = 0;
        $('#ReplaceFromDetailshead').find('tbody tr').each(function (index, ele) {
            Net = Net + parseFloat($(ele).find('.NetPurchase').text());
        });
        $thisForm.find('[name="TotalAmountFrom"]').val(Number(Net).toFixed(2));
        roundof = Math.round((parseFloat(Net)))- (parseFloat(Net));
        NetAmount = (parseFloat(Net) + parseFloat(roundof));

        $thisForm.find('[name="NetAmountFrom"]').val(parseFloat(NetAmount).toFixed(2));
        $thisForm.find('[name="RoundofFrom"]').val(parseFloat(roundof).toFixed(2));
    }
    //From Total Calculation End
    //To - Total Calculation Start
    function CalculateToReplaceTotal(ele) {
      
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let roundof = 0;
        let Net = 0;
        let NetAmount = 0;
        let DiscountTo = $('[name="DiscountTo"]').val() == "" ? "0" : $thisForm.find('[name="DiscountTo"]').val();
        $('#ReplaceToDetailshead').find('tbody tr').each(function (index, ele) {
            Net = Net + parseFloat($(ele).find('.PurTotalAmt').text());
        });
        $thisForm.find('[name="TotalAmountTo"]').val(Number(Net).toFixed(2));
        roundof = Math.round((parseFloat(Net)) - (parseFloat(DiscountTo))) - ((parseFloat(Net))- (parseFloat(DiscountTo)));
        NetAmount = (parseFloat(Net) - (parseFloat(DiscountTo)) + parseFloat(roundof));

        $thisForm.find('[name="NetAmountTo"]').val(parseFloat(NetAmount).toFixed(2));
        $thisForm.find('[name="RoundofTo"]').val(parseFloat(roundof).toFixed(2));
    }
    //To Total Calculation End

    function getfunctionAssignchnage(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $tempArr = $thisForm.data('popValueData');
        $thisForm.data({ quantitydata: '' });
        $thisForm.data({ pdiscdata: '' });
        $thisForm.find('[name="UnitID"]').val($tempArr.UnitID).selectpicker("refresh");

        let UnitID= $thisForm.find('[name="UnitID"]').val();
        let ProductID = $thisForm.find('[name="ProductID"]').val();

        $thisForm.find('[name="PpdQuantity"]').val((0).toFixed(3));
        $thisForm.find('[name="FreeQuantity"]').val((0).toFixed(3));
        $thisForm.find('[name="PpdActualQuantity"]').val((0).toFixed(3));

        let Qty = $thisForm.find('[name="PpdQuantity"]').val();
        let FreeQty = $thisForm.find('[name="FreeQuantity"]').val();
        let ActQty = $thisForm.find('[name="PpdActualQuantity"]').val();
        if (Qty != ""  && UnitID != "" && ProductID != 0) {
            BindTaxDetails(ele, 0);
        }

    }


    function QtyChange(ele) {

        checkpurrateTax(ele, 1)

        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let unit = $thisForm.find('[name="UnitID"]').children(":selected").attr('UnitCounts');
        let Qty = $thisForm.find('[name="PpdQuantity"]').val() == "" ? "0" : $thisForm.find('[name=PpdQuantity]').val();
        $thisForm.find('[name="PpdQuantity"]').val(parseFloat(Qty).toFixed(3));
        let sumActQty = 0;
        if (unit > 0) {
            sumActQty = (parseFloat(Qty) * parseFloat(unit));
        }
        else {
            NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': "Please Select Unit" });
        }
        $thisForm.find('[name=PpdActualQuantity]').val(parseFloat(sumActQty).toFixed(3));

    }

    function checkpurrateTax(ele,mod) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let ProductID = $thisForm.find('[name="ProductID"]').val();
        let ProName = $thisForm.find('[name="ProName"]').val();
        let UnitID = $thisForm.find('[name="UnitID"]').val();
        let PpdRate = $thisForm.find('[name="PpdRate"]').val();
        let TaxAmount = $thisForm.find('[name="TaxAmount"]').val();
        let IncludeTax = $thisForm.find('[name="IncludeTax"]').val();
        let PpdQuantity = $thisForm.find('[name="PpdQuantity"]').val();
        debugger
        if (PpdRate != "" && PpdQuantity != "" && UnitID != "" && ProductID != 0) {
            if (mod == 1) {
                BindTaxDetails(ele, 0);
            }
            else {
                BindTaxDetails(ele, 1);
            }

        }
        else if ((PpdRate == null || PpdRate == '') && (PpdQuantity == null || PpdQuantity == '') && (UnitID == null || UnitID == '') && (ProductID == null || ProductID == 0 || ProName == '')) {
            NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': "Please Select Product" });
        }
        else if ((PpdRate == null || PpdRate == '') && (PpdQuantity == null || PpdQuantity == '') && (UnitID == null || UnitID == '')) {
            NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': "Please Select Product" });
        }
        else if ( (PpdQuantity == null || PpdQuantity == '')) {
            NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': "Please Enter Quantity" });
            return false;
        }
        else if ((UnitID == null || UnitID == '')) {
            NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': "Please Select Unit" });
            return false;
        }
        else if (PpdRate == null || PpdRate == '') {
            NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': "Please Enter Purchase Rate" });
        }

    }


    function BindTaxDetails(ele, mod) {

        Taxcalled = 1;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let SalePrice = $thisForm.find('[name=SalPrice]').val();
        let MRP = $thisForm.find('[name=MRP]').val();
          let includetax;
          debugger;
          let PurDis = 0;
        if ($thisForm.find('[name=PpdpurDis]').val() == "" || $thisForm.find('[name=PpdpurDis]').val() == undefined) {
            PurDis = 0;
        }
        else {
            PurDis = $thisForm.find('[name=PpdpurDis]').val();
        }

          if ($('#taxinclude').is(":checked")) {
              includetax = 1;
          }
          else {
              includetax = 0;
          }

          let Qty = $thisForm.find('[name=PpdQuantity]').val();
          let PurRate = $thisForm.find('[name=PpdRate]').val();

        let NetAmount = parseFloat(Qty) * (parseFloat(PurRate));

        var InputData =
        {
            FK_Product: $thisForm.find('[name=ProductID]').val(),
            Includetax: includetax,
            Amount: NetAmount,
        }

        $.ajax({
            url: "@Url.Action("GetTaxAmountNew","Replace")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                if (ajaxOutput.Process.IsProcess) {
                    var CheckListHTML = '';
                    let sum = 0;
                    if (ajaxOutput.Data.length > 0) {


                        $.each(ajaxOutput.Data, function (i, value) {
                            sum = sum + parseFloat(value.Amount.toFixed(2));

                            CheckListHTML += "<tr>";
                            CheckListHTML += "<td>" + value.SlNo + "</td>";
                            CheckListHTML += "<td Class='jq_ProductID_td' Style='Display:none'>" + value.ProductID + "</td>";
                            CheckListHTML += "<td class='jq_taxType_td' Style='Display:none'>" + value.FK_TaxType + "</td>";
                            CheckListHTML += "<td class='jq_taxTypeName_td'>" + value.TaxTyName + "</td>";
                            CheckListHTML += "<td class='jq_taxPer_td'>" + value.TaxPercentage + "</td>";
                            CheckListHTML += "<td class='jq_taxamount_td ' >" + value.Amount.toFixed(2) +"</td>";

                            CheckListHTML += "</tr>";
                        })

                    }
                    else {
                        CheckListHTML += "<div class='form-group col-md-6'>";
                        CheckListHTML += "<div class='form-check mb-2'>";
                        CheckListHTML += "<input type='checkbox' class='form-check-input' >"
                        CheckListHTML += "<label class='form-check-label' for='check1'>No Records...</label>";
                        CheckListHTML += "</div></div>"
                    }


                    $("#formGroupModalTaxbody").html(CheckListHTML)

                    if (mod == 1) {
                        $('#formGroupModalTax').modal('show');
                    }
                    else {
                        $('#formGroupModalTax').modal('hide');
                    }
                    BindTaxAmount(ele);
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            },
            complete: function () {
                $(ele).prop('disabled', false);

            }
        });
    }
    function BindTaxAmount(ele) {
        FromTaxCalled = 1;
        console.log('inside binddatat fn')
        let $modal = $(ele).closest('.modal');
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let sum = 0;
        debugger
        $('#formGroupModalTaxbody tr').each(function (index, ele) {
            sum = sum + parseFloat($(this).find('.jq_taxamount_td').text());
        });
        $thisForm.find('[name=TaxAmount]').val(sum.toFixed(2));
        let Qty = $thisForm.find('[name=PpdQuantity]').val() == "" ? "0" : $thisForm.find('[name=PpdQuantity]').val();
        let PurRate = $thisForm.find('[name=PpdRate]').val();

        if ($('#taxinclude').is(":checked")) {
            Netpur = $thisForm.find('[name=NetPurchase]').val();
            let netrate = (parseFloat(Qty) * parseFloat(PurRate));
            $thisForm.find('[name=NetPurchase]').val(netrate.toFixed(2));
        }
        else {
            $thisForm.find('[name=TaxAmount]').val(sum.toFixed(2));
            let netratenow = (parseFloat(Qty) * parseFloat(PurRate)) + sum;
            $thisForm.find('[name=NetPurchase]').val(netratenow.toFixed(2));
        }

    }
    //From Section End

    //To Section Start
    function getfunctionAssignchnageSet(ele) {

        Getproductunit(ele)
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let UnitID = $thisForm.find('[name="PurUnitID"]').val();
        let ProductID = $thisForm.find('[name="PurProductID"]').val();
        let Qty = $thisForm.find('[name="PurQty"]').val();

        $thisform.data({ quantitydata: '' });
        $thisform.data({ pdiscdata: '' });
        if (Qty != "" && UnitID != "" && ProductID != 0) {
            BindPurTaxDetails(ele, 0);
        }
    }

    function Getproductunit(ele) {


        let $thisForm = $(ele).closest('[perfect-class="form"]');


        let productId = {
             __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            'ProductID': $thisForm.find('[name="PurProductID"]').val()
        };
          $.ajax({
          url: '@Url.Action("GetProductUnit", "Replace")',
          type: "POST",
          data: productId ,
          dataType: "json",
          contentType: "application/x-www-form-urlencoded;charset=utf-8",
          success: function (ajaxOutput) {

                  if (ajaxOutput.Process.IsProcess) {

                      if (ajaxOutput.Data) {
                          $thisForm.find('[name="PurUnitID"]').val(ajaxOutput.Data[0].ID_Unit).selectpicker('refresh');
                          $thisForm.find('[name="PurUnitID"]').children(":selected").attr('UnitCounts');
                      }
                  }
              },
              complete: function () {
                  CalcActualQuantity(ele, $thisForm.find('[name="UnitID"]').children(":selected").attr('UnitCounts'));
              }
          });
    }
    //Quantity Section
    function CalcActualQuantity(ele, upasscount) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let Qttydata = $thisForm.data('quantitydata');
        if (Qttydata != '') {

            $.each(Qttydata, function (key, value1) {
                $thisForm.find('[name=Purless]').val(value1.Ppdless);
                $thisForm.find('[name=PurFreeQuantity]').val(value1.PpdFreeQuantity);
            });
        }

        let qty = $thisForm.find('[name=PurQty]').val() == "" ? "0" : $thisForm.find('[name=PurQty]').val();
        let nounit = $thisForm.find('[name=NoOfUnits]').val() == "" ? "0" : $thisForm.find('[name=NoOfUnits]').val();
        let SalePrice = $thisForm.find('[name=SalPrice]').val() == "" ? "0" : $thisForm.find('[name=SalPrice]').val();
        let unitcount = $thisForm.find('[name="PurUnitID"]').children(":selected").attr('UnitCounts');
        let unit = $thisForm.find('[name="PurUnitID"]').val();

        let $modal2 = $thisForm.find('#formGroupModalQuantity');

        let less = $modal2.find('#Ppdless').val() == "" ? "0" : $modal2.find('#Ppdless').val();



        let freeqty = $modal2.find('#PurFreeQuantity').val() == "" ? "0" : $modal2.find('#PurFreeQuantity').val();

        let ActQty;
        if (unit!="") {
            if (unitcount == undefined) {
                ActQty = (parseFloat(upasscount) * parseFloat(qty) + parseFloat(freeqty) - parseFloat(less));
            }
            else {
                ActQty = (parseFloat(unitcount) * parseFloat(qty) + parseFloat(freeqty) - parseFloat(less));
            }
        }

        console.log('UNIT NEW>', unitcount); //alert(qty);

        $thisForm.find('[name=PurActQty]').val(ActQty.toFixed(3));
        $thisForm.find('[name=PurQty]').val(parseFloat(qty).toFixed(3));
        BindPurTaxDetails(ele, 0);

        if (SalePrice > 0) {
            Discountcalculation(ele, 1);

        }

    }
    function ShowQuantityDetails(ele) {

        debugger

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.find('[name="PurQty"]').val().length > 0) {
            let searchValue = {
                Name: $thisForm.find('[name=PpdShortage]').val()
            };

            let $model = $(ele).closest('[perfect-class="formGroup"]').find('[perfect-class="formGroupModalQuantity"]');
            $('#formGroupModalQuantity').modal({ backdrop: 'static', keyboard: false });
            $(ele).closest('[perfect-class="formGroup"]').find('[perfect-class="formGroupModalQuantity"]').modal('show');

            $(ele).closest('[perfect-class="formGroup"]').find('.temptableError').text('');
        }
        else {

            $(ele).closest('[perfect-class="formGroup"]').find('.temptableError').text('Please Enter Quantity');
        }
        let Qttydata = $thisForm.data('quantitydata');
        if (Qttydata != undefined) {
            if (Qttydata != '') {

                $.each(Qttydata, function (key, value1) {
                    $thisForm.find('[name=Purless]').val(value1.Ppdless);
                    $thisForm.find('[name=PurFreeQuantity]').val(value1.PpdFreeQuantity);
                });
            }
            else {

                $('#formGroupModalQuantity').on('hidden.bs.modal', function (event) {
                    //$('#formGroupModalQuantity').empty();
                    $thisForm.find('[name=Purless]').val('');
                    $thisForm.find('[name=PurFreeQuantity]').val('');
                });
            }
        }
    }
    function BindQuantityDetails(ele, mode) {
        debugger
        let $modal = $(ele).closest('.modal');
        let $thisForm;
        if (mode == 1) {
            $thisForm = $('[perfect-class="form"]');
        }
        else {
            $thisForm = $(ele).closest('[perfect-class="form"]');
        }

        let Free = $thisForm.find('[name=PurFreeQuantity]').val() == "" ? "0" : $thisForm.find('[name=PurFreeQuantity]').val();
        let less = $thisForm.find('[name=Purless]').val() == "" ? "0" : $thisForm.find('[name=Purless]').val();
        let Qty = $thisForm.find('[name=PurQty]').val() == "" ? "0" : $thisForm.find('[name=PurQty]').val();
        //let unit = $thisForm.find('[name=UnitID]').val() == "" ? "0" : $thisForm.find('[name=UnitID]').val();
        let Validqty = 0;
        let Validqty1 = 0;
        let Validqty2 = 0;

        if (parseFloat(less) <= parseFloat(Qty)) {
            $thisForm.find('[perfect-tempTable-ReplaceTo="Purless"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
            Validqty2 = 1;
        }
        else {
            $thisForm.find('[perfect-tempTable-ReplaceTo="Purless"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Less Quantity Should not be greater than Quantity');
            Validqty2 = 0;
        }
        if (Validqty2 == 1) {
            let unit = $thisForm.find('[name="PurUnitID"]').children(":selected").attr('UnitCounts');
            let sumActQty = (parseFloat(Qty) * parseFloat(unit) + parseFloat(Free) - parseFloat(less) /*- parseFloat(Shortage)*/);
            $thisForm.find('[name=PurActQty]').val(sumActQty.toFixed(3));
            var q = [];
            let qtty = {
                PpdFreeQuantity: Free,
                Ppdless: less
            }
            q.push(qtty);
            console.log('qttty', qtty);

            $thisForm.data({ quantitydata: q });
            //$('#formGroupModalQuantity').modal({ backdrop: 'static', keyboard: false });
            $('#formGroupModalQuantity').modal('hide');
        }
    }
    function Clearqtypop(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        $thisForm.find('[name="PurFreeQuantity"]').val('');
        $thisForm.find('[name="Purless"]').val('');
        let $thissForm = $(ele).find('[perfect-class="form"]');
        let Qttydata = $thissForm.data('quantitydata');
        //alert(Qttydata)
        if (Qttydata != undefined) {


            if (Qttydata != '') {

                $.each(Qttydata, function (key, value1) {
                    $thissForm.find('[name=Purless]').val(value1.Ppdless);
                    $thissForm.find('[name=PurFreeQuantity]').val(value1.PpdFreeQuantity);
                });
            }
        }
    }
    // Quantity Section end
    function ShowPurchaserateDetailsReplace(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let PurRate = parseFloat($thisForm.find('[name="PurRate"]').val());
        debugger
        if (PurRate > 0) {
            let $model = $(ele).closest('[perfect-class="formGroup"]').find('[perfect-class="formGroupModalPurchaserate"]');
            $('#formGroupModalPurchaserate').modal({ backdrop: 'static', keyboard: false });
            $(ele).closest('[perfect-class="formGroup"]').find('[perfect-class="formGroupModalPurchaserate"]').modal('show');

            $(ele).closest('[perfect-class="formGroup"]').find('.temptableError').text('');
        }
        else {
           $(ele).closest('[perfect-class="formGroup"]').find('.temptableError').text('Please Enter Purchase Rate');
        }

        let PurDisc = $thisForm.find('[name=PurDisc]').val() == "" ? "0" : $thisForm.find('[name=PurDisc]').val();
        let PurDiscPer = $thisForm.find('[name=PurDiscper]').val() == "" ? "0" : $thisForm.find('[name=PurDiscper]').val();
        let Purddata = $thisForm.data('pdiscdata');
        if (Purddata != '') {
            $.each(Purddata, function (key, value1) {
                $thisForm.find('[name=PurDisc]').val(value1.PpdpurDis);
                $thisForm.find('[name=PurDiscper]').val(value1.PpdpurDiscPer);
            });
        }
        else {
            $('#formGroupModalPurchaserate').on('hidden.bs.modal', function (event) {
                $thisForm.find('[name=PurDisc]').val('');
                $thisForm.find('[name=PurDiscper]').val('');
            });
        }

    }

    function PurchaseDiscountPerCalculation(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let discountPerc = 0;

        let PurRate = $thisForm.find('[name=PurRate]').val() == "" ? 0 : $thisForm.find('[name=PurRate]').val();
        let discount = $thisForm.find('[name=PurDisc]').val() == "" ? 0 : $thisForm.find('[name=PurDisc]').val();

        if (parseFloat(discount) <= parseFloat(PurRate)) {
            discountPerc = parseFloat(discount) * 100 / parseFloat(PurRate);
            $thisForm.find('[name=PurDiscper]').val(discountPerc);
            $thisForm.find('[name=PurDisc]').val(discount);
            $thisForm.find('[perfect-tempTable-ReplaceTo="PurDisc"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
        }
        else {
            $thisForm.find('[perfect-tempTable-ReplaceTo="PurDisc"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Discount Amount Should not be greater than Purchase Rate');
        }

    }


    function PurchaseDiscountCalculation(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let PurRate = $thisForm.find('[name=PurRate]').val() == "" ? 0 : $thisForm.find('[name=PurRate]').val();
        let discount = $thisForm.find('[name=PurDisc]').val() == "" ? 0 : $thisForm.find('[name=PurDisc]').val();
        let discountPer = $thisForm.find('[name=PurDiscper]').val() == "" ? 0 : $thisForm.find('[name=PurDiscper]').val();
        let discountamount = 0;
        let discountPerc = 0;

        discountamount = parseFloat(PurRate) * parseFloat(discountPer) / 100;
        $thisForm.find('[name=PurDisc]').val(discountamount.toFixed(2));
        $thisForm.find('[name=PurDiscper]').val(discountPer);
    }

    function BindTopurchaseDetails(ele, Edit) {
        debugger
        let $modal = $(ele).closest('.modal');
        let $thisForm;
        if (Edit == 1) {
            $thisForm = $('[perfect-class="form"]');
        }
        else {
            $thisForm = $(ele).closest('[perfect-class="form"]');
        }
        let valid = 0;

        let Qty = $thisForm.find('[name=PurQty]').val() == "" ? "0" : $thisForm.find('[name=PurQty]').val();
        let PurDisc = $thisForm.find('[name=PurDisc]').val() == "" ? "0" : $thisForm.find('[name=PurDisc]').val();
        let PurDiscPer = $thisForm.find('[name=PurDiscper]').val() == "" ? "0" : $thisForm.find('[name=PurDiscper]').val();
        let PurRate = $thisForm.find('[name=PurRate]').val() == "" ? "0" : $thisForm.find('[name=PurRate]').val();
        let NetPurRate = $thisForm.find('[name=PurTotalAmt]').val() == "" ? "0" : $thisForm.find('[name=PurTotalAmt]').val();
        let Dispur = 0;
        if (parseFloat(PurDisc) > parseFloat(PurRate)) {
            $thisForm.find('[perfect-tempTable-ReplaceTo="PurDisc"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Discount Amount Should not be greater than Purchase Rate');
            $('#formGroupModalPurchaserate').modal({ backdrop: 'static', keyboard: false });
            $('#formGroupModalPurchaserate').modal('show');
            valid = 1;
        }
        else {
            valid = 0;
        }
        if ((parseFloat(PurDisc) <= parseFloat(PurRate)) && valid == 0) {


            let sumNetPurRate = parseFloat(NetPurRate) - ((parseFloat(PurDisc)) * (parseFloat(Qty)));
            Dispur = (parseFloat(PurRate) - (parseFloat(PurDisc))) * (parseFloat(Qty));

            if (isNaN(sumNetPurRate)) {
                sumNetPurRate = 0.00;
            }

            var discountData = [];
            let pdisc = {
                PpdpurDis: PurDisc,
                PpdpurDiscPer: PurDiscPer
            }
            discountData.push(pdisc);
            $thisForm.data({ pdiscdata: discountData });
            //IMPORTDANT
            BindPurTaxDetails(ele, 0);

            $thisForm.find('[perfect-tempTable-ReplaceTo="PurDisc"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');

            $('#formGroupModalPurchaserate').modal('hide');

        }

    }
    function cleardiscountpopup(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[name="PurDisc"]').val('');
        $thisForm.find('[name="PurDiscper"]').val('');

        let Purddata = $thisForm.data('pdiscdata');
        if (Purddata != undefined) {
            if (Purddata != '') {
                $.each(Purddata, function (key, value1) {
                    $thisForm.find('[name=PurDisc]').val(value1.PpdpurDis);
                    $thisForm.find('[name=PurDiscper]').val(value1.PpdpurDiscPer);
                });
            }
            else {
                $thisForm.find('[name=PurDisc]').val(0);
                $thisForm.find('[name=PurDiscper]').val(0);
            }
        }
    }
    function cleardiscount(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[name="PurDisc"]').val('');
        $thisForm.find('[name="PurDiscper"]').val('');
        $thisForm.data({ pdiscdata: '' });
        BindTopurchaseDetails(ele);
    }
        //else if (field == 2) {
        //    if (parseFloat(discount) <= parseFloat(PurRate)) {
        //        discountPerc = parseFloat(discount) * 100 / parseFloat(PurRate);
        //        $thisForm.find('[name=PpdpurDiscper]').val(discountPerc);
        //        $thisForm.find('[name=PpdpurDis]').val(discount);
        //        $thisForm.find('[perfect-tempTable-Purchase="PpdpurDis"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
        //    }
        //    else {
        //        $thisForm.find('[perfect-tempTable-Purchase="PpdpurDis"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Discount Amount Should not be greater than Purchase Rate');
        //    }
        //}
        //if (rateid == 5) {
        //    BindpurchaseDetails(ele, 5);

        //    if (parseFloat(discount) != 0 || parseFloat(discountPer) != 0) {
        //        NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': 'Check Purchase Discount' });
        //    }
        //}



    function checkTax(ele, mod) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let ProductID = $thisForm.find('[name="PurProductID"]').val();
        let ProName = $thisForm.find('[name="PurProduct"]').val();
        let UnitID = $thisForm.find('[name="PurUnitID"]').val();
        let PpdRate = $thisForm.find('[name="PurRate"]').val();
        let TaxAmount = $thisForm.find('[name="TaxAmount"]').val();
        let IncludeTax = $thisForm.find('[name="IncludeTax"]').val();
        let PpdQuantity = $thisForm.find('[name="PurQty"]').val();
        debugger
        if (PpdRate != "" && (PpdQuantity != "" || PpdQuantity>0) && UnitID != "" && ProductID != 0) {
            if (mod == 1) {
                BindPurTaxDetails(ele, 0);
            }
            else {
                BindPurTaxDetails(ele, 1);
            }

        }
        else if ((PpdRate == null || PpdRate == '') && (PpdQuantity == null || PpdQuantity == '') && (UnitID == null || UnitID == '') && (ProductID == null || ProductID == 0 || ProName == '')) {
            NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': "Please Select Product" });
        }
        else if ((PpdRate == null || PpdRate == '') && (PpdQuantity == null || PpdQuantity == '') && (UnitID == null || UnitID == '')) {
            NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': "Please Select Product" });
        }
        else if ((PpdQuantity == null || PpdQuantity == '' || PpdQuantity < 1)) {
            NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': "Please Enter Quantity" });
            return false;
        }
        else if ((UnitID == null || UnitID == '')) {
            NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': "Please Select Unit" });
            return false;
        }
        else if (PpdRate == null || PpdRate == '') {
            NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': "Please Enter Purchase Rate" });
        }

    }

    function BindPurTaxDetails(ele, mod) {


        Taxcalled = 1;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let SalePrice = $thisForm.find('[name=SalPrice]').val();
        let MRP = $thisForm.find('[name=MRP]').val();
          let includetax;
          debugger;
        let PurDis = 0;
        let PurchaseRate = 0;
        let Qty = $thisForm.find('[name=PurQty]').val() == "" ? "0" : $thisForm.find('[name=PurQty]').val();
        let PurRate = $thisForm.find('[name=PurRate]').val() == "" ? "0" : $thisForm.find('[name=PurRate]').val();
            if ($thisForm.find('[name=PurDisc]').val() == "" || $thisForm.find('[name=PurDisc]').val() == undefined) {
                PurDis = 0;
            }
            else {
                PurDis = $thisForm.find('[name=PurDisc]').val();
        }

        PurchaseRate = parseFloat(PurRate) - parseFloat(PurDis);

            if ($('#purtaxinclude').is(":checked")) {
                includetax = 1;
            }
            else {
                includetax = 0;
            }



        let NetAmount = parseFloat(Qty) * (parseFloat(PurchaseRate));

            var InputData =
            {
                FK_Product: $thisForm.find('[name=PurProductID]').val(),
                Includetax: includetax,
                Amount: NetAmount,
            }

        $.ajax({
            url: "@Url.Action("GetTaxAmountNew","Replace")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                if (ajaxOutput.Process.IsProcess) {
                    var CheckListHTML = '';
                    let sum = 0;
                    if (ajaxOutput.Data.length > 0) {


                        $.each(ajaxOutput.Data, function (i, value) {
                            sum = sum + parseFloat(value.Amount.toFixed(2));

                            CheckListHTML += "<tr>";
                            CheckListHTML += "<td>" + value.SlNo + "</td>";
                            CheckListHTML += "<td Class='jq_ProductID_td' Style='Display:none'>" + value.ProductID + "</td>";
                            CheckListHTML += "<td class='jq_taxType_td' Style='Display:none'>" + value.FK_TaxType + "</td>";
                            CheckListHTML += "<td class='jq_taxTypeName_td'>" + value.TaxTyName + "</td>";
                            CheckListHTML += "<td class='jq_taxPer_td'>" + value.TaxPercentage + "</td>";
                            CheckListHTML += "<td class='jq_taxamount_td ' >" + value.Amount.toFixed(2) +"</td>";

                            CheckListHTML += "</tr>";
                        })

                    }
                    else {
                        CheckListHTML += "<div class='form-group col-md-6'>";
                        CheckListHTML += "<div class='form-check mb-2'>";
                        CheckListHTML += "<input type='checkbox' class='form-check-input' >"
                        CheckListHTML += "<label class='form-check-label' for='check1'>No Records...</label>";
                        CheckListHTML += "</div></div>"
                    }


                    $("#formGroupModalTaxbody2").html(CheckListHTML)

                    if (mod == 1) {
                        $('#formGroupModalTax2').modal('show');
                    }
                    else {
                        $('#formGroupModalTax2').modal('hide');
                    }
                    BindPurTaxAmount(ele);
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            },
            complete: function () {
                $(ele).prop('disabled', false);

            }
        });
    }
    function BindPurTaxAmount(ele) {
        ToTaxCalled = 1;
        console.log('inside binddatat fn')
        let $modal = $(ele).closest('.modal');
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let sum = 0;
        debugger
        $('#formGroupModalTaxbody2 tr').each(function (index, ele) {
            sum = sum + parseFloat($(this).find('.jq_taxamount_td').text());
        });
        $thisForm.find('[name=PurTaxAmount]').val(sum.toFixed(2));
        let Qty = $thisForm.find('[name=PurQty]').val() == "" ? "0" : $thisForm.find('[name=PurQty]').val();
        let PurRate = $thisForm.find('[name=PurRate]').val() == "" ? "0" : $thisForm.find('[name=PurRate]').val();

        if ($thisForm.find('[name=PurDisc]').val() == "" || $thisForm.find('[name=PurDisc]').val() == undefined) {
            PurDis = 0;
        }
        else {
            PurDis = $thisForm.find('[name=PurDisc]').val();
        }
        let PurchaseRate = parseFloat(PurRate) - parseFloat(PurDis)
        if ($('#purtaxinclude').is(":checked")) {
            //Netpur = $thisForm.find('[name=PurTotalAmt]').val();
            let netrate = (parseFloat(Qty) * parseFloat(PurchaseRate));
            $thisForm.find('[name=PurTotalAmt]').val(netrate.toFixed(2));
        }
        else {
            $thisForm.find('[name=PurTaxAmount]').val(sum.toFixed(2));
            let netratenow = (parseFloat(Qty) * parseFloat(PurchaseRate)) + sum;
            $thisForm.find('[name=PurTotalAmt]').val(netratenow.toFixed(2));
        }

    }

    //To Section End

    //To Total Discount Calculation Start
    function PurToNetDiscount(ele, field) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let BillTotal = $thisForm.find('[name=TotalAmountTo]').val() == "" ? "0" : $thisForm.find('[name=TotalAmountTo]').val();
        let discount = $thisForm.find('[name=DiscountTo]').val() == "" ? 0 : $thisForm.find('[name=DiscountTo]').val();
        let discountPer = $thisForm.find('[name=DiscountPercTo]').val() == "" ? 0 : $thisForm.find('[name=DiscountPercTo]').val();
        let discountamount = 0;
        let discountPerc = 0;
        if (field == 1) {
            discountamount = parseFloat(Number(BillTotal).toFixed(2)) * parseFloat(discountPer) / 100;
            $thisForm.find('[name=DiscountTo]').val(Number(discountamount).toFixed(2) == "NaN" ? "0.00" : Number(discountamount).toFixed(2));
            $thisForm.find('[name=DiscountPercTo]').val(Number(discountPer).toFixed(2) == "NaN" ? "0.00" : Number(discountPer).toFixed(2));
        }
        else if (field == 2) {
            if (parseFloat(discount) <= parseFloat(BillTotal)) {
                discountPerc = parseFloat(discount) * 100 / parseFloat(BillTotal);
                $thisForm.find('[name=DiscountPercTo]').val(Number(discountPerc).toFixed(2) == "NaN" ? "0.00" : Number(discountPerc).toFixed(2));
                $thisForm.find('[name=DiscountTo]').val(Number(discount).toFixed(2) == "NaN" ? "0.00" : Number(discount).toFixed(2));
            }
        }
        ToRoundOffCalc(ele);
    }
    //To Total Discount Calculation End
    function ToRoundOffCalc(ele, md) {
        debugger
        let $thisForm;
        if (md == 1) {
            $thisForm = $(payele).closest('[perfect-class="form"]');
        }
        else {
            $thisForm = $(ele).closest('[perfect-class="form"]');
        }
        let Discount = $thisForm.find('[name=DiscountTo]').val() == "" ? "0" : $thisForm.find('[name=DiscountTo]').val();
        var BillTotal = $thisForm.find('[name=TotalAmountTo]').val() == "" ? "0" : $thisForm.find('[name=TotalAmountTo]').val();

        var total = Math.round(parseFloat(BillTotal) - parseFloat(Discount)) - (parseFloat(BillTotal) - parseFloat(Discount));
        $thisForm.find('[name=RoundofTo]').val(total.toFixed(2));

        netat = parseFloat(BillTotal) - parseFloat(Discount) + parseFloat(total);
        $thisForm.find('[name=NetAmountTo]').val(netat.toFixed(2));
    }
    //To Section Tax
    var $modal = $('#zero_config2');
    var Purtax = [];
    var ToTaxCalled = 0;
    function PurTaxSave(ele, Arr) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let ProductId = $('[name=PurProductID]').val();

        $modal.find('tbody').find('tr').each(function () {

            let taxinfo = {};
            //taxinfo['UID'] = $('[name=UID]').val();
            taxinfo['UID'] = ProductId;
            taxinfo['FK_TaxType'] = $(this).find('.jq_taxType_td').text();
            taxinfo['TaxTyName'] = $(this).find('.jq_taxTypeName_td').text();
            taxinfo['TaxPercentage'] = $(this).find('.jq_taxPer_td').text();
            taxinfo['TaxAmount'] = $(this).find('.jq_taxamount_td').find('input').val();
            console.log('taxinfo', taxinfo);

            Purtax.push(taxinfo);

        });
        console.log('PurTaxSave', Purtax);
    }

    function PurTaxret(ele) {

        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let UID = $('[name=UID]').val();
        let ProductId = $('[name=PurProductID]').val();
        if (ToTaxCalled==1) {
            Purtax = Purtax.filter(x => x.UID != ProductId.toString());

            $modal.find('tbody').find('tr').each(function () {
                let taxinfo = {};
                //taxinfo['UID'] = $('[name=UID]').val();
                taxinfo['UID'] = ProductId;
                taxinfo['FK_TaxType'] = $(this).find('.jq_taxType_td').text();
                taxinfo['TaxTyName'] = $(this).find('.jq_taxTypeName_td').text();
                taxinfo['TaxPercentage'] = $(this).find('.jq_taxPer_td').text();
                taxinfo['TaxAmount'] = $(this).find('.jq_taxamount_td').text();
                console.log('taxinfo', taxinfo);

                Purtax.push(taxinfo);
            });

            console.log('PurTaxret>', Purtax);
        }

    }
    function RemoveToTax(ele, id) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let UID = id;

        console.log('Purtax>', Purtax);

        $.each(Purtax, function (key, value) {
            Purtax = Purtax.filter(x => x.UID != UID);
        });

        console.log('TAXDELETEPurtax>', Purtax);
    }
    //To Section Tax End

    //From Section Tax
    var $Tax = $('#zero_config');
    var Fromtax = [];
    var FromTaxCalled = 0;
    function FromTaxSave(ele, Arr) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        //let UID = $('[name=UID]').val(cnt);
        let FK_Stock = $('[name=StockId]').val();
        $Tax.find('tbody').find('tr').each(function () {

            let taxinfo = {};
            //taxinfo['UID'] = $('[name=UID]').val();
            taxinfo['UID'] = FK_Stock;
            taxinfo['ProductID'] = $('[name=ProductID]').val();
            taxinfo['FK_TaxType'] = $(this).find('.jq_taxType_td').text();
            taxinfo['TaxTyName'] = $(this).find('.jq_taxTypeName_td').text();
            taxinfo['TaxPercentage'] = $(this).find('.jq_taxPer_td').text();
            taxinfo['TaxAmount'] = $(this).find('.jq_taxamount_td').text();
            console.log('taxinfo', taxinfo);

            Fromtax.push(taxinfo);

        });
        console.log('FromTaxSave', Fromtax);
    }

    function FromTaxret(ele) {

        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let UID = $('[name=UID]').val();
        let FK_Stock = $('[name=StockId]').val();
        let RetTax = [];
        if (FromTaxCalled == 1) {
            Fromtax = Fromtax.filter(x => x.UID != FK_Stock.toString());

            $Tax.find('tbody').find('tr').each(function () {
                let taxinfo = {};
                //taxinfo['UID'] = $('[name=UID]').val();
                taxinfo['ProductID'] = $('[name=ProductID]').val();
                taxinfo['UID'] = FK_Stock;
                taxinfo['FK_TaxType'] = $(this).find('.jq_taxType_td').text();
                taxinfo['TaxTyName'] = $(this).find('.jq_taxTypeName_td').text();
                taxinfo['TaxPercentage'] = $(this).find('.jq_taxPer_td').text();
                taxinfo['TaxAmount'] = $(this).find('.jq_taxamount_td').text();
                console.log('taxinfo', taxinfo);

                Fromtax.push(taxinfo);
            });

            console.log('FromTaxret>', Fromtax);
        }

    }
    function RemoveFromTax(ele, id) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let UID = id; 

        console.log('Fromtax>', Fromtax);

        $.each(Fromtax, function (key, value) {
            Fromtax = Fromtax.filter(x => x.UID != UID);
        });

        console.log('TAXDELETEFromtax>', Fromtax);
    }
    //From Section Tax End

    //Add And Update using common function start
    function fn_ReplaceUpdate(ele, actionType) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        debugger
        let upperlimit = $thisForm.find('[name="InvoiceDate"]').val();
        let datevalid = 0;
        isValid = false;
        var today = new Date().toISOString().split('T')[0];
        document.getElementsByName("TransDate")[0].setAttribute('max', today);    
        //var enqDate = new Date(upperlimit);
        //enqDate.setHours(0, 0, 0, 0)
        //var today = new Date();
        //today.setHours(0, 0, 0, 0)
        //let errorclass = '.temptableErrors';
        //if (enqDate > today) {

        //    console.log('inside limit check if')
        //    $thisForm.find('[name="InvoiceDate"]').closest('[perfect-class="formGroup"]').find(errorclass).attr("style", "display:block");
        //    $thisForm.find('[name="InvoiceDate"]').closest('[perfect-class="formGroup"]').find(errorclass).text('Invoice Date should be less than or equal to Todays date');
        //    isValid = false;
        //}
        //else {
        //    $thisForm.find('[name="InvoiceDate"]').closest('[perfect-class="formGroup"]').find(errorclass).attr("style", "display:none");
        //    $thisForm.find('[name="InvoiceDate"]').closest('[perfect-class="formGroup"]').find(errorclass).text('');
        //    isValid = true;
        //}
        //let discount = $thisForm.find('[name=Discount]').val() == "" ? 0 : $thisForm.find('[name=Discount]').val();
        //let BillTotal = $thisForm.find('[name=BillTotal]').val() == "" ? "0" : $thisForm.find('[name=BillTotal]').val();


        console.log("is valid", $thisForm.valid());
        debugger
        if (($thisForm.valid())/* && (isValid==true)*/) {

            let $thisForm = $(ele).closest('[perfect-class="form"]');


            let ReplaceFromData = [];
            $thisForm.find('[perfect-tempTable="ReplaceFrom"]').find('tbody').find('tr').each(function () {
                ReplaceFromData.push($(this).data('pData'));
            })

            let ReplaceToData = [];
            $thisForm.find('[perfect-tempTable="ReplaceTo"]').find('tbody').find('tr').each(function () {
                ReplaceToData.push($(this).data('pData'));
            })

            console.log('ReplaceFromData', ReplaceFromData);
            console.log('ReplaceToData', ReplaceToData);

            let _ID_Replace = 0;
            let _ActionUrl = "";
            if (actionType === "new") {
                _ID_Replace = 0;
                _ActionUrl = "@Url.Action("AddReplace", "Replace")";                
            }
            else if (actionType === "update") {
                _ID_Replace = $thisForm.find('[name="ID_Replace"]').val();
                _ActionUrl = "@Url.Action("UpdateQuotation", "Quotation")";
            }

            if (ReplaceFromData.length > 0) {
                if (ReplaceToData.length > 0) {
                    //disable button to avoid multiple clicks
                    $(ele).prop('disabled', true);
                    let inputData = {

                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        'ReplaceID': _ID_Replace,
                        'TransMode': ReplaceTransMode,
                        'TransDate': $thisForm.find('[name="TransDate"]').val(),
                        'FK_Supplier': $thisForm.find('[name="SuppID"]').val(),
                        'FK_PurchaseReturn': $thisForm.find('[name="PurchaseRetID"]').val(),
                        'PurchaseReturn': $thisForm.find('[name="PurchaseReturn"]').is(":checked"),

                        'RepFromTotal': $thisForm.find('[name="TotalAmountFrom"]').val(),
                        'RepFromRoundOff': $thisForm.find('[name="RoundofFrom"]').val(),
                        'RepFromNetAmount': $thisForm.find('[name="NetAmountFrom"]').val(),
                        'ReplaceFromDetails': ReplaceFromData,
                        'RepFTaxDetails': Fromtax,

                        'RepToTotal': $thisForm.find('[name="TotalAmountTo"]').val(),
                        'RepToDiscountAmount': $thisForm.find('[name="DiscountTo"]').val(),
                        'RepToDiscountPer': $thisForm.find('[name="DiscountPercTo"]').val(),
                        'RepToRoundOff': $thisForm.find('[name="RoundofTo"]').val(),
                        'RepToNetAmount': $thisForm.find('[name="NetAmountTo"]').val(),
                        'ReplaceToDetails': ReplaceToData,
                        'RepTTaxDetails': Purtax,

                        //'LastID': LastID_Purchase,
                    };
                    //clearSessionValue(LastIDSessionKey);

                    $.ajax({
                        url: _ActionUrl,
                        type: "POST",
                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (ajaxOutput) {

                            if (ajaxOutput.Process.IsProcess) {

                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                });

                                $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                $thisForm.find('[perfect-ctype="input"]').val('');
                                $thisForm.find('[perfect-ctype="date"]').val('');

                                // Get the value set in form's perfect-onFormSuccess attribute
                                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                if (onSuccess) {
                                    window[onSuccess]();
                                }
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                        },
                        complete: function () {
                            $(ele).prop('disabled', false);
                        }

                    });
                }
                else {
                    $(ele).prop('disabled', false);
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': "Add Atleast One Product to To List" });
                }
            }
            else {
                $(ele).prop('disabled', false);
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': "Add Atleast One Product to From List" });
            }
        }
    }
   //Add And Update using common function end

    //Common Functions Start
    function decimalpnt(ele, id, range) {
        debugger
        let input = $('#' + id);

        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;

        $(document).on('keydown', '#' + id, function (event) {

            if (ele.value.includes('.')) {

            }
            else if (ele.value === '.' && (event.key === '.' || event.keyCode === 190)) {
                ele.value = '0.00'; // Change the value to '0.00' if only a dot is entered
                // Prevent the dot from being entered in the input field
            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.indexOf('.') < 0 && ele.value.indexOf('.') !== 9 && ele.value.length > 8) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 46 || charCode > 57))
            return false;

        return true;
    }

    function minmax(min, max, ele, range) {
        if (min != '' || max != '') {
            let t = ele.value;
            if (parseInt(ele.value) < min || isNaN(parseInt(ele.value))) { ele.value = min; }
            else if (parseInt(ele.value) > max) { ele.value = max; }
            else { ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t; }

        }
    }
    function blockSpecialChar(e) {
        var k;
        document.all ? k = e.keyCode : k = e.which;
        return ((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8 || k == 32 || (k >= 48 && k <= 57) || k >= 96 && k <= 105);
    }
    //Common Functions End



</script>
