


@model PerfectWebERP.Models.ResourceDetailsModel.ResourceDetailsListModel
<style>
    .yy {
        padding-left: 0px !important;
    }
</style>
<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">@ViewBag.PageTitle</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            @Html.AntiForgeryToken()
            <div class="">

                <div class="row">




                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label name="lblProject" class="col-sm-4 col-form-label">Project<span class="text-danger">*</span></label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="hidden" name="ID_ProjectResourceMarking" class="form-control " perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <input type="date" name="ProjectDate" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" hidden />
                                    <input type="text" class="form-control perfectValidate_string" name="Project" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                    <input type="hidden" name="ProjectID" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" onclick="GetCmnPopUpSearchValAssign(this, 41,'Project Details',[],['ProjectDate'])" BindName="Project" BindVal="ProjectID" perfect-css="button" Function="1"></button>
                                    </div>
                                </div>
                                <div class="text-danger temptableError"></div>
                            </div>
                        </div>
                    </div>



                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Stage</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" name="StageID" perfect-selectButtonAction="testing"  perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please Select </option>


                                    @if (!(Model.StageList is null))
                                    {
                                        foreach (var cat in Model.StageList)
                                        {
                                            <option value="@cat.StageID">@cat.StageName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Allocation Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">

                                <input type="date" class="form-control perfectValidate_date" id="PrmMarkingDate" name="PrmMarkingDate" perfect-class="formGroupControl" perfect-ctype="date" max="2050-01-01" perfect-css="date" onchange="checkdatewithLDdate(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                                <div id="CreateDate-error" class="Custominvalid animated fadeInUp CreateDateerror" style="display: none;">Created On sholud be greater than or equal to Project Date</div>
                            </div>

                        </div>
                    </div>
                    <div class="col-sm-12 yy">

                        <div id="accordion-Two" class="accordion accordion-active-header">


                            <div class="accordion__header collapsed" id="MaterialDetails" data-target="#active-header_collapseTwo1" aria-expanded="true">
                                <span class="accordion__header--icon"></span>
                                <span class="accordion__header--text">Details</span>

                            </div>
                            <div id="active-header_collapseTwo1" class="collapse accordion__body" data-parent="#accordion-Two">
                                <div class="accordion__body--text">
                                    <div class="row">
                                        <div class="col-sm-12" perfect-class="TempTableProduct">
                                            <br />
                                            <div class="row">

                                                <div class="col-sm-4 yy">

                                                    <div class="form-group row" perfect-class="formGroup">
                                                        <label class="col-sm-4 col-form-label">
                                                            <span perfect-class="formGroupLabel">Resource Type</span>
                                                            <span class="text-danger">*</span>                                                            
                                                        </label>
                                                        <div class="col-sm-8">                                                                    

                                                                    <select class="form-control" placeholder="Please Select" perfect-selectButtonAction="testing" name="FK_ProjectResources" perfect-tempTable-MaterialDetailsTable="FK_ProjectResources" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                                        <option value="">Please select</option>
                                                                        @if (!(Model.ResourceList is null))
                                                                        {
                                                                            foreach (var Projec in Model.ResourceList)
                                                                            {
                                                                                <option value="@Projec.FK_ProjectResources">@Projec.ProjectResourcesName</option>
                                                                            }
                                                                        }
                                                                    </select>
                                                                    <div class="text-danger temptableError"></div>

                                                            </div>

                                                        </div>

                                                </div>                                 

                                                <div class="col-sm-4">
                                                    <div class="form-group row" perfect-class="formGroup">
                                                        <label class="col-sm-4 col-form-label">Quantity&nbsp;<span class="text-danger">*</span></label>
                                                        <div class="col-sm-8">
                                                            <input type="text" class="form-control text-right" perfect-tempTable-MaterialDetailsTable="Quantity" name="Quantity" id="Quantity" oninput="decimalpnt(this,'Quantity',4)" maxlength="13" perfect-class="formGroupControl" perfect-ctype="input" perfec-css="input" onchange="calcsall(this)" />
                                                            <div class="text-danger temptableError"></div>
                                                        </div>
                                                        <div id="FldId-error" class="Custominvalid animated fadeInUp producterror" style="display: none;">Please Enter Quantity</div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-4">
                                                    <div class="form-group row" perfect-class="formGroup">
                                                        <label class="col-sm-4 col-form-label">
                                                            <span perfect-class="formGroupLabel">Amount</span>
                                                            <span class="text-danger">*</span>
                                                        </label>
                                                        <div class="col-sm-8">
                                                            <input type="text" class="form-control text-right " maxlength="13" id="ResourceAmount" perfect-tempTable-MaterialDetailsTable="ResourceAmount" placeholder="" name="ResourceAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'ResourceAmount',3)" onchange="calcsall(this)" />
                                                            <div class="text-danger temptableError"></div>
                                                        </div>
                                                        <div id="FldId-error1" class="Custominvalid animated fadeInUp producterror" style="display: none;">Please Enter Amount</div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-4 yy">
                                                    <div class="form-group row" perfect-class="formGroup">
                                                        <label class="col-sm-4 col-form-label">
                                                            <span perfect-class="formGroupLabel">Total Amount</span>

                                                        </label>
                                                        <div class="col-sm-8">
                                                            <input type="text" class="form-control text-right" placeholder="" readonly="" name="TotalAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" perfect-tempTable-MaterialDetailsTable="TotalAmount">
                                                        </div>
                                                    </div>
                                                </div>



                                                <div class="col-sm-12 text-right">

                                                    <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Product" onclick="createatable(this,'MaterialDetailsTable',['FK_ProjectResources'])"><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                                                    <button class="btn btn-light1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" id="btnresetMtrl" onclick="MaterialDetailsclear(this,'MaterialDetailsTable')"><i class="fa fa-refresh" aria-hidden="true"></i></button>

                                                </div>



                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="col-sm-12">
                            <div class="form-group row" perfect-class="formGroup">

                                <div class="table-responsive" perfect-tempTable="MaterialDetailsTable" id="Material" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                @*<div class="table-responsive" perfect-ProductType="ProductType"></div>*@
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4 yy">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Net Amount</span>
                        </label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control text-right" placeholder="" name="PrmTotalAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="13" id="PrmTotalAmount" oninput="decimalpnt(this,'PrmTotalAmount',3)" disabled />

                        </div>

                    </div>
                </div>
                <div class="card-footer text-right" perfect-class="formFooter">
                    <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="AddResourceType(this,'update')"><i class="fa fa-refresh fa-spin  loaderClass"></i>Update</button>
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="AddResourceType(this,'add')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                </div>

            </div>
        </form>
    </div>
</div>


<script>
    (function () {
        //jQuery('form').validate();//<-----  Validate/initialize our form on page load

    })();

    $(document).ready(function () {

        initFunctions('form');
        $('#MeasurementDetails').removeClass('collapsed');
        $('#active-header_collapseTwo').addClass('collapse');
        $('#active-header_collapseTwo').addClass('show');
        $('#MasterProjectDetails').attr('aria-expanded', "true");
        $('#active-header_collapseTwo1').addClass('collapse');
        $('#active-header_collapseTwo1').addClass('show');
        $('#active-header_collapseTwo2').addClass('collapse');
        $('#active-header_collapseTwo2').addClass('show');

    });
    function cleartable(ele) {
      
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable="MaterialDetailsTable"]').empty();


        $thisForm.find('[name=AllocationDetails]').empty();
        MaterialDetailsclear(ele, 'MaterialDetailsTable');

    }

    function checkdatewithLDdate(ele) {
        ;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let ProjectDate = $thisForm.find('[name=ProjectDate]').val();
        let CreateDate = $thisForm.find('[name=PrmMarkingDate]').val();
        if (CreateDate < ProjectDate) {
            $thisForm.find('[name="PrmMarkingDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Trans Date  sholud be greater than or equal to Project Date');
            return false;
        }
        else {
            $thisForm.find('[name="PrmMarkingDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
            return true;
        }



    }

    function decimalpnt(ele, id, range) {
        let input = $('#' + id);

        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;

        $(document).on('keydown', '#' + id, function (event) {

            if (ele.value.includes('.')) {

            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.indexOf('.') < 0 && ele.value.indexOf('.') !== 9 && ele.value.length > 8) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }

    var tableOptionsTempOut = {
        iconButton: {
            buttons: [

                {
                   icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';
                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');

                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else if (inputType == 'date') {
                                    console.log('datess', savedData)
                                    console.log('datess', savedData[pf_name])
                                    // $thisNode.val(moment(savedData[pf_name]).format('YYYY-DD-MM'));
                                    $thisNode.val(savedData[pf_name]);
                                }
                                else {

                                    $thisNode.val(savedData[pf_name]);
                                }

                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }

                           
                        });



                    }
                },
                {
                 icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            //$thistbl.dataTable({ paging: true, searchbtn: false });
                        }
                        else {
                            $thistbl.remove();
                        }
                        $("#btnresetMtrl").click();
                        calcsalpttl($tablecontainer);
                    }
                },
            ]
        },



        onlyShowColumn: ["FK_ProjectResources", "ResourceAmount", "Quantity", "TotalAmount"],
        hideColumn: [],
        serialNo: true,
        renameHeader: { "FK_ProjectResources_d": "Resource Type", "Quantity": "QuantityR", "ResourceAmount": "AmountR", "TotalAmount": "Total Amount1R"},
        rowAttribute: [],
        isCheckType: [],
        isDateType: [],
    };

    var tableOptionsTempOut2 = {
        iconButton: {
            buttons: [

                {

                    icon: "fa fa-pencil btnPerfectGridEdit",

                    action: function () {

                        let savedData = $(this).closest('tr').data('pData')
                        console.log('', savedData);


                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');

                        let indexname = tableKey + 'index';
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {

                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }

                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }


                        });



                    }
                },

                {

                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);

                        }
                        else {

                            $thistbl.remove();
                        }

                        $("#btnresetMtrl").click();
                        calcsalpttl($tablecontainer);

                    }
                },
            ]
        },

        onlyShowColumn: [],
        hideColumn: [],
        serialNo: true,
        renameHeader: { "FK_ProjectResources_d": "Resource Type", "Quantity": "Quantity1R", "ResourceAmount": "Amount1R", "TotalAmount": "Total Amount1R" },
        rowAttribute: [],
        isCheckType: []
    };


    //function calcsalpttl(ele) {
    //    debugger
    //    let $thisForm = $(ele).closest('[perfect-class="form"]');

    //        let Amount = 0;
    //        let qtys = 0;
    //    let NetAmount = 0;
    //    let sum = 0;
    //    let netsum = 0;
        
    //    qtys = $thisForm.find('[name="Quantity"]').val() == "" ? "0" : $thisForm.find('[name="Quantity"]').val();
    //    Amount = $thisForm.find('[name="ResourceAmount"]').val() == "" ? "0" : $thisForm.find('[name="ResourceAmount"]').val();

       

    //    $thisForm.find('[perfect-tempTable="MaterialDetailsTable"]').find('table>tbody').find('tr').each(function (index, ele) {


    //        console.log('elee',ele)

    //        sum = (qtys) * (Amount);

    //        netsum = netsum + sum;
    //        alert(netsum)

    //        $thisForm.find('[name=PrmTotalAmount]').val(parseFloat(netsum).toFixed(2));



    //    });
    //}


    function calcsalpttl() {
        debugger
        let $thisForm = $('[perfect-class="form"]');

        var netsum = 0;

        $thisForm.find('[perfect-tempTable="MaterialDetailsTable"]').find('table>tbody').find('tr').each(function (index, ele) {
            debugger
            var $row = $(ele);
            //sum = sum + parseFloat($(ele).find('.VtlDetAmount').text());

            var quantity = parseFloat($row.find('.Quantity').text());
            var amount = parseFloat($row.find('.ResourceAmount').text());

            if (!isNaN(quantity) && !isNaN(amount)) {
                var sum = quantity * amount;
                netsum += sum;
                //alert(netsum);
            }
        });
   
        $thisForm.find('[name=PrmTotalAmount]').val(netsum.toFixed(2));
    }
    function calcsall(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        debugger
        //let $thisForm = $('[perfect-class="form"]');
        quantity = $thisForm.find('[name="Quantity"]').val() == "" ? "0" : $thisForm.find('[name="Quantity"]').val();
        resamt = $thisForm.find('[name="ResourceAmount"]').val() == "" ? "0" : $thisForm.find('[name="ResourceAmount"]').val();
        var totalsum = 0;       
        var totalsum = quantity * resamt; 

        $thisForm.find('[name=TotalAmount]').val(totalsum.toFixed(2));
    }

   
    function ComDetailsTable_Fill(ele, tkey, data, tableOptionsTempOut2) {
        
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableOptionsTempfill = tableOptionsTempOut2;
        let insertData = []
        let tableKey = tkey;
        let indexname = tkey + 'index';
        tableOptionsTempfill.rowAttribute.push(indexname);
        tableOptionsTempfill.hideColumn.push(indexname);
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        console.log($tblcontainer, '$tblcontainer')
        console.log(data,'data>>')
        $.each(data, function (keyOne, valOne) {

            let pData = {};

            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                debugger
                //console.log('tfhyrtname', nameAttr)
                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {
                        // tableOptionsTempfill.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTempfill.hideColumn.push(nameAttr);
                        //displat text of select
                        pData[nameAttr + '_d'] = $this.find('[value="' + valOne[nameAttr] + '"]').text();
                        pData[nameAttr] = valOne[nameAttr];
                        console.log('select', $this.find('options[value="' + valOne[nameAttr] + '"]').text());

                    }
                    else if ($this.is('input')) {

                        let inputType = $this.attr('type').toLocaleLowerCase();
                        console.log(inputType)


                        if (inputType == 'date') {

                            if (valOne[nameAttr] == null) {
                                pData[nameAttr] = valOne[nameAttr];
                            }
                            else {
                                pData[nameAttr] = moment(valOne[nameAttr]).format('YYYY-MM-DD');
                            }


                        }
                        else {
                            if (nameAttr == "TotalAmount") {
                                pData[nameAttr] = getTotalAmount(valOne["Quantity"], valOne["ResourceAmount"]);
                            } else {
                                pData[nameAttr] = valOne[nameAttr];
                            }


                        }
                    }
                    else {
                        pData[nameAttr] = valOne[nameAttr];


                    }
                }



            });

            insertData.push(pData);


            //----

        });
        $tblcontainer.empty();
        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTempfill));
        // $tblcontainer.find('table').dataTable({ paging: true });


    }



    function createatable(ele, tkey, uniq = []) {
        
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut2;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let ValueExist = false;
        let isValidQty = true;
        let errorClass = '.temptableError';

        //make index
        console.log('check 1');

        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;
        if (thisactionIndex > 0) {
            //means update
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            //insert
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }//

        let prevData = [];
        $tblcontainer.find('table > tbody').find('tr').each(function () {
            if (isNew) {
                prevData.push($(this).data('pData'));
            }
            else {
                if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                    prevData.push($(this).data('pData'));
                }

            }

        })

        if (tableKey == "MaterialDetailsTable") {

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="FK_ProjectResources"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_ProjectResources"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_ProjectResources"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Resource Type');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_ProjectResources"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val() == null) {

                isValid = false;

                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Quantity');
            }
            else if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val() <= 0) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Quantity Should be Greater than Zero ');
            }

            else {

                let qty = 0;

                if (prevData.length != 0) {

                    var arrRslt =prevData.filter(a => a["ProductID"] == parseInt($thisForm.find('[name="ProductID"]').val()));
                    arrRslt.forEach(function (key, i) {
                        qty = parseInt(qty) + parseInt(key.Quantity);
                    });

                }
                $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
                if (parseInt($thisForm.find('[name="Quantity"]').val()) + qty > parseInt($thisForm.find('[name="Stock"]').val())) {
                    isValid = false;
                    console.log('false');
                    $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Quantity Cannot be Greater than Currennt Stock');
                }
                else {
                    $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
                }
            }

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ResourceAmount"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ResourceAmount"]').val() == null) {
                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="ResourceAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Amount');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="ResourceAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

        }

        let upperlimit = $thisForm.find('[name="RegDate"]').val();
        let lowerlimit = $thisForm.find('[name="NextActionDate"]').val();
        var enqDate = new Date(upperlimit);
        var nxtDate = new Date(lowerlimit);
        var today = new Date();




        
        if (unique.length > 0) {
            //getting previous data

            console.log('previous data', prevData);

            unique.forEach(function (key, i) {
                console.log('unid -> key:' + key + "| index :" + i);
                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                let $thisEleMode = $thisForm.find('[perfect-tempTable-' + tableKey + '= Mode]');
                let headerEleName = tableKey == "MaterialDetailsTable" ? $thisForm.find('[name="lblProduct"]').text() : $thisForm.find('[name="lblEmployee"]').text();
                let atname = $thisEle.attr('name');
                let mdName = $thisEleMode.attr('name');
                let cvalue; let cValueMode;

             
                //console.log('len')
                if ($thisEle.length != 0) {
                    let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    let errmessage = "Resource Type Already Exists"
                    //getting current value in cval


                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();
                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else { cvalue = $thisEle.val(); }
                    /////Mode///
                    if ($thisEleMode.is('select')) {
                        cValueMode = $thisEleMode.val();
                        //alert(cvalue);
                    }
                    else if ($thisEleMode.is('input')) {

                        let inputEleType = $thisEleMode.attr('type').toLocaleLowerCase();

                        if (inputEleType == 'checkbox') { cValueMode = $thisEleMode.is(':checked'); }
                        else if (inputEleType == 'hidden') { cValueMode = $thisEleMode.val(); }
                        else { cValueMode = $thisEleMode.val(); }
                    }
                    else { cValueMode = $thisEleMode.val(); }

                    // console.log('cvalue ->' + cvalue);

                    //searching in previous data
                    if (prevData.find(a => a[atname] == cvalue && a[mdName] == cValueMode)) {
                        // console.log('Search =>' + cvalue + '| attr :' + atname)
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });

        }

        console.log('isValid', isValid);

        if (isValid) {


            console.log('check 4.1');
            // this section make table column data
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
               
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('nameAttr', nameAttr);
                console.log('headerName', headerName);

                if ($this.is('select')) {
                    switch (headerName) {
                        case "FK_ProjectResources":
                            headerName = "Resource Type";
                            break;

                        default:
                            break
                    }
                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    insertData[nameAttr] = $this.val();

                    $this.val('').selectpicker('refresh');

                }
                else if ($this.is('input')) {

                    let inputType = $this.attr('type').toLocaleLowerCase();

                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp.isCheckType.push(nameAttr)
                        //clear field
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {

                        tableOptionsTemp.hideColumn.push(nameAttr)
                        insertData[nameAttr] = $this.val();

                        //clear field
                        $this.val('');
                    }
                    else if (inputType == 'date') {


                        insertData[nameAttr] = $this.val();

                        //clear field
                        $this.val('');
                    }

                    else {
                        let val = Number.parseFloat($this.val()).toFixed(2);
                        debugger
                        insertData[nameAttr] = val.toString();

                        //clear field
                        $this.val('');
                    }
                }

                else {
                    insertData[nameAttr] = $this.val();

                    //clear field
                    $this.val('');

                }



            });
            console.log('check 4.2', insertData);
            console.log('check 4.2 tableoption', tableOptionsTemp);
            if (isNew) {
                console.log('check 4.2.1');
                //this section nake table.table row
                if ($tblcontainer.find('table').length == 0) {
                    console.log('check 4.2.3');
                    console.log(insertData);
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                    //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false });
                }
                else {
                    console.log('check 4.2.1');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);


                }
                console.log('check 4.2.1');
            }
            else {
                console.log('check 4.3');
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                console.log('check 4.4');
                console.log('table', $tblcontainer.find('table'))
                console.log('check 4.5');
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);


                // $tblcontainer.find('table').dataTable({ paging: false,ordering:false });
            }

            console.log(insertData);
            //alert(1);
            // resetting the edit value
            $tblcontainer.attr('perfect-tempTable-action', 0);
        } calcsalpttl();
        console.log('check 5');

        //=>
       


       // $thisForm.find('[name=Mode]').val(1).selectpicker('refresh');
    }


    function MaterialDetailsclear(ele, tableKey) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');

    }

         function ResetButton(ele) {

             ResourceDetailsInitialLoad();

         }





    function AddResourceType(ele, actiontype) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let prevData = [];
        $thisForm.find('[perfect-tempTable="MaterialDetailsTable"]').find('table > tbody').find('tr').each(function () {

            prevData.push($(this).data('pData'));

        })
        getSessionValue(LastIDSessionKey, function (result) {
            LastID_Resource = result;
        });


        if ($thisForm.valid() && prevData.length != 0) {
            if (checkdatewithLDdate(ele)) {


                $(ele).prop('disabled', true);

                console.log("prevData >", prevData)
                var inputData = {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    'ID_ProjectResourceMarking': isNaN(parseInt($thisForm.find('[name=ID_ProjectResourceMarking]').val())) ? 0 : parseInt($thisForm.find('[name=ID_ProjectResourceMarking]').val()),
                    'PrmMarkingDate': $thisForm.find('[name=PrmMarkingDate]').val().trim(),
                    'Project': $thisForm.find('[name=Project]').val().trim(),
                    'FK_Project': $thisForm.find('[name=ProjectID]').val(),
                    'FK_ProjectStages':$thisForm.find('[name=StageID]').val(),
                    'PrmTotalAmount': $thisForm.find('[name=PrmTotalAmount]').val(),
                    'ResourceTypeDetails': prevData,
                    TransMode: ResourceTransMode,
                    LastID: LastID_Resource

                };
                clearSessionValue(LastIDSessionKey);
                let _ActionUrl = "";
                if (actiontype == "add") { _ActionUrl = "@Url.Action("AddResourceType", "ResourceDetails")"; } else { _ActionUrl = "@Url.Action("UpdateResourceType", "ResourceDetails")"; }

                $.ajax({
                    url: (actiontype == "add") ? "@Url.Action("AddResourceType", "ResourceDetails")" : "@Url.Action("UpdateResourceType", "ResourceDetails")",
                    type: "POST",
                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                    success: function (data) {

                        if (data.Process.IsProcess) {

                            $.each(data.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                            });
                            $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                            $thisForm.find('[perfect-ctype="input"]').val('');
                            $thisForm.find('[perfect-ctype="date"]').val('');
                            $thisForm.find('[perfect-ctype="hidden"]').val('');



                            let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                            if (onSuccess) {
                                ResourceDetailsInitialLoad();

                            }

                        }
                        else {
                            $.each(data.Process.Message, function (key, value) {
                                //toastr.warning(value, "Error");
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }
                    },
                    complete: function () {
                        $(ele).prop('disabled', false);
                    }

                });
            }

        else {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Trans Date should be greater than or equal to Project Date' });
        }



        }

        else {

            NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Please Fill all mandatory fields' });
        }
    }


 function getfunction(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        //var date = $thisForm.find('[name=CreateDateHid]').val();
        //document.getElementsByName("FollowupDate")[0].setAttribute('min', date);
        //document.getElementsByName("StatusDate")[0].setAttribute('min', date);
         
           ProjectID = $thisForm.find('[name=ProjectID]').val();
          console.log('123', ProjectID);
        let $placeDropdown = $thisForm.find('[name=StageID]');//<--- Will give place select html element
        $placeDropdown.empty();
        $placeDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');
        let inputData = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            FK_Project: $thisForm.find('[name=ProjectID]').val(),
        };
        $.ajax({
            url: "@Url.Action("GetProjectStages", "ProjectFollowUp")",
            type: "POST",

            data: inputData,
            dataType: "json",
            contentType: "application/x-www-form-urlencoded;charset=utf-8",
            success: function (ajaxOutput) {



                if (ajaxOutput.Process.IsProcess) {

                    $.each(ajaxOutput.Data, function (key, value) {
                        $placeDropdown.append($('<option/>', { "value": value.ProjectStagesID }).text(value.StageName)).selectpicker('refresh')
                    });


                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        //toastr.warning(value, "Error");
                        //NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': value });
                    });
                }
            }

        });

        //SetControl(ele);
    }

    function getTotalAmount(a, b) {
        debugger
        let a1 = Number.parseFloat(a);
        let b1 = Number.parseFloat(b);
        return (a1 * b1).toFixed(2).toString();
    }
    




</script>

