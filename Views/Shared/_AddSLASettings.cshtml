
@model PerfectWebERP.Models.SLASettingsModel.SLASettingsView

<style>
    input[type="number"]::-webkit-inner-spin-button,
    input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
</style>

<div class="card">
    <div class="card-header">
        <h4 class="card-title col-12">@ViewBag.PageTitle </h4>

        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>

    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">

                <div class="row">
                    @Html.AntiForgeryToken()



                    <div class="col-sm-12">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="row">

                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Effect Date</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="date" class="form-control perfectValidate_date" name="EffectDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" />

                                                </div><div class="invalid-feedback animated limit-checkst fadeInUp" style="display: block;"></div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Product</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="text" class="form-control" perfect-tempTable-SLASettings="ProdName" name="ProdName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                    <input type="hidden" perfect-tempTable-SLASettings="FK_Product" name="FK_Product" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <div class="input-group-append">
                                                        <button id="addEmployee-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this, 122, 'Product Details', [], SLATransMode)" Criterea1="0" Criterea2="0" BindName="ProdName" BindVal="FK_Product"></button>

                                                    </div>
                                                </div>
                                                <span class="temptableError"></span>
                                            </div>
                                        </div>
                                    </div>

                                    @*<div class="col-sm-3">
                                            <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                    <span perfect-class="formGroupLabel">Product</span>
                                                </label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <input type="text" class="form-control" perfect-tempTable-SLASettings="ProdName" name="ProdName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                        <input type="hidden" name="FK_Product" perfect-tempTable-SLASettings="FK_Product" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                          <div class="input-group-append">
                                                              <button id="addEmployee-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,122,'Product Details',[],[])" Criterea1="0" Criterea2="0" BindName="ProdName" BindVal="FK_Product" Function="2"></button>
                                                        </div>
                                                    </div>
                                                    <div class="text-danger temptableError"></div>
                                                </div>
                                            </div>
                                        </div>*@

                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Complaint</span>

                                            </label>
                                            <div class="col-sm-8">

                                                <select class="form-control" perfect-tempTable-SLASettings="FK_Complaint" name="FK_Complaint" id="id_complnt" perfect-selectButtonAction="testing" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">

                                                    <option value="">Please Select</option>
                                                    @if (!(Model.complaintLists is null))
                                                    {
                                                        foreach (var COML in Model.complaintLists)
                                                        {
                                                            <option value="@COML.ID_ComplaintList">@COML.CompntName</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Customer Category</span>

                                            </label>
                                            <div class="col-sm-8">

                                                <select class="form-control" name="FK_CustomerCategory" perfect-tempTable-SLASettings="FK_CustomerCategory" id="id_cuscat" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                    <option value="">Please Select</option>
                                                    @if (!(Model.customerCategories is null))
                                                    {
                                                        foreach (var ModeList in Model.customerCategories)
                                                        {
                                                            <option value="@ModeList.ID_CustomerCategory">@ModeList.CuscattyName</option>
                                                        }
                                                    }
                                                </select>

                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Period Type</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">

                                                <select class="form-control" name="FK_PeriodType" perfect-tempTable-SLASettings="FK_PeriodType" id="id_PType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                    <option value="">Please Select</option>
                                                    @if (!(Model.PeriodType is null))
                                                    {
                                                        foreach (var ModeList in Model.PeriodType)
                                                        {
                                                            <option value="@ModeList.ID_Mode">@ModeList.ModeName</option>
                                                        }
                                                    }
                                                </select>
                                                <span class="temptableError"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-3">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Period</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="number" class="form-control" oninput="truncateValue(this, 5)" onkeypress="return event.charCode >= 48 && event.charCode <= 57" perfect-tempTable-SLASettings="FK_Period" name="FK_Period" id="fk_period" perfect-class="formGroupControl" perfect-ctype="input" min="0" perfect-css="input" />
                                                </div>
                                                <span class="temptableError"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-3">
                                        <button class="btn btn-primary1" type="button" id="idbutton1" data-toggle="tooltip" data-placement="top" data-html="true" title="Add Items" onclick="fn_SLASettingsTable(this,'SLASettings',['FK_Product'],tableOptionsTempOut)"><i class="fa fa-plus" aria-hidden="true"></i></button>

                                        <button class="btn btn-light1" id="refresh" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="clearsubtableproduct(this,'SLASettings')">
                                            <i class="fa fa-refresh" aria-hidden="true"></i>
                                        </button>
                                    </div>

                                    <div class="col-sm-12" style="padding: 25px;">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <div class="table-responsive" perfect-tempTable="SLASettings" id="SLATHead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                        </div>
                                    </div>
                                </div>


                            </div>

                        </div>
                    </div>
                    <div class="col-sm-12">

                        <div id="accordion-Two" class="accordion accordion-active-header">


                            <div class="accordion__header collapsed" id="MaterialDetails" data-target="#active-header_collapseTwo1" aria-expanded="true">
                                <span class="accordion__header--icon"></span>
                                <span class="accordion__header--text">Alert Settings</span>

                            </div>
                            <div id="active-header_collapseTwo1" class="collapse accordion__body" data-parent="#accordion-Two">
                                <div class="accordion__body--text">
                                    <div class="row">
                                        <div class="col-sm-12 " perfect-class="TempTableProduct">
                                            <br />
                                            <div class="row">

                                                <div class="col-sm-4">
                                                    <div class="form-group row" perfect-class="formGroup">
                                                        <label class="col-sm-4 col-form-label">
                                                            <span perfect-class="formGroupLabel">Branch Type</span>
                                                            <span class="text-danger">*</span>
                                                        </label>
                                                        <div class="col-sm-8">
                                                            <select class="form-control" name="BranchTypeID" perfect-tempTable-SLAAlertSettings="BranchTypeID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                                <option value="">Please Select </option>

                                                                @if (!(Model.BranchTypelists is null))
                                                                {
                                                                    foreach (var branchtypeList in Model.BranchTypelists)
                                                                    {
                                                                        <option value="@branchtypeList.BranchTypeID">@branchtypeList.BranchType</option>
                                                                    }
                                                                }
                                                            </select>
                                                            <span class="temptableError"></span>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-sm-4">
                                                    <div class="form-group row" perfect-class="formGroup">
                                                        <label class="col-sm-4 col-form-label">
                                                            <span perfect-class="formGroupLabel">User Group</span>
                                                            <span class="text-danger">*</span>
                                                        </label>
                                                        <div class="col-sm-8">
                                                            <select class="form-control" name="FK_UserGroup" perfect-tempTable-SLAAlertSettings="FK_UserGroup" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="fn_UserChnage(this.value)">
                                                                <option value="">Please Select </option>

                                                                @if (!(Model.UserRolelists is null))
                                                                {
                                                                    foreach (var userroleList in Model.UserRolelists)
                                                                    {
                                                                        <option value="@userroleList.UserRoleID">@userroleList.UserRole</option>
                                                                    }

                                                                }
                                                            </select>
                                                            <span class="temptableError"></span>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-sm-4">
                                                    <div class="form-group row" perfect-class="formGroup">
                                                        <label class="col-sm-4 col-form-label">
                                                            <span perfect-class="formGroupLabel">User</span>
                                                        </label>
                                                        <div class="col-sm-8">
                                                            <input type="hidden" class="form-control" perfect-tempTable-SLAAlertSettings="Users" name="Users" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />

                                                            <select class="form-control" name="FK_User" perfect-tempTable-SLAAlertSettings="FK_User" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">

                                                                <option value="">Please Select </option>

                                                            </select>
                                                            <span class="temptableError"></span>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-sm-4">
                                                    <div class="form-group row" perfect-class="formGroup">
                                                        <label class="col-sm-4 col-form-label">
                                                            <span perfect-class="formGroupLabel">Period Type</span>
                                                            <span class="text-danger">*</span>
                                                        </label>
                                                        <div class="col-sm-8">
                                                            <select class="form-control" name="FK_AlertPeriodType" perfect-tempTable-SLAAlertSettings="FK_AlertPeriodType" id="id_PType_Alert" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                                <option value="">Please Select</option>
                                                                @if (!(Model.PeriodType is null))
                                                                {
                                                                    foreach (var ModeList in Model.PeriodType)
                                                                    {
                                                                        <option value="@ModeList.ID_Mode">@ModeList.ModeName</option>
                                                                    }
                                                                }
                                                            </select>
                                                            <span class="temptableError"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-4">
                                                    <div class="form-group row" perfect-class="formGroup">
                                                        <label class="col-sm-4 col-form-label">
                                                            <span perfect-class="formGroupLabel">Period</span>
                                                            <span class="text-danger">*</span>
                                                        </label>
                                                        <div class="col-sm-8">
                                                            <div class="input-group">
                                                                <input type="number" class="form-control" oninput="truncateValue(this, 5)" onkeypress="return event.charCode >= 48 && event.charCode <= 57" perfect-tempTable-SLAAlertSettings="FK_AlertPeriod" name="FK_AlertPeriod" id="fk_period_Alert" perfect-class="formGroupControl" perfect-ctype="input" min="0" perfect-css="input" />
                                                            </div>
                                                            <span class="temptableError"></span>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-md-1">
                                                    <div class="form-check" perfect-class="formCheck">
                                                        <input type="checkbox" class="form-check-input" name="Chck_Sms" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox">
                                                        <span perfect-class="formCheckInputText">SMS</span>
                                                    </div>
                                                    <div class="form-check" perfect-class="formCheck">
                                                        <input type="checkbox" class="form-check-input" name="Chck_Email"  perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox">
                                                        <span perfect-class="formCheckInputText">Email</span>
                                                    </div>
                                                </div>
                                                <div class="col-md-1">
                                                    <div class="form-check" perfect-class="formCheck">
                                                        <input type="checkbox" class="form-check-input" name="Chck_WhtsAp" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox">
                                                        <span perfect-class="formCheckInputText">WhatsApp</span>
                                                    </div>
                                                    <div class="form-check" perfect-class="formCheck">
                                                        <input type="checkbox" class="form-check-input" name="Chck_Notification"  perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox">
                                                        <span perfect-class="formCheckInputText">Notification</span>
                                                    </div>
                                                </div>

                                                <div class="col-sm-1">
                                                    <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add Alert Settings" onclick="createAlerttable(this,'SLAAlertSettings',[''],tableOptionsAlertTempOut)"><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                                                    <button class="btn btn-light1" id="refresh_alert" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="SLAAlertDetailsclear(this,'SLAAlertSettings')">
                                                        <i class="fa fa-refresh" aria-hidden="true"></i>
                                                    </button>
                                                </div>

                                              


                                                <div class="col-sm-12" style="padding: 25px;">
                                                    <div class="form-group row" perfect-class="formGroup">
                                                        <div class="table-responsive" perfect-tempTable="SLAAlertSettings" id="SLATHeadY" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="col-sm-12">
                            <div class="form-group row" perfect-class="formGroup">
                                <div class="table-responsive" perfect-tempTable="MaterialDetailsTable" id="Material" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

            <input type="hidden" class="form-control" placeholder="" name="ID_SLASettings" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />

            <div class="card-footer text-right" perfect-class="formFooter">
                @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                {
                    <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_UpdateSLASettings(this,'update')"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                }

                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_UpdateSLASettings(this,'Add')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                <button type="button" class="btn btn-light" perfect-css="button" onclick="Reset()" name="reset">Clear</button>
            </div>


        </form>
    </div>

</div>


<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>
<script>

    (function () {
        jQuery("select").selectpicker();

    });
    $(document).ready(function () {

        initFunctions('form');

        let $thisForm = $(this).closest('[perfect-class="form"]');
        $('#active-header_collapseTwo1').addClass('collapse');
        $('#active-header_collapseTwo1').addClass('show');

    });

    var tableOptionsTempOut = {

        iconButton: {
            buttons: [
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",


                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';
                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');

                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }

                                else {

                                    $thisNode.val(savedData[pf_name]);
                                }

                            }
                            else {

                                $thisNode.val(savedData[pf_name]);
                            }


                        });



                    }

                },

                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                      
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            //$thistbl.dataTable({ paging: true, searchbtn: false });
                        }
                        else {
                            $thistbl.remove();
                           
                        } //$("#btnresetLg").click(); /*$('[name="LogTotAmount"]').val(0); $('[name="LogNetAmount"]').val(0);*/
                        $("#refresh").click();


                    }
                }

            ],


        },

        onlyShowColumn: ["ProdName", "FK_CustomerCategory_d", "FK_PeriodType_d", "FK_Period", "FK_Complaint_d"],
        hideColumn: ["FK_Product", ""],
        serialNo: true,
        renameHeader: { "ProdName": "Product", "FK_Complaint_d": "Compliant", "FK_CustomerCategory_d": "Customer Category", "FK_PeriodType_d": "Period Type","FK_Period":"Period" },
        rowAttribute: [],
        isCheckType: [],
        isDataType: [],
    };

    var tableOptionsAlertTempOut = {
        
        iconButton: {
            buttons: [
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';
                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);
                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {

                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                    }

                },

                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                       
                        debugger
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();

                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);

                            let AlertData = [];

                            $tablecontainer.find('table>tbody>tr').each(function () {
                                AlertData.push($(this).data('pData'));
                            });

                            if (AlertData.length <= 0) {
                                $tablecontainer.find('[name="Chck_Notification"]').prop('checked', false);
                                $tablecontainer.find('[name="Chck_WhtsAp"]').prop('checked', false);
                                $tablecontainer.find('[name="Chck_Email"]').prop('checked', false);
                                $tablecontainer.find('[name="Chck_Sms"]').prop('checked', false);
                            }
                        } else {
                            $thistbl.remove();
                            
                        }

                        $("#refresh_alert").click();
                    }
                }

            ],
        },

        onlyShowColumn: ["FK_UserGroup_d", "FK_User_d", "FK_AlertPeriod", "BranchTypeID_d", "FK_AlertPeriodType_d"],
        hideColumn: ["Chck_Notification", "Chck_WhtsAp", "Chck_Email", "Chck_Sms","FK_User"],
        serialNo: true,
        renameHeader: { "FK_AlertPeriod": "Period", "FK_UserGroup_d": "UserGroup", "FK_User_d": "User", "BranchTypeID_d": "Branch", "FK_AlertPeriodType_d": "Period Type","FK_User":"User"},
        rowAttribute: [],
        isCheckType: ["Chck_Notification", "Chck_WhtsAp", "Chck_Email","Chck_Sms"],
        isDataType: [],

    };

    function fn_SLASettingsTable(element, tkey, uniq, tableOptionsTempOut) {
        debugger

        let $thisForm = $(element).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let isValidratecheck = true;
        let errorClass = '.temptableError';


        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }


        if (tableKey == 'SLASettings') {

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="FK_PeriodType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_PeriodType"]').val == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_PeriodType"]').val == '') {
                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_PeriodType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Period Type');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_PeriodType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Period"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Period"]').val == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Period"]').val == '') {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Period"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Period greater than 0.');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Period"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }


            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Product"]').val() !=0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Complaint"]').val() != 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_CustomerCategory"]').val() != 0) {
                //isValid = true;

            }
            else {
                isValid = false;
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please Select Product or Complaint or Customer Category' });
            }


        }


        let prevData = [];
        $tblcontainer.find('table > tbody').find('tr').each(function () {
            if (isNew) {
                prevData.push($(this).data('pData'));
            }
            else {
                if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                    prevData.push($(this).data('pData'));
                }
            }

        })

        if (prevData.some(a => a['FK_Product'] === $('[name=FK_Product]').val() && a['FK_CustomerCategory'] === $('[name=FK_CustomerCategory]').val() && a['FK_Complaint'] === $('[name="FK_Complaint"]').val() )) {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Already Exists' });
            isValid = false;
        }




        if (isValid) {
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                if ($this.is('select')) {
                    switch (headerName) {
                        case "FK_Complaint":
                            headerName = "Complaint";
                            break;
                        case "FK_CustomerCategory":
                            headerName = "Customer Category";
                            break;
                        case "FK_PeriodType":
                            headerName = "Period Type";
                            break;

                        default:
                            break
                    }

                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    insertData[nameAttr] = $this.val();

                    $this.val('').selectpicker('refresh');
                }
                else if ($this.is('input')) {


                    let inputType = $this.attr('type').toLocaleLowerCase();

                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp.isCheckType.push(nameAttr)
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {
                        insertData[nameAttr] = $this.val();
                        $this.val('');

                    }

                    else {
                        insertData[nameAttr] = $this.val();

                        $this.val('');
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();

                    $this.val('');
                }
            });

            if (isNew) {
                if ($tblcontainer.find('table').length == 0) {
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                }
                else {
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                }
            }
            else {
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
            }

            $tblcontainer.attr('perfect-tempTable-action', 0);
            //$thisForm.find('[name="AldAmountTo"]').attr('readonly', true);
        }


    }


    function createAlerttable(element, tkey, uniq, tableOptionsAlertTempOut) {
        debugger

        let $thisForm = $(element).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer1 = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp1 = tableOptionsAlertTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let isValidratecheck = true;
        let errorClass = '.temptableError';


        let lastIndex = ($tblcontainer1.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer1.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer1.attr('perfect-tempTable-action')) ? parseInt($tblcontainer1.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp1.rowAttribute.push(indexname);
        tableOptionsTemp1.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            insertData[indexname] = lastIndex + 1;
            $tblcontainer1.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }


        if (tableKey == 'SLAAlertSettings') {

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="BranchTypeID"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="BranchTypeID"]').val == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="BranchTypeID"]').val == '') {
                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="BranchTypeID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Branch Type');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="BranchTypeID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="FK_UserGroup"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_UserGroup"]').val == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_UserGroup"]').val == '') {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_UserGroup"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select User Group');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_UserGroup"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }


            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="FK_AlertPeriodType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_AlertPeriodType"]').val == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_AlertPeriodType"]').val == '') {
                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_AlertPeriodType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Period Type');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_AlertPeriodType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="FK_AlertPeriod"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_AlertPeriod"]').val == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_AlertPeriod"]').val == '') {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_AlertPeriod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Period greater than 0.');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_AlertPeriod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }


        }


        let prevData = [];
        $tblcontainer1.find('table > tbody').find('tr').each(function () {
            if (isNew) {
                prevData.push($(this).data('pData'));
            }
            else {
                if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                    prevData.push($(this).data('pData'));
                }
            }

        })

        if (prevData.some(a => a['BranchTypeID'] === $('[name=BranchTypeID]').val() && a['FK_UserGroup'] === $('[name=FK_UserGroup]').val())) {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Already Exists' });
            isValid = false;
        }




        if (isValid) {
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                if ($this.is('select')) {
                    switch (headerName) {
                        case "FK_UserGroup":
                            headerName = "User Group";
                            break;
                        case "FK_User":
                            headerName = "User";
                            break;
                        case "FK_AlertPeriodType":
                            headerName = "Period Type";
                            break;
                        case "BranchTypeID":
                            headerName = "Brand Type";

                        default:
                            break
                    }

                    tableOptionsTemp1.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp1.hideColumn.push(nameAttr)
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    insertData[nameAttr] = $this.val();

                    $this.val('').selectpicker('refresh');
                }
                else if ($this.is('input')) {


                    let inputType = $this.attr('type').toLocaleLowerCase();

                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp1.isCheckType.push(nameAttr)
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {
                        insertData[nameAttr] = $this.val();
                        $this.val('');

                    }

                    else {
                        insertData[nameAttr] = $this.val();

                        $this.val('');
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();

                    $this.val('');
                }
            });

            if (isNew) {
                if ($tblcontainer1.find('table').length == 0) {
                    $tblcontainer1.append(pft_table_createtable([insertData], tableOptionsTemp1));
                }
                else {
                    let table = $tblcontainer1.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer1.find('table'), insertData, tableOptionsTemp1);
                }
            }
            else {
                let table = $tblcontainer1.find('table').DataTable()
                table.destroy()
                pft_table_replaceTableRow($tblcontainer1.find('table'), updateCond, insertData, tableOptionsTemp1);
            }

            $tblcontainer1.attr('perfect-tempTable-action', 0);
            //$thisForm.find('[name="AldAmountTo"]').attr('readonly', true);
        }

    }



    function clearsubtableproduct(ele, tablekey) {


        let $thisform = $(ele).closest('[perfect-class="form"]');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');
        let errorClass = '.temptableError';
        $thisform.find('[perfect-tempTable-' + 'SLASettings' + '=""]').closest('[perfect-class="formGroup"]').find(errorClass).text('');

        let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);
    }
    function SLAAlertDetailsclear(ele, tablekey) {

        let $thisform = $(ele).closest('[perfect-class="form"]');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');
        let errorClass = '.temptableError';
        $thisform.find('[perfect-tempTable-' + 'SLASettings' + '=""]').closest('[perfect-class="formGroup"]').find(errorClass).text('');

        let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);
    }

    function Reset() {
        SLASettings_initLoad();
    }

    function fn_UpdateSLASettings(ele, actiontype) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let isValid = true;
        if ($thisForm.valid()) {

            let ItemData = [];

            $thisForm.find('[perfect-tempTable="SLASettings"]').find('table>tbody').find('tr').each(function () {

                ItemData.push($(this).data('pData'));
            });

            let AlertData = [];

            $thisForm.find('[perfect-tempTable="SLAAlertSettings"]').find('table>tbody').find('tr').each(function () {
                AlertData.push($(this).data('pData'));
            });

            let $CheckNot = $thisForm.find('[name="Chck_Notification"]');
            let $CheckWhat = $thisForm.find('[name="Chck_WhtsAp"]');
            let $CheckEmail = $thisForm.find('[name="Chck_Email"]');
            let $CheckSms = $thisForm.find('[name="Chck_Sms"]');

            if (AlertData.length > 0) {
                if ($CheckNot.prop('checked') || $CheckWhat.prop('checked') || $CheckEmail.prop('checked') || $CheckSms.prop('checked')) {
                    isValid = true;

                } else {
                    isValid = false;
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': ' Please select at least one option(Sms, WhatsApp, Email, or Notification.' });

                }
            } 

            if (isValid) {
                if (ItemData.length != 0) {

                    var inputData = {
                        'TransMode': SLATransMode,
                        'EffectDate': $thisForm.find('[name="EffectDate"]').val(),
                        'SLASettingsDetails': ItemData,
                        'FK_SLASettings': $thisForm.find('[name="ID_SLASettings"]').val(),
                        AlerSettingstData: AlertData,
                        Chck_Notification: $thisForm.find('[name="Chck_Notification"]').is(":checked") == true ? "1" : "0",
                        Chck_WhtsAp: $thisForm.find('[name="Chck_WhtsAp"]').is(":checked") == true ? "1" : "0",
                        Chck_Email: $thisForm.find('[name="Chck_Email"]').is(":checked") == true ? "1" : "0",
                        Chck_Sms: $thisForm.find('[name="Chck_Sms"]').is(":checked") == true ? "1" : "0",
                    }

                    let _ActionUrl = "";
                    if (actiontype == "Add") { _ActionUrl = "@Url.Action("AddSLASettings", "SLASettings")"; } else { _ActionUrl = "@Url.Action("UpdateSLASettings", "SLASettings")"; }

                    $.ajax({
                        url: (actiontype == "Add") ? "@Url.Action("AddSLASettings", "SLASettings")" : "@Url.Action("UpdateSLASettings", "SLASettings")",
                        type: "POST",
                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (data) {

                            if (data.Process.IsProcess) {
                                $.each(data.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                });
                                $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                $thisForm.find('[perfect-ctype="input"]').val('');
                                $thisForm.find('[perfect-ctype="date"]').val('');
                                $thisForm.find('[perfect-ctype="hidden"]').val('');

                                let onSuccess = $thisForm.attr('perfect-onFormSuccess');
                                if (onSuccess) {
                                    SLASettings_initLoad();
                                }
                            }
                            else {
                                $.each(data.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                        },

                    });
                }
                else {
                    NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Please Enter Atleast One SLA Settings Data.!!!' });
                }
            }
            else {

            }

        }

    }


    function truncateValue(input, maxLength) {
        if (input.value.length > maxLength) {
            input.value = input.value.slice(0, maxLength);
        }
    }


    function fn_fillSLASettings(ele, tkey, data, tableOptionsAlertTempOutReturn) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableOptionsTempfill = tableOptionsAlertTempOutReturn;
        let insertData = []
        let tableKey = tkey;
        let indexname = tkey + 'index';
        tableOptionsTempfill.rowAttribute.push(indexname);
        tableOptionsTempfill.hideColumn.push(indexname);
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $.each(data, function (keyOne, valOne) {

            let pData = {};

            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('tfhyrtname', nameAttr)
                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {

                        // tableOptionsTempfill.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTempfill.hideColumn.push(nameAttr);
                        //displat text of select
                        pData[nameAttr + '_d'] = $this.find('[value="' + valOne[nameAttr] + '"]').text();
                        pData[nameAttr] = valOne[nameAttr];
                        console.log('select', $this.find('options[value="' + valOne[nameAttr] + '"]').text());

                    }
                    else if ($this.is('input')) {

                        let inputType = $this.attr('type').toLocaleLowerCase();
                        console.log(inputType)


                        if (inputType == 'date') {

                            if (valOne[nameAttr] == null) {
                                pData[nameAttr] = valOne[nameAttr];
                            }
                            else {
                                pData[nameAttr] = moment(valOne[nameAttr]).format('YYYY-MM-DD');
                            }


                        }
                        else {
                            pData[nameAttr] = valOne[nameAttr];


                        }
                    }
                    else {
                        pData[nameAttr] = valOne[nameAttr];


                    }
                }



            });

            insertData.push(pData);


            //----

        });
        $tblcontainer.empty();
        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTempfill));
        // $tblcontainer.find('table').dataTable({ paging: true });
    }

    function fn_UserChnage(ele) {
        debugger
        let $thisForm = $('[perfect-class="form"]');
        $thisForm.find('[name="FK_User"]').val(0);
        $thisForm.find('[name="FK_User"]').val("");
        let $placeDropdown = $thisForm.find('[name=FK_User]');//<--- Will give place select html element
        $placeDropdown.empty();
        $placeDropdown.append($('<option/>', { "value": '' }).text('Please select')).selectpicker('refresh');
        
        let $FK_UserRoleVal = ele;

    var inputData = {
        FK_UserRole: $FK_UserRoleVal
    };

    $.ajax({
        url: "@Url.Action("GetUser", "SLASettings")", 
        type: "POST",
        data: inputData,
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
        success: function (data) {
            debugger
            if (data.Process.IsProcess) {
                debugger
                $.each(data.Data, function (key, value) {
                    $placeDropdown.append($('<option/>', { "value": value.FK_User}).text(value.Users)).selectpicker('refresh')
                });
                       
                if ($placeDropdown.attr('perfect-onloadSelect')) {
                    $placeDropdown.val($placeDropdown.attr('perfect-onloadSelect')).selectpicker('refresh')
                }

            }
        },
    });
    }


    var tableOptionsAlertTempOutReturn = {

        iconButton: {
            buttons: [
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';
                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);
                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {

                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                        //fn_UserChnage(savedData.FK_UserGroup);
                        //alert(savedData.FK_User)
                        $('[name="FK_User"]').val(savedData.FK_User);
                      
                        $('[name="Users"]').val(savedData.Users);

                        let $placeDropdown = $thisForm.find('[name=FK_User]');//<--- Will give place select html element
                        $placeDropdown.empty();
                        $placeDropdown.append($('<option/>', { "value": savedData.FK_User }).text(savedData.Users)).selectpicker('refresh');
                    }

                },

                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                       
                        debugger
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();

                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);

                            let AlertData = [];

                            $tablecontainer.find('table>tbody>tr').each(function () {
                                AlertData.push($(this).data('pData'));
                            });

                            if (AlertData.length <= 0) {
                                $tablecontainer.find('[name="Chck_Notification"]').prop('checked', false);
                                $tablecontainer.find('[name="Chck_WhtsAp"]').prop('checked', false);
                                $tablecontainer.find('[name="Chck_Email"]').prop('checked', false);
                                $tablecontainer.find('[name="Chck_Sms"]').prop('checked', false);
                            }
                        } else {
                            $thistbl.remove();
                           
                        }

                        $("#refresh_alert").click();
                    }
                }

            ],
        },

        onlyShowColumn: ["FK_UserGroup_d", "FK_AlertPeriod", "BranchTypeID_d", "FK_AlertPeriodType_d", "Users"],
        hideColumn: ["Chck_Notification", "Chck_WhtsAp", "Chck_Email", "Chck_Sms", "FK_User","FK_User_d" ],
        serialNo: true,
        renameHeader: { "FK_AlertPeriod": "Period", "FK_UserGroup_d": "UserGroup", "BranchTypeID_d": "Branch", "FK_AlertPeriodType_d": "Period Type", "Users":"User" },
        rowAttribute: [],
        isCheckType: ["Chck_Notification", "Chck_WhtsAp", "Chck_Email", "Chck_Sms"],
        isDataType: [],

    };


    function fn_fillSLAAlert(ele, tkey, data, tableOptionsTempOut) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableOptionsTempfill = tableOptionsTempOut;
        let insertData = []
        let tableKey = tkey;
        let indexname = tkey + 'index';
        tableOptionsTempfill.rowAttribute.push(indexname);
        tableOptionsTempfill.hideColumn.push(indexname);
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $.each(data, function (keyOne, valOne) {

            let pData = {};
            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {
                        switch (headerName) {
                            case "FK_UserGroup":
                                headerName = "User Group";
                                break;
                            case "FK_User":
                                headerName = "User";
                                break;
                            case "FK_AlertPeriodType":
                                headerName = "Period Type";
                                break;
                            case "BranchTypeID":
                                headerName = "Brand Type";

                            default:
                                break
                        }
                        tableOptionsTempfill.hideColumn.push(nameAttr);
                        //displat text of select
                        pData[nameAttr + '_d'] = $this.find('[value="' + valOne[nameAttr] + '"]').text();
                        pData[nameAttr] = valOne[nameAttr];
                        console.log('select', $this.find('options[value="' + valOne[nameAttr] + '"]').text());
                    }
                    else if ($this.is('input')) {

                        let inputType = $this.attr('type').toLocaleLowerCase();
                        console.log(inputType)
                        if (inputType == 'date') {

                            if (valOne[nameAttr] == null) {
                                pData[nameAttr] = valOne[nameAttr];
                            }
                            else {
                                pData[nameAttr] = moment(valOne[nameAttr]).format('YYYY-MM-DD');
                            }
                        }
                        else {
                            pData[nameAttr] = valOne[nameAttr];

                        }
                    }
                    else {
                        pData[nameAttr] = valOne[nameAttr];

                    }
                }
                
            });
            insertData.push(pData);
        });
        $tblcontainer.empty();
        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTempfill));
    }


</script>