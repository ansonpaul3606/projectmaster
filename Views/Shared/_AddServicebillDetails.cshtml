
@model PerfectWebERP.Models.ServiceBillDetailsModel.Servicebillview



<div class="card">
    <div class="card-header">
        <h4 class="card-title col-12">Service Bill Details</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>

    <div class="card-body">
        <form id="form" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()

                <div class="row">

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Bill Type</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">

                                <select class="form-control perfectValidate_string" name="BillType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please Select </option>


                                    @if (!(Model.BillTypeListView is null))
                                    {
                                        foreach (var BillType in Model.BillTypeListView)
                                        {
                                            <option value="@BillType.BillTypeID">@BillType.BillType</option>
                                        }
                                    }
                                </select>

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Billing Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date" name="TransDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" onchange="datecheck(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>


                            </div>
                        </div>
                    </div>



                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Effected Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date" name="EffectDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" onchange="datecheckeff(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>


                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-from-label">
                                Ticket No.&nbsp;<span class="text-danger">*</span>
                            </label>

                            <div class="col-sm-8">
                                <div class="input-group">

                                    <input type="text" class="form-control perfectValidate_string TicketNo " name="TicketNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                    <input type="hidden" name="ID_FIELD" perfect-ctype="hidden" value="" />
                                    @*<input type="hidden" name="SecurityAmount" value="" />*@

                                    <div class="input-group-append">
                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this, 89, 'Ticket List', [],['ID_FIELD','Customer','SecurityAmount'])" Criterea1="BranchID" Criterea2="0" BindName="TicketNo" BindVal="ID_Ticket" Function="1"></button>

                                    </div> <div class="text-danger temptableError"></div>
                                </div>

                            </div>
                        </div>
                    </div>


                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Customer Name<span class="text-danger">*</span></span>

                            </label>
                            <div class="col-sm-8">
                                <input type="hidden" name="ID_Ticket" perfect-ctype="hidden" />
                                <input type="text" class="form-control perfectValidate_string" name="Customer" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="150" readonly/>

                            </div>
                        </div>
                    </div>


                </div>



                <div class="">

                    <div class="col-sm-12 " id="DivProductInformation" style="display:none">


                        <div class="card">
                            <div class="profile-personal-info" style="margin-bottom:-14px;">

                                <h4 class='text-primary'>Replaced Components</h4>
                            </div>
                            <div class="card-body" style="padding:0px">

                                <div class="table-responsive-sm" id="productdettable">

                                    <table class="table table-hover table-responsive-sm table-striped  text-black" id="ProductDetails">
                                        <thead class="bg-primary text-white">
                                            <tr>
                                                <th>Product</th>
                                                <th>Quantity</th>
                                                <th>MRP</th>
                                                <th>Sale Price</th>
                                                <th>Tax Amount</th>
                                                @*<th>Buy Back Amount</th>*@
                                                <th>Net Amount</th>


                                            </tr>
                                        </thead>
                                        <tbody id="ProductDetailsTbody">
                                            <tr id="0">
                                                @*
                                    <td colspan="8" style="text-align:center;">No Records...</td>*@
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="col-sm-12 " id="DivServiceInformation" style="display:none">

                        <div class="card">
                            <div class="profile-personal-info" style="margin-bottom:-14px;">

                                <h4 class='text-primary'>Service Information</h4>
                            </div>

                            <div class="card-body" style="padding:0px">
                                <div class="table-responsive-sm" id="servicedettable">


                                    <table class="table table-hover table-responsive-sm table-striped  text-black" id="ServiceDetails">
                                        <thead class="bg-primary text-white">
                                            <tr>

                                                <th style="display:none">ServiceID</th>
                                                <th>Service</th>
                                                <th>Service Cost</th>
                                                <th>Tax Amount</th>
                                                <th>Net amount</th>


                                            </tr>
                                        </thead>
                                        <tbody id="ServiceDetailsTbody">
                                            <tr id="0">
                                                @*
                                    <td colspan="4" style="text-align:center;">No Records...</td>*@
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>
                <hr />
                <div class="row">

                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Service Total</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control text-right" placeholder="" readonly name="SalBillTotal" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Product Total</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control text-right" placeholder="" readonly name="SalProductBillTotal" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Advanced Amount</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control text-right" placeholder="" readonly name="AdvancedAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Other Charges</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control text-right" name="OtherCharge" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                    <div class="input-group-append">
                                        <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-credit-card" type="button" perfect-css="button" onclick="ShowOtherCharges(this,0)"></button>
                                    </div>
                                    <div class="modal fade" perfect-class="formGroupModalOtherCharge" id="formGroupModalOtherCharge">
                                        <div class="modal-dialog modal-dialog-centered" role="document">
                                            <div class="modal-content  rounded-0">
                                                <div class="modal-header border-0">
                                                    <h5 class="modal-title">Other Charge Details</h5>
                                                    <button type="button" class="close" data-dismiss="modal">
                                                        <span>&times;</span>
                                                    </button>
                                                </div>
                                                <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                                                    @*<div class="table-responsive" style="max-height: 100%; height: 80%; overflow: auto;">*@
                                                    <table id="zero_configOthercharge" class="table mb-0  table-striped  text-black">
                                                        <thead class="bg-primary text-white">
                                                            <tr>
                                                                <th class="t-head">SlNo</th>
                                                                <th class="t-head" style="display:none">ID_OtherChargeType</th>
                                                                <th class="t-head">Type</th>
                                                                <th class="t-head">Trans Type</th>
                                                                <th class="t-head">Amount</th>

                                                            </tr>
                                                        </thead>
                                                        <tbody id="formGroupModalOtherChargebody"></tbody>
                                                        <tfoot>
                                                        </tfoot>
                                                    </table>
                                                    @*</div>*@
                                                    @*<div class="modal-body" id="formGroupModalTaxbody">
                                        </div>*@

                                                    <div class="modal-footer">
                                                        @*<button type="button" onclick="CreateProductCheckDescription(this);" class="btn btn-primary">Add</button>*@
                                                        <button type="button" class="btn btn-primary light" data-dismiss="modal" onclick="BindOtherChargeAmount(this)">Apply</button>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Discount</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control text-right" placeholder="" name="SalDiscount" onchange="roundof(this)" id="SalDiscount" perfect-class="formGroupControl" perfect-ctype="input" oninput="decimalpnt(this,'SalDiscount',3)" perfect-css="input" maxlength="12" />
                            </div>
                        </div>
                    </div>




                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Roundoff</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control text-right" placeholder="" readonly onchange="salroundoff(this)" name="SalRoundoff" id="SalRoundoff" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpntminus(this,'SalDiscount',3)" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Security Amount</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control text-right" placeholder="" readonly name="SecurityAmount" id="Secamt" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpntminus(this,'SalDiscount',3)" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3 SalAmt">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Net Amount</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control text-right" placeholder="" id="salnet" readonly name="SalNetAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3 BalAmt">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Balance Pay to Customer</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control text-right" placeholder="" id="balamt" readonly name="BalCusAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Bank</span>
                            </label>
                            <div class="col-sm-8">

                                <div class="input-group">
                                    <select class="form-control" name="BankID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                        <option value="">Please Select </option>


                                        @if (!(Model.BankList is null))
                                        {
                                            foreach (var Module in Model.BankList)
                                            {
                                                <option value="@Module.BankID">@Module.BankName</option>
                                            }
                                        }
                                    </select>

                                </div>
                                <div class="text-danger temptableError"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">Payment Method</label>
                            <div class="col-sm-5">
                                <div class="input-group">

                                    <div class="input-group-append">
                                        &nbsp;<button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-money" type="button" perfect-css="button" title="Add Payment Method" onclick="GetPaymentlists(this)"></button>

                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>


                    <div class="modal fade" perfect-class="formGroupModalpayment" id="formGroupModalpayment">
                        <div class="modal-dialog  modal-dialog-centered modal-md" role="document">
                            <div class="modal-content">
                                <div class="modal-header border-0">
                                    <h5 class="modal-title">Payment Method</h5>
                                    <button type="button" class="close" data-dismiss="modal">
                                        <span>&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                                    <div class="row">


                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">Method <span class="text-danger">*</span></label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <select class="form-control" perfect-tempTable-Payment="PaymentMethod" name="PaymentMethod" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                            <option value="">Please Select </option>


                                                            @if (!(Model.PaymentView is null))
                                                            {
                                                                foreach (var Module in Model.PaymentView)
                                                                {
                                                                    <option value="@Module.PaymentmethodID">@Module.Name</option>
                                                                }
                                                            }
                                                        </select>


                                                    </div>
                                                    <div class="text-danger temptableError"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">
                                                    <span perfect-class="formGroupLabel">Ref No.</span>

                                                </label>
                                                <div class="col-sm-8">

                                                    <div class="input-group">
                                                        <input type="text" class="form-control perfectValidate_string_nm" perfect-tempTable-Payment="Refno" name="Refno" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="250" />

                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">
                                                    <span perfect-class="formGroupLabel">Amount</span>
                                                    <span class="text-danger">*</span>
                                                </label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <input type="text" class="form-control text-right" perfect-tempTable-Payment="PAmount" id="PAmount" name="PAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'PAmount',3)" onchange="Pamount(this)" maxlength="12" />

                                                    </div>
                                                    <div class="text-danger temptableError"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-9">


                                        </div>
                                        <div class="col-sm-3 text-right">
                                            <div class="input-group">

                                                <div class="input-group-append">
                                                    <div>
                                                        <button type="button" class="btn btn-primary1 " onclick="createtable(this,'Payment',['PaymentMethod'],paytableOptionsTempOut)"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                        <button class="btn btn-light1" type="button" onclick="productclear(this,'Payment')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">
                                                    <span perfect-class="formGroupLabel" style="font-weight:500;">Bal. Amount :</span>

                                                </label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">

                                                        <label class="col-form-label">
                                                            <span perfect-class="formGroupLabel" style="font-weight:500;" name="BalAmt"></span>
                                                        </label>
                                                        @*<input type="text" class="form-control" perfect-temptable-payment="BalAmt" name="BalAmt" perfect-class="" perfect-ctype="input" perfect-css="input" readonly="" style="border:white;background:white;font-weight: 500;">*@
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">

                                                <div class="table-responsive" perfect-tempTable-Payment="" perfect-tempTable="Payment" id="Paymentdethead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                                <div class="text-danger temptableError"></div>

                                            </div>
                                        </div>


                                    </div>
                                    <div class="modal-footer">
                                        @*<button type="button" onclick="CreateProductCheckDescription(this);" class="btn btn-primary">Add</button>*@
                                        <button type="button" class="btn btn-primary light" onclick="Billttlnetchck(this)">Apply</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <input type="hidden" name="ID_ServiceBill" perfect-ctype="hidden" value="" />

            </div>

            <div class="card-footer text-right" perfect-class="formFooter">
                <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_SerbillForm_add(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                <button type="button" id="viewserinv" class="btn btn-info" perfect-css="button" onclick="ViewSerInvoice(this)" name="viewinv" style="display:none;">View Invoice</button>
                <button type="button" id="" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>



            </div>

        </form>
    </div>
</div>
     
<script>

    $(document).ready(function () {


    });
    function fillTableSales(ele, tkey, data, tableOptionsTempOut) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableOptionsTempfill = tableOptionsTempOut;
        let insertData = []
        let tableKey = tkey;
        let indexname = tkey + 'index';
        tableOptionsTempfill.rowAttribute.push(indexname);
        tableOptionsTempfill.hideColumn.push(indexname);
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $.each(data, function (keyOne, valOne) {

            let pData = {};

            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])
            //---

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('tfhyrtname', nameAttr)
                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {
                        // tableOptionsTempfill.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTempfill.hideColumn.push(nameAttr);
                        //displat text of select
                        pData[nameAttr + '_d'] = $this.find('[value="' + valOne[nameAttr] + '"]').text();
                        pData[nameAttr] = valOne[nameAttr];
                        console.log('select', $this.find('options[value="' + valOne[nameAttr] + '"]').text());

                    }
                    else if ($this.is('input')) {

                        let inputType = $this.attr('type').toLocaleLowerCase();
                        console.log(inputType)


                        if (inputType == 'date') {

                            if (valOne[nameAttr] == null) {
                                pData[nameAttr] = valOne[nameAttr];
                            }
                            else {
                                pData[nameAttr] = moment(valOne[nameAttr]).format('YYYY-MM-DD');
                            }


                        }
                        else {
                            pData[nameAttr] = valOne[nameAttr];


                        }
                    }
                    else {
                        pData[nameAttr] = valOne[nameAttr];


                    }
                }



            });

            insertData.push(pData);


            //----

        });
        $tblcontainer.empty();
        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTempfill));
        // $tblcontainer.find('table').dataTable({ paging: true });

    }


    function getfunction(ele) {
        clearvalue(ele);
        getServiceProductdetails(ele);
    }
    function fn_AddServiceRow(ele,data) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $ProductHtml = '';
       // let SumDataSer = 0;
        $.each(data, function (i, value) {

            let rowCount = (i + 1);
            $ProductHtml += "<tr id=" + rowCount + ">";
            $ProductHtml += "<td class='ServiceId' Style='Display:none'>" + value.ServiceId + "</td>";
            $ProductHtml += "<td class='Service'>" + value.Service + "</td>";
            $ProductHtml += "<td class='ServiceCost text-center'>" + value.ServiceCost + "</td>";
            $ProductHtml += "<td class='taxamt text-center'>" + value.TaxAmount + "</td>";
            $ProductHtml += "<td class='netamt text-center'>" + value.NetAmount + "</td>";
            $ProductHtml += "</tr>";
            //SumDataSer = SumDataSer + parseFloat(value.NetAmount);
            //$thisForm.find('[name="SalBillTotal"]').val(SumDataSer);
        })
        $('#ServiceDetailsTbody').append($ProductHtml);
    }

    function fn_AddProductRow(ele, data) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $ProductHtml1 = '';
      //  let SumData = 0;

        $.each(data, function (i, value) {
            let rowCount = (i + 1);
            $ProductHtml1 += "<tr id=" + rowCount + ">";
            $ProductHtml1 += "<td class='product'>" + value.Product + "</td>";
            $ProductHtml1 += "<td class='quantity'>" + value.Quantity + "</td>";
            $ProductHtml1 += "<td class='mrp text-center'>" + value.MRP + "</td>";
            $ProductHtml1 += "<td class='saleprice text-center'>" + value.SalePrice + "</td>";
            $ProductHtml1 += "<td class='Taxamnt text-center'>" + value.TaxAmount + "</td>";
            //$ProductHtml1 += "<td class='buyback text-center'>" + value.BuyBackAmount + "</td>";
            $ProductHtml1 += "<td class='Netamount text-center'>" + value.NetAmount + "</td>";
            $ProductHtml1 += "</tr>";
            //SumData = SumData + parseFloat(value.NetAmount);
            //$thisForm.find('[name="SalProductBillTotal"]').val(SumData);
        });
        $('#ProductDetailsTbody').append($ProductHtml1);

    }



    function getServiceProductdetails(ele) {

        $('#DivServiceInformation').hide();
        $('#DivProductInformation').hide();

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let InputPro = {
            'Mode': 1,
            'FK_TransactionID': $thisForm.find('[name="ID_FIELD"]').val()
        }
        console.log('in',InputPro);
        let pageUrl = '@Url.Action("GetServiceandProduct", "ServiceBillDetails")';
        $.ajax({
            url: pageUrl,
            type: "Post",
            data: InputPro,
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded;charset=utf-8',
            success: function (ajaxOut) {
                console.log('ajaxOut', ajaxOut)
                debugger

                //let $thisForm = $(ele).find('[perfect-class="form"]');
                $ProductHtml = '';

                if (ajaxOut) {

                    $('#ServiceDetailsTbody').empty();
                    let SumDataSer = 0;
                    if (ajaxOut.data.Data != null) {
                        //$.each(ajaxOut.Data, function (i, value) {

                        //    let rowCount = (i + 1);
                        //    $ProductHtml += "<tr id=" + rowCount + ">";
                        //    $ProductHtml += "<td class='ServiceId' Style='Display:none'>" + value.ServiceId + "</td>";
                        //    $ProductHtml += "<td class='Service'>" + value.Service + "</td>";
                        //    $ProductHtml += "<td class='ServiceCost'>" + value.ServiceCost + "</td>";
                        //    $ProductHtml += "<td class='taxamt'>" + value.TaxAmount + "</td>";
                        //    $ProductHtml += "<td class='netamt'>" + value.NetAmount + "</td>";
                        //    $ProductHtml += "</tr>";
                        //    SumDataSer = SumDataSer + parseFloat(value.NetAmount);
                        //    $thisForm.find('[name="SalBillTotal"]').val(SumDataSer);
                        //})
                        fn_AddServiceRow(ele, ajaxOut.data.Data);
                        $('#DivServiceInformation').show();
                    }
                    else {
                        $ProductHtml += "<tr id='0'><td class='norecord'colspan='4' style'text-align:center'>No Records..</td></tr>";

                    } $('#ServiceDetailsTbody').append($ProductHtml);


                   let $ProductHtml1 = '';
                    $('#ProductDetailsTbody').empty();
                    let SumData = 0;
                    if (ajaxOut.dataPro.Data != null) {
                        //$.each(ajaxOut.dataPro.Data, function (i, value) {
                        //    let rowCount = (i + 1);
                        //    $ProductHtml1 += "<tr id=" + rowCount + ">";
                        //    $ProductHtml1 += "<td class='product'>" + value.Product + "</td>";
                        //    $ProductHtml1 += "<td class='quantity'>" + value.Quantity + "</td>";
                        //    $ProductHtml1 += "<td class='mrp'>" + value.MRP + "</td>";
                        //    $ProductHtml1 += "<td class='saleprice'>" + value.SalePrice + "</td>";
                        //    $ProductHtml1 += "<td class='Taxamnt'>" + value.TaxAmount + "</td>";
                        //    $ProductHtml1 += "<td class='buyback'>" + value.BuyBackAmount + "</td>";
                        //    $ProductHtml1 += "<td class='Netamount'>" + value.NetAmount + "</td>";
                        //    $ProductHtml1 += "</tr>";
                        //    SumData = SumData + parseFloat(value.NetAmount);
                        //    $thisForm.find('[name="SalProductBillTotal"]').val(SumData);
                        //})
                        $('#DivProductInformation').show();
                        fn_AddProductRow(ele, ajaxOut.dataPro.Data);
                    }
                    else {
                        $ProductHtml1 += "<tr id='0'><td class='norecord'colspan='8' style'text-align:center'>No Records..</td></tr>";

                    } $('#ProductDetailsTbody').append($ProductHtml1);

                }
                else {
                    $.each(ajaxOut.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });

                    });


                }
                //roundof(ele);

            },
            complete: function () {
                $(ele).prop('disabled', false);
                fn_getdetails(ele);
            }
        });
    }

    function clearvalue(ele) {


        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[name="SalBillTotal"]').val(0);
        $thisForm.find('[name="SalProductBillTotal"]').val(0);

        $thisForm.find('[name="OtherCharge"]').val(0);
        $thisForm.find('[name="SalDiscount"]').val(0);

        $thisForm.find('[name="SalRoundoff"]').val(0);
        //$thisForm.find('[name="SecurityAmount"]').val(0);
        $thisForm.find('[name="SalNetAmount"]').val(0);
        $thisForm.find('[name="BalAmt"]').val(0);
        $thisForm.find('[name="BalCusAmount"]').val(0);
        $thisForm.find('[name="PAmount"]').val(0);




      }

    function datecheck(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let RegDate = $thisForm.find('[name="TransDate"]').val();

        RegDate = new Date(RegDate);
        RegDate.setHours(0, 0, 0, 0)

        let today = new Date();
        today.setHours(0, 0, 0, 0);

        if (RegDate > today) {
            $thisForm.find('[name="TransDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Entered date should be less than or equal to Todays date')
            return false;

        }
        else {
            $thisForm.find('[name="TransDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('');
            return true;
        }

    }

    function datecheckeff(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let effDate = $thisForm.find('[name="EffectDate"]').val();

        effDate = new Date(effDate);
        effDate.setHours(0, 0, 0, 0)

        let today = new Date();
        today.setHours(0, 0, 0, 0);

        if (effDate < today) {
            $thisForm.find('[name="EffectDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Entered date should be greater than or equal to Todays date')
            return false;

        }
        else {

            $thisForm.find('[name="EffectDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('');
            return true;
        }


    }

    var othrchargelst = [];


    function ShowOtherCharges(ele, mode) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');

        if ($thisForm.data('pOthrChgData')) {

            if ($thisForm.data('pOthrChgData').length > 0) {

                othrchargelst = $thisForm.data('pOthrChgData');
            }
            console.log('othrchargelst', othrchargelst);

        }

        BindChargeDetails(ele, mode)


    }



    var paytableOptionsTempOut = {
        iconButton: {
            buttons: [

                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';

                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);

                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');

                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }

                                else {

                                    $thisNode.val(savedData[pf_name]);
                                }

                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }


                        });



                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            //$thistbl.dataTable({ paging: true, searchbtn: false });
                        }
                        else {
                            $thistbl.remove();
                        }
                        BillAmountbind($tablecontainer);
                    }
                },
            ]
        },

        rowAttribute: [],
        onlyShowColumn: ['PAmount', 'Refno', 'PaymentMethod_d'],
        renameHeader: { "PAmount": "Amount1R", "Refno": "Ref No", "PaymentMethod_d": "Method" },
        hideColumn: ['BalAmt'],

        serialNo: true,

    };


       function BindChargeDetails(ele, mode) {

        var InputData =
        {
            TransMode: ServTransMode,
           }
           debugger

        $.ajax({
            url: "@Url.Action("GetOtherCharges", "ServiceBillDetails")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                if (ajaxOutput.OtherCharges.Process.IsProcess) {
                         var CheckListHTML = '';

                         if (ajaxOutput.OtherCharges.Data.length > 0) {

                             $.each(ajaxOutput.OtherCharges.Data, function (i, value) {

                                 let options = ''
                                     if (othrchargelst != '') {

                                         $.each(othrchargelst, function (key, value1) {

                                             if (value1.ID_OtherChargeType == value.ID_OtherChargeType) {

                                                 value.OctyAmount = value1.OctyAmount;
                                                 $.each(ajaxOutput.Transtypelist.Data, function (i, valuea) {
                                                     if (valuea.TransTypeID.toString() == value1.OctyTransType) {

                                                         options += '<option value=' + valuea.TransTypeID + ' selected="selected">' + valuea.TransType + '</option>'
                                                     }
                                                     else {
                                                         options += '<option value=' + valuea.TransTypeID + '>' + valuea.TransType + '</option>'
                                                     }
                                                 });
                                             }


                                         });

                                     }
                                     else
                                     {

                                         $.each(ajaxOutput.Transtypelist.Data, function (i, valuea) {
                                             options += '<option value=' + valuea.TransTypeID + '>' + valuea.TransType + '</option>'
                                         });
                                         //---

                                     }
                                 console.log('optionsl', options)
                                 let $dropdown = '<select class="form-control"name="selector" id="selector" >' + options + '</select>';
                                 CheckListHTML += "<tr>";
                                 CheckListHTML += "<td>" + value.SlNo + "</td>";
                                 CheckListHTML += "<td Class='jq_ID_OtherChargeType_td' Style='Display:none'>" + value.ID_OtherChargeType + "</td>";
                                 CheckListHTML += "<td Class='jq_Type_td'>" + value.OctyName + "</td>";
                                 CheckListHTML += "<td class='jq_TransType_td'>" + $dropdown + "</td>";
                                 CheckListHTML += "<td class='jq_OtherChagAmnt_td' ><input min='0'  class='form-control text-right' onkeypress='return isNumberKey(event)' type='number'  value='" + value.OctyAmount + "' ' /></td> /></td>";

                                 CheckListHTML += "</tr>";
                             })
                         }
                         else {
                             CheckListHTML += "<div class='form-group col-md-6'>";
                             CheckListHTML += "<div class='form-check mb-2'>";
                             CheckListHTML += "<label class='form-check-label' for='check1'>No Records...</label>";
                             CheckListHTML += "</div></div>"
                         }
                         //let $model = createSearchModalDOM();
                         //$model.modal.find('.modal-body').append(CheckListHTML);
                         //$model.show

                    $("#formGroupModalOtherChargebody").html(CheckListHTML)

                    if (mode == 0) {
                        $('#formGroupModalOtherCharge').modal({ backdrop: 'static', keyboard: false })
                     $('#formGroupModalOtherCharge').modal('show');
                    }
                    else {

                       $('#formGroupModalOtherCharge').modal('hide');
                    }


                     }
                else {

                    $.each(ajaxOutput.OtherCharges.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                  //  $('select').selectpicker('refresh');
                }
            });
            }



    function GetPaymentlists(ele) {
        $('#formGroupModalpayment').modal({ backdrop: 'static', keyboard: false })

        $('#formGroupModalpayment').modal('show');

    }

    function productclear(ele, tablekey) {

        let $thisform = $(ele).closest('[perfect-class="form"]');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');

        let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);

        if (tablekey = "Purchase") {
            $thisform.find('[name=prdbtn]').removeAttr("disabled", "disabled")

        }
        else if (tablekey = "Warranty") {

        }
        else if (tablekey = "Payment") {

        }
    }

    function createtable(ele, tkey, uniq = [], tableOptionsTempOut) {


        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;
        console.log('tableOptionsTemp', tableOptionsTemp)
        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';

        //make index
        console.log('check 1');

        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        console.log('tableOptionsTemp.rowAttribute', tableOptionsTemp.rowAttribute)
        let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {
            //means update
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            //insert
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }
        //
        if (tableKey == 'Warranty') {

            isValid = validwartdetail(ele, tableKey, errorClass, isValid);
        }
        else if (tableKey == 'Payment') {
            isValid = validpaymntdetail(ele, tableKey, errorClass, isValid);
        }
        else if (tableKey == 'Purchase') {
            isValid = validsaledetail(ele, tableKey, errorClass, isValid);
        }

        if (unique.length > 0) {
            //getting previous data
            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }

                }

            })
            console.log('previous data', prevData);

            unique.forEach(function (key, i) {
                console.log('unid -> key:' + key + "| index :" + i);
                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                // let headerEleName = $thisForm.find('[name="lblProName"]').text();
                let atname = $thisEle.attr('name');
                let cvalue;
                console.log('atname', atname);
                console.log('$thisEle.length', $thisEle.length);
                if ($thisEle.length != 0) {
                    console.log('len', $thisEle)
                    let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    let errmessage = key + " Already exits"

                    //getting current value in cval
                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();
                        //alert(cvalue);
                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();
                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); console.log('cvalue ->', cvalue); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else { cvalue = $thisEle.val(); }



                    //searching in previous data
                    if (prevData.find(a => a[atname] == cvalue)) {
                        // console.log('Search =>' + cvalue + '| attr :' + atname)
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });

        }

        console.log('isValid', isValid);

        if (isValid) {

            console.log('check 4.1');
            // this section make table column data
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('nameAttr', nameAttr);
                console.log('headerName', headerName);

                if ($this.is('select')) {

                    //tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    //displat text of select
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    //tableOptionsTemp.onlyShowColumn.push(nameAttr + '_d')
                    insertData[nameAttr] = $this.val();
                    //insertData[nameAttr] = $this.val();

                    $this.val('').selectpicker('refresh');


                }
                else if ($this.is('input')) {

                    insertData[nameAttr] = $this.val();
                    console.log('insertData[nameAttr]', insertData[nameAttr])
                    if (nameAttr == "prodtid") { }
                    else if (nameAttr == "stkid") { }
                    else {
                        $this.val('');
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();

                    $this.val('');
                }

            });
            console.log('check 4.2', insertData);
            console.log('check 4.2 tableoption', tableOptionsTemp);
            if (isNew) {
                console.log('check 4.2.1');
                //this section nake table.table row
                if ($tblcontainer.find('table').length == 0) {
                    console.log('check 4.2.3');
                    console.log(insertData);
                    console.log(',tableOptionsTemp', tableOptionsTemp)
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));

                    //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false });
                }
                else {
                    console.log('check 4.2.1');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);


                }

            }
            else {

                let table = $tblcontainer.find('table').DataTable()
                table.destroy()

                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);

            }

            console.log(insertData);
            //alert(1);
            // resetting the edit value
            $tblcontainer.attr('perfect-tempTable-action', 0);

            if (tableKey == 'Warranty') {

                BindWarrantyAmount(ele);
            }
            else if (tableKey == 'Payment') {
                BillAmountbind(ele);
            }
            else if (tableKey == 'Purchase') {
                $thisForm.find('[name=prdbtn]').removeAttr("disabled", "disabled")

                $thisForm.data({ pwarranty: warrantydetails });
                console.log('check 123', $thisForm.data('pwarranty'));
                $thisForm.data({ addpImageselect: $thisForm.data('pImageselect') });
                console.log('addpImageselect', $thisForm.data('addpImageselect'))
                BindBilldetails(ele);
                checkemi(this);
            }

        }


        console.log('check 5');
    }


    function validpaymntdetail(ele, tableKey, errorClass, isValid) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val() == null) {

            isValid = false;
            console.log('false', $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val());
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Payment Method');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val() < 1) {
            console.log('false', $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val());
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter a value greater than or equal to 1');
        }
        else {

            $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }


        return isValid;

    }


    function BillAmountbind(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');


        let balcus = $thisForm.find('[name="BalCusAmount"]').val();

        let netamt = "";
        if (balcus == 0) {
             netamt = $thisForm.find('[name="SalNetAmount"]').val() == "" ? "0" : $thisForm.find('[name="SalNetAmount"]').val();
        }
        else {
            netamt = $thisForm.find('[name="BalCusAmount"]').val == "" ? "0" : $thisForm.find('[name="BalCusAmount"]').val();
        }



        let billamt = 0;
        let bilamt = 0;

        if ($thisForm.find('[name=BalAmt]').text() == '') {
            bilamt = 0;
        }
        else {
            bilamt = netamt;
        }

        $('#Paymentdethead').find('tbody tr').each(function (index, ele) {
            billamt += parseFloat($(ele).find('.PAmount').text());

        });
        bilamt = parseFloat(bilamt) - billamt;

        $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));
        if (bilamt == 0) {

            return true;

        }
        else {

            return false;

        }
    }


    function decimalpnt(ele, id, range) {

        let input = $('#' + id);
        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
        input.on('keydown', function () {
            if (ele.value.includes('.')) {

            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.length == 9) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }


    function Pamount(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let amtp = $thisForm.find('[name="PAmount"]').val() == "" ? "0" : $thisForm.find('[name="PAmount"]').val();

        $thisForm.find('[name="PAmount"]').val(parseFloat(amtp).toFixed(2))
    }

    function Billttlnetchck(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let balamt = $thisForm.find('[name=BalAmt]').text();


        if (parseFloat(balamt) == 0) {
            $('#formGroupModalpayment').modal('hide');
            $thisForm.find('[perfect-tempTable="Payment"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
        }
        else {

            $thisForm.find('[perfect-tempTable="Payment"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Balance Amt. should be Zero');

        }
    }


    function BindOtherChargeAmount(ele) {
        console.log('inside binddatat fn')
        let $modal = $(ele).closest('.modal');
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let sum = 0;
        othrchargelst = [];
        $modal.find('table tbody').find('tr').each(function () {

            let value = parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val());;
            if ($(this).find('.jq_OtherChagAmnt_td').find('input').val() == '' || $(this).find('.jq_OtherChagAmnt_td').find('input').val() == null) {
                value = 0;
            }

            if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 0) {
                value = value * 0;
            }
            else if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 1) {
                value = value * -1;
            }
            else {
                value = value * 1;
            }
            sum = sum + value;

            let othrcharge = {
                ID_OtherChargeType: $(this).find('.jq_ID_OtherChargeType_td').text(),
                OctyTransType: $(this).find('.jq_TransType_td').find('select').val(),
                OctyAmount: parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val())
            };
            othrchargelst.push(othrcharge);
            $thisForm.data({ pOthrChgData: othrchargelst });
            console.log('othrchargelst', othrchargelst)

        });

        $thisForm.find('[name=OtherCharge]').val(sum);
        roundof(ele);
    }


    function roundof(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let biltl = 0;
        let otherchg = 0;
        let saldisc = 0;
        let salroundof = 0;
        let netat = 0;
        let advamt = 0;
        let netamt = 0;
        let downpayment = 0;
        let repro = 0;
        let scamt = 0;
        biltl = $thisForm.find('[name="SalBillTotal"]').val() == "" ? "0" : $thisForm.find('[name="SalBillTotal"]').val();
        repro = $thisForm.find('[name="SalProductBillTotal"]').val() == "" ? "0" : $thisForm.find('[name="SalProductBillTotal"]').val();
        otherchg = $thisForm.find('[name="OtherCharge"]').val() == "" ? "0" : $thisForm.find('[name="OtherCharge"]').val();
        saldisc = $thisForm.find('[name="SalDiscount"]').val() == "" ? "0" : $thisForm.find('[name="SalDiscount"]').val();
        scamt = $thisForm.find('[name="SecurityAmount"]').val() == "" ? "0" : $thisForm.find('[name="SecurityAmount"]').val();
        advamt = $thisForm.find('[name="AdvancedAmount"]').val() == "" ? "0" : $thisForm.find('[name="AdvancedAmount"]').val();
        //downpayment = $thisForm.find('[name="SoDownPayment"]').val() == "" ? "0" : $thisForm.find('[name="SoDownPayment"]').val();

        let Net = 0;
        let downpay = 0;
        let addnlamnt = 0;
        let Fk_finance;
        let additional = 0;
        let FK_FinancePlanType = 0;

        //$('#Salesetailshead').find('tbody tr').each(function (index, ele) {
        //    debugger
        //    Fk_finance = $(ele).attr('EMIProduct');
        //    FK_FinancePlanType = $(ele).attr('FK_FinancePlanType');

        //    if (Fk_finance == "true" || FK_FinancePlanType > 0) {
        //        downpay = downpay + parseFloat(($(ele).attr('downpay')));
        //        addnlamnt = addnlamnt + parseFloat($(ele).attr('AdditionalPay'));
        //    }
        //    else {
        //        downpay = downpay + parseFloat($(ele).find('.NetAmt').text());
        //    }
        //    Net = Net + parseFloat($(ele).find('.NetAmt').text());
        //});

        //$thisForm.find('[name="SoDownPayment"]').val(downpay.toFixed(2));
        //$thisForm.find('[name="SoAddnAmount"]').val(addnlamnt.toFixed(2));

        //if (($thisForm.find('[name="Supplier"]').val() == 2)) {
        //if (($thisForm.find('[name="Supplier"]').val() == 2)) {
        //    salroundof = Math.round(parseFloat(downpay) + parseFloat(otherchg) - parseFloat(saldisc)) - (parseFloat(downpay) + parseFloat(otherchg) - parseFloat(saldisc));
        //    netat = parseFloat(downpay) + parseFloat(otherchg) - parseFloat(saldisc) + parseFloat(salroundof);
        //    netamt = netat - parseFloat(advamt);
        //}
        ////Calculation
        //debugger
        salroundof = Math.round(parseFloat(biltl) + parseFloat(otherchg) + parseFloat(repro) - parseFloat(saldisc) - parseFloat(scamt)) - (parseFloat(biltl) + parseFloat(otherchg) + parseFloat(repro) - parseFloat(saldisc)- parseFloat(scamt));
            netat = parseFloat(biltl) + parseFloat(otherchg) + parseFloat(repro) - parseFloat(saldisc) + parseFloat(salroundof);
            netamt = netat - parseFloat(advamt);
            securityamt = netamt - scamt;

        console.log('netamt', Math.abs(securityamt));

        if (securityamt > 0) {

            $thisForm.find('.BalAmt').hide();
            $thisForm.find('.SalAmt').show();
            $thisForm.find('[name="BalCusAmount"]').val(0);

            $thisForm.find('[name=SalNetAmount]').val(securityamt.toFixed(2));

        }
        else {

            $thisForm.find('.SalAmt').hide();
            $thisForm.find('.BalAmt').show();
            $thisForm.find('[name=SalNetAmount]').val(0);
            $thisForm.find('[name="BalCusAmount"]').val(Math.abs(securityamt.toFixed(2)));

        }


        $thisForm.find('[name=SalRoundoff]').val(salroundof.toFixed(2));
        $thisForm.find('[name="OtherCharge"]').val(parseFloat(otherchg).toFixed(2));
        $thisForm.find('[name=SalDiscount]').val(parseFloat(saldisc).toFixed(2));
        //$thisForm.find('[name=SalNetAmount]').val(netamt.toFixed(2));
        let billamt = 0;
        let bilamt = 0;
        debugger
        //if ($thisForm.find('[name=BalAmt]').text() == '') {
        //    bilamt = 0;
        //}
        //else {
        //    bilamt = netamt;
        //}GetOtherCharges
        bilamt = Math.abs(securityamt);
        $('#Paymentdethead').find('tbody tr').each(function (index, ele) {
            billamt += parseFloat($(ele).find('.PAmount').text());

        });
        bilamt = parseFloat(bilamt) - billamt;

        $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));
        // $thisForm.find('[name=BalAmt]').text(netamt.toFixed(2));


    }


    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 46 || charCode > 57))
            return false;

        return true;
    }


    function salroundoff(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let salroundof = $thisForm.find('[name="SalRoundoff"]').val() == "" ? "0" : $thisForm.find('[name="SalRoundoff"]').val();
        if (salroundof != "" || salroundof != null) {
            $thisForm.find('[name=SalRoundoff]').val(parseFloat(salroundof).toFixed(2));

            let biltl = 0;
            let otherchg = 0;
            let saldisc = 0;

            let netat = 0;
            //let advamt = 0;
            let netamt = 0;
            let downpayment = 0;
            let repro = 0;
            let scamt = 0;
            biltl = $thisForm.find('[name="SalBillTotal"]').val() == "" ? "0" : $thisForm.find('[name="SalBillTotal"]').val();
            repro = $thisForm.find('[name="SalProductBillTotal"]').val() == "" ? "0" : $thisForm.find('[name="SalProductBillTotal"]').val();
            otherchg = $thisForm.find('[name="OtherCharge"]').val() == "" ? "0" : $thisForm.find('[name="OtherCharge"]').val();
            saldisc = $thisForm.find('[name="SalDiscount"]').val() == "" ? "0" : $thisForm.find('[name="SalDiscount"]').val();
            scamt = $thisForm.find('[name="SecurityAmount"]').val() == "" ? "0" : $thisForm.find('[name="SecurityAmount"]').val();

            advamt = $thisForm.find('[name="AdvancedAmount"]').val() == "" ? "0" : $thisForm.find('[name="AdvancedAmount"]').val();
            //downpayment = $thisForm.find('[name="SoDownPayment"]').val() == "" ? "0" : $thisForm.find('[name="SoDownPayment"]').val();

            if (($thisForm.find('[name="Supplier"]').val() == 2) && ($thisForm.find('[name="SoDownPayment"]').val() > 0)) {
                netat = parseFloat(downpayment) + parseFloat(otherchg) - parseFloat(saldisc) + parseFloat(salroundof);
                netamt = netat - parseFloat(advamt);
            }
            else {
                netat = parseFloat(biltl) + parseFloat(otherchg) + parseFloat(repro) - parseFloat(saldisc) + parseFloat(salroundof) - parseFloat(scamt);
                netamt = netat - parseFloat(advamt);
                console.log('netsalround',netamt)
            }

            $thisForm.find('[name=SalNetAmount]').val(netamt.toFixed(2));

            let billamt = 0;
            let bilamt = 0;

            if ($thisForm.find('[name=BalAmt]').text() == '') {
                bilamt = 0;
            }
            else {
                bilamt = netamt;
            }

            $('#Paymentdethead').find('tbody tr').each(function (index, ele) {
                billamt += parseFloat($(ele).find('.PAmount').text());

            });
            bilamt = parseFloat(bilamt) - billamt;

            $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));
            // $thisForm.find('[name=BalAmt]').text(netamt.toFixed(2));
        }
    }



    function fn_SerbillForm_add(ele) {
        debugger
        $(ele).prop('disabled', true);
        let $thisForm = $(ele).closest('[perfect-class="form"]');


        var tablerow = $("#ServiceDetailsTbody tr");
        var servicedetails = [];

        if (tablerow.length > 0) {

            $('#ServiceDetailsTbody tr').each(function (index, ele) {

                let ServiceId = $(this).find(".ServiceId").text();
                let service = $(this).find(".Service").text();
                let sercost = $(this).find(".ServiceCost").text();
                let txamnt = $(this).find(".taxamt").text();
                let netamnt = $(this).find(".netamt").text();

                var ary = { ServiceId: ServiceId, Service: service, ServiceCost: sercost, TaxAmount: txamnt, NetAmount: netamnt }

                servicedetails.push(ary);
                console.log('arry', ary);

            });
        }

        var protable = $('#ProductDetailsTbody tr');
        var productdetails = [];

        if (protable.length > 0) {
            $('#ProductDetailsTbody tr').each(function (index, ele) {

                let Product = $(this).find(".product").text();
                let Quantity = $(this).find(".quantity").text();
                let Mrp = $(this).find('.mrp').text();
                let SalP = $(this).find('.saleprice').text();
                let Taxamt = $(this).find('.Taxamnt').text();
                let buyb = $(this).find('.buyback').text();
                let Netam = $(this).find('.Netamount').text();

                var ArrPro = { Product: Product, Quantity: Quantity, MRP: Mrp, SalePrice: SalP, TaxAmount: Taxamt, BuyBackAmount: buyb, NetAmount: Netam }
                productdetails.push(ArrPro);
                console.log('par', ArrPro);

            })
        }




        if ($thisForm.valid()) {

            if (datecheck(ele)) {

                if (datecheckeff(ele)) {



                    if (BillAmountbind(ele)) {


                        let $thisForm = $(ele).closest('[perfect-class="form"]');
                        let $modal2 = $thisForm.find('#zero_configOthercharge');
                        let OtherCharge = [];
                        $modal2.find('tbody').find('tr').each(function () {

                            let OtChargeinfo = {};
                            OtChargeinfo['ID_OtherChargeType'] = $(this).find('.jq_ID_OtherChargeType_td').text();

                            OtChargeinfo['OctyTransType'] = $(this).find('.jq_TransType_td').find('select').val();
                            OtChargeinfo['OctyName'] = $(this).find('.jq_Type_td').text();
                            OtChargeinfo['OctyAmount'] = $(this).find('.jq_OtherChagAmnt_td').find('input').val();
                            console.log('OtChargeinfo', OtChargeinfo);
                            OtherCharge.push(OtChargeinfo);

                        });

                        let paymentdetails = [];
                        $thisForm.find('[perfect-tempTable="Payment"]').find('tbody').find('tr').each(function () {
                            paymentdetails.push($(this).data('pData'));
                        });
                        debugger
                        console.log('paymentdetails', paymentdetails)

                        let inputData = {
                            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                            'TransMode': ServTransMode,
                            'BillType': $thisForm.find('[name="BillType"]').val(),
                            'TransDate': $thisForm.find('[name="TransDate"]').val(),
                            'EffectDate': $thisForm.find('[name="EffectDate"]').val(),
                            'TicketNo': $thisForm.find('[name="ID_FIELD"]').val(),
                            'CustomerName': $thisForm.find('[name="Customer"]').val(),
                            'Servicedetails': servicedetails,
                            'Productdetails': productdetails,
                            'SalBillTotal': $thisForm.find('[name="SalBillTotal"]').val(),
                            'SalProductBillTotal': $thisForm.find('[name="SalProductBillTotal"]').val(),
                            'OtherCharge': $thisForm.find('[name="OtherCharge"]').val(),
                            'SalDiscount': $thisForm.find('[name="SalDiscount"]').val(),
                            'SalRoundoff': $thisForm.find('[name="SalRoundoff"]').val(),
                            'SalNetAmount': $thisForm.find('[name="SalNetAmount"]').val(),
                            'AdvancedAmount': $thisForm.find('[name="AdvancedAmount"]').val(),
                            'PaymentDetail': paymentdetails,
                            'OtherChgDetails': OtherCharge,
                            'SecurityAmount': $thisForm.find('[name="SecurityAmount"]').val(),
                            'BankID': $thisForm.find('[name="BankID"]').val(),
                            'BalCusAmount': $thisForm.find('[name="BalCusAmount"]').val()

                        }
                        console.log('input', inputData);
                        $.ajax({
                            url: "@Url.Action("AddServicebill", "ServiceBillDetails")",
                            type: "POST",
                            data: inputData,
                            dataType: "json",
                            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                            success: function (ajaxOutput) {

                                if (ajaxOutput.Process.IsProcess) {

                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                        debugger
                                        let FK_ServiceBill = ajaxOutput.Process.code;

                                        var Url = ('@Url.Action("GetServiceBillNo","Report")?FK_ServiceBill=' + FK_ServiceBill);

                                        popitup(Url);

                                    });


                                    let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                    if (onSuccess) {
                                        window[onSuccess]();
                                    }
                                }
                                else {
                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                    });

                                }
                            },
                            complete: function () {
                                $(ele).prop('disabled', false);
                            }
                        });

                    }
                    else {
                        $(ele).prop('disabled', false);
                        NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'In Payment Method Balance Amt. Should be  Zero ' });

                    }
                }
                else {
                    $(ele).prop('disabled', false);
                    NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'Effected Date  should be greater than or equal to Todays date ' });

                }
            }
            else {
                $(ele).prop('disabled', false);
                NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'Trans Date should be less than or equal to Todays date ' });

            }

            }
            else {
                $(ele).prop('disabled', false);


            }


    }
    function popitup(url) {
        debugger
        newwindow = window.open(url, 'name', 'height=1000,width=1000');
        if (window.focus) { newwindow.focus() }
        return false;
    }
    function ResetButton(ele) {

        $('.dataTable tr').removeClass("SelectForDelete");
        fn_Servicebill_loadAddForm()
    }

    function ViewSerInvoice(ele) {

                let $thisForm = $(ele).closest('[perfect-class="form"]');
                let FK_ServiceBill = $thisForm.find('[name="ID_ServiceBill"]').val();
        var Url = ('@Url.Action("GetServiceBillNo", "Report")?FK_ServiceBill=' + FK_ServiceBill);
        debugger
        popitup(Url);

    }

    function fn_getdetails(ele) {
      

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let InputPro = {
            'Mode': 3,
            'FK_TransactionID': $thisForm.find('[name="ID_FIELD"]').val()
        }
        console.log('in',InputPro);
        let pageUrl = '@Url.Action("GetServiceDetails", "ServiceBillDetails")';
        $.ajax({
            url: pageUrl,
            type: "Post",
            data: InputPro,
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded;charset=utf-8',
            success: function (ajaxOutData) {
                console.log('ajaxOutData', ajaxOutData)
                debugger

                if (ajaxOutData.Process.IsProcess) {

                    $thisForm.find('[name="SalBillTotal"]').val(ajaxOutData.Data[0].ServiceCharge);
                    $thisForm.find('[name="SalProductBillTotal"]').val(ajaxOutData.Data[0].ProductsCharge) ;
                    $thisForm.find('[name="AdvancedAmount"]').val(ajaxOutData.Data[0].AdvanceAmount);
                    $thisForm.find('[name="SalDiscount"]').val(ajaxOutData.Data[0].DiscountAmount) ;
                    $thisForm.find('[name="SecurityAmount"]').val(ajaxOutData.Data[0].SecurityAmount);

  

                    roundof(ele);




                } else {
                    $.each(ajaxOutData.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });

                    });
                }

                

            },
            complete: function () {
                $(ele).prop('disabled', false);
                
            }
        });
    }
    

</script>