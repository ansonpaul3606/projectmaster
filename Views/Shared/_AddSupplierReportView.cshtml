
<style>
    .Custominvalid {
        display: none;
        width: 100%;
        margin-top: 0.25rem;
        font-size: 80%;
        color: #FF6746;
    }

    .form-control1 {
        background: white;
        border: white;
    }

    .btn-group > .btn:not(:last-child), .btn-group > .btn-group:not(:last-child) > .btn {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        background-color: white;
        color: #e94560;
    }

    .btn-group > .btn:not(:first-child), .btn-group > .btn-group:not(:first-child) > .btn {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        background-color: white;
        color: #e94560;
    }

    .btn-primary:hover, .btn-primary:active {
        background-color: var(--primary);
        border-color: var(--primary);
    }

    .tableFixHead {
        overflow-y: auto; /* make the table scrollable if height is more than 200 px  */
        height: 400px; /* gives an initial height of 200px to the table */
    }

    .thead {
        position: sticky; /* make the table heads sticky */
        /*top: 0px;*/ /* table head will be placed from the top of the table and sticks to it */
    }

    .btn-nt:hover {
        outline: none;
    }

    .btn-export {
        /*//height:10px;*/
        background-color: #2aa2ad;
        color: white;
    }

    .div-export {
        float: right;
        margin-left: 3px;
        /*background-color:red;*/
        height: 41px;
        /*// width:90px;*/
    }

        .div-export:hover {
            color: white !important;
        }

    .btn-export :hover {
        color: white !important;
    }
</style>
<script src="~/Assets/Datatables/jquery.dataTables.min.js"></script>
<script src="~/Assets/Datatables/dataTables.buttons.min.js"></script>
<script src="~/Assets/Datatables/pdfmake.min.js"></script>
<script src="~/Assets/Datatables/vfs_fonts.js"></script>
<script src="~/Assets/Datatables/buttons.html5.min.js"></script>
<script src="~/Assets/Datatables/jszip.min.js"></script>
<link href="~/Assets/Datatables/buttons.dataTables.min.css" rel="stylesheet" />


<script src="~/Scripts/jspdf.min.js"></script>
<script src="~/Scripts/jspdf.plugin.autotable.min.js"></script>
<script src="~/Scripts/exportFile.js"></script>
<script src="~/Scripts/xlsx.min.js"></script>


<div class="card ">

    <div class="card-header">
        <div class="col-xl-4">
            <h4 class="card-title col-12">@ViewBag.PageTitle </h4>

        </div>

    </div>

    <div class="card-body Supplierreport">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="supplierreportsearch-body" id="filterid">
                @Html.AntiForgeryToken()
                <div class="row">


                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Report Type</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <select class="form-control perfectValidate_string " id="ID_Report" name="FK_Mode" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="Modechange(this)">
                                        <option value="">Please Select</option>
                                        <option value="1">Detailed</option>
                                        <option value="2">Non Detailed</option>
                                    </select>
                                </div>
                                <div class="text-danger temptableError"></div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3 DivAsOndate">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">

                                <span perfect-class="formGroupLabel">As On Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control ActionDate" id="AsonDate" data-id="AsonDate-error2" name="AsonDate" perfect-class="formGroupControl" max="2050-01-01" perfect-ctype="date" perfect-css="date"onchange="CheckAsOnDate()">
                                <div id="AsOnDate-error" class="text-danger temptableError"></div>
                            </div>
                        </div>
                    </div>
                    @*<div class="col-sm-6 DivAsOnDate filter">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">As On Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control ActionDate" id="AsonDate" data-id="AsonDate-error" name="AsonDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" onchange="CheckAsOnDate()">

                                <div id="AsOnDate-error" class="text-danger temptableError"></div>
                            </div>
                        </div>
                    </div>*@
                    <div class="col-sm-3 DivToDate">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">

                                <span perfect-class="formGroupLabel">From Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control  Action rptfilters" id="FromDate" data-id="FromDate-error" name="FromDate" perfect-class="formGroupControl" max="2050-01-01" perfect-ctype="date" perfect-css="date" onchange="checkLimit(this)">
                                <div id="FromDate-error" class="Custominvalid animated fadeInUp producterror" style="display: none;">Please Select From Date</div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3 DivToDate">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">

                                <span perfect-class="formGroupLabel">To Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" id="ToDate" class="form-control  Action rptfilters" name="ToDate" data-id="ToDate-error" perfect-class="formGroupControl" perfect-ctype="date" max="2050-01-01" onchange="checkLimit(this)" perfect-css="date" />
                                <div id="ToDate-error" class="Custominvalid animated fadeInUp producterror" style="display: none;">Please Select To Date</div>
                                @*<input type="date" class="form-control perfectValidate_date ToDate" id="ToDate" data-id="ToDate-error" name="ToDate" perfect-class="formGroupControl" max="2050-01-01" perfect-ctype="date" perfect-css="date" onchange="checkLimit(this)">*@
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Branch</span>
                                <span class="text-danger">*</span>
                                <input type="hidden" name="FK_BranchMode" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                            </label>
                            <div class="col-sm-8">

                                <div class="input-group">
                                    <select class="form-control" id="BranchID" name="BranchID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">
                                        @if (ViewBag.UsrrlAdmin)
                                        {
                                            <option value="0">All</option>
                                        }

                                        @if (!(Model.BranchList is null))
                                        {
                                            foreach (var branchList in Model.BranchList)
                                            {
                                                <option value="@branchList.BranchID">@branchList.Branch</option>
                                            }

                                        }


                                    </select>

                                </div>
                                <div class="text-danger temptableError"></div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3 DivSuppliertype">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Supplier Type</span>

                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string_nm" name="ID_SupplierType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please select</option>
                                    @if (!(Model.SupplierType is null))
                                    {
                                        foreach (var ST in Model.SupplierType)
                                        {
                                            <option value="@ST.ID_SupplierType">@ST.STName</option>
                                        }
                                    }
                                </select>

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3 Divcheck">
                        <div class="form-group row" perfect-class="formGroup">

                            <label class="col-sm-4 col-form-label">

                            </label>
                            <div class="col-sm-8">
                                <div class="form-check form-check-inline" perfect-class="formCheck">
                                    <label class="form-check-label" perfect-class="formCheckLabel">
                                        <input type="checkbox" class="form-check-input" name="IncludeAdvance" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox"><span perfect-class="formCheckInputText">IncludeAdvance</span>
                                    </label>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>

                <div class="col-sm-12 card-footer text-right" perfect-class="formFooter">
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="getgridout(this) "><i class="fa fa-refresh fa-spin loaderClass "></i>Show</button>
                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton();" name="reset">Clear</button>

                </div>
            </div>

        </form>
    </div>
    <div id="divReportSection">


    </div>
</div>



<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>

<script>


    (function () {


        jQuery('select').selectpicker();
    })();


    $(document).ready(function () {

        initFunctions('form');



    });
    function ResetButton() {
        SupplierreportInitialLoad();
    }

      function Getdepartmentdefault() {
        let $thisForm = $('[perfect-class="form"]');
        $.ajax({
            url: '@Url.Action("GetEmployeeLeadDefault", "ServiceReport")',
            type: "Get",
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                if (ajaxOutput.Process.IsProcess) {
                    //var stateModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['EmpID'] });
                    $.each(ajaxOutput.Data, function (key, value) {

                        console.log('>_ Search button > list click', value);

                        $thisForm.find('[name=BranchID]').val(value.ID_Branch).selectpicker('refresh');
                        $thisForm.find('[name=DepartmentID]').val(value.FK_Department).selectpicker('refresh');
                        $thisForm.find('[name=FK_BranchMode]').val(value.FK_BranchMode);

                        let Mode = $thisForm.find('[name=FK_BranchMode]').val();

                        if (parseFloat(Mode) == 1) {

                            $('#BranchID').prop('disabled', false);
                        }
                        else {
                            $('#BranchID').prop('disabled', true);
                        }


                    });




                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }

            },


        });
    }


    function Modechange(ele) {
        let $thisForm = $('[perfect-class="form"]');
       
        let mode = $thisForm.find('[name=FK_Mode]').val();
        if (mode == 2) {

            $('.DivFromDate').hide();
            $('.DivToDate').hide();
            $('.DivAsOndate').show();

        }
        else {
            $('.DivFromDate').show();
            $('.DivToDate').show();
            
            $('.DivAsOndate').hide();
        }
    }


    function checkLimit(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        //invalid-feedback
        let Fromdate = $thisForm.find('[name="FromDate"]').val();
        let Todate = $thisForm.find('[name="ToDate"]').val();

        Fromdate = new Date(Fromdate);
        Fromdate.setHours(0, 0, 0, 0)

        Todate = new Date(Todate);
        Todate.setHours(0, 0, 0, 0)

        if (Todate < Fromdate) {

            console.log('inside limit check if')
            $thisForm.find('[name="ToDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('To Date should be greater than  From Date')
            return false;
        }
        else {

            console.log('inside limit check else')
            $thisForm.find('[name="ToDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
            return true;
        }


    }

    function ValidateAddrepdetails(Rptval) {
        var Error = 0;
        let $inp;
        if (Rptval == 1) { $inp = $(".Action"); }

        
        else if (Rptval == 0) { $inp = $(".Action"); }
        let is_empty;
        $inp.each((i, el) => {


            if (!$('[name=' + $(el).attr('name') + ']').val() == undefined) {
                is_empty = false;

            }
            else {
                if ($('[name=' + $(el).attr('name') + ']').val() == 0 || $('[name=' + $(el).attr('name') + ']').val() == "") {
                    is_empty = true;
                }
                else {


                    is_empty = !$('[name=' + $(el).attr('name') + ']').val();
                }

            }
            let ErrorID = $(el).attr('data-id');

            if (ErrorID != undefined) {
                if (is_empty) {

                    $('#' + ErrorID).css('display', 'block');
                    Error++;

                }
                else if (!is_empty) {
                    $('#' + ErrorID).css('display', 'none');

                }
                el.classList.toggle("is-empty", is_empty);
            }
        });

        return Error;
    }

    var CustReportstartdate;
    var CustReportenddate;
    $(function () {
        var start = moment().subtract(29, 'days');
        var end = moment();
        function cb(start, end) {
            $('#reportrange span').html(start.format('DD/MM/YYYY') + ' - ' + end.format('DD/MM/YYYY'));
            CustReportstartdate = start.format('DD/MM/YYYY');
            CustReportenddate = end.format('DD/MM/YYYY');
        }
        $('#reportrange').daterangepicker({
            startDate: start,
            endDate: end,
            ranges: {
                'Today': [moment(), moment()],
                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        }, cb);
        cb(start, end);

        //For As on date
        var now = new Date();

        var day = ("0" + now.getDate()).slice(-2);
        var month = ("0" + (now.getMonth() + 1)).slice(-2);

        var today = now.getFullYear() + "-" + (month) + "-" + (day);

        $('#AsonDate').val(today);

    });
    function CheckAsOnDate() {
      

        var _DateValid = true;
        let AsonDate = $("#AsonDate").val();
        if (AsonDate == null || AsonDate == "") {
            $("#AsOnDate-error").css('display', 'block');

            $('#AsOnDate-error').text("Please Select As On Date"); _DateValid = false;
        } else {
            $('#AsOnDate-error').text("");
        }
        return _DateValid;
    }

    
    function getgridout(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');

        console.log('mode:',$thisForm.find('[name=FK_Mode]').val());

        let reportmode = parseInt($thisForm.find('[name=FK_Mode]').val());
        if ($thisForm.valid()) {
            if (reportmode == 1) {
        if (ValidateAddrepdetails(1) <= 0) {
            if (checkLimit(ele)) {

                $("#divReportSection").html("");
                vfromdate = $thisForm.find('[name=FromDate]').val();
                vtodate = $thisForm.find('[name=ToDate]').val();
                var vBranchID = $thisForm.find('[name=BranchID]').val();
                var vmodel = @Html.Raw(Json.Encode(Model));
                if (vBranchID == "0") {
                    vBranch = "All"
                } else {
                    if (vmodel.BranchList != null) {
                        $.each(vmodel.BranchList, function (key, value) {
                            if (value.BranchID == vBranchID) {
                                vBranch = value.Branch
                            }
                        });
                    }
                }


                console.log('mode', $thisForm.find('[name=FK_Mode]').val());
                var Report_Id = $thisForm.find('[name=FK_Mode]').val();
                var obj = {
                    FK_Mode: $thisForm.find('[name=FK_Mode]').val(),
                    FromDate: $thisForm.find('[name=FromDate]').val(),
                    ToDate: $thisForm.find('[name=ToDate]').val(),
                    AsonDate: $thisForm.find('[name=AsonDate]').val(),
                    BranchID: $thisForm.find('[name=BranchID]').val(),
                    SupplierTypeID: $thisForm.find('[name=ID_SupplierType]').val(),
                    IncludeAdvance: $thisForm.find('[name="IncludeAdvance"]').is(':Checked'),
                    TransMode: SupplierreportTransMode,
                }

                $.ajax({
                    url: '@Url.Action("GetSupplierReportgridViewList", "Report")',
                    type: "GET",
                    data: obj,
                    dataType: "json",
                    contentType: "application/json",
                    success: function (ajaxOutput) {
                        var rptmode = $('select[name="FK_Mode"] option:selected').val();
                        debugger
                        console.log('ajaxOutput>>>>>>>>>>>>>>>>>>', ajaxOutput)
                        if (ajaxOutput.IsProcess) {
                            $("#divReportSection").load('@Url.Action("ShowReport", "Report")?rptMode=' + Report_Id, function () {


                            });
                        }
                        else {

                            NotificationMessage({ 'type': 'warning', 'heading': 'warning', 'message': 'No Records Found' });
                        }

                    }
                });
            }
            else {
                NotificationMessage({
                    'type': 'error', 'heading': 'warning', 'message': 'To Date should be greater than  From Date' });
            }

        }
        }

      else  if (reportmode == 2) {
           if (CheckAsOnDate(ele)) {
          
                $("#divReportSection").html("");
                vfromdate = $thisForm.find('[name=FromDate]').val();
                vtodate = $thisForm.find('[name=ToDate]').val();
                var vBranchID = $thisForm.find('[name=BranchID]').val();
                var vmodel = @Html.Raw(Json.Encode(Model));
                if (vBranchID == "0") {
                    vBranch = "All"
                } else {
                    if (vmodel.BranchList != null) {
                        $.each(vmodel.BranchList, function (key, value) {
                            if (value.BranchID == vBranchID) {
                                vBranch = value.Branch
                            }
                        });
                    }
                }

             
                console.log('mode', $thisForm.find('[name=FK_Mode]').val());
                var Report_Id = $thisForm.find('[name=FK_Mode]').val();
                var obj = {
                    FK_Mode: $thisForm.find('[name=FK_Mode]').val(),
                    FromDate: $thisForm.find('[name=FromDate]').val(),
                    ToDate: $thisForm.find('[name=ToDate]').val(),
                    AsonDate: $thisForm.find('[name=AsonDate]').val(),
                    BranchID: $thisForm.find('[name=BranchID]').val(),
                    SupplierTypeID: $thisForm.find('[name=ID_SupplierType]').val(),
                    IncludeAdvance: $thisForm.find('[name="IncludeAdvance"]').is(':Checked'),
                    TransMode: SupplierreportTransMode,
                }

                $.ajax({
                    url: '@Url.Action("GetSupplierReportgridViewList", "Report")',
                    type: "GET",
                    data: obj,
                    dataType: "json",
                    contentType: "application/json",
                    success: function (ajaxOutput) {
                        var rptmode = $('select[name="FK_Mode"] option:selected').val();
                        debugger
                        console.log('ajaxOutput>>>>>>>>>>>>>>>>>>', ajaxOutput)
                        if (ajaxOutput.IsProcess) {
                            $("#divReportSection").load('@Url.Action("ShowReport", "Report")?rptMode=' + Report_Id, function () {


                            });
                        }
                        else {

                            NotificationMessage({ 'type': 'warning', 'heading': 'warning', 'message': 'No Records Found' });
                        }

                    }
                });
          

        }
        }

        }
       
    }

</script>

