
@model PerfectWebERP.Models.TaxTypeModel.TaxTypeListModel
<style>
</style>

<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">Tax Type</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            @Html.AntiForgeryToken()

            <div class="row">

                <div class="col-sm-6">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Name</span>
                            <span class="text-danger">*</span>
                        </label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control perfectValidate_name " placeholder="" name="TaxType" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Short Name</span>
                            <span class="text-danger">*</span>
                        </label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control perfectValidate_shortName " placeholder="" name="ShortName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"/>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Type Mode</span>
                            <span class="text-danger">*</span>
                        </label>
                        <div class="col-sm-8">
                            <select class="form-control perfectValidate_string" name="TypeModeID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                <option value="">Please select</option>
                                @if (!(Model.TypeModeList is null))
                                {
                                    foreach (var TypeMode in Model.TypeModeList)
                                    {
                                        <option value="@TypeMode.TypeModeID">@TypeMode.TypeModeName</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Account Head</span>
                           
                        </label>
                        <div class="col-sm-8">
                            <div class="input-group">
                                <input type="text" class="form-control perfectValidate_string" name="AHeadName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                <input type="hidden" name="AccountHead" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                <input type="hidden" name="AccountCode" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                <div class="input-group-append">
                                    @*<button id="" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="searchbtn(this)"></button>*@
                                    <button id="addaccounthead-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,16,'Account Head List',['','','AccountHeadSub','ASHeadName'])" Criterea1="0" Criterea2="0" BindName="AHeadName" BindVal="AccountHead"></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Account Sub Head</span>
                           
                        </label>
                        <div class="col-sm-8">
                            <div class="input-group">
                                <input type="text" class="form-control perfectValidate_string" name="ASHeadName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                <input type="hidden" name="AccountHeadSub" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                <input type="hidden" name="AccountSHCode" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                <div class="input-group-append">
                                    @*<button id="" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="searchASHbtn(this)"></button>*@
                                    <button id="addaccountsubhead-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,17,'Account Sub Head List',['AccountHead','AHName'])" Criterea1="AccountHead" Criterea2="0" BindName="ASHeadName" BindVal="AccountHeadSub"></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Sort Order</span>
                           
                        </label>
                        <div class="col-sm-8">
                            <input type="number" class="form-control perfectValidate_numeric_nm " placeholder="" name="SortOrder" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value="@Model.SortOrder" />
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label" for="">
                          
                        </label>
                        <div class="col-sm-6 checkbox-container">
                            <div class="form-check form-check-inline" perfect-class="formCheck">
                                <label class="form-check-label" perfect-class="formCheckLabel">
                                    <input type="checkbox" class="form-check-input chkTaxType" value="1" name="Interstate" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" ><span perfect-class="formCheckInputText">Interstate</span>
                                </label>
                            </div>
                            <div class="form-check form-check-inline" perfect-class="formCheck">
                                <label class="form-check-label" perfect-class="formCheckLabel">
                                    <input type="checkbox"  class="form-check-input chkTaxType" value="2" name="Intrastate" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox"  ><span perfect-class="formCheckInputText">Intrastate</span>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-footer text-right" perfect-class="formFooter">
                @if (ViewBag.PagedAccessRights.UsrrlTyEdt)
                {
                    <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="updateTaxType(this)"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                }
                @if (ViewBag.PagedAccessRights.UsrrlTyAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="AddTaxType(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                </div>



        </form>
    </div>
</div>


<script>
    (function () {
        //jQuery('form').validate();//<-----  Validate/initialize our form on page load
        jQuery('select').selectpicker();
    })();



         function ResetButton(ele) {

             $('.dataTable tr').removeClass("SelectForDelete");
             loadTaxTypeAddForm();
    }
    
    $(document).on('click', '.chkTaxType', function () {      
        var checked = $(this).is(':checked'); 
        $('.chkTaxType').prop('checked', false);       
        $(this).prop('checked', checked);               
    });

    // Function to add new TaxType


          function AddTaxType(ele) {


            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability


            //$(ele).find('i').removeClass();

              //if ($('.chkTaxType').prop('checked', false)) {
              //    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please select Interstate OR Intrastate' });
              //    return;
              //}
/////////////////////////////////////hK/////////////
              //if ($("[name='chk[]']:checked").length>0) {
              if ($('.chkTaxType:checkbox:checked').length == 0) {
                  NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please select Interstate OR Intrastate' });
                  return false;
              }
              /////////////////////hk/////////////////////



              $("input[name='service[]']").is(function () {
                  return this.checked;
              });
            console.log('> Add TaxType form IS valid', $thisForm.valid())
            if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

            $(ele).prop('disabled', true); // avoiding form submit the double click


            var inputData = {//<---- Input Json : this is the variable we pass to controller
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                TaxType: $thisForm.find('[name=TaxType]').val().trim(),
                ShortName: $thisForm.find('[name=ShortName]').val().trim(),
                Interstate: $thisForm.find('[name=Interstate]').is(":checked"),
                
                Intrastate: $thisForm.find('[name=Intrastate]').is(":checked"),
                TypeModeID: $thisForm.find('[name=TypeModeID]').val().trim(),
                AccountHead: $thisForm.find('[name=AccountHead]').val().trim(),
                AccountHeadSub: $thisForm.find('[name=AccountHeadSub]').val().trim(),
                SortOrder: $thisForm.find('[name=SortOrder]').val().trim()
            };


            console.log('> Add TaxType ajax input',inputData);


             $.ajax({
                 url: "@Url.Action("AddNewTaxTypeDetails", "TaxType")",
                type: "POST",

                 data: inputData,//<---- Input json : data passed to controller
                 dataType: "json",
                 contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                 success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                     if (ajaxOutput.Process.IsProcess) {

                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.success(value, "Success");
                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                         });
                         $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                         $thisForm.find('[perfect-ctype="input"]').val('');
                         $thisForm.find('[perfect-ctype="number"]').val('');



                         let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                         if (onSuccess) {
                             window[onSuccess]();
                         }

                         //---------- Do stuff if success

                         console.log('> Add new TaxType success data', ajaxOutput);
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });

        }

        }

    // Function to update a customer
    //$('.addcompany-jq-addnewuserUpdate').on('click',
        function updateTaxType(ele) {


            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability

            //perfectCRMvalidation.init($thisForm);

            if ($('.chkTaxType:checkbox:checked').length == 0) {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please select Interstate OR Intrastate' });
                return false;
            }
            if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                $(ele).prop('disabled', true);

                let pdata = $thisForm.data('pData');

                console.log('> Update TaxType form data saved',pdata);
                let inputData = {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    TaxTypeID: pdata.TaxTypeID,
                    TaxType: $thisForm.find('[name=TaxType]').val().trim(),
                    ShortName: $thisForm.find('[name=ShortName]').val().trim(),
                    Interstate: $thisForm.find('[name=Interstate]').is(":checked"),
                    Intrastate: $thisForm.find('[name=Intrastate]').is(":checked"),
                    AccountHead: $thisForm.find('[name=AccountHead]').val().trim(),
                    AccountHeadSub: $thisForm.find('[name=AccountHeadSub]').val().trim(),
                    TypeModeID: $thisForm.find('[name=TypeModeID]').val().trim(),
                    SortOrder: $thisForm.find('[name=SortOrder]').val().trim()
            };




            console.log('> Update taxtype ajax input',inputData);
                $.ajax({
                 url: "@Url.Action("UpdateTaxTypeDetails", "TaxType")",
                type: "POST",

                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                 success: function (ajaxOutput) { //<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                     if (ajaxOutput.Process.IsProcess) {

                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.success(value, "Success");
                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                         });


                         let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                         if (onSuccess) {
                             window[onSuccess]();
                         }

                         //---------- Do stuff if success
                         //toastr.success("Inside success", "Confirmation Box in table");

                         console.log('> update new TaxType success data', ajaxOutput);
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }


                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });

        }

        }


     // This function get triggered when the search button is clicked   onClick event set on the search button
  
    function searchbtn(ele) {

        console.log('Search function run')

        let $this = $(ele).closest('[perfect-class="form"]');
        $.ajax({
            url: '@Url.Action("GetAccountHeadDetails", "TaxType")',
            type: "Get",

            dataType: "json",
            contentType: "application/json",
            success: function (successData) {
                console.log('> Search button click success', successData);

                if (successData.Process.IsProcess) {

                 
                    var account = createSelectList({ data: successData.Data, hideColumn: ['AccountHead'] /*settings: { size: 'modal-xl' } */ });
                    account.then(function (selectedData) {
                        if (selectedData) {
                            console.log('>_ Search button > list click', selectedData);
                            $this.find('[name=AccountHead]').val(selectedData['AccountHead']);
                            $this.find('[name=AccountCode]').focus().val(selectedData['AccountCode'])
                            $this.find('[name="AHeadName"').val(selectedData['AHeadName']);
                        }
                        else {
                            console.log(selectedData);
                        }
                    });

                }
                else {
                    $.each(successData.Process.Message, function (key, value) {
                        //toastr.warning(value, "Error");
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }




            },
            complete: function () {

                //a.find('.dataTables_wrapper').css('width', '100%');
            }
        });

        }
 
        function searchASHbtn(ele) {

        console.log('Search function run')

            let $this = $(ele).closest('[perfect-class="form"]');
            let search = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                AccountCode: $this.find('[name="AccountCode"]').val()
            };
        $.ajax({
            url: '@Url.Action("GetAccountSubHeadDetails", "TaxType")',
            type: "POST",
            data: search,//<---- Input json : data passed to controller
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded;charset=utf-8',
            success: function (successData) {
                console.log('> Search button click success', successData);

                if (successData.Process.IsProcess) {

                 
                    var account = createSelectList({ data: successData.Data, hideColumn: ['StateID'] });
                    account.then(function (selectedData) {
                        if (selectedData) {
                            console.log('>_ Search button > list click', selectedData);
                            $this.find('[name=AccountHeadSub]').val(selectedData['AccountHeadSub']);
                            $this.find('[name=AccountSHCode]').val(selectedData['AccountSHCode'])
                            $this.find('[name="ASHeadName').val(selectedData['ASHeadName']);

                        }
                        else {
                            console.log(selectedData);
                        }
                    });

                }
                else {
                    $.each(successData.Process.Message, function (key, value) {
                        //toastr.warning(value, "Error");
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }




            },
            complete: function () {

                //a.find('.dataTables_wrapper').css('width', '100%');
            }
        });

        }


</script>


