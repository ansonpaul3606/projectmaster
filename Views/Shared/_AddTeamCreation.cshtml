@*/*----------------------------------------------------------------------
    Created By	: Santhisree
    Created On	: 01/08/2022
    Purpose		: TeamCreation
    -------------------------------------------------------------------------
    Modification
    On			By					OMID/Remarks
    -------------------------------------------------------------------------
    Modifications On    11/01/2023
    By                  Kavya K
    -------------------------------------------------------------------------*/*@
@model PerfectWebERP.Models.TeamCreationModel.TeamCreationListModel
   

<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">Team Creation</h4>
       @if (@ViewBag.PagedAccessRights.UsrrlMsView)
        {
        <div class="spanid">
            <span class="spanviewlist" title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
        </div>
        }
        else
        {
        <div class="spanid" hidden>
            <span class="spanviewlist" title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
        </div>
        }
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="row">
                <div class="col-sm-12">
                    <div class="default-tab">
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="Todolist" data-toggle="tab" href="#MainScreen"><i class="las la-tasks  mr-2"></i> Team Creation &nbsp;&nbsp;<span><label id="todobadge" class="badge badge-circle badge-info"></label></span> </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="OverdueList" data-toggle="tab" href="#Teaminfo" onclick="fn_TeamDetails_Product(this)"><i class="las la-book-reader mr-2"></i> Existing Teams&nbsp;&nbsp;<label id="overduebadge" class="badge badge-circle badge-primary"></label></a>
                            </li>


                        </ul>
                        <div><label></label></div>
                        <div class="tab-content">
                            <div class="tab-pane fade active show" role="tabpanel" id="MainScreen">
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Team Name</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control perfectValidate_name " placeholder="" name="Name" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Short Name</span>
                                                @*<span class="text-danger">*</span>*@
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control " placeholder="" name="ShortName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label name="lblProduct" class="col-sm-4 col-form-label"><span id="lbl_Product">Product</span> &nbsp;<span class="text-danger">*</span></label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="text" class="form-control form-control " name="Product" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                    <input type="hidden" name="ProductID" class="form-control form-control perfectValidate_string" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="date" name="ProductDate" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" hidden />
                                                    <div class="input-group-append">
                                                        <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" onclick="GetCmnPopUpSearchValAssign(this,TeamPageMode, TeamTitle,[],['ProjectDate','ProductDate'],TeamCreationTransMode)" BindName="Product" BindVal="ProductID" perfect-css="button"></button>
                                                    </div>
                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Created On</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="date" id="CreateDate" class="form-control perfectValidate_date" name="CreateDate" perfect-class="formGroupControl" onchange="checkdate(this)" perfect-ctype="date" min="1947-01-01" perfect-css="date" />
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-12">
                                        <div class="accordion__header collapsed" id="EmployeeDetails" data-target="#active-header_collapseTwo" aria-expanded="true">
                                            <span class="accordion__header--icon"></span>
                                            <span class="accordion__header--text">Employee Details</span>

                                        </div>
                                        <br />
                                        <div class="row">
                                            <div class="col-sm-12 " perfect-class="TempTableProduct">
                                                <div class="row">

                                                    <div class="col-sm-3 PerError">
                                                        <div class="form-group row" perfect-class="formGroup">

                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel" name="lblProName">Department</span>
                                                                <span class="text-danger">*</span>
                                                            </label>

                                                            <div class="col-sm-7">
                                                                <div class="input-group">
                                                                    <select class="form-control " perfect-tempTable-EmployeeDetailsTable="Department" name="Department" perfect-selectButtonAction="testing" perfect-class="formGroupControl" onchange="ClearEmployee(this)" perfect-ctype="select" perfect-css="select">
                                                                        <option value="">Please Select </option>

                                                                        @if (!(Model.DepartmentList is null))
                                                                        {
                                                                            foreach (var DepartmentModule in Model.DepartmentList)
                                                                            {
                                                                                <option value="@DepartmentModule.DepartmentID">@DepartmentModule.DepartmentName </option>
                                                                            }
                                                                        }
                                                                    </select>
                                                                </div>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span id="lblEmpl" perfect-class="formGroupLabel">Employee</span>
                                                                <span class="text-danger">*</span>
                                                            </label>
                                                            <div class="col-sm-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control " name="Employee" perfect-tempTable-EmployeeDetailsTable="Employee" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                                    <input type="hidden" name="EmployeeID" perfect-tempTable-EmployeeDetailsTable="EmployeeID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                    <div class="input-group-append">
                                                                        <button id="addemployee-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,6,'Employee List',['DepartmentID','Department'],['Department'],TeamCreationTransMode)" criterea1="Department" bindname="Employee" bindval="EmployeeID"></button>
                                                                    </div>
                                                                </div>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">Employee Type</span>
                                                                <span class="text-danger">*</span>
                                                            </label>
                                                            <div class="col-sm-8">
                                                                <div class="input-group">
                                                                    <select class="form-control " name="EmployeeType" perfect-tempTable-EmployeeDetailsTable="EmployeeType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">

                                                                        <option value="">Please Select </option>

                                                                        @if (!(Model.EmployeeTypeList is null))
                                                                        {
                                                                            foreach (var employeeTypeList in Model.EmployeeTypeList)
                                                                            {
                                                                                <option value="@employeeTypeList.ID_Mode">@employeeTypeList.ModeName</option>
                                                                            }

                                                                        }

                                                                    </select>
                                                                </div>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="text-right">
                                                        <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Employee" onclick="createatable(this,'EmployeeDetailsTable',['Employee'],TeamCreationTransMode)"><i class="fa fa fa-plus" aria-hidden="true"></i></button>
                                                        <button class="btn btn-light1" type="button" id="btnResetEmp" data-toggle="tooltip" data-placement="top" data-html="true" onclick="EmployeeDetailsclear(this,'EmployeeDetailsTable')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">

                                                <div class="table-responsive" perfect-tempTable="EmployeeDetailsTable" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="card-footer text-right" perfect-class="formFooter">
                                    @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                                    {
                                        <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="updateTeamCreation(this)"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                                    }
                                    @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                                    {
                                        <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="AddTeamCreation(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                                    }
                                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                                </div>
                            </div>
                            <div id="Teaminfo" class="tab-pane">
                                <div class="row" id="divPrdct" style="display:none">
                                    <div style="width:3.5%">
                                    </div>
                                    <div style="width:80%">
                                        <div class="form-group2 row" perfect-class="formGroup">
                                            <label class="col-form-label">
                                                <span perfect-class="formGroupLabel" class="font-weight-bold" id="spnProduct">Product:</span>
                                            </label>

                                            <label class="col-sm-11 col-form-label" perfect-class="formGroupControl" name="lblProdName" perfect-ctype="input" perfect-css="input"></label>

                                        </div>
                                    </div>

                                </div>
                                <div class="row" style="margin-top:1.5rem;">


                                    <div class="col-sm-10" name="TeamDetails">
                                    </div>
                                    @*<div class="col-sm-6" name="divDetails">
                                        </div>*@
                                    @*<div class="card-body">
                                            <div class="table-responsive">
                                                <table class="table  table-striped" id="ProductDett">
                                                    <thead class="thead-primary">
                                                        <tr>
                                                            <th>Sl No.</th>
                                                            <th>Department</th>
                                                            <th>Employee</th>
                                                            <th>Employee Type</th>

                                                        </tr>
                                                    </thead>
                                                    <tbody id="TeamDet">
                                                        <tr id="0">
                                                            <td colspan="9" style="text-align:center;">No Records...</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>*@
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <input type="hidden" id="ID_LeadGenerateActionhdns" />
            </div>
        </form>

    </div>


</div>


<script>
    (function () {
        //jQuery('form').validate();//<-----  Validate/initialize our form on page load

    })();

    $(document).ready(function () {

        initFunctions('form');
        $('#MeasurementDetails').removeClass('collapsed');
        $('#active-header_collapseTwo').addClass('collapse');
        $('#active-header_collapseTwo').addClass('show');
        $('#MasterProjectDetails').attr('aria-expanded', "true");
        $('#active-header_collapseTwo1').addClass('collapse');
        $('#active-header_collapseTwo1').addClass('show');

        if (TeamCreationTransMode == "PDTC") {
            $('#lbl_Product').html("Product");
        } else {
            $('#lbl_Product').html("Project");
        }
       
         

    });
    function checkdate(ele) {

        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        console.log('Ldate', $thisForm.find('[name=LeadDates]').val());
         let createdate = $thisForm.find('[name=CreateDate]').val();
        let leaddate = $thisForm.find('[name=ProductDate]').val();
        console.log('createdate', createdate);
       //if (createdate == "") {
       //     $thisForm.find('[name="CreateDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Please Select Created On');
       //     return false;
       // } else {
       //    $thisForm.find('[name="CreateDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text(''); return true;
       // }
        //if (createdate < leaddate) {
        //    $thisForm.find('[name="CreateDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Created On Date sholud be greater than or equal Product Create Date');
        //    return false;

        //}
        //else {

            //$thisForm.find('[name="CreateDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
            //return true;
        //}

        return true;

    }
    function ClearEmployee(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        $thisForm.find('[name=EmployeeID]').val(0);
        $thisForm.find('[name=Employee]').val('');

        $thisForm.find('[name=ID_Mode]').val('').selectpicker('refresh');
        $thisForm.find('[name=ModeName]').val('');
        $thisForm.find('[name=EmployeeType]').val('').selectpicker('refresh');
    }

    function clearemptype(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[name=ID_Mode]').val('').selectpicker('refresh');
        $thisForm.find('[name=ModeName]').val('');
        $thisForm.find('[name=EmployeeType]').val('').selectpicker('refresh');
    }
    var tableOptionsTempOut = {
        iconButton: {
            buttons: [

                {
                 icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';
                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');

                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else if (inputType == 'date') {
                                    console.log('datess', savedData)
                                    console.log('datess', savedData[pf_name])
                                    // $thisNode.val(moment(savedData[pf_name]).format('YYYY-DD-MM'));
                                    $thisNode.val(savedData[pf_name]);
                                }
                                else {

                                    $thisNode.val(savedData[pf_name]);
                                }

                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }


                        });



                    }
                },
                {
                  icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);

                        }
                        else {
                            $thistbl.remove();
                        }
                        $("#btnResetEmp").click();
                    }
                },
            ]
        },
        onlyShowColumn: ["Department_d", "Employee", "EmployeeType_d"],
        hideColumn: [ "EmployeeTypeID"],
        serialNo: true,
        renameHeader: {},


        rowAttribute: [],
        isCheckType: [],
        isDateType: ["NextActionDate"],
    };

    var Subimg = "";
    function Getsubimg(dataimg) {
        Subimg = dataimg;
    }
    var $imgContainer = $('#Image-form');
      function ImageLoad(ele) {

        $imgContainer.load('@Url.Action("LoadImageForm", "TeamCreation")', function () {
            getcase('Company');
        debugger
            if (Subimg != "") {
                $.each(Subimg, function (key, value) {

                    var Mode = value.SVImgMode;
                    console.log('Mode', Mode);
                    var imgal = value.SVImgValue;
                    var ModeName = value.SVModeName;
                    Getimgcntrl1(ele, "data:image/;base64," + imgal, Subimg, ModeName, Mode, value.SVImgName)
                });
            }


        });
    }

    function EmployeeDetailsclear(ele, tableKey) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        let lastIndex = 0;
         if ($tblcontainer.find("tbody tr").length > 0) {


            lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0; console.log(lastIndex);

        }
        $tblcontainer.attr('perfect-tempTable-action', 0);
        $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex);
    }

    function getEmployee(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

               //console.log("Input data",inputData)

                $.ajax({
                 url: '@Url.Action("GetEmployeeList", "Branch")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                    type: "GET",


                dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                       // console.log("Data", data);

                        if (ajaxOutput.Process.IsProcess) {
                            var employeeModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['EmployeeID'] });
                            employeeModel.then(function (ret) {
                                if (ret) {
                                    console.log('>_ Search button > list click', ret);
                                    $thisForm.find('[name=EmployeeID]').val(ret.EmployeeID);
                                    $thisForm.find('[name=Employee]').val(ret.Employee);

                                   //-----
                                    $.ajax({
                                        url: "@Url.Action("GetEmployeeBaseInfo", "ServiceMapping")",
                                        type: "POST",
                                        data: { employeeID: ret.EmployeeID, __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),},
                                        dataType: "json",
                                        contentType: "application/x-www-form-urlencoded; charset=utf-8",
                                        success: function (ajaxOutEmp) {
                                            //code to make table
                                            //fill table
                                            //show
                                            if (ajaxOutEmp.Process.IsProcess) {

                                                let $tbl = $thisForm.find('.jq_serviceMap_empdetails');

                                                $tbl.find('.jq_serviceMap_empdetails_name').text(ajaxOutEmp.Data[0].EmployeeName);
                                                $tbl.find('.jq_serviceMap_empdetails_num').text(ajaxOutEmp.Data[0].Number);
                                                $tbl.find('.jq_serviceMap_empdetails_dsgn').text(ajaxOutEmp.Data[0].EmployeeDesignation);
                                                $tbl.find('.jq_serviceMap_empdetails_dept').text(ajaxOutEmp.Data[0].EmployeeDepartment);
                                                $tbl.removeClass('d-none');
                                            }

                                        }
                                    });

                                    //------

                                }
                                else {
                                    console.log(ret);
                                }
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }





                },


            });


    }
    function ShowOtherCharges(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let Othrinfo = [];
        if ($thisForm.data('pOthrChgData')) {
            if ($thisForm.data('pOthrChgData').length > 0) {

                Othrinfo = $thisForm.data('pOthrChgData');
            }
            else {
                Othrinfo.push($thisForm.data('pOthrChgData'));
            }

            let sum = 0;
            console.log('has tax info', Othrinfo)
            var CheckListHTML = '';
            $.each(Othrinfo, function (i, value) {
                sum = sum + parseFloat(value.OctyAmount);
                let options = ''
                options += '<option value=' + value.TransTypeID + '>' + value.TransType + '</option>'
                let $dropdown = '<select class="form-control" >' + options + '</select>';
                CheckListHTML += "<tr>";
                CheckListHTML += "<td>" + value.SlNo + "</td>";
                CheckListHTML += "<td Class='jq_ID_OtherChargeType_td' Style='Display:none'>" + value.ID_OtherChargeType + "</td>";
                CheckListHTML += "<td Class='jq_Type_td'>" + value.OctyName + "</td>";
                CheckListHTML += "<td class='jq_TransType_td'>" + $dropdown + "</td>";
                CheckListHTML += "<td class='jq_OtherChagAmnt_td' ><input class='form-control text-right' type='number'  value='" + value.OctyAmount + "'' /></td>";

                CheckListHTML += "</tr>";
            })

            $("#OtherChargebody").html(CheckListHTML)
            $('#formGroupModalformGroupModalOtherCharge').modal('show');
        }
        else {
            BindChargeDetails("1", 'formGroupModalOtherCharge', ele)
        }

    }
      function BindChargeDetails(Mode, ModalID, ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        var InputData =
        {

            TransMode: 'SL',
            }

        $.ajax({
            url: "@Url.Action("GetOtherCharges","Purchase")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                if (ajaxOutput.OtherCharges.Process.IsProcess) {
                         var CheckListHTML = '';
                         let sum = 0;
                         if (ajaxOutput.OtherCharges.Data.length > 0) {
                             //---
                             let options =''
                             $.each(ajaxOutput.Transtypelist.Data, function (i, value) {
                                 options += '<option value=' + value.TransTypeID + '>' + value.TransType+'</option>'
                             });
                            //---
                             $.each(ajaxOutput.OtherCharges.Data, function (i, value) {
                                 console.log('Transtypelist',ajaxOutput.Transtypelist.Data)

                                 let $dropdown = '<select class="form-control" >' + options + '</select>';

                                 sum = sum + parseFloat(value.OctyAmount);
                                 CheckListHTML += "<tr>";
                                 CheckListHTML += "<td>" + value.SlNo + "</td>";
                                 CheckListHTML += "<td Class='jq_ID_OtherChargeType_td' Style='Display:none'>" + value.ID_OtherChargeType + "</td>";
                                 CheckListHTML += "<td Class='jq_Type_td'>" + value.OctyName + "</td>";
                               CheckListHTML += "<td class='jq_TransType_td'>" + $dropdown + "</td>";
                                 CheckListHTML += "<td class='jq_OtherChagAmnt_td' ><input  class='form-control text-right' type='number'  value='" + value.OctyAmount + "' ' /></td> /></td>";

                                 CheckListHTML += "</tr>";
                             })
                         }
                         else {
                             CheckListHTML += "<div class='form-group col-md-6'>";
                             CheckListHTML += "<div class='form-check mb-2'>";
                             CheckListHTML += "<label class='form-check-label' for='check1'>No Records...</label>";
                             CheckListHTML += "</div></div>"
                         }
                         //let $model = createSearchModalDOM();
                         //$model.modal.find('.modal-body').append(CheckListHTML);
                         //$model.show

                         $("#formGroupModalOtherChargebody").html(CheckListHTML)
                         $('#formGroupModalOtherCharge').modal('show');
                        // $thisForm.find('[name=TaxAmount]').val(sum);
                     }
                     else {
                    $.each(ajaxOutput.OtherCharges.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                    $('select').selectpicker('refresh');
                }
            });
            }
    function BindOtherChargeAmount(ele) {
        console.log('inside binddatat fn')
        let $modal = $(ele).closest('.modal');
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let sum = 0;
        $modal.find('table tbody').find('tr').each(function () {
            let value = parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val())
            if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 0) {
                value = value * 0;
            }
            else if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 1) {
                value = value * 1;
            }
            else {
                value = value * 1;
            }
            sum = sum + value;

        });

        $thisForm.find('[name=OtherCharge]').val(sum);

    }

    function createatable(ele, tkey, uniq = []) {
        ;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';

        //make index
        console.log('check 1');

        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;
        if (thisactionIndex > 0) {
            //means update
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            //insert
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }//

        if (tableKey == 'EmployeeDetailsTable') {
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeID"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeID"]').val == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeID"]').val == '') {
                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select Employee');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Department"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Department"]').val == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="Department"]').val == '') {

            isValid = false;
            console.log('false');
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Department"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Department');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Department"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeType"]').val() == null) {

            isValid = false;
            console.log('false');
            $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Employee Type');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="EmployeeType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
        }

        if (tableKey == "MeasurementDetailsTable") {
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Work Type');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="WorkType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="MeasurementType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="MeasurementType"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="MeasurementType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Measurement Type');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="MeasurementType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="MeasurementValue"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="MeasurementValue"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="MeasurementValue"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Measurement Value');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="MeasurementValue"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="MeasurementUnit"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="MeasurementUnit"]').val() == null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="MeasurementUnit"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Measurement Unit');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="MeasurementUnit"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }




        }
        //if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').val() < 0) {

        //    isValid = false;

        //    $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter a value greater than or equal to 0');
        //}
        //else {

        //    $thisForm.find('[perfect-tempTable-' + tableKey + '="Quantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        //}
        //if ($thisForm.find('[name="ActStatus"]').val() == 1) {
        //    if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ActionType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ActionType"]').val() == null) {

        //        isValid = false;
        //        console.log('false');
        //        $thisForm.find('[perfect-tempTable-' + tableKey + '="ActionType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Follow up type');
        //    }
        //    else {
        //        $thisForm.find('[perfect-tempTable-' + tableKey + '="ActionType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        //    }
        //    if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Action"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Action"]').val() == null) {

        //        isValid = false;
        //        console.log('false');
        //        $thisForm.find('[perfect-tempTable-' + tableKey + '="Action"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Follow up action');
        //    }
        //    else {
        //        // alert($thisForm.find('[perfect-tempTable-' + tableKey + '="Action"]').val());
        //        $thisForm.find('[perfect-tempTable-' + tableKey + '="Action"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        //    }
        //    if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ActionDate"]').val() == 0) {

        //        isValid = false;
        //        console.log('false');
        //        $thisForm.find('[perfect-tempTable-' + tableKey + '="ActionDate"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Follow up date');
        //    }
        //    else {
        //        $thisForm.find('[perfect-tempTable-' + tableKey + '="ActionDate"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        //    }
        //    if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ActionDate"]').valid()) { } else { isValid = false; }


        //}
        let upperlimit = $thisForm.find('[name="RegDate"]').val();
        let lowerlimit = $thisForm.find('[name="NextActionDate"]').val();
        var enqDate = new Date(upperlimit);
        var nxtDate = new Date(lowerlimit);
        var today = new Date();

        //if (enqDate.getTime() > nxtDate.getTime()) {
        //    isValid = false;
        //    console.log('inside limit check if')
        //    $thisForm.find('[name="NextActionDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Follow up date should be greaterthan or equal to Enquiry date')
        //}




        if (unique.length > 0) {
            //getting previous data
            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }

                }

            })
            console.log('previous data', prevData);

            unique.forEach(function (key, i) {
                console.log('unid -> key:' + key + "| index :" + i);
                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                let headerEleName = $thisForm.find('[name="lblEmpl"]').text();
                let atname = $thisEle.attr('name');
                let cvalue;

                //console.log('len')
                if ($thisEle.length != 0) {
                    console.log('len', $thisEle)
                    let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    let errmessage = headerEleName + " Already exists"

                    //getting current value in cval
                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();
                        //alert(cvalue);
                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else { cvalue = $thisEle.val(); }

                    // console.log('cvalue ->' + cvalue);

                    //searching in previous data
                    if (prevData.find(a => a[atname] == cvalue)) {
                        // console.log('Search =>' + cvalue + '| attr :' + atname)
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });

        }

        console.log('isValid', isValid);

        if (isValid) {

            console.log('check 4.1');
            // this section make table column data
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('nameAttr', nameAttr);
                console.log('headerName', headerName);
                if (headerName.trim() == "EmployeeType") {
                    headerName = "Employee Type";
                }
                if ($this.is('select')) {

                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    //console.log(headerName+"oooooooooooooooooooooo");
                    tableOptionsTemp.hideColumn.push(nameAttr + '_d')
                    //displat text of select
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    //tableOptionsTemp.onlyShowColumn.push(nameAttr + '_d')
                    insertData[nameAttr] = $this.val();
                    //insertData[nameAttr] = $this.val();
                    if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Action"]').val() != 0) { }



                    if ($thisForm.find('[name="FK_NetAction"]').val() == $this.val()) { }
                    else if ($thisForm.find('[name="FK_ActionType"]').val() == $this.val()) { }
                    else if ($thisForm.find('[name="BranchTypeID"]').val() == $this.val()) { }
                    else if ($thisForm.find('[name="BranchID"]').val() == $this.val()) { }
                    else if ($thisForm.find('[name="FK_Departement"]').val() == $this.val()) { }
                    else { $this.val('').selectpicker('refresh'); }


                }
                else if ($this.is('input')) {

                    let inputType = $this.attr('type').toLocaleLowerCase();

                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp.isCheckType.push(nameAttr)
                        //clear field
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {

                        tableOptionsTemp.hideColumn.push(nameAttr)
                        insertData[nameAttr] = $this.val();

                        if ($thisForm.find('[name="FK_Employee"]').val() == $this.val()) { }

                        else { $this.val(''); }

                        //clear field

                    }
                    else if (inputType == 'date') {


                        if ($this.val() == '') {

                            insertData[nameAttr] = null;
                        }
                        else {

                            insertData[nameAttr] = $this.val();
                        }

                        //clear field
                        // $this.val('');
                    }

                    else {
                        insertData[nameAttr] = $this.val();
                        //$this.val() == "" ? "''" : $this.val();
                        //clear field

                        if ($thisForm.find('[name="AssignEmp"]').val() == $this.val()) {

                        }
                        else { $this.val(''); }
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();
                    if ($thisForm.find('[name="AssignEmp"]').val() == $this.val()) { }
                    else { $this.val(''); }
                }




            });
            console.log('check 4.2', insertData);
            console.log('check 4.2 tableoption', tableOptionsTemp);
            if (isNew) {
                console.log('check 4.2.1');
                //this section nake table.table row
                if ($tblcontainer.find('table').length == 0) {
                    console.log('check 4.2.3');
                    console.log(insertData);
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                    //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false });
                }
                else {
                    console.log('check 4.2.1');
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);


                    //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false});
                    //   $tblcontainer.DataTable().draw();
                    //  table.ajax.reload();
                }
                console.log('check 4.2.1');
            }
            else {
                console.log('check 4.3');
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                console.log('check 4.4');
                console.log('table', $tblcontainer.find('table'))
                console.log('check 4.5');
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);


                // $tblcontainer.find('table').dataTable({ paging: false,ordering:false });
            }

            console.log(insertData);
            //alert(1);
            // resetting the edit value
            $tblcontainer.attr('perfect-tempTable-action', 0);
        }

        console.log('check 5');
    }
         function ResetButton(ele) {


             TeamCreationInitialLoad();
    }


    // Function to add new TeamCreation

     function fn_selectSubcategory(ele) {



        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $placeDropdown = $thisForm.find('[name=SubCategotyID]');//<--- Will give place select html element
        $placeDropdown.empty();
        $placeDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');

        let CategoryID = $(ele).val();


        // let ModeDropdown = $thisForm.find('[name=Mode]')
         //if ($thisForm.find('[name=Mode]').val() == "") {
         //    $thisForm.find('[name=Mode]').val(0);
         //}
         //alert($thisForm.find('[name=Mode]').val())
         $.ajax({
                 url: "@Url.Action("GetSubcategory", "TeamCreation")",
                type: "POST",

             data: JSON.stringify({ CategoryID: CategoryID}),
                dataType: "json",
                contentType: "application/json",
             success: function (ajaxOutput) {



                 if (ajaxOutput.Process.IsProcess) {

                             $.each(ajaxOutput.Data, function (key, value) {
                                 $placeDropdown.append($('<option/>', { "value": value.ID_SubCategory }).text(value.SubCatName)).selectpicker('refresh')
                                 });


                     }
                     else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             //NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': value });
                         });
                     }
                     }

                 });


    }
    var Images = [];
    function AddTeamCreation(ele) {

        debugger;
            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability


            //$(ele).find('i').removeClass();

            console.log('> Add TeamCreation form IS valid', $thisForm.valid())
        if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
            if (checkdate(ele)) {
                $(ele).prop('disabled', true); // avoiding form submit the double click

                let $modal2 = $thisForm.find('#zero_configOthercharge');

                let EmployeeDetails = [];
                $thisForm.find('[perfect-tempTable="EmployeeDetailsTable"]').find('tbody').find('tr').each(function () {
                    EmployeeDetails.push($(this).data('pData'));
                })

                getSessionValue(LastIDSessionKey, function (result) {

                    LastID_TeamCreation = result;
                });
            //    alert(LastID_TeamCreationPdn);

                if (EmployeeDetails.length > 0) {
                    var inputData = {//<---- Input Json : this is the variable we pass to controller
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),

                        CreateDate: $thisForm.find('[name=CreateDate]').val().trim(),
                        Name: $thisForm.find('[name=Name]').val(),
                        ShortName: $thisForm.find('[name=ShortName]').val(),
                        Project: $thisForm.find('[name=ProductID]').val(),
                        'EmployeeDetails': EmployeeDetails,
                        TransMode: TeamCreationTransMode,
                        LastID: LastID_TeamCreation,
                    };

                    clearSessionValue(LastIDSessionKey);

                    console.log('> Add TeamCreation ajax input', inputData);


                    $.ajax({
                        url: "@Url.Action("AddNewTeamCreationDetails", "TeamCreation")",
                        type: "POST",

                        data: inputData,//<---- Input json : data passed to controller
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                        success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                            if (ajaxOutput.Process.IsProcess) {

                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    //toastr.success(value, "Success");
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                });
                                $thisForm.find('[perfect-ctype="input"]').val('');
                                $thisForm.find('[perfect-ctype="number"]').val('');



                                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                if (onSuccess) {
                                    window[onSuccess]();
                                    TeamCreationInitialLoad();
                                }

                                //---------- Do stuff if success

                                console.log('> Add new TeamCreation success data', ajaxOutput);
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    //toastr.warning(value, "Error");
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                        },
                        complete: function () {
                            $(ele).prop('disabled', false);
                        }

                    });


                }
                else {
                    NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Enter Atleast One Employee Details' });
                    //let $modal = createSearchModalDOM();

                    //let $message = '<span>Enter Atleast One Emplyee Details  !!!</span>';
                    //$modal.modal.find('.modal-body')
                    //    .addClass('text-black')
                    //    .html($message);
                    //$modal.modal.find('.modal-title')
                    //    .addClass('text-primary')
                    //    .text('Message');

                    //$modal.modal.show();
                    $(ele).prop('disabled', false)
                }
            }
            else {
                //$thisForm.find('[name="CreateDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Please Select Created On');

                //NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Created On Date sholud be greater than or equal to Product Create Date' });
            }



        }

        }



    // Function to update a customer
    //$('.addcompany-jq-addnewuserUpdate').on('click',
        function updateTeamCreation(ele) {

            debugger
            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability

            //perfectCRMvalidation.init($thisForm);

            if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

                if (checkdate(ele)) {
                $(ele).prop('disabled', true);

                let pdata = $thisForm.data('pData');

                console.log('> Update TeamCreation form data saved', pdata);

                let $modal2 = $thisForm.find('#zero_configOthercharge');



                let EmployeeDetails = [];
                $thisForm.find('[perfect-tempTable="EmployeeDetailsTable"]').find('tbody').find('tr').each(function () {
                    EmployeeDetails.push($(this).data('pData'));
                })


                let inputData = {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    CreateDate: $thisForm.find('[name=CreateDate]').val().trim(),
                    Name: $thisForm.find('[name=Name]').val(),
                    ShortName: $thisForm.find('[name=ShortName]').val(),
                    Project: $thisForm.find('[name=ProductID]').val(),
                    'EmployeeDetails': EmployeeDetails,
                    ProjectTeamID: pdata["ProjectTeamID"],
                    TransMode: TeamCreationTransMode,
                    LastID: LastID_TeamCreation,
                };

                    clearSessionValue(LastIDSessionKey);
                if (EmployeeDetails.length > 0) {

                    console.log('> Update state ajax input', inputData);
                    $.ajax({
                        url: "@Url.Action("UpdateTeamCreationDetails", "TeamCreation")",
                        type: "POST",

                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (ajaxOutput) { //<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                            if (ajaxOutput.Process.IsProcess) {

                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    //toastr.success(value, "Success");
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                });


                                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                if (onSuccess) {
                                    window[onSuccess]();
                                    TeamCreationInitialLoad();
                                }

                                //---------- Do stuff if success
                                //toastr.success("Inside success", "Confirmation Box in table");

                                console.log('> update new TeamCreation success data', ajaxOutput);
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    //toastr.warning(value, "Error");
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }


                        },
                        complete: function () {
                            $(ele).prop('disabled', false);
                        }

                    });

                }
                else {
                    //let $modal = createSearchModalDOM();

                    //let $message = '<span>Enter Atleast One Emplyee Details  !!!</span>';
                    //$modal.modal.find('.modal-body')
                    //    .addClass('text-black')
                    //    .html($message);
                    //$modal.modal.find('.modal-title')
                    //    .addClass('text-primary')
                    //    .text('Message');

                    //$modal.modal.show();
                    NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Enter Atleast One Employee Details' });

                    $(ele).prop('disabled', false)
                }
                }

                else {
                    NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Created On Date sholud be greater than Product Create Date' });
                }



            }

        }

   //////New change///

    function fn_TeamDetails_Product(ele) {

        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability
        let $formFolowDivContainer = $(this).closest('[perfect-class="form"]').closest('.jq_leadgeneration_body').find('.jq_leadgeneration_followup_status');
            let inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                ProjectID: $thisForm.find('[name=ProductID]').val().trim(),
                TransMode:TeamCreationTransMode

        };
        var TeamType = "Product";
        if (TeamCreationTransMode == "PRTC") {
            TeamType = "Project";
        }

        if ($thisForm.find('[name=ProductID]').val().trim() != '' || $thisForm.find('[name=ProductID]').val().trim() != 0) {
            $.ajax({
                url: "@Url.Action("GetExistingTeamInfo", "TeamCreation")",
                type: "POST",
                // headers: { "token_key": "1234" },
                data: inputData,
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxOutput) {
                    debugger;
                    console.log('sss', ajaxOutput)
                    if (ajaxOutput.TeamDetails.Data != null) {

                        let strHtml = ""; let $ProductHtml = "";
                        for (var t = 0; t < ajaxOutput.distTeams.length; t++) {
                            let rowCount = 0;
                            strHtml += "<hr/><div class='tab-pane'>";
                            strHtml += "<div class='row' style='margin - top: 1.5rem;>";
                            strHtml += "<div class='col-sm-6'>";
                            strHtml += "<label style='width:3%'></label>";
                            strHtml += "<label style='width:25%'><strong style='width:100%'>Team: </strong><span class='mb-0' style='width:100%'>" + ajaxOutput.distTeams[t][0]['Name'] + "</span></label>";
                            strHtml += "<label style='width:25%'><strong style='width:100%'>Short Name: </strong><span class='mb-0' style='width:100%'>" + ajaxOutput.distTeams[t][0]['ShortName'] + "</span></label>";
                            strHtml += "<label style='width:25%'><strong style='width:100%'>Created Date: </strong><span class='mb-0' style='width:100%'>" + moment(ajaxOutput.distTeams[t][0]['CreateDate']).format('DD-MM-YYYY') + "</span></label>";
                            //strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>g </strong><span class='mb-0'></span></li>";
                            //strHtml += "<li class='list-group-item d-flex px-0 justify-content-between'><strong>Collected By</strong><span class='mb-0'>" + ajaxOutput.prInfo.Data[0]['CollectedByName'] + "</span></li>";
                            strHtml += "</div></div></div>";
                            strHtml += '<div class="card-body"><div class="table-responsive"><table class="table table-striped"  id="EmployeeTable"><thead class="thead-primary"><tr><th>Sl No.</th><th>Department</th><th>Employee</th><th>Employee Type</th></tr>'
                            strHtml += '</thead ><tbody id="EmployeeDt">  ';

                            if (ajaxOutput != null) {
                                $('#EmployeeDt').empty();
                                $ProductHtml = "";
                                var ProductData = ajaxOutput.TeamDetails.Data;
                                if (ProductData) {
                                    $.each(ProductData, function (i, value) {
                                        if (value.TeamID == ajaxOutput.distTeams[t][0]["TeamID"]) {
                                            rowCount = (rowCount + 1);
                                            $ProductHtml += "<tr id = " + rowCount + " > ";
                                            $ProductHtml += "<td style='width:20%;'>" + rowCount + "</td>";
                                            $ProductHtml += "<td style='width:20%;'>" + value.DepartmentName + "</td>";
                                            $ProductHtml += "<td>" + value.Employee + "</td>";
                                            $ProductHtml += "<td>" + value.EmployeeTypeName + "</td>";

                                            $ProductHtml += "</tr> ";
                                        }
                                    });
                                }
                                else {
                                    $ProductHtml += "<tr id='0'><td colspan='4' style='text-align:center'>No Records..</td></tr>";
                                }

                                strHtml += $ProductHtml + '</tbody ></table > </div></div>';
                            }

                        }
                        $thisForm.find('[name=TeamDetails]').html(strHtml);
                        var _prdname = $thisForm.find('[name=Product]').val();

                        if (_prdname.trim() != "") {
                            $("#divPrdct").show();
                        } else {
                            $("#divPrdct").hide();
                        }

                        $("#spnProduct").text(TeamType+" :");
                        $thisForm.find('[name=lblProdName]').text(_prdname);

                        initFunctions($thisForm);

                    }
                    else {
                        $('#EmployeeDt').empty();
                        var _prdname = $thisForm.find('[name=Product]').val();
                        $("#spnProduct").text(TeamType + " :");
                        $thisForm.find('[name=lblProdName]').text(_prdname);
                        strHtml = "<label class='col-xl-10' style='text-align:center'>No Existing Team Found For The Selected " + TeamType+" </label>";
                        $thisForm.find('[name=TeamDetails]').html(strHtml);
                    }
                }
            });
        } else {



        }

    }

    //////

</script>



