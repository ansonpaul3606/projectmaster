@model PerfectWebERP.Models.UnitModel.ModeList

<div class="card ">
    <div class="card-header">
        <h4 class="card-title col-12">UNIT </h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                <div class="row">
                    <div class="col-sm-6">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel"> Name</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_name" placeholder="" name="UnitName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel"> Short Name</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_shortName" placeholder="" name="UnitShortName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">No of Unit</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="number" class="form-control perfectValidate_decimal" placeholder="" name="NoOfUnit" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>

                       

                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Sort Order</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="number" class="form-control perfectValidate_numeric_nm " placeholder="" name="SortOrder" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="input" value="@Model.SortOrder" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6" style="display:none;">
                  
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Mode</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control" name="ModeID" perfect-selectButton="Button Name" perfect-selectButtonAction="testing" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please select</option>
                                    @if (!(Model.modeList is null))
                                    {
                                        foreach (var ModeList in Model.modeList)
                                        {
                                            <option value="@ModeList.Mode">@ModeList.ModeName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
    </div>
            <div class="card-footer text-right" perfect-class="formFooter">
                @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                {
                    <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="updateCode(this)"><i class="fa fa-refresh fa-spin  loaderClass"></i>Update</button>
                }
                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="AddUnit(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                </div>
    </form>
</div>
</div>

<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>
<script>

    (function () {

        jQuery("select").selectpicker();
       // jQuery('form').validate();

    })();

    function AddUnit(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        //console.log('> Add Unit form is valid', $thisForm.valid())

        if ($thisForm.valid()) {

            $(ele).prop('disabled', true);

            var inputData = {

                UnitName: $thisForm.find('[name=UnitName]').val().trim(),
                UnitShortName: $thisForm.find('[name=UnitShortName]').val().trim(),
                NoOfUnit: $thisForm.find('[name=NoOfUnit]').val().trim(),
                SortOrder: $thisForm.find('[name=SortOrder]').val().trim(),
                Mode: $thisForm.find('[name=ModeID]').val().trim(),
                


            }
            //console.log('> Add unit ajax input', inputData);

            $.ajax({
                url: "@Url.Action("AddUnit", "Unit")",
                type: "POST",

                data: JSON.stringify(inputData),
                dataType: "json",
                contentType: "application/json",
                success: function (data) {

                    if (data.Process.IsProcess) {

                        $.each(data.Process.Message, function (key, value) {

                            NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                        });
                        $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                        $thisForm.find('[perfect-ctype="input"]').val('');
                        $thisForm.find('[perfect-ctype="date"]').val('');


                        let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                        if (onSuccess) {
                            window[onSuccess]();   

                        }

                        //---------- Do stuff if success
                       // loadUnitList();
                        // console.log('> Add new post success data', data);
                    }
                    else {
                        $.each(data.Process.Message, function (key, value) {
                            //toastr.warning(value, "Error");
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });



        }


    }
    function ResetButton(ele) {

        $('.dataTable tr').removeClass("SelectForDelete");
        loadAddUnitForm();


                }
      function updateCode(ele) {


          let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability

            //perfectCRMvalidation.init($thisForm);

            if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                $(ele).prop('disabled', true);

                let pdata = $thisForm.data('pData');
                console.log('in update form button click',pdata);





                var inputData = {//<---- Input Json : this is the variable we pass to controller
                UnitID: pdata['UnitID'],
                UnitName: $thisForm.find('[name=UnitName]').val().trim(),
                UnitShortName: $thisForm.find('[name=UnitShortName]').val().trim(),
                NoOfUnit: $thisForm.find('[name=NoOfUnit]').val().trim(),
                SortOrder: $thisForm.find('[name=SortOrder]').val().trim(),
                Mode: $thisForm.find('[name=ModeID]').val().trim(),

            };
            console.log('> Update Unit ajax input',inputData);
             $.ajax({
                 url: "@Url.Action("UpdateUnit", "Unit")",//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                 // headers: { "token_key": "1234" },
                 data: JSON.stringify(inputData),//<---- Input json : data passed to controller
                dataType: "json",
                contentType: "application/json",
                 success: function (data) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                     if (data.Process.IsProcess) {

                         $.each(data.Process.Message, function (key, value) {
                             //toastr.success(value, "Success");
                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                         });


                         let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                         if (onSuccess) {
                             window[onSuccess]($thisForm);
                             //loadUnitList();
                         }

                         //---------- Do stuff if success
                         //toastr.success("Inside success", "Confirmation Box in table");

                         console.log('> update new Unit success data', data);
                     }
                     else {
                         $.each(data.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }


                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });

        }

        }

</script>