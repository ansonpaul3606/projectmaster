
@*/*----------------------------------------------------------------------
Created By	: AmrithaAk
Created On	: 26/03/2022
Purpose		: UserBanned
-------------------------------------------------------------------------
Modification
On			By					OMID/Remarks
-------------------------------------------------------------------------
-------------------------------------------------------------------------*/*@

@model PerfectWebERP.Models.UserBannedModel.UserbanViewList
<style>
</style>

<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">User Ban / Un Ban</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Branch</span>
                                <span class="text-danger">*</span>
                            </label>

                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" name="BranchID" perfect-selectButton="BranchName" perfect-selectButtonAction="BranchAdding" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" onchange="getUserBanListClear(this)">

                                    <option value="">Please Select </option>

                                    @if (!(Model.BranchList is null))
                                    {
                                        foreach (var branchList in Model.BranchList)
                                        {
                                            <option value="@branchList.BranchID">@branchList.Branch</option>
                                        }

                                    }

                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">User</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control " name="UserCode" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" perfect-tempTable-cstatus="User" disabled />
                                    <input type="hidden" name="UsersID" class="form-control perfectValidate_numeric" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" perfect-tempTable-cstatus="User" />
                                    <div class="input-group-append">
                                        @*<button id="addpincode-jq-searchButton3" class="btn btn-primary fa fa-search" name="UserCodeSearchBTN" type="button" perfect-css="button" onclick="getUserList(this)"></button>*@

                                        <button id="adddistrict-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,21,'User List',['BranchID','Branch'])" Criterea1="BranchID" Criterea2="0" BindName="UserCode" BindVal="UsersID"></button> 
                                    </div>
                                </div>
                                <span class="invalid-feedback animated fadeInUp d-block temptableError"></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label" name="banmethodlabel">
                                <span perfect-class="formGroupLabel">Ban Method</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" name="BanMethodID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onabort="" onchange="show(this)">
                                    <option value="">Please select</option>
                                    @if (!(Model.BanMethodList is null))
                                    {
                                        foreach (var UbMethod in Model.BanMethodList)
                                        {
                                            <option value="@UbMethod.BanMethodID">@UbMethod.BanMethodName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>




                    @*<div class="col-sm-6">
            <div class="form-group row" perfect-class="formGroup">
                <label class="col-sm-4 col-form-label" name="labelreasonban" style="display:none">
                    <span perfect-class="formGroupLabel">Reason Ban</span>
                    <span class="text-danger">*</span>
                </label>
                <div class="col-sm-8">
                    <select class="form-control perfectValidate_string" name="ReasonBanID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" style="display:none">
                        <option value="">Please select</option>
                        @if (!(Model.ReasonBanList is null))
                        {
                            foreach (var RUbMethod in Model.ReasonBanList)
                            {
                                <option value="@RUbMethod.ReasonBanID">@RUbMethod.ReasonBanName</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>*@

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label" name="labelreasonban">
                                <span perfect-class="formGroupLabel">Reason</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <textarea class="form-control perfectValidate_textarea" perfect-class="formGroupControl" name="UserReasonBan" placeholder="" perfect-ctype="input" perfect-css="input"></textarea>
                            </div>
                        </div>

                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label" name="labelfromdate" style="display:none">
                                <span perfect-class="formGroupLabel">From Date</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date_nm" name="UbFromDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date"  max="2050-01-01" style="display:none" @*onchange="Checkdate(this)*@"/>
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label" name="labeltodate" style="display:none">
                                <span perfect-class="formGroupLabel"> To Date</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date_nm" name="UbToDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date"  max="2050-01-01" style="display:none" @*onchange="Checkdate(this)*@" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label" name="labelreasonunban" style="display:none">
                                <span perfect-class="formGroupLabel">Reason for Un Ban</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <textarea class="form-control perfectValidate_textarea_nm" perfect-class="formGroupControl" name="UserReasonUnBan" placeholder="" perfect-ctype="input" perfect-css="input" style="display:none"></textarea>

                            </div>
                        </div>

                    </div>

                </div>
                <div class="card-footer text-right" perfect-class="formFooter">
                    @if (ViewBag.PagedAccessRights.UsrrlSecurUser || ViewBag.PagedAccessRights.UsrrlAdmin)
                    {
                        <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_UserBannedForm_update(this)"><i class="fa fa-refresh fa-spin loaderClass"></i>Un Ban</button>
                    }
                    @if (ViewBag.PagedAccessRights.UsrrlSecurUser || ViewBag.PagedAccessRights.UsrrlAdmin)
                    {
                        <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_UserBannedForm_add(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Ban</button>
                    }
                        <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                    </div>
            </div>
        </form>
    </div>
</div>
<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>
<script>

    //on load functions
    //$(document).ready(function () {
    //    initFunctions('form');
    //});
    $(document).ready(function () {
        var now = new Date();

        var day = ("0" + now.getDate()).slice(-2);
        var month = ("0" + (now.getMonth() + 1)).slice(-2);

        var today = now.getFullYear() + "-" + (month) + "-" + (day);

        $('#UbFromDate').val(today);
       // $('#UbToDate').val(today);
       // initFunctions('form');
    });


    

    //function Checkdate(ele) {

    //    let $thisForm = $(ele).closest('[perfect-class="form"]');
    //    //invalid-feedback
        
    //        let upperlimit = $thisForm.find('[name="UbFromDate"]').val();
    //        let lowerlimit = $thisForm.find('[name="UbToDate"]').val();
    //        var fromDate = new Date(upperlimit);
    //        var toDate = new Date(lowerlimit);
    //        var today = new Date();
       
    //        if (fromDate.getTime() > toDate.getTime()) {

    //            console.log('inside limit check if')
    //            $thisForm.find('[name="UbToDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('To date should be greaterthan or equal to From date')
    //        }
    //        else {
    //            console.log('inside limit check else')
    //            $thisForm.find('[name="UbToDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
    //        }
    //        if (fromDate.getTime() > today.getTime()) {

    //            console.log('inside limit check if')
    //            $thisForm.find('[name="UbFromDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('From Date should be lessthan or equal to Todays date')
    //        }
    //        else {
    //            console.log('inside limit check else')
    //            $thisForm.find('[name="UbFromDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
    //        }

    //    }
    
    function show(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let banmethodid = $thisForm.find('[name=BanMethodID]').val();
        $thisForm.find('[name=labelfromdate]').hide();
        $thisForm.find('[name=UbFromDate]').hide();
        $thisForm.find('[name=labeltodate]').hide();
        $thisForm.find('[name=UbToDate]').hide();
        //$thisForm.find('[name=labelreasonban]').hide();
        //$thisForm.find('[name=UserReasonBan]').hide();
      


       // alert(banmethodid);
        if (banmethodid == 1) {

            //var now = new Date();

            //var day = ("0" + now.getDate()).slice(-2);
            //var month = ("0" + (now.getMonth() + 1)).slice(-2);

            //var today = now.getFullYear() + "-" + (month) + "-" + (day);

            $thisForm.find('[name=labelfromdate]').show();
            $thisForm.find('[name="UbFromDate"]').val(moment().format('YYYY-MM-DD'));
            //$thisForm.find('[name=UbFromDate]').show().val(today);
            $thisForm.find('[name=UbFromDate]').show();
            $thisForm.find('[name=labeltodate]').show();
            //$thisForm.find('[name=UbToDate]').show().val(today);
            //$thisForm.find('[name="UbToDate"]').val(moment().format('YYYY-MM-DD'));
            $thisForm.find('[name=UbToDate]').show();
        }
        else if(banmethodid == 2)
        {
            $thisForm.find('[name=labelfromdate]').show();
            $thisForm.find('[name="UbFromDate"]').val(moment().format('YYYY-MM-DD'));
            $thisForm.find('[name=UbFromDate]').show();
            $thisForm.find('[]')
          
        }
        //labelreasonban
        //$thisForm.find('[name=labelreasonban]').show();
        //$thisForm.find('[name=UserReasonBan]').show();

    }



    function getUserBanListClear(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[name=UsersID]').val('');
        $thisForm.find('[name=UserCode]').val('');
    }

    function getUserList(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[name=UsersID]').val('');
        $thisForm.find('[name=UserCode]').val('');
        let Branchid = { BranchID: $thisForm.find('[name=BranchID]').val() }
        //console.log("Input data",inputData)

        $.ajax({
            url: '@Url.Action("getUserList", "UserBanned")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
            type: "POST",
            data: Branchid,
            dataType: "json",
            contentType: "application/x-www-form-urlencoded;charset=utf-8",
            success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                // console.log("Data", data);

                if (ajaxOutput.Process.IsProcess) {
                    var userlistsModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['UsersID'] });
                    userlistsModel.then(function (ret) {
                        if (ret) {
                            console.log('>_ Search button > list click', ret);
                            $thisForm.find('[name=UsersID]').val(ret.UsersID);
                            $thisForm.find('[name=UserCode]').val(ret.UserCode);
                                                   }
                        else {
                            console.log(ret);
                        }
                    });
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }





            },


        });


    }

    function ResetButton(ele) {


        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let pData = $thisForm.data('pData');
        if (pData) {
            $.each(pData, function (oneKey, onevalue) {
                if ($thisForm.find('[name=' + oneKey + ']').attr('perfect-ctype') == 'date') {
                    //console.log(oneKey + '|' + onevalue + "|" + moment(onevalue).format('YYYY-MM-DD'));
                    $thisForm.find('[name=' + oneKey + ']').val(moment(onevalue).format('YYYY-MM-DD'));
                }
                else if ($thisForm.find('[name=' + oneKey + ']').attr('perfect-ctype') == 'select') {
                    $thisForm.find('[name=' + oneKey + ']').val(onevalue).selectpicker('refresh');
                }
                else {
                    // console.log(oneKey + '|' + onevalue);
                    $thisForm.find('[name=' + oneKey + ']').val(onevalue);
                }

            });
        }
        else {
            $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
            $thisForm.find('[perfect-ctype="input"]').val('');
            $thisForm.find('[perfect-ctype="date"]').val('');
        }
        $thisForm.validate().resetForm();

    }

    // Function to Add UserBanned
    //function fn_UserBannedForm_add(ele) {
    //    let $thisForm = $(ele).closest('[perfect-class="form"]');

    //    if ($thisForm.valid()) {
    //    }
    //}


    
    function fn_UserBannedForm_add(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability


        //$(ele).find('i').removeClass();

        console.log('> Add user banned form IS valid', $thisForm.valid())
        if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

            $(ele).prop('disabled', true); // avoiding form submit the double click

          //  if (ValidateAddrepdetails() <= 0) {

                var inputData = {//<---- Input Json : this is the variable we pass to controller
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    UserBannedID: 0,
                    BranchID: $thisForm.find('[name=BranchID').val().trim(),
                    UsersID: $thisForm.find('[name=UsersID]').val().trim(),
                    BanMethodID: $thisForm.find('[name=BanMethodID]').val().trim(),
                    UbFromDate: $thisForm.find('[name=UbFromDate]').val().trim(),
                    UbToDate: $thisForm.find('[name=UbToDate]').val().trim(),
                    UserReasonBan: $thisForm.find('[name=UserReasonBan]').val().trim(),


                };
           // }
            
                console.log('> Add userbanned ajax input', inputData);

                $.ajax({
                    url: "@Url.Action("AddNewUserBanned", "UserBanned")",
                    type: "POST",

                    data: inputData,//<---- Input json : data passed to controller
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                    success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                        if (ajaxOutput.Process.IsProcess) {

                            $.each(ajaxOutput.Process.Message, function (key, value) {

                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': ' User Banned Successfully' });
                            });
                            $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                            $thisForm.find('[perfect-ctype="input"]').val('');
                            $thisForm.find('[perfect-ctype="digit"]').val('');



                            let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                            if (onSuccess) {
                                window[onSuccess]($thisForm);
                            }

                            //---------- Do stuff if success

                            console.log('> Add new userbanned success data', ajaxOutput);
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                //toastr.warning(value, "Error");
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }
                    },
                    complete: function () {
                        $(ele).prop('disabled', false);
                    }

                });

            }

        }


  

    function fn_UserBannedForm_add1(ele) {

        //<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let banmethodid = $thisForm.find('[name=BanMethodID]').val();

        //$(ele).find('i').removeClass();

        console.log('> Add user banned form IS valid', $thisForm.valid())
        //<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
        if ($thisForm.valid()) {

            if ((banmethodid = 1) &&
                ($thisForm.find('[name="UbFromDate"]').val() != null && $thisForm.find('[name="UbToDate"]').val() != null)) {
                //<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                let upperlimit = $thisForm.find('[name="UbFromDate"]').val();
                let lowerlimit = $thisForm.find('[name="UbToDate"]').val();
                if (upperlimit > lowerlimit) {
                    alert('1');
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'To Date  should greater than From Date' });
                }


                //else
                //    if ((banmethodid = 2) &&
                //        ($thisForm.find('[name="UbFromDate"]').val() != null)) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                //        let upperlimit = $thisForm.find('[name="UbFromDate"]').val();
                //        var today = new Date();
                //        let lowerlimit = today;
                //        if (upperlimit > lowerlimit) {
                //            alert('2');
                //            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': ' From date should not be greater than Today ' });
                //        }
                //    }

                else {

                    $(ele).prop('disabled', true); // avoiding form submit the double click

                    //  if (ValidateAddrepdetails() <= 0) {

                    var inputData = {//<---- Input Json : this is the variable we pass to controller
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        UserBannedID: 0,
                        BranchID: $thisForm.find('[name=BranchID').val().trim(),
                        UsersID: $thisForm.find('[name=UsersID]').val().trim(),
                        BanMethodID: $thisForm.find('[name=BanMethodID]').val().trim(),
                        UbFromDate: $thisForm.find('[name=UbFromDate]').val().trim(),
                        UbToDate: $thisForm.find('[name=UbToDate]').val().trim(),
                        UserReasonBan: $thisForm.find('[name=UserReasonBan]').val().trim(),


                    };
                    // }

                    console.log('> Add userbanned ajax input', inputData);

                    $.ajax({
                        url: "@Url.Action("AddNewUserBanned", "UserBanned")",
                        type: "POST",

                        data: inputData,//<---- Input json : data passed to controller
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                        success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                            if (ajaxOutput.Process.IsProcess) {

                                $.each(ajaxOutput.Process.Message, function (key, value) {

                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': ' User Banned Successfully' });
                                });
                                $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                $thisForm.find('[perfect-ctype="input"]').val('');
                                $thisForm.find('[perfect-ctype="digit"]').val('');



                                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                if (onSuccess) {
                                    window[onSuccess]($thisForm);
                                }

                                //---------- Do stuff if success

                                console.log('> Add new userbanned success data', ajaxOutput);
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    //toastr.warning(value, "Error");
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                        },
                        complete: function () {
                            $(ele).prop('disabled', false);
                        }

                    });

                }
            }

        }
    }
    

    function ValidateAddrepdetails() {
       

        let ErrorID = $(this).attr('data-id');
            if (ErrorID != undefined) {
                if (is_empty) {

                    $('#' + ErrorID).css('display', 'block');
                    Error++;

                }
                else if (!is_empty) {
                    $('#' + ErrorID).css('display', 'none');

                }
                el.classList.toggle("is-empty", is_empty);
            }
       
        return Error;
    }

    // Function to Update UserBanned
    //function fn_UserBannedForm_update(ele) {
    //    let $thisForm = $(ele).closest('[perfect-class="form"]');

    //    if ($thisForm.valid()) {

    //    }

    //}

    function fn_UserBannedForm_update(ele) {


            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability

         //perfectCRMvalidation.init($thisForm);
      
      
            if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                $(ele).prop('disabled', true);

                let pdata = $thisForm.data('pData');

                console.log('> Update user ban form data saved',pdata);
                let inputData = {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                   
                    UserBannedID: pdata.UserBannedID,
                    BranchID: $thisForm.find('[name=BranchID').val().trim(),
                    UsersID: $thisForm.find('[name=UsersID ]').val().trim(),
                    BanMethodID: $thisForm.find('[name=BanMethodID]').val().trim(),
                    UbFromDate: $thisForm.find('[name=UbFromDate]').val().trim(),
                    UbToDate: $thisForm.find('[name=UbToDate]').val().trim(),
                    UserReasonBan: $thisForm.find('[name=UserReasonBan]').val().trim(),
                    UserReasonUnBan: $thisForm.find('[name=UserReasonUnBan]').val().trim(),
            };




                $.ajax({
                 url: "@Url.Action("UpdateUserBanned", "UserBanned")",
                type: "POST",

                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                 success: function (ajaxOutput) { //<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                     if (ajaxOutput.Process.IsProcess) {

                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.success(value, "Success");
                             NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'User UnBanned Successfully' });
                         });


                         let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                         if (onSuccess) {
                             window[onSuccess]();
                         }

                         //---------- Do stuff if success
                         //toastr.success("Inside success", "Confirmation Box in table");

                         console.log('> update new Un ban  success data', ajaxOutput);
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }


                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }

            });

        }

        }

</script>



