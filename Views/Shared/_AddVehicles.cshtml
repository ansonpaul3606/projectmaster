

@model PerfectWebERP.Models.Vehicles.VehicleView
<div class="card ">
    <div class="card-header">
        <h4 class="card-title col-12">@ViewBag.PageTitle </h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()

                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Purchase Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" id="TransDate" class="form-control perfectValidate_date" name="TransDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" />
                            </div>
                        </div>
                    </div>
                    @*<div class="col-sm-4">

            <div class="form-group row" perfect-class="formGroup">
                <label class="col-sm-4 col-form-label">
                    <span perfect-class="formGroupLabel">Maker</span>
                    <span class="text-danger">*</span>
                </label>
                <div class="col-sm-8">
                    <select class="form-control perfectValidate_string" placeholder="Please Select" name="FK_Maker" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                        <option value="">Please select</option>
                        @if (!(Model.MakeList is null))
                        {
                            foreach (var sector in Model.MakeList)
                            {
                                <option value="@sector.FK_Maker">@sector.MakeName</option>
                            }
                        }
                    </select>
                </div>
            </div>

        </div>*@

                    <div class="col-sm-4">
                        <input type="hidden" name="ID_Vehicle" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Category</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" placeholder="Please Select" name="FK_Category" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please select</option>
                                    @if (!(Model.CategoryList is null))
                                    {
                                        foreach (var category in Model.CategoryList)
                                        {
                                            <option value="@category.FK_Category">@category.CategoryName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>

                    </div>

                    <div class="col-sm-4">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Manufacture</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" placeholder="Please Select" name="FK_Manufacturer" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please select</option>
                                    @if (!(Model.ManufacturerList is null))
                                    {
                                        foreach (var category in Model.ManufacturerList)
                                        {
                                            <option value="@category.FK_Manufacturer">@category.ManufactureName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>

                    </div>

                    <div class="col-sm-4">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Brand</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" placeholder="Please Select" name="FK_Brand" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please select</option>
                                    @if (!(Model.BrandList is null))
                                    {
                                        foreach (var sector in Model.BrandList)
                                        {
                                            <option value="@sector.FK_Brand">@sector.BrandName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>

                    </div>
                    <div class="col-sm-4">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Model</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" placeholder="Please Select" name="FK_Model" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please select</option>
                                    @if (!(Model.ModelList is null))
                                    {
                                        foreach (var category in Model.ModelList)
                                        {
                                            <option value="@category.FK_Model">@category.ModelName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>

                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Supplier</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control" name="SupplierName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                    <input type="hidden" name="SupplierID" class="form-control perfectValidate_string" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        <button id="depeartment" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this, 20, 'Supplier List', [], ['SupplierID', 'SupplierName','CustomeName']);" Criterea1="0" Criterea2="0" Criterea3="Mode" BindName="SupplierName" BindVal="SupplierID"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Vehicle Number</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_string " placeholder="" minlength="5" maxlength="13" name="VehicleNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>

                    </div>


                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Registration Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" id="Year" class="form-control perfectValidate_date" name="Year" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" onchange="fndatecheck(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>

                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">

                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Chassis Number</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_string " placeholder="" name="ChasssisNo" perfect-class="formGroupControl" perfect-ctype="input" maxlength="17" perfect-css="input" />
                            </div>
                        </div>

                    </div>

                    <div class="col-sm-4" id="fuelamt">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Fuel Type</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">

                                    <select class="form-control perfectValidate_string " name="LogFuelType" perfect-selectButtonAction="testing" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                        <option value="">Please Select </option>

                                        @if (!(Model.ActionStatusList is null))
                                        {
                                            foreach (var actlist in Model.ActionStatusList)
                                            {
                                                <option value="@actlist.ID_Mode">@actlist.ModeName </option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="invalid-feedback animated" style="display: block;"></div>
                            </div>
                        </div>
                    </div>
                    <input type="hidden" name="Mode" value="V" />
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Amount</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control text-right Subproduct" maxlength="12" placeholder="" name="VehAmount" id="VehAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'VehAmount',3)" perfect-tempTable-cstatus="PaperAmount" onchange="totalamountcalc(this); CheckAmount(this);" />

                            </div>

                        </div>
                    </div>
                    <div class="col-sm-4 TaxDisable">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                &nbsp;&nbsp;&nbsp;
                                <span perfect-class="formGroupLabel">Tax</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control text-right" placeholder="" name="TaxAmount" perfect-class="formGroupControl" perfect-ctype="input" onchange="totalamountcalc(this)" perfect-css="input" maxlength="10" readonly />

                                    <div class="input-group-append">
                                        <button id="TaxButton" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="ShowTax(this,1)"></button>
                                        <div class="modal fade" perfect-class="formGroupModalTax" id="formGroupModalTax">
                                            <div class="modal-dialog modal-dialog-centered" role="document">
                                                <div class="modal-content  rounded-0">
                                                    <div class="modal-header border-0">
                                                        <h5 class="modal-title">Tax Details</h5>
                                                        <button type="button" class="close" data-dismiss="modal">
                                                            <span>&times;</span>
                                                        </button>
                                                    </div>
                                                    <table id="zero_config" class="table mb-0  table-striped  text-black">
                                                        <thead class="bg-primary text-white">
                                                            <tr>
                                                                <th class="t-head">SlNo</th>
                                                                <th class="t-head" style="Display:none">ID_TaxType</th>
                                                                <th class="t-head">TaxType</th>

                                                                <th class="t-head text-right">Amount</th>




                                                            </tr>
                                                        </thead>
                                                        <tbody class="modal-body" id="formGroupModalTaxbody"></tbody>
                                                        <tfoot>
                                                        </tfoot>
                                                    </table>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-primary1" data-dismiss="modal" onclick="BindTaxAmount(this)">OK</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <span class="temptableError"></span>
                                <div class="col-sm-8 ml-2">
                                    <input type="checkbox" class="form-check-input" name="IncludeTax" id="taxinclude" perfect-class="formCheckInput" perfect-tempTable-Purchase="IncludeTax" perfect-ctype="checkbox" perfect-css="checkbox" onchange="totalamountcalc(this)"><span perfect-class="formCheckInputText">Include Tax</span>

                                </div>
                            </div>

                        </div>

                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Other Charges</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control text-right" name="OtherCharge" id="OtherChargeVehicle" perfect-class="formGroupControl" onchange="totalamountcalc(this)" perfect-ctype="input" perfect-css="input" readonly>
                                    <div class="input-group-append">
                                        <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-credit-card" type="button" perfect-css="button" onclick="fn_showOtherCharges(vehicleTransMode, VehicleID, 'OtherChargeVehicle')"></button>
                                    </div>
                                    <div class="modal fade" perfect-class="formGroupModalOtherCharge" id="formGroupModalOtherCharge">
                                        <div class="modal-dialog modal-dialog-centered" role="document">
                                            <div class="modal-content  rounded-0">
                                                <div class="modal-header border-0">
                                                    <h5 class="modal-title">Other Charge Details</h5>
                                                    <button type="button" class="close" data-dismiss="modal">
                                                        <span>×</span>
                                                    </button>
                                                </div>
                                                <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">

                                                    <table id="zero_configOthercharge" class="table mb-0  table-striped  text-black">
                                                        <thead class="bg-primary text-white">
                                                            <tr>
                                                                <th class="t-head">SlNo</th>
                                                                <th class="t-head" style="display:none">ID_OtherChargeType</th>
                                                                <th class="t-head">Type</th>
                                                                <th class="t-head">Trans Type</th>
                                                                <th class="t-head text-right">Amount</th>

                                                            </tr>
                                                        </thead>
                                                        <tbody id="formGroupModalOtherChargebody"></tbody>
                                                        <tfoot>
                                                        </tfoot>
                                                    </table>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-primary light" data-dismiss="modal" onclick="BindOtherChargeAmount(this)">Apply</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Net Amount</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control text-right" placeholder="" name="VehNetAmount" id="VehNetAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="12" oninput="decimalpnt(this,'VehNetAmount',3)" readonly />

                            </div>

                        </div>
                    </div>
                    <div class="col-sm-4 DivBillType" style="display:@ViewBag.Display">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Bill Type</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control " name="BillTypeID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please Select </option>
                                    @if (!(Model.BillTypeListView is null))
                                    {
                                        foreach (var BillType in Model.BillTypeListView)
                                        {
                                            <option value="@BillType.BillTypeID">@BillType.BillType</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4" style="display:@ViewBag.Display">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">Payment Method</label>
                            <div class="col-sm-5">
                                <div class="input-group">

                                    <div class="input-group-append">
                                        &nbsp;<button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-money" type="button" perfect-css="button" title="Add Payment Method" onclick="GetPaymentlists(this)"></button>

                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>


                    <div class="modal fade" perfect-class="formGroupModalpayment" id="formGroupModalpayment">
                        <div class="modal-dialog  modal-dialog-centered modal-md" role="document">
                            <div class="modal-content">
                                <div class="modal-header border-0">
                                    <h5 class="modal-title">Payment Method</h5>
                                    <button type="button" class="close" data-dismiss="modal">
                                        <span>&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                                    <div class="row">


                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">Method <span class="text-danger">*</span></label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <select class="form-control" perfect-tempTable-Payment="PaymentMethod" name="PaymentMethod" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                            <option value="">Please Select </option>


                                                            @if (!(Model.PaymentView is null))
                                                            {
                                                                foreach (var Module in Model.PaymentView)
                                                                {
                                                                    <option value="@Module.PaymentmethodID">@Module.Name</option>
                                                                }
                                                            }
                                                        </select>


                                                    </div>
                                                    <div class="text-danger temptableError"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">
                                                    <span perfect-class="formGroupLabel">Ref No.</span>

                                                </label>
                                                <div class="col-sm-8">

                                                    <div class="input-group">
                                                        <input type="text" class="form-control " perfect-tempTable-Payment="Refno" name="Refno" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="140" />

                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">
                                                    <span perfect-class="formGroupLabel">Amount</span>
                                                    <span class="text-danger">*</span>
                                                </label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <input type="text" class="form-control perfectValidate_string_nm text-right" perfect-tempTable-Payment="PAmount" id="PAmount" name="PAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'PAmount',3)" onchange="Pamount(this)" maxlength="12" />

                                                    </div>
                                                    <div class="text-danger temptableError"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-9">


                                        </div>
                                        <div class="col-sm-3 text-right">
                                            <div class="input-group">

                                                <div class="input-group-append">
                                                    <div>
                                                        <button type="button" class="btn btn-primary1 " onclick="createtable(this,'Payment',['PaymentMethod'],paytableOptionsTempOut)"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                        <button class="btn btn-light1" type="button" onclick="productclear(this, 'Payment')"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <label class="col-sm-4 col-form-label">
                                                    <span perfect-class="formGroupLabel" style="font-weight:500;">Bal. Amount :</span>

                                                </label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">

                                                        <label class="col-form-label">
                                                            <span perfect-class="formGroupLabel" style="font-weight:500;" name="BalAmt"></span>
                                                        </label>
                                                        @*<input type="text" class="form-control" perfect-temptable-payment="BalAmt" name="BalAmt" perfect-class="" perfect-ctype="input" perfect-css="input" readonly="" style="border:white;background:white;font-weight: 500;">*@
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                        <div class="col-sm-12">
                                            <div class="form-group row" perfect-class="formGroup">

                                                <div class="table-responsive" perfect-tempTable-Payment="" perfect-tempTable="Payment" id="Paymentdethead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                                <div class="text-danger temptableError"></div>

                                            </div>
                                        </div>


                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-primary light" onclick="Billttlnetchck(this)">Apply</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="row">
                    @*File Upload*@
                    <div class="col-sm-6">

                        <div class="form-group row" perfect-class="formGroup">
                            <div class="col-sm-8">
                                <div id="prdimg" class="tab-pane active" style="padding-left:12px">
                                    <div class="row">
                                        <div class="col-sm-10">
                                            <div class="form-group row" perfect-class="formGroup">
                                                <div class="upload-btnup-wrapper">
                                                    <button type="button" id="btndocsUpload" class="btnup btn"><span class="accordion__header--text">Upload Documents</span></button>

                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @* End File Upload*@

                </div>

                <div class="card-footer text-right" perfect-class="formFooter">
                    @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                    {
                        <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="UpdateVehicle(this,'Update')"><i class="fa fa-refresh fa-spin  loaderClass"></i>Update</button>
                    }
                    @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                    {
                        <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="UpdateVehicle(this,'Add')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                    }
                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
                </div>
            </div>
         </form>

    </div>

</div>
<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>
<script>

    var PssfupDocsList = [];
    
    (function () {
        jQuery("select").selectpicker();

    })();

    function CheckAmount(ele){
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        debugger
        if (parseFloat($thisForm.find('[name="VehAmount"]').val()) > 0) {
            $('#TaxButton').attr("disabled", false);
            $('#taxinclude').attr("disabled", false);
        }
        else {
            $('#TaxButton').attr("disabled", "disabled");  
            $('#taxinclude').attr("disabled", "disabled");
            $thisForm.data({ pDataTax: null });
            Taxlist = [];
            $thisForm.find('[name=TaxAmount]').val('');
            $thisForm.find('[perfect-tempTable= "Payment"]').empty();
            $thisForm.find('[name=BalAmt]').text((0).toFixed(2));
            $thisForm.find('[name="BillTypeID"]').val("").selectpicker('refresh');
            $thisForm.find('[name="IncludeTax"]').prop('checked', false);
        }

    }
    function decimalpnt(ele, id, range) {
        debugger
        let input = $('#' + id);

        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
        
        $(document).on('keydown', '#' + id, function (event) {
            
            if (ele.value.includes('.')) {

            }
            else if (ele.value === '.' && (event.key === '.' || event.keyCode === 190)) {
                ele.value = '0.00'; // Change the value to '0.00' if only a dot is entered
                 // Prevent the dot from being entered in the input field
            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {                
                if (ele.value.indexOf('.') < 0 && ele.value.indexOf('.') !== 9 && ele.value.length > 8) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }

    function ShowTax(ele, mod) {
        debugger
        Taxcalled = 1;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let taxinfo = {};
        if ($thisForm.data('pDataTax')) {

            if ($thisForm.data('pDataTax').length > 0) {

                Taxlist = $thisForm.data('pDataTax');
            }
            BindTaxDetails("1", 'formGroupModalTax', ele, mod)

            if (mod == 1) {
                $('#formGroupModalTax').modal('show');
            }
            else {
                $('#formGroupModalTax').modal('hide');
            }
        }
        else {
            BindTaxDetails("1", 'formGroupModalTax', ele, mod)
        }


    }
    var Taxlist = [];
     function BindTaxDetails(Mode, ModalID, ele) {
         let $thisForm = $(ele).closest('[perfect-class="form"]');

        var InputData =
        {
            FK_Company: $thisForm.find('[name=FK_Company]').val(),
        }

        $.ajax({
            url: "@Url.Action("GetTaxAmount", "Vehicles")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                     if (ajaxOutput.Process.IsProcess) {
                         var CheckListHTML = '';
                         let sum = 0;
                         if (ajaxOutput.Data.length > 0) {

                             $.each(ajaxOutput.Data, function (i, value) {

                                 sum = sum + parseFloat(value.TaxAmount);
                                 if (Taxlist != '') {
                                     $.each(Taxlist, function (key, value1) {
                                         if (value1.FK_TaxType == value.ID_TaxType) {
                                             value.TaxAmount = value1.TaxAmount;
                                         }
                                     });

                                 }
                                 CheckListHTML += "<tr>";
                                 CheckListHTML += "<td>" + value.SlNo + "</td>";
                                 CheckListHTML += "<td class='jq_taxType_td' Style='Display:none'>" + value.ID_TaxType + "</td>";
                                 CheckListHTML += "<td class='jq_taxTypeName_td'>" + value.TaxTyName + "</td>";
                                 CheckListHTML += "<td class='jq_taxamount_td' ><input  class='form-control text-right'   type='text'  value='" + (value.TaxAmount).toFixed(2) + "' " + `perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  maxlength="12" id="Taxinput" name="Taxinput" oninput="decimalpnt(this,'Taxinput',3)"` +" onchange='changetaxamount(this)'/></td> /></td>";

                                 CheckListHTML += "</tr>";
                             })
                         }
                         else {
                             CheckListHTML += "<div class='form-group col-md-6'>";
                             CheckListHTML += "<div class='form-check mb-2'>";
                             CheckListHTML += "<input type='checkbox' class='form-check-input' >"
                             CheckListHTML += "<label class='form-check-label' for='check1'>No Records...</label>";
                             CheckListHTML += "</div></div>"
                         }


                         $("#formGroupModalTaxbody").html(CheckListHTML)
                         $('#formGroupModalTax').modal('show');
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                },
                complete: function () {
                    $(ele).prop('disabled', false);
                }
            });
    }
    function changetaxamount(ele) {
        //var row = $(this).closest("tr");
        //let $modal = $(ele).closest('.modal');

        //$modal.find('table tbody').find('tr').each(function () {
        //    let value = isNaN(row.find('.jq_taxamount_td').find('input').val()) ? 0 : row.find('.jq_taxamount_td').find('input').val();
        //    row.find('.jq_taxamount_td').find('input').val(Number(value).toFixed(2));        
        //});
        
    }
    function BindTaxAmount(element) {
        console.log('inside binddatat fn')
        let $modal = $(element).closest('.modal');
        let $thisForm = $(element).closest('[perfect-class="form"]');
        let sum = 0;
        Taxlist = [];
        $modal.find('table tbody').find('tr').each(function () {
            let value = parseFloat($(this).find('.jq_taxamount_td').find('input').val());
            if ($(this).find('.jq_taxamount_td').find('input').val() == '' || $(this).find('.jq_taxamount_td').find('input').val() == null || $(this).find('.jq_taxamount_td').find('input').val() == ".") {
                parseFloat($(this).find('.jq_taxamount_td').find('input').val(0));
            }
            sum = parseFloat(sum) + parseFloat($(this).find('.jq_taxamount_td').find('input').val());

            let TaxAmount = {
                FK_TaxType: $(this).find('.jq_taxType_td').text(),
                TaxtyName: $(this).find('.jq_taxTypeName_td').text(),
                TaxAmount: parseFloat($(this).find('.jq_taxamount_td').find('input').val()),
            };
            Taxlist.push(TaxAmount);
            $thisForm.data({ pDataTax: Taxlist });

        });
        $thisForm.find('[name=TaxAmount]').val(Number(sum).toFixed(2));
        totalamountcalc(element);
    }



    function checkpurrateTax(ele) {
        debugger
        ShowTax(ele, 1);


    }
    function totalamountcalc(ele) {
        debugger

        let $thisForm = $(ele).closest('[perfect-class="form"]');


        let otheramt = 0;
        let Amount = 0;
        let tax = 0;
        otheramt = $thisForm.find('[name="OtherCharge"]').val() == "" ? "0" : $thisForm.find('[name="OtherCharge"]').val();
        Amount = $thisForm.find('[name="VehAmount"]').val() == "" ? "0" : $thisForm.find('[name="VehAmount"]').val();
        tax = $thisForm.find('[name="TaxAmount"]').val() == "" ? "0" : $thisForm.find('[name="TaxAmount"]').val();
       
        let netamount = 0;
        if ($('#taxinclude').is(":checked")) {
            netamount = parseFloat(Amount) + parseFloat(otheramt);
            $thisForm.find('[name="VehNetAmount"]').val(parseFloat(netamount).toFixed(2));
        }
        else {
            netamount = parseFloat(Amount) + parseFloat(tax) + parseFloat(otheramt);            
            $thisForm.find('[name="VehNetAmount"]').val(parseFloat(netamount).toFixed(2));
        }
        //for payment method
        $thisForm.find('[name=VehNetAmount]').val(netamount.toFixed(2));
        let billamt = 0;
        let bilamt = 0;

        bilamt = netamount;
        $('#Paymentdethead').find('tbody tr').each(function (index, ele) {
            billamt += parseFloat($(ele).find('.PAmount').text());
        });
        bilamt = parseFloat(bilamt) - billamt;

        $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));
        
        //for payment method/////end
    }

    function fndatecheck(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let Year = $thisForm.find('[name="Year"]').val();



        Year = new Date(Year);
        Year.setHours(0, 0, 0, 0)

        let today = new Date();
        today.setHours(0, 0, 0, 0);

        console.log('Year', Year)

        console.log('today', today)

        if (Year > today) {

            console.log('inside limit check if')
            $thisForm.find('[name="Year"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Registration date should be less than or equal to Todays date')
            return false;

        }

        else {
            console.log('inside limit check else')
            $thisForm.find('[name="Year"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('');
            return true;
        }
    }
    //function checkpurTaxInclude(ele) {
    //    let $thisForm = $(ele).closest('[perfect-class="form"]');
    //    let VehNetAmount = $thisForm.find('[name="VehNetAmount"]').val();
    //    let VehAmount = $thisForm.find('[name="VehAmount"]').val();
    //    let TaxAmount = $thisForm.find('[name="TaxAmount"]').val();
    //    let IncludeTax = $thisForm.find('[name="IncludeTax"]').val();

    //    //debugger
    //    //if (VehAmount != null || VehAmount != '') && (UnitID != null || UnitID != '') && (ProductID != null || ProductID != 0 || ProName != '')) {
    //    //    TaxInclude(ele);
    //    //    //Taxdet(ele);
    //    //}
    //    //else if ((PpdRate == null || PpdRate == '') && (PpdQuantity == null || PpdQuantity == '') && (UnitID == null || UnitID == '') && (ProductID == null || ProductID == 0 || ProName == '')) {
    //    //    NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': "Please Select Product" });
    //    //}
    //    //else if ((PpdRate == null || PpdRate == '') && (PpdQuantity == null || PpdQuantity == '') && (UnitID == 0 || UnitID == '')) {
    //    //    $('#taxinclude').not(":checked")
    //    //    NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': "Please Select Unit" });

    //    //}
    //    //else if ((PpdRate == null || PpdRate == '') && (PpdQuantity == null || PpdQuantity == '')) {
    //    //    $('#taxinclude').not(":checked")
    //    //    NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': "Please Enter Quantity" });

    //    //}
    //    //else if (PpdRate == null || PpdRate == '') {
    //    //    $('#taxinclude').not(":checked")
    //    //    NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': "Please Enter Purchase Rate" });
    //    //}

    //}


    $("#btndocsUpload").click(function () {
        let $thisForm = $(this).closest('[perfect-class="form"]');
        let MasterId = $thisForm.find('[name="ID_Vehicle"]').val() ==""? "0" : $thisForm.find('[name="ID_Vehicle"]').val();
        let header = "Documents";
        OpenModalForUpload(MasterId,PaperrenewTransMode,header);
    })

    function BindOtherChargeAmount(ele) {
        console.log('inside binddatat fn')
        let $modal = $(ele).closest('.modal');
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let sum = 0;
        othrchargelst = [];
        $modal.find('table tbody').find('tr').each(function () {

            let value = parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val());
            if ($(this).find('.jq_OtherChagAmnt_td').find('input').val() == '' || $(this).find('.jq_OtherChagAmnt_td').find('input').val() == null || $(this).find('.jq_OtherChagAmnt_td').find('input').val() == ".") {
                value = 0;
                parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val(0));
            }

            if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 0) {
                value = value * 0;
            }
            else if (parseInt($(this).find('.jq_TransType_td').find('select').val()) == 1) {
                value = value * 1;
            }
            else {
                value = value * 1;
            }
            sum = parseFloat(sum) + value;

            let othrcharge = {
                ID_OtherChargeType: $(this).find('.jq_ID_OtherChargeType_td').text(),
                OctyTransType: $(this).find('.jq_TransType_td').find('select').val(),
                OctyAmount: parseFloat($(this).find('.jq_OtherChagAmnt_td').find('input').val())
            };
            othrchargelst.push(othrcharge);
            $thisForm.data({ pOthrChgData: othrchargelst });
            console.log('othrchargelst', othrchargelst)

        });

        $thisForm.find('[name=OtherCharge]').val(parseFloat(sum).toFixed(2));
        totalamountcalc(ele);
    }
    var othrchargelst = [];

    function ShowOtherCharges(ele, mode) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');

        if ($thisForm.data('pOthrChgData')) {

            if ($thisForm.data('pOthrChgData').length > 0) {

                othrchargelst = $thisForm.data('pOthrChgData');
            }
            console.log('othrchargelst', othrchargelst);

        }

        BindChargeDetails(ele, mode)


    }
     function BindChargeDetails(ele, mode) {

        var InputData =
           {
            TransMode: '@ViewBag.TransMode',
           }


        $.ajax({
            url: "@Url.Action("GetOtherCharges", "Vehicles")",
            type: "Get",
            data: InputData,
            dataType: "json",
            contentType: "application/json",
            success: function (ajaxOutput) {
                if (ajaxOutput.OtherCharges.Process.IsProcess) {
                         var CheckListHTML = '';

                         if (ajaxOutput.OtherCharges.Data.length > 0) {

                             $.each(ajaxOutput.OtherCharges.Data, function (i, value) {

                                 let options = ''
                                     if (othrchargelst != '') {

                                         $.each(othrchargelst, function (key, value1) {

                                             if (value1.ID_OtherChargeType == value.ID_OtherChargeType) {

                                                 value.OctyAmount = value1.OctyAmount;
                                                 $.each(ajaxOutput.Transtypelist.Data, function (i, valuea) {
                                                     if (valuea.TransTypeID.toString() == value1.OctyTransType) {

                                                         options += '<option value=' + valuea.TransTypeID + ' selected="selected">' + valuea.TransType + '</option>'
                                                     }
                                                     else {
                                                         options += '<option value=' + valuea.TransTypeID + '>' + valuea.TransType + '</option>'
                                                     }
                                                 });
                                             }


                                         });

                                     }
                                     else
                                     {

                                         $.each(ajaxOutput.Transtypelist.Data, function (i, valuea) {
                                             options += '<option value=' + valuea.TransTypeID + '>' + valuea.TransType + '</option>'
                                         });
                                         

                                     }
                                 
                                 let $dropdown = '<select class="form-control"name="selector" id="selector" >' + options + '</select>';
                                 CheckListHTML += "<tr>";
                                 CheckListHTML += "<td>" + value.SlNo + "</td>";
                                 CheckListHTML += "<td Class='jq_ID_OtherChargeType_td' Style='Display:none'>" + value.ID_OtherChargeType + "</td>";
                                 CheckListHTML += "<td Class='jq_Type_td'>" + value.OctyName + "</td>";
                                 CheckListHTML += "<td class='jq_TransType_td'>" + $dropdown + "</td>";
                                 CheckListHTML += "<td class='jq_OtherChagAmnt_td' ><input  class='form-control text-right'  type='text'  value='" + Number(value.OctyAmount).toFixed(2) + "' ' maxlength='12' " + ` id="othercharge" name="othercharge"  oninput="decimalpnt(this,'othercharge',3)"` + "'/></td> /></td>";

                                 CheckListHTML += "</tr>";
                             })
                         }
                         else {
                             CheckListHTML += "<div class='form-group col-md-6'>";
                             CheckListHTML += "<div class='form-check mb-2'>";
                             CheckListHTML += "<label class='form-check-label' for='check1'>No Records...</label>";
                             CheckListHTML += "</div></div>"
                         }
                         //let $model = createSearchModalDOM();
                         //$model.modal.find('.modal-body').append(CheckListHTML);
                         //$model.show

                    $("#formGroupModalOtherChargebody").html(CheckListHTML)

                    if (mode == 0) {
                        $('#formGroupModalOtherCharge').modal({ backdrop: 'static', keyboard: false })
                     $('#formGroupModalOtherCharge').modal('show');
                    }
                    else {

                       $('#formGroupModalOtherCharge').modal('hide');
                    }


                     }
                else {

                    $.each(ajaxOutput.OtherCharges.Process.Message, function (key, value) {
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            },
                complete: function () {
                    $(ele).prop('disabled', false);
                  //  $('select').selectpicker('refresh');
                }
        });
    }
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 46 || charCode === 47 || charCode > 57)) {
            return false;
        }
        return true;
    }
    //function validateInput(input) {
    //    const maxLength = 10;
    //    const decimalPlaces = 2;

    //    if (input.length > maxLength) {
    //        return false; // maximum length exceeded
    //    }

    //    const decimalIndex = input.indexOf('.');
    //    if (decimalIndex !== -1) {
    //        const decimalLength = input.length - decimalIndex - 1;
    //        if (decimalLength > decimalPlaces) {
    //            return false; // too many decimal places
    //        }
    //    }

    //    if (decimalIndex === 0) {
    //        return false; // no digits before decimal point
    //    }

    //    if (decimalIndex !== -1 && decimalIndex < input.length - 1) {
    //        const remainingDigits = input.slice(decimalIndex + 1);
    //        if (!/^\d+$/.test(remainingDigits)) {
    //            return false; // non-numeric characters after decimal point
    //        }
    //    }

    //    if (!/^\d+(\.\d{0,2})?$/.test(input)) {
    //        return false; // non-numeric characters or invalid decimal format
    //    }

    //    return true; // input is valid
    //}

    function Taxdet(ele, Arr) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        //let $modal = $thisForm.find('#zero_config');

        let UID = $('[name=UID]').val(cnt);



        $modal.find('tbody').find('tr').each(function () {
            //alert($thisForm.find('[name=ProductID]').val());
            let taxinfo = {};
            taxinfo['UID'] = $('[name=UID]').val();
            taxinfo['ID_Vehicle'] = $('[name=ID_Vehicle]').val();
            taxinfo['FK_TaxType'] = $(this).find('.jq_taxType_td').text();
            taxinfo['TaxTyName'] = $(this).find('.jq_taxTypeName_td').text();
            taxinfo['TaxPercentage'] = $(this).find('.jq_taxPer_td').text();
            taxinfo['TaxAmount'] = $(this).find('.jq_taxamount_td').find('input').val();
            console.log('taxinfo', taxinfo);



            tax.push(taxinfo);
            //alert('TAX DET')
        });
        console.log('TAX>', tax);
    }

    function UpdateVehicle(ele,actiontype) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        var todaydate = new Date().toISOString().split('T')[0];
        document.getElementsByName("TransDate")[0].setAttribute('min', todaydate);
        document.getElementsByName("TransDate")[0].setAttribute('min', 1900- 01-01);
        let Year = $thisForm.find('[name="Year"]').val();
        Year = new Date(Year);
        Year.setHours(0, 0, 0, 0)

        let today = new Date();
        today.setHours(0, 0, 0, 0);

        debugger

        let validpay = true;
        let ValidPaymentcheck =@ViewBag.Status;
        if (ValidPaymentcheck==1) {
            if ((parseFloat($thisForm.find('[name="VehNetAmount"]').val())) > 0) {
                if (BillAmountbind(ele)) {
                    validpay = true;
                }
                else {
                    validpay = false;
                }
                $thisForm.find('[name="BillTypeID"]').addClass('perfectValidate_string');
            }
            else if ($thisForm.find('[name="VehNetAmount"]').val() == "" || $thisForm.find('[name="VehNetAmount"]').val() == 0 ) {
                $thisForm.find('[name="BillTypeID"]').removeClass("perfectValidate_string");
            }
        }

        if (Year > today) {

            console.log('inside limit check if')
            $thisForm.find('[name="Year"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Registration date should be less than or equal to Todays date')
        }
        else {

            if ($thisForm.valid()) {
                if (validpay) {

                    let $modal2 = $thisForm.find('#zero_configOthercharge');
                    let OtherCharge = [];
                    $modal2.find('tbody').find('tr').each(function () {

                        let OtChargeinfo = {};
                        OtChargeinfo['ID_OtherChargeType'] = $(this).find('.jq_ID_OtherChargeType_td').text();

                        OtChargeinfo['OctyTransType'] = $(this).find('.jq_TransType_td').find('select').val();
                        OtChargeinfo['OctyName'] = $(this).find('.jq_Type_td').text();
                        OtChargeinfo['OctyAmount'] = $(this).find('.jq_OtherChagAmnt_td').find('input').val();
                        console.log('OtChargeinfo', OtChargeinfo);
                        OtherCharge.push(OtChargeinfo);

                    });
                    let $modal = $thisForm.find('#zero_config');

                    let tax = [];
                    $modal.find('tbody').find('tr').each(function () {

                        let taxinfo = {};
                        taxinfo['ID_Vehicle'] = $thisForm.find('[name=ID_Vehicle]').val();
                        taxinfo['FK_TaxType'] = $(this).find('.jq_taxType_td').text();
                        taxinfo['TaxTyName'] = $(this).find('.jq_taxTypeName_td').text();
                        taxinfo['TaxPercentage'] = $(this).find('.jq_taxPer_td').text();
                        taxinfo['TaxAmount'] = $(this).find('.jq_taxamount_td').find('input').val();
                        console.log('taxinfo', taxinfo);

                        tax.push(taxinfo);

                    });

                    let paymentdetails = [];
                    $thisForm.find('[perfect-tempTable="Payment"]').find('tbody').find('tr').each(function () {
                        paymentdetails.push($(this).data('pData'));
                    })




                    $(ele).prop('disabled', true);

                    var inputData = {
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        'ID_Vehicle': isNaN(parseInt($thisForm.find('[name=ID_Vehicle]').val())) ? 0 : parseInt($thisForm.find('[name=ID_Vehicle]').val()),
                        'VehVehicleNo': $thisForm.find('[name=VehicleNo]').val().trim(),
                        'VehRegDate': $thisForm.find('[name=Year]').val().trim(),
                        'VehChasisNo': $thisForm.find('[name=ChasssisNo]').val().trim(),
                        'VehNetAmount': $thisForm.find('[name=VehNetAmount]').val().trim(),
                        'VehAmount': $thisForm.find('[name=VehAmount]').val().trim(),
                        'FK_Model': $thisForm.find('[name=FK_Model]').val().trim(),
                        //'FK_Maker': $thisForm.find('[name=FK_Maker]').val().trim(),
                        'FK_Brand': $thisForm.find('[name=FK_Brand]').val().trim(),
                        'FK_Category': $thisForm.find('[name=FK_Category]').val().trim(),
                        'FK_Manufacturer': $thisForm.find('[name=FK_Manufacturer]').val().trim(),
                        'FK_Fuel': $thisForm.find('[name="LogFuelType"]').val(),
                        'ImageList': PssfupDocsList,
                        'TransMode': PaperrenewTransMode,
                        'TaxDetails': Taxlist,
                        'OtherChgDetails': OtherCharge,
                        'PaymentDetail': paymentdetails,
                        'FK_BillType': $thisForm.find('[name=BillTypeID]').val(),
                        'IncludeTax': $thisForm.find('[name="IncludeTax"]').is(':Checked'),
                        'FK_Supplier': $thisForm.find('[name=SupplierID]').val(),
                        'TransDate': $thisForm.find('[name=TransDate]').val(),
                    };
                    let _ActionUrl = "";
                    if (actiontype == "Add") { _ActionUrl = "@Url.Action("AddVehicle", "Vehicles")"; } else { _ActionUrl = "@Url.Action("UpdateVehicle", "Vehicles")"; }

                    $.ajax({
                        url: (actiontype == "Add") ? "@Url.Action("AddVehicle", "Vehicles")" : "@Url.Action("UpdateVehicle", "Vehicles")",
                        type: "POST",
                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (data) {

                            if (data.Process.IsProcess) {

                                $.each(data.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                });
                                $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                $thisForm.find('[perfect-ctype="input"]').val('');
                                $thisForm.find('[perfect-ctype="date"]').val('');
                                $thisForm.find('[perfect-ctype="hidden"]').val('');


                                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                if (onSuccess) {
                                    initialloadVehicleform();
                                }
                            }

                            else {
                                $.each(data.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                        },
                        complete: function () {
                            $(ele).prop('disabled', false);
                        }
                    });
                }
                else {
                    $(ele).prop('disabled', false);
                    NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'In Payment Method Balance Amt. Should be  Zero ' });
                }
            }
        }
    }

    function ResetButton() {
        initialloadVehicleform();
    }


    ////////Payment Method/////////
    function GetPaymentlists(ele) {
        debugger
        $('#formGroupModalpayment').modal({ backdrop: 'static', keyboard: false })

        $('#formGroupModalpayment').modal('show');

    }


    function Billttlnetchck(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let balamt = $thisForm.find('[name=BalAmt]').text();


        if (parseFloat(balamt) == 0) {
            $('#formGroupModalpayment').modal('hide');
            $thisForm.find('[perfect-tempTable="Payment"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('');
        }
        else {

            $thisForm.find('[perfect-tempTable="Payment"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Balance Amt. should be Zero');

        }
    }



    var paytableOptionsTempOut = {
        iconButton: {
            buttons: [

                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    class: "btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';

                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);

                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');

                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }

                                else {

                                    $thisNode.val(savedData[pf_name]);
                                }

                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }


                        });



                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    class: "btnPerfectGridDelete",
                    action: function () {
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            //$thistbl.dataTable({ paging: true, searchbtn: false });
                        }
                        else {
                            $thistbl.remove();
                        }
                        BillAmountbind($tablecontainer);
                    }
                },
            ]
        },

        rowAttribute: [],
        onlyShowColumn: ['PAmount', 'Refno', 'PaymentMethod_d'],
        renameHeader: { "PAmount": "Amount1R", "Refno": "Ref No", "PaymentMethod_d": "Method" },
        hideColumn: ['BalAmt'],
        serialNo: true,

    };

    function Pamount(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let amtp = $thisForm.find('[name="PAmount"]').val() == "" ? "0" : $thisForm.find('[name="PAmount"]').val();
        $thisForm.find('[name="PAmount"]').val(parseFloat(amtp).toFixed(2));
        //salroundoff(ele);
    }
    function validpaymntdetail(ele, tableKey, errorClass, isValid) {
        debugger

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val() == null) {

            isValid = false
            console.log('false', $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val());
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Payment Method');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val() <= 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val() == '' || $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val() == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').val() == undefined) {
            console.log('false', $thisForm.find('[perfect-tempTable-' + tableKey + '="PaymentMethod"]').val());
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter a value greater than 0');
        }
        else {

            $thisForm.find('[perfect-tempTable-' + tableKey + '="PAmount"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }


        return isValid;

    }

    function createtable(ele, tkey, uniq = [], tableOptionsTempOut) {

        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';

        //make index

        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        console.log('tableOptionsTemp.rowAttribute', tableOptionsTemp.rowAttribute)
        let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {
            //means update
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            //insert
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }
        //
        if (tableKey == 'Warranty') {

            isValid = validwartdetail(ele, tableKey, errorClass, isValid);
        }
        else if (tableKey == 'Payment') {
            isValid = validpaymntdetail(ele, tableKey, errorClass, isValid);
        }
        else if (tableKey == 'Purchase') {
            isValid = validsaledetail(ele, tableKey, errorClass, isValid);
        }

        if (unique.length > 0) {

            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }
                }

            })

            unique.forEach(function (key, i) {

                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');

                let atname = $thisEle.attr('name');
                let cvalue;

                if ($thisEle.length != 0) {
                    console.log('len', $thisEle)
                    let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    let errmessage = key + " Already exits"

                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();

                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); console.log('cvalue ->', cvalue); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else { cvalue = $thisEle.val(); }

                    if (prevData.find(a => a[atname] == cvalue)) {
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });

        }

        console.log('isValid', isValid);

        if (isValid) {
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');

                if ($this.is('select')) {


                    tableOptionsTemp.hideColumn.push(nameAttr)

                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }

                    insertData[nameAttr] = $this.val();
                    $this.val('').selectpicker('refresh');
                }
                else if ($this.is('input')) {

                    insertData[nameAttr] = $this.val();
                    if (nameAttr == "prodtid") { }
                    else if (nameAttr == "stkid") { }
                    else {
                        $this.val('');
                    }
                }

            });

            if (isNew) {
                //this section nake table.table row
                if ($tblcontainer.find('table').length == 0) {
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                }
                else {
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                }

            }
            else {
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
            }

            $tblcontainer.attr('perfect-tempTable-action', 0);

            if (tableKey == 'Warranty') {
            }
            else if (tableKey == 'Payment') {
                debugger
                BillAmountbind(ele);
            }
            else if (tableKey == 'Purchase') {
                $thisForm.find('[name=prdbtn]').removeAttr("disabled", "disabled")
                $thisForm.data({ pwarranty: warrantydetails });
                $thisForm.data({ addpImageselect: $thisForm.data('pImageselect') });
                BindBilldetails(ele);
            }
        }
    }


    function BillAmountbind(ele) {
        debugger
        let $thisForm = $('[perfect-class="form"]');
        let netamt = $thisForm.find('[name="VehNetAmount"]').val() == "" ? 0 : $thisForm.find('[name="VehNetAmount"]').val();
        let billamt = 0;
        let bilamt = 0;

        if ($thisForm.find('[name=BalAmt]').text() == '') {
            bilamt = 0;
        }
        else {
            bilamt = netamt;
        }

        $('#Paymentdethead').find('tbody tr').each(function (index, ele) {

            billamt += parseFloat($(ele).find('.PAmount').text());

        });

        bilamt = parseFloat(bilamt) - parseFloat(billamt);

        $thisForm.find('[name=BalAmt]').text(bilamt.toFixed(2));

        if (bilamt == 0) {

            return true;

        }
        else {

            return false;

        }
    }

    /////////Payment Method////////

    function fillTableSales(ele, tkey, data, tableOptionsTempOut) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableOptionsTempfill = tableOptionsTempOut;
        let insertData = []
        let tableKey = tkey;
        let indexname = tkey + 'index';
        tableOptionsTempfill.rowAttribute.push(indexname);
        tableOptionsTempfill.hideColumn.push(indexname);
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $.each(data, function (keyOne, valOne) {

            let pData = {};

            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');

                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {

                        tableOptionsTempfill.hideColumn.push(nameAttr);

                        pData[nameAttr + '_d'] = $this.find('[value="' + valOne[nameAttr] + '"]').text();
                        pData[nameAttr] = valOne[nameAttr];


                    }
                    else if ($this.is('input')) {
                        let inputType = $this.attr('type').toLocaleLowerCase();

                        if (inputType == 'date') {

                            if (valOne[nameAttr] == null) {
                                pData[nameAttr] = valOne[nameAttr];
                            }
                            else {
                                pData[nameAttr] = moment(valOne[nameAttr]).format('YYYY-MM-DD');
                            }
                        }
                        else {
                            pData[nameAttr] = valOne[nameAttr];
                        }
                    }
                    else {
                        pData[nameAttr] = valOne[nameAttr];
                    }
                }
            });

            insertData.push(pData);

        });
        $tblcontainer.empty();
        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTempfill));

    }

    $("#pssModalOtherCharges").on('hide.bs.modal', function () {
        $("#OtherChargeVehicle").trigger("change");
    });
</script>