
@model PerfectWebERP.Models.WalkingCustomerModel.WalkingCustomerPartialModel
<div class="card ">
    <div class="card-header">
        <h4 class="card-title col-12">@ViewBag.PageTitle</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>

    <div class="card-body">

        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">

            @Html.AntiForgeryToken()

            <div class="row">

                <div class="col-sm-6">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Customer Name</span>
                            <span class="text-danger">*</span>
                        </label>
                        <div class="col-sm-8">
                            <input type="hidden" name="ID_WalkingCustomer" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                           
                            <input type="text" class="form-control perfectValidate_name " placeholder="" name="CustomerName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="150" />
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Phone</span>
                        </label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control perfectValidate_mobile_nm" placeholder="" name="CustomerPhone" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="14" oninput="this.value = this.value.replace(/[^0-9 ()&]/g, '').replace(/\*(?=\.)*/g, '$1');" onblur="getMobileData(this)" />
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Assigned To</span>
                            <span class="text-danger">*</span>
                        </label>
                        <div class="col-sm-8">
                            <div class="input-group">
                                <input type="hidden" class="form-control" name="FK_AssignedTo" perfect-ctype="hidden" />
                                <input type="hidden" class="form-control" name="FK_AssignedToBranch" perfect-ctype="hidden" />
                                <input type="text" class="form-control perfectValidate_string" placeholder="" name="AssignedTo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                <div class="input-group-append">
                                    <button id="addEmployee-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,102,'Employee Details',[],['Branchs','BranchTypeID','FK_Departement','Department','BranchType','SLNo'])" Criterea2="FK_BranchType" BindName="AssignedTo" BindVal="FK_AssignedTo"Function="1"></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Assigned Date</span>
                            <span class="text-danger">*</span>
                        </label>
                        <div class="col-sm-8">
                            <input type="date" class="form-control perfectValidate_date" name="AssignedDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date"onchange="datecheck(this)" />
                            <div class="invalid-feedback temptableErrors"></div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Description</span>
                        </label>
                        <div class="col-sm-8">
                            <textarea class="form-control" perfect-class="formGroupControl" name="Description" rows="1" placeholder="" perfect-ctype="input" perfect-css="input" oninput="this.value = this.value.replace(/[^A-Za-z0-9,. ()&]/g, '').replace(/\*(?=\.)*/g, '$1');" maxlength="250"></textarea>
                        </div>
                    </div>
                </div>


            </div>


            <div class="row">


                <div class="col-sm-12 mt-2">

                    <div class="table-responsive" id="cstatusTable" perfect-tempTable="cstatus" perfect-tempTable-lastindex="0" perfect-tempTable-action="0">

                    </div>
                </div>

            </div>


            <div class="card-footer text-right" perfect-class="formFooter">
                <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="UpdateWalkingCustomer(this,'update')"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="UpdateWalkingCustomer(this,'new')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
            </div>

            @*//modal*@



            <div class="modal fade" id="modalFeedback" data-backdrop="static" data-keyboard="false" tabindex="1000" dialogeindex="0">
                <div class="modal-dialog modal-lg" role="dialog">

                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title Deliveryassign">Update Details</h5>

                            <button type="button" class="close" data-dismiss="modal">
                                <span>×</span>
                            </button>
                        </div>



                        @*<div class="form-group row" id="TopDetails">*@
                        <div class="row " style="padding:20px;">
                            <div class="col-sm-12">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Assigned To</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <div class="input-group">
                                            <input type="hidden" class="form-control" name="FK_AssignedT" perfect-ctype="hidden" />
                                            <input type="hidden" class="form-control" name="FK_AssignedToBranch2" perfect-ctype="hidden" />
                                            <input type="text" class="form-control " placeholder="" name="AssignedT" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                            <div class="input-group-append">
                                                <button id="addEmployee-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,102,'Employee Details',[],['Branchs','BranchTypeID','FK_Departement','Department','BranchType','SLNo'])" Criterea2="FK_AssignedToBranch" BindName="AssignedT" BindVal="FK_AssignedT"></button>
                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </div>

                            <div class="col-sm-12">
                                <div class="form-group row" perfect-class="formGroup">
                                    <label class="col-sm-4 col-form-label">
                                        <span perfect-class="formGroupLabel">Follow Up Date</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="date" class="form-control " name="FollowUpDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" onchange="onChangeFollowdate()" id="followUpDateInput"  />
                                        <div id="FollowUpDate-error" class="invalid-feedback animated fadeInUp" style="display: none;">Please Enter Assigned Date</div>
                                  
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <button style="text-align:right" id="updateModal_" type="button" class="btn btn-primary mr-3" perfect-css=" button" onclick="onModalUpdate(this)">Update</button>
                               
                            </div>

                           
                        </div>




                    </div>

                </div>


            </div>

        </form>
    </div>
</div>
<script>
    var $thisForm;
    function ResetButton(ele) {
        loadWalkingCustomerAddForm();
    }
    function UpdateWalkingCustomer(ele, actionType) {
        debugger
        
        $thisForm = $(ele).closest('[perfect-class="form"]');

        let leadByMobileNoList = [];

        $thisForm.find('[perfect-tempTable="cstatus"]').find('tbody').find('tr').each(function () {
            $(this).data('pData').FollowUpDate = convertToDate($(this).data('pData').FollowUpDate);
            leadByMobileNoList.push($(this).data('pData'));
        });

        let upperlimit = $thisForm.find('[name="AssignedDate"]').val();
        let datevalid = 0;
        isValid = false;
        var enqDate = new Date(upperlimit);
        enqDate.setHours(0, 0, 0, 0)
        var today = new Date();
        today.setHours(0, 0, 0, 0)
        let errorclass = '.temptableErrors';
        if (enqDate.getTime() > today || enqDate.getTime() < today) {

            console.log('inside limit check if')
            $thisForm.find('[name="AssignedDate"]').closest('[perfect-class="formGroup"]').find(errorclass).attr("style", "display:block");
            $thisForm.find('[name="AssignedDate"]').closest('[perfect-class="formGroup"]').find(errorclass).text('Only Todays Date Allowed');
            isValid = false;
        }
        else {
            $thisForm.find('[name="AssignedDate"]').closest('[perfect-class="formGroup"]').find(errorclass).attr("style", "display:none");
            $thisForm.find('[name="AssignedDate"]').closest('[perfect-class="formGroup"]').find(errorclass).text('');
            isValid = true;
        }
      
        if (leadByMobileNoList.length > 0 && isValid==true ) {
            const $AssignedDate = new Date(moment($thisForm.find('[name="AssignedDate"]').val()).format('YYYY-MM-DD'));
            let _ID_WalkingCustomer = 0;
            let _ActionUrl = "";

            if (actionType === "new") {
                _ID_WalkingCustomer  = 0;
                _ActionUrl = "@Url.Action("AddWalkingCustomer", "WalkingCustomer")";
            }
            else if (actionType === "update") {
                _ID_WalkingCustomer = $thisForm.find('[name="ID_WalkingCustomer"]').val();
                _ActionUrl = "@Url.Action("UpdateWalkingCustomer", "WalkingCustomer")";
            }

            $(ele).prop('disabled', true);

            var inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                ID_WalkingCustomer: _ID_WalkingCustomer,
                CustomerName: $thisForm.find('[name=CustomerName]').val().trim(),
                CustomerPhone: $thisForm.find('[name=CustomerPhone]').val().trim(),
                FK_AssignedTo: $thisForm.find('[name=FK_AssignedTo]').val().trim(),
                AssignedDate: $thisForm.find('[name=AssignedDate]').val(),
                Description: $thisForm.find('[name=Description]').val().trim(),
                LastID: LastID_WalkinCustomer,
                leadByMobileNoItems: leadByMobileNoList

            };
            clearSessionValue(LastIDSessionKeyWalkin);
                $.ajax({
                    url: _ActionUrl,
                    type: "POST",
                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                    success: function (ajaxOutput) {
                        if (ajaxOutput.Process.IsProcess) {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                            });
                            $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                            $thisForm.find('[perfect-ctype="input"]').val('');
                            $thisForm.find('[perfect-ctype="number"]').val('');
                            $thisForm.find('[perfect-ctype="hidden"]').val('');
                            WalkingCustomerInitialLoad();
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }
                    },
                    complete: function () {
                        $(ele).prop('disabled', false);
                    }
                });
        } else {
            let upperlimit = $thisForm.find('[name="AssignedDate"]').val();
            let datevalid = 0;
            isValid = false;
            var enqDate = new Date(upperlimit);
            enqDate.setHours(0, 0, 0, 0)
            var today = new Date();
            today.setHours(0, 0, 0, 0)
            let errorclass = '.temptableErrors';
            if (enqDate.getTime() > today || enqDate.getTime() < today) {

                console.log('inside limit check if')
                $thisForm.find('[name="AssignedDate"]').closest('[perfect-class="formGroup"]').find(errorclass).attr("style", "display:block");
                $thisForm.find('[name="AssignedDate"]').closest('[perfect-class="formGroup"]').find(errorclass).text('Only Todays Date Allowed');
                isValid = false;
            }
            else {
                $thisForm.find('[name="AssignedDate"]').closest('[perfect-class="formGroup"]').find(errorclass).attr("style", "display:none");
                $thisForm.find('[name="AssignedDate"]').closest('[perfect-class="formGroup"]').find(errorclass).text('');
                isValid = true;
            }
            if ($thisForm.valid() && isValid ==true ) {

         
            const $AssignedDate = new Date(moment($thisForm.find('[name="AssignedDate"]').val()).format('YYYY-MM-DD'));
            let _ID_WalkingCustomer = 0;
            let _ActionUrl = "";

            if (actionType === "new") {
                _ID_WalkingCustomer  = 0;
                _ActionUrl = "@Url.Action("AddWalkingCustomer", "WalkingCustomer")";
            }
            else if (actionType === "update") {
                _ID_WalkingCustomer = $thisForm.find('[name="ID_WalkingCustomer"]').val();
                _ActionUrl = "@Url.Action("UpdateWalkingCustomer", "WalkingCustomer")";
            }

            $(ele).prop('disabled', true);

            var inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                ID_WalkingCustomer: _ID_WalkingCustomer,
                CustomerName: $thisForm.find('[name=CustomerName]').val().trim(),
                CustomerPhone: $thisForm.find('[name=CustomerPhone]').val().trim(),
                FK_AssignedTo: $thisForm.find('[name=FK_AssignedTo]').val().trim(),
                AssignedDate: $thisForm.find('[name=AssignedDate]').val(),
                Description: $thisForm.find('[name=Description]').val().trim(),
                LastID: LastID_WalkinCustomer,
                leadByMobileNoItems: leadByMobileNoList,


                };
                clearSessionValue(LastIDSessionKeyWalkin);
                $.ajax({
                    url: _ActionUrl,
                    type: "POST",
                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                    success: function (ajaxOutput) {
                        if (ajaxOutput.Process.IsProcess) {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                            });
                            $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                            $thisForm.find('[perfect-ctype="input"]').val('');
                            $thisForm.find('[perfect-ctype="number"]').val('');
                            $thisForm.find('[perfect-ctype="hidden"]').val('');
                            WalkingCustomerInitialLoad();
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }
                    },
                    complete: function () {
                        $(ele).prop('disabled', false);
                    }
                });
         }
        }
        
    };


    function ComDetailsTable_Fill(ele, tkey, data, tableOptionsTempOut) {
       
        let $thisForm = $(ele);





        let tableOptionsTemp = tableOptionsTempOut;
        let insertData = []
        let tableKey = tkey;

        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);


        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');


        $.each(data, function (keyOne, valOne) {

            let pData = {};

            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])

            var headers = ['LeadNo','Customer', 'ID_LeadGenerateProduct', 'Mobile', ',Product', 'Action', 'AssignedTo', 'FollowUpDate', 'FK_Employee'];
            //$thisForm.find($tblcontainer).each(function () {
            headers.forEach((data,i) => {


               // alert('inst')
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('name', valOne[data])
               


                pData[data] = valOne[data];

            });

            insertData.push(pData);
            //console.log('insertdata', insertData)



        });

        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTemp));
        // $tblcontainer.find('table').dataTable({ paging: true });

        //console.log(bdata[0].FollowUpDate, 'bdata[0].FollowUpDate...');
        //console.log((convertToDate(bdata[0].FollowUpDate)).toString(), 'bdata[0].FollowUpDate...>>>>')


    }
    var tableOptionsTempOut = {

        iconButton: {
            buttons: [

                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        debugger

                        let savedData = $(this).closest('tr').data('pData')

                        callModel(savedData.cstatusindex);

                    }
                },
                {
                    icon: "fa fa-commenting-o btnPerfectGridComment",
                    action: function () {

                        let savedData = $(this).closest('tr').data('pData');
                        let cindex = savedData.cstatusindex;
                        let index = cindex - 1;
                        let button = document.createElement("button");
                        

                        var bb = savedData.SlNo;
                        
                        button.setAttribute("data-reciverID", bdata[index].ID_Users);
                        button.setAttribute("data-LeadGenerateID", @Model.ID_Users);
                        ShowNotificationCreation(button);
                    },

                },
            ]
        },


        onlyShowColumn: ["Customer", "Action", "AssignedTo", "Mobile", "Product", "FollowUpDate","LeadNo"],
        hideColumn: [],
        serialNo: true,
        renameHeader: {"Customer": "Customer", "Mobile": "Mobile", "Action": "Action", "AssignedTo": "Assigned To", "FollowUpDate": "FollowUp Date" },
        rowAttribute: [],
        isCheckType: [],
        isDateType: ['FollowUpDate']
    };
    var bdata;

    var $thisForm1;
    function getMobileData(els) {
        debugger
        var table = document.querySelector("#cstatusTable > table");
        if (table) table.remove();




         $thisForm1 = $(els).closest('[perfect-class="form"]');
        let inputData = {
            'MobileNo': $('input[name="CustomerPhone"]').val(),
                'FK_Company': null,

        };

            datapdf = inputData;
            let pageUrl = '@Url.Action("GetMobileData", "WalkingCustomer")';
            $.ajax({
                url: pageUrl,
                type: "POST",
                data: inputData,
                dataType: "json",
                contentType: "application/x-www-form-urlencoded;charset=utf-8",
                success: function (ajaxOutput) {
                    console.log(ajaxOutput, '--ajaxOutput---')
                    if (ajaxOutput.Process.IsProcess) {

                        bdata = ajaxOutput.Data;
                        clearfields();
                        ComDetailsTable_Fill($thisForm1, 'cstatus', ajaxOutput.Data, tableOptionsTempOut);
                    } else {
                      
                      
                        var table = document.querySelector("#cstatusTable > table");

                        table.remove();
                    }



                },
                complete: function () {

                }
            });
    };
    function clearfields() {
        $('input[name="CustomerName"]').val('');
        $('input[name="Description"]').val('');
        $('input[name="AssignedTo"]').val('');
        $('input[name="FK_AssignedToBranch"]').val('');
    }
    function callModel(i) {
        debugger
        let index = i - 1;
        console.log(bdata, 'bdata>><<');
        //let dt = convertToDate(bdata[index].FollowUpDate) ? (convertToDate(bdata[index].FollowUpDate)).toString() : '';
        let dt = bdata[index].FollowUpDate ? bdata[index].FollowUpDate : '';
        //if (!moment.isDate(dt)) {
        //    const parts = dt.split("/");
        //    if (parts.length > 0) {
        //        switch (parts[2].length) {
        //            case 4:
        //                dt = new Date(parts[2], parts[1] - 1, parts[0]);
        //                break;
        //            case 2:
        //                dt = new Date(parts[0], parts[1] - 1, parts[2]);
        //                break;
        //        }
        //    }


        //}       
        var Dates = moment(dt).format('YYYY-MM-DD');
        var maxDate = moment().format('YYYY-MM-DD');
        if (Dates < maxDate) { Dates = maxDate };
        $('input[name="FollowUpDate"]').val(Dates);
            $('input[name="AssignedT"]').val(bdata[index].AssignedTo);

        onChangeFollowdate();
       
        $('#modalFeedback').modal('show');
        

        document.querySelector('#modalFeedback').setAttribute("dialogeindex", index);

      
          //  bdata[0].FK_Employee = $('input[name="FK_AssignedT"]').val();
    }
    function onModalUpdate(els) {
       
        if ($('input[name="FollowUpDate"]').val() == '') {
            return null
        } else if ($('input[name="AssignedT"]').val() == '') {
            return null
        }

        let index = document.querySelector('#modalFeedback').getAttribute("dialogeindex");

        //console.log(bdata[0], 'bdata');
        bdata[index].FollowUpDate = $('input[name="FollowUpDate"]').val(),
            bdata[index].AssignedTo = $('input[name="AssignedT"]').val(),
            bdata[index].FK_Employee = $('input[name="FK_AssignedT"]').val();



       // var table = document.querySelector("#WalkingCustomer-form > div > div.card-body > form > div:nth-child(4) > div > div > table");
        var table = document.querySelector("#cstatusTable > table");
        table.remove();



        ComDetailsTable_Fill($thisForm1, 'cstatus', bdata, tableOptionsTempOut);
        $('#modalFeedback').modal('hide');
    }


    function convertToDate(dateString) {

        var dateRegex = /^\/Date\(\d+\)\/$/;

        if (dateRegex.test(dateString)) {
            var timestamp = dateString.match(/\d+/)[0];

            var date = new Date(parseInt(timestamp));


            var year = date.getFullYear();
            var month = (date.getMonth() + 1).toString().padStart(2, '0');  // Adding leading zero if necessary
            var day = date.getDate().toString().padStart(2, '0');  // Adding leading zero if necessary

            // Formatting the date components into a readable string
            var formattedDate = year + '-' + month + '-' + day;

            return formattedDate;

        } else {
           
            var date = new Date(dateString);

            // Check if the parsed date is valid
            if (isNaN(date)) {
                console.error('Invalid date. Please provide a valid date.');
                return null;
            }
            var year = date.getFullYear().toString(); // Get the last two digits of the year
            var month = (date.getMonth() + 1).toString().padStart(2, '0'); // Add leading zero if necessary
            var day = date.getDate().toString().padStart(2, '0'); // Add leading zero if necessary

            return year + '-' + month + '-' + day;
        }


    };

    //function onChangeFollowdate() {
    //    debugger
    //    if ($('input[name="FollowUpDate"]').val() != '') {
    //        $('#FollowUpDate-error').hide();
    //       // document.querySelector('#updateModal_').setAttribute('disabled', false);onModalUpdate
    //    } else {
    //        $('#FollowUpDate-error').show();
    //        //document.querySelector('#updateModal_').setAttribute('disabled', true);

    //    }
    //    var currentDate = new Date().toISOString().split('T')[0];
    //    document.getElementById('followUpDateInput').max = currentDate;
    //    //$('input[name="FollowUpDate"]').val() ? $('#FollowUpDate-error').hide() : $('#FollowUpDate-error').show()
    //}
    function onChangeFollowdate() {
        if ($('input[name="FollowUpDate"]').val() != '') {
            $('#FollowUpDate-error').hide();
        } else {
            $('#FollowUpDate-error').show();
        }

        var currentDate = new Date().toISOString().split('T')[0];
        $('#followUpDateInput').attr('min', currentDate);
    }
   
    function datecheck(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
       
        let upperlimit = $thisForm.find('[name="AssignedDate"]').val();
       
        var enqDate = new Date(upperlimit);
       
        var today = new Date();

        if (enqDate.getTime() > today || enqDate.getTime() < today) {

            $thisForm.find('[name="AssignedDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Only Todays Date Allowed')
        }
        else {
            console.log('inside limit check else')
            $thisForm.find('[name="AssignedDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
        }
    }
    function getfunction(ele)
    {

        let $thisForm = $(ele).closest('[perfect-class="form"]');


        if ($thisForm.find('[name="AssignedTo"]').val() != null || $thisForm.find('[name="AssignedTo"]').val()!= "") {

           
            $thisForm.find('[name="AssignedTo"]').closest('[perfect-class="formGroup"]').find('#AssignedTo-error').attr("style", "display:none");
            $thisForm.find('[name="AssignedTo"]').closest('[perfect-class="formGroup"]').find('#AssignedTo-error').text('');
           
        }
        else {
            $thisForm.find('[name="AssignedTo"]').closest('[perfect-class="formGroup"]').find('#AssignedTo-error').attr("style", "display:block");
          
           
        }

    }
</script>