


<!DOCTYPE html>
<html lang="en">

@{
    string version = "v 1.0.6.5";
}
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="keywords" content="" />
    <meta name="author" content="" />
    <meta name="robots" content="" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="Perfect: WebTemplate" />
    <meta property="og:title" content="Perfect: WebTemplate" />
    <meta property="og:description" content="Perfect: WebTemplate" />
    <meta property="og:image" content="" />
    <meta name="format-detection" content="telephone=no">
 
    <title>Persuite</title>


    <!-- Favicon icon -->
    <link rel="icon" type="image/png" sizes="16x16" href="~/Content/images/faviconNew.png">


    @*@Styles.Render("~/Content/css")*@



    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/icons/font-awesome-old/css/font-awesome.min.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/icons/material-design-iconic-font/css/materialdesignicons.min.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/icons/themify-icons/css/themify-icons.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/icons/line-awesome/css/line-awesome.min.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/icons/avasta/css/style.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/icons/flaticon/flaticon.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/vendor/aos/css/aos.min.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/vendor/perfect-scrollbar/css/perfect-scrollbar.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/vendor/metismenu/css/metisMenu.min.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/css/style.css")" />

    <link href="~/Assets/css/style.css" rel="stylesheet">
    @*<link href="~/Assets/css/breadcrumb.css" rel="stylesheet" />*@
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/css/search.css")" />


    @*<link rel="stylesheet" href="css/search.css">*@

    @* --- External plugin css referance  --- *@
    @Styles.Render("~/Content/externalPluginCSS")
    @Styles.Render("~/Content/datatablePluginCSS")


    @Styles.Render("~/Content/perfectERPTemplateCSS")
    @* --- Css created --- *@
    @Styles.Render("~/Content/perfectERP/css")

    @Scripts.Render("~/bundles/modernizr")<!--Default thing-->


    <style>

        /*File Upload*/
        .modal-wxl {
            max-width: 1361px;
        }

        .upload-btnup-wrapper {
            position: relative;
            overflow: hidden;
            display: inline-block;
        }

        .btnup {
            border: 2px solid gray;
            color: gray;
            background-color: white;
            padding: 8px 20px;
        }

        .media {
            margin: 2px;
        }

        .upload-btnup-wrapper input[type=file] {
            font-size: 50px;
            position: absolute;
            left: 0;
            top: 0;
            opacity: 0;
        }

        .cmplogo {
            width: 100px !important;
            height: 50px !important;
        }






    </style>
    
</head>

<body>

    <!--*******************
        Preloader start
    ********************-->
    <div id="preloader">
        <div class="sk-three-bounce">
            <div class="sk-child sk-bounce1"></div>
            <div class="sk-child sk-bounce2"></div>
            <div class="sk-child sk-bounce3"></div>
        </div>
    </div>
    <!--*******************
        Preloader end
    ********************-->
    <!--**********************************
        Main wrapper start
    ***********************************-->
    <div id="main-wrapper">

        <!--**********************************
            Nav header start
        ***********************************-->
        <div class="nav-header">
            <a class="brand-logo">

                <img src="~/assets/images/logo-full.png" class="logo-lg d-none d-sm-none d-lg-block">
                <img src="~/assets/images/logo.png" class="logo-sm  d-lg-none w-80">
            </a>
            <div class="nav-control">
                <div class="hamburger">
                    <span class="line"></span><span class="line"></span><span class="line"></span>
                </div>
            </div>
        </div>
        <!--**********************************
            Nav header end
        *********************************9o[[\\**-->
        @*<div id="jq_sidemenu" class="sidebar-right">
                <div class="bg-overlay"></div>

                <div class="sidebar-right-inner">
                    <h4><span class="jq_sidemenu_title">Manage Jobs</span> <a onclick="closeMenu()" class="btn btn-primary btn-sm pull-right">&times; Close</a></h4>

                    <div class="admin-settings overflow-auto">
                        <div class="row jq_sidemenu_navbutton">

                        </div>
                        <div class="row">
                            <div class="col-xl-12 col-lg-12 jq_sidemenu_body">

                            </div>
                        </div>
                    </div>
                </div>
            </div>*@
        @* ---------- Side menu ------- *@
        <div class="dz-demo-panel" id="jq-sidemenu">
            <div class="bg-close"></div>

            @*<a class="dz-demo-trigger" data-toggle="tooltip" data-placement="right" data-original-title="" href="javascript:void(0)">*@

            @*<svg stroke="currentColor" class="layer" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" height="26" width="26" xmlns="http://www.w3.org/2000/svg">
                    <polygon points="12 2 2 7 12 12 22 7 12 2"></polygon>
                    <polyline points="2 17 12 22 22 17"></polyline>
                    <polyline points="2 12 12 17 22 12"></polyline>
                </svg>*@
            <a title="To close list">
                <svg onclick="fn_showListHide()" style="margin-right: 30px;margin-top: 3px;" class="close" stroke="var(--perfect-primary)" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" height="26" width="26" xmlns="http://www.w3.org/2000/svg"><circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line></svg>

            </a>
            <div class="dz-demo-inner">
                <div class="dz-demo-header jq-sidemenu-title"><h4></h4></div>
                <div class="dz-demo-content text-center row jq-sidemenu-body d-block" id="inner-sidemenu">

                </div>
            </div>
        </div>
        @* ---------- Side menu ------- *@
        <!--**********************************
            Chat box start
        ***********************************-->
        <div class="chatbox">
            <div class="chatbox-close"></div>
            <div class="custom-tab-1">


            </div>


        </div>
        <!--**********************************
            Chat box End
        ***********************************-->
        <!--**********************************
            Header start
        ***********************************-->
        <div class="header">
            <div class="header-content">
                <nav class="navbar navbar-expand">
                    <div class="collapse navbar-collapse justify-content-between persuite__header">

                        <div class="header-left">
                            <div class="dashboard_bar">
                                <a href="@Url.Action("Dashboard","Home")">
                                    @{
                                        string companyimage = Html.Action("CompanyLogoInfo", "Home").ToString();


                                        if (companyimage == "")
                                        {

                                            <div class="cmpnamelogo" id="Idcmpnamelogo"style=" ">
                                                @Html.Action("CompanyLogonameInfo", "Home")
                                              
                                            </div>

                                        }
                                        else
                                        {
                                            <div class="cmplogo" id="Idcmplogo">
                                                <img src="@Html.Action("CompanyLogoInfo", "Home")" class="client-logo" style="height:45px;width:200px;margin-top:7px;">
                                            </div>

                                        }
                                    }
                                </a>
                            </div>
                        </div>



                        <ul class="navbar-nav header-right">
                            <li class="nav-item">
                                <div class="input-group search-area d-xl-inline-flex d-none">
                                    <input type="text" class="form-control" placeholder="Search Pages.." id="menuSearchPerfect">
                                    <div class="input-group-append">
                                        <button class="input-group-text" data-toggle="dropdown" onclick="fn_menuListPerfect()" id="btnmenuSearchPerfect"><i class="flaticon-381-search-2"></i></button>
                                        <div class="dropdown-menu dropdown-menu-right" style="border: 0.01px solid lightgrey;">
                                            <div id="DZ_W_Notification1" class="widget-media dz-scroll p-3 ps search-area">
                                                <ul class="timeline" id="ulSearchMenu" style="overflow-y: scroll;height:400px;"></ul>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </li>

                            <li class="nav-item dropdown notification_dropdown">
                                <a class="nav-link bell bell-link" href="#">
                                    <i class="fa fa-comments" aria-hidden="true"></i>
                                    <span class="badge light text-white bg-primary rounded-circle">@*18*@</span>
                                </a>
                            </li>
                            <li class="nav-item dropdown notification_dropdown">
                                <a class="nav-link  ai-icon" href="#" role="button" data-toggle="dropdown">
                                    <i class="fa fa-bell" aria-hidden="true"></i>
                                    <span class="badge light text-white bg-primary rounded-circle" id="spanNotificationCount">@Html.Action("NotificationCount", "Home")</span>
                                </a>
                                <div class="dropdown-menu dropdown-menu-right">
                                    <div id="DZ_W_Notification1" class="widget-media dz-scroll p-3 ps">
                                        <ul class="timeline" id="ulNotificationList"></ul>
                                        <div class="ps__rail-x" style="left: 0px; bottom: 0px;"><div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 0px;"></div></div><div class="ps__rail-y" style="top: 0px; right: 0px;"><div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div></div>
                                    </div>
                                    <a class="all-notification" href="@Url.Action("Index","Notification")">See all notifications <i class="ti-arrow-right"></i></a>
                                </div>
                            </li>
                            <li class="nav-item dropdown header-profile">
                                <a class="nav-link" href="#" role="button" data-toggle="dropdown" aria-expanded="false">
                                    <div class="header-info persutie__user">
                                        <span class="text-black">@Html.Action("Userinfo", "Home")</span>
                                        <p class="fs-12 mb-0">@Html.Action("UserRole", "Home")</p>
                                    </div>

                                    @{
                                        string userimage = Html.Action("UserImage", "Home").ToString();
                                        if (userimage == "" || userimage == null)
                                        { <img src="~/Assets/images/profile/17.jpg" width="20" alt="">
                                        }
                                        else
                                        {
                                            <img src="@Html.Action("UserImage", "Home")" width="20" alt="">
                                        }
                                    }

                                </a>
                                <div class="dropdown-menu dropdown-menu-right">

                                    <a href="#" class="dropdown-item ai-icon" onclick="ShowProfile();">
                                        <svg id="icon-user1" class="text-primary" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg>
                                        <span class="ml-2">Profile </span>
                                    </a>
                                    @*<a href="email-inbox.html" class="dropdown-item ai-icon">
                                            <svg id="icon-inbox" class="text-success" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path><polyline points="22,6 12,13 2,6"></polyline></svg>
                                            <span class="ml-2">Inbox </span>
                                        </a>*@
                                    <a href="@Url.Action("LogOut","Security")" class="dropdown-item ai-icon" onclick="sessionclr()">
                                        <svg id="icon-logout" class="text-danger" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path><polyline points="16 17 21 12 16 7"></polyline><line x1="21" y1="12" x2="9" y2="12"></line></svg>
                                        <span class="ml-2">Logout </span>
                                    </a>


                                </div>
                            </li>
                        </ul>
                    </div>
                </nav>
            </div>
        </div>
        <!--**********************************
            Header end ti-comment-alt
        ***********************************-->
        <!--**********************************
            Sidebar start
        ***********************************-->
        <!---Profile Modal---->

        <div class="modal fade show" id="modalGrid" style="display:none; padding-right: 17px;" aria-modal="true">
            <div class="modal-dialog modal-lg" style="transition: transform 1.3s ease-out;" role="document">
                <div class="modal-content">
                    @*<div class="modal-header">
                            <h5 class="modal-title"></h5>
                            <button type="button" class="close" data-dismiss="modal">
                                <span>×</span>
                            </button>
                        </div>*@
                    <div class="modal-body" style="border-bottom: 0px solid #ffffff !important;">
                        @Html.Action("UserProfile", "Home")
                    </div>
                    <div class="modal-footer">

                        <button type="button" class="close" data-dismiss="modal">
                            <span style="font-size:15px">Close</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!---End---->
        <!---Notification Create Modal---->


        <div class="modal fade" id="modalNotificationCreation" data-backdrop="static" data-keyboard="false" tabindex="1000">
            <div class="modal-dialog modal-dialog-centered modal-md" role="dialog">
                <div class="modal-content">
                    <div class="modal-header border-0">
                        <h5 class="modal-title">Notification</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group row" perfect-class="formGroup">
                                    <input type="hidden" id="NotificationReciverID" />
                                    <input type="hidden" id="NotificationLeadGenerateID" />
                                    <input type="hidden" id="NotificationTmode" />


                                    <input type="text" class="form-control" placeholder="Please Enter Title" id="NotificationTitlemake" />
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="form-group row" perfect-class="formGroup">
                                    <textarea class="form-control" rows="6" id="PerfectNotificationMsgmake" placeholder="Please Enter Message Content..."></textarea>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="fn_NotificationCreation()">
                            Submit
                        </button>
                    </div>
                </div>
            </div>
        </div>



        <!---End---->
        <!---Notification Modal---->


        <div class="modal fade" id="modalNotification" data-backdrop="static" data-keyboard="false" tabindex="1000">
            <div class="modal-dialog modal-dialog-centered modal-md" role="dialog">
                <div class="modal-content">
                    <div class="modal-header border-0">
                        <h5 class="modal-title">Notification</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="updateNotification()">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group row" perfect-class="formGroup">
                                   

                                    <input type="text" class="form-control" placeholder="" id="NotificationTitle" readonly />
                                </div>
                            </div>



                            <div class="col-sm-12">
                                <input type="hidden" id="NotificationID" />
                                <div class="form-group row" perfect-class="formGroup">
                                    <textarea class="form-control" rows="4" id="PerfectNotificationMsg" readonly></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="updateNotification()">
                            Close
                        </button>
                    </div>
                </div>
            </div>
        </div>



        <!---End---->
        <!---Notification Modal---->


        <div class="modal fade" id="modalNumberGenrationMis" data-backdrop="static" data-keyboard="false" tabindex="1000">
            <div class="modal-dialog modal-dialog-centered modal-md" role="dialog">
                <div class="modal-content">
                    <div class="modal-header border-0">
                        <h5 class="modal-title">Alert</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="window.location='@Url.Action("Dashboard","Home")'">
                            <span aria-hidden="true">&times;</span>
                        </button>


                    </div>
                    <div class="modal-body text-black">
                        <span>Number Generation missing, Please contact your system administrator</span>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="window.location='@Url.Action("Dashboard","Home")'">
                            OK
                        </button>
                    </div>
                </div>

            </div>
        </div>

        <!---End---->
        <!----file upload modal--->

        <div class="modal fade" id="modalFileUpload" data-backdrop="static" data-keyboard="false" tabindex="1000">
            <div class="modal-dialog modal-lg" role="dialog">
                <div class="modal-content">
                    <div class="modal-header border-0">
                        <h5 class="modal-title"><span id="headerFileUpload"></span></h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                        <div class="row">
                            <div class="col-sm-12" id="divmdlFileUpload">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!---end file upload modal---->
        <!---Track Info Modal---->


        <div class="modal fade" id="modalPssTrackInfo" data-backdrop="static" data-keyboard="false" tabindex="1000">
            <div class="modal-dialog modal-xl" role="dialog">
                <div class="modal-content">
                    <div class="modal-header border-0">
                        <h5 class="modal-title"><span id="headerPssTrackInfo"></span>Details</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                        <div class="row">
                            <div class="col-sm-12" id="pssTrackInfo">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---End---->
        <!---Track Info Modal---->


        <div class="modal fade " id="modalPssLedgerInfo" data-backdrop="static" data-keyboard="false">
            <div class="modal-dialog modal-xl" role="dialog">
                <div class="modal-content">
                    <div class="modal-header border-0">
                        <h5 class="modal-title"><span id="headerPssTrackInfo"></span>Ledger</h5>
                        <button type="button" class="close" onclick="closeLedgerinfo()" id="modalledgers" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                        <div class="row">
                            <div class="col-sm-12" id="pssLedgerInfo">

                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" id="modalledgerclose" class="btn btn-light1" onclick="closeLedgerinfo()">Close</button>
                    </div>
                </div>
            </div>
        </div>
        <!---End---->
        <!---Track Info Modal---->


        <div class="modal fade" id="pssModalOtherCharges" z-index="1000">
            <div class="modal fade" id="pssModalOtherChargesTax" z-index="1002">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content  rounded-0">
                        <div class="modal-header border-0">
                            <h5 class="modal-title">Tax Details</h5>
                        </div>
                        <div class="modal-body" perfect-class="formGroup">
                            <table id="pssTableOtherCharges" class="table mb-0  table-striped  text-black">
                                <thead class="bg-primary text-white">
                                    <tr>
                                        <th class="t-head">Sl No</th>
                                        <th class="t-head" style="Display:none"></th>
                                        <th class="t-head" style="Display:none"></th>
                                        <th class="t-head">Tax Type</th>
                                        <th class="t-head">Percentage</th>
                                        <th class="t-head">Amount</th>
                                    </tr>
                                </thead>
                                <tbody id="pssBodyOtherChargesTax"></tbody>

                            </table>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary light" onclick="fn_UpdateOtherChargesTaxDetails()">OK</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <input type="hidden" id="pssOtherChargesElement" value="" />
            <input type="hidden" id="pssOtherChargesTransMode" value="" />
            <input type="hidden" id="pssOtherChargesFKTransaction" value="" />

            <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
                <div class="modal-content  rounded-0">
                    <div class="modal-header border-0">
                        <h5 class="modal-title">Other Charges</h5>
                        <button type="button" class="close" data-dismiss="modal">
                            <span>&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" perfect-class="formGroup">
                        <table id="pssTableOtherCharges" class="table mb-0  table-striped  text-black">
                            <thead class="bg-primary text-white">
                                <tr>
                                    <th class="t-head" style="width: 10%;">Sl. No</th>
                                    <th class="t-head" style="display:none"></th>
                                    <th class="t-head" style="width: 15%;">Type</th>
                                    <th class="t-head" style="width: 15%;">Trans Type</th>
                                    <th class="t-head" style="width: 15%;">Amount</th>
                                    <th class="t-head" style="width: 20%;">Tax Amount</th>
                                    <th class="t-head" style="width: 5%;">Incl.Tax</th>
                                    <th class="t-head" style="width: 20%;">Narration</th>
                                </tr>
                            </thead>
                            <tbody id="pssBodyOtherCharges"></tbody>
                            <tfoot>
                            </tfoot>
                        </table>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary light" onclick="fn_updateOtherChargeData()">Apply</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---End---->
        <div class="deznav">
            <div class="deznav-scroll">
                <ul class="metismenu" id="menu">
                    <li></li>
                    @Html.Action("LoadMenuGroup", "Home")

                </ul>


            </div>
        </div>
        <!--**********************************
            Sidebar end
        ***********************************-->
        <!--**********************************
            Content body start
        ***********************************-->
        <div class="content-body">
            <!-- row -->

            <div class="container-fluid">
                @RenderBody()
            </div>
        </div>


        <!--**********************************
            Content body end
        ***********************************-->
        <div class="footer" @*style="bottom: 0;left: 0;position: fixed;right: 0;z-index: 1032;"*@>
            <div class="copyright">
                <p>Copyright © Designed &amp; Developed by <a href="" target="_blank"><img src="~/Content/images/companylogo1.png"></a> @DateTime.Now.Year @version</p>
            </div>
        </div>
    </div>
    <!--**********************************
        Main wrapper end
    ***********************************-->
    @* -------- Script Section *@

    @* 2 referance in perfectERPTemplateJS *@
    @*
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
    *@

    @Scripts.Render("~/bundles/perfectERPTemplateJS")

    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="~/Assets/vendor/jquery-validation/jquery.validate.min.js"></script>*@


    @* --- external plugin js referance --- *@
    @Scripts.Render("~/bundles/externalPlugin")
    @Scripts.Render("~/bundles/datatablePlugin")
    @* --- global plugin created --- *@
    @Scripts.Render("~/bundles/perfectERP/js")

    @RenderSection("scripts", required: false)
    @RenderSection("sidebar", required: false)


    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <script src="~/Scripts/deznav-init.js"></script>
    <script src="~/Scripts/demo.js"></script>
    @*<script src="~/signalr/hubs"></script>*@
    @*<script src="~/Scripts/search.js"></script>*@

    <style>
        .SearchboxIcon-menu {
            width: 100%;
            position: absolute;
            top: 100%;
            left: 0;
            z-index: 1000;
            d float: left;
            min-width: 10rem;
            padding: 0.5rem 0;
            margin: 0.125rem 0 0;
            font-size: 0.875rem;
            color: #7e7e7e;
            text-align: left;
            list-style: none;
            background-color: #fff;
            background-clip: padding-box;
        }


        .scrollable-menu {
            height: auto;
            max-height: 200px;
            max-width: 300px;
            overflow-x: hidden;
        }

        .SearchboxIcon-menu1 {
            position: absolute;
            top: 20px;
            max-width: 250px;
            width: 250px;
            padding: 10px;
        }
    </style>



    <script>

        function sessionclr() {

            localStorage.clear();
        }

            function toTitleCase(str) {
                return str.replace(/(?:^|\s)\w/g, function (match) {
                    return match.toUpperCase();
                });
            }
            function myFunction() {

                document.getElementById("myDropdown").classList.toggle("show");
         $('#commonsearchContainer').empty();
          $('#commonsearchContainer').closest('ul').addClass('d-none');
            }

            function filterFunction() {
                var input, filter, ul, li, a, i;
                input = document.getElementById("myInput");
                filter = input.value.toUpperCase();
                div = document.getElementById("myDropdown");
                a = div.getElementsByTagName("a");
                for (i = 0; i < a.length; i++) {
                    txtValue = a[i].textContent || a[i].innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        a[i].style.display = "";
                    } else {
                        a[i].style.display = "none";
                    }
                }
            }

        @*function getTransMode() {
            return '@ViewBag.transMode';
        }*@
          const _transMode = '@ViewBag.transMode';

        var $menuSeach = $('#perfect-Menulist-main');


        //----------

        function ShowProfile() {

            $('#modalGrid').modal('show');
        }


        $(document).ready(function () {

        Hide();
           let menugrp = '@ViewBag.MenuGroupID';
            let submenu ='@ViewBag.SubMenuGroupID';
            //$('#perfect-Menulist-main').find('ul li').removeClass('mm-active');
           // $('#perfect-Menulist-main').find('[perfect-navmenuid="' + menugrp + '"]').addClass("mm-show").parent().addClass("mm-active");
            //alert($('#menusub').find('li').length);

            var curmen = "";
            if (submenu != 0 && submenu != null) {
                $('#menu').find('li').each(function () {

                     let $this = $(this);

                    curmen = $(this).find('a').attr('perfect-navmenuid');
                    if (curmen != null) {
                        if (menugrp.trim() == curmen.trim()) {

                            $(this).find('#submenu').each(function () {
                                let cursubmen = $(this).find('a').attr('perfect-navmenuid');
                                if (cursubmen.trim() == submenu.trim()) {
                                    //$this.addClass("mm-active");
                                    $(this).addClass("mm-show").parent().addClass("mm-active");
                                    return false;
                                }
                                else {
                                    $(this).removeClass("mm-show").parent().removeClass("mm-active");
                                }

                            })
                        }
                        else {
                            $(this).removeClass("mm-active");
                        }
                    }

                    //if( $('#menusub li:has(ul)'))
                    // {
                    //    let cursubmen = $this.find('a').attr('perfect-navsubmenuid');
                    //    if (cursubmen == menugrp) {
                    //        $('#menusub').find('li').each(function () {
                    //            //$this.addClass("mm-active");
                    //            //.addClass("mm-show")
                    //        });
                    //    } else {
                    //        $this.removeClass('mm-active');
                    //    }
                    // }


                    // console.log("cunr:" + curmen + "dd" + menugrp)


                    //if(curmen == menugrp) {
                    //     //$this.addClass("mm-active");
                    //     //.addClass("mm-show")
                    // } else {
                    //     $this.removeClass('mm-active');
                    // }

                });

            }

        });

        const _perfectCurrentPage = '@ViewBag.page';
        @*@Url.Action("MenuList", "Home", new { m = menuGroup.MenuGroupID })*@

        function gotoURL(ele) {

            let menuID = parseInt($(ele).attr('perfect-navmenuid'));
            let $menuContainer = $('#perfect-Menulist-main');
            $('#menu').find('li').removeClass('mm-active');

            if (_perfectCurrentPage == "MenuList") {

                if (menuID==0) {
                    window.location.href = '@Url.Action("MenuList", "Home")' + '?m=' + menuID;
                    $(ele).addClass("mm-show").parent().addClass("mm-active");
                }
                else {
                    $menuContainer.load('@Url.Action("LoadMenuList", "Home")' + '?menuID=' + menuID + '&&subid=0');
                    $(ele).addClass("mm-show").parent().addClass("mm-active");
                }
            }
            else {
                if (menuID == 0) {
                    window.location.href = '@Url.Action("Dashboard", "Home")';
                    $(ele).addClass("mm-show").parent().addClass("mm-active");
                }
                else {

                    window.location.href = '@Url.Action("MenuList", "Home")' + '?m=' + menuID;
                }
            }
        }
         function gotoURLSub(ele) {
            let menuID = parseInt($(ele).attr('perfect-navmenuid'));
            let menuIDSub = parseInt($(ele).attr('perfect-navsubmenuid'));
            let $menuContainer = $('#perfect-Menulist-main');

            //let pageURL = $(ele).attr('perfect-navmenu')+'?m='+ menuID;

            //$(ele).closest('ul').find('li').removeClass('mm-active');


            $('#menu').find('li').removeClass('mm-active');
            $('#menu').find('li').removeClass("mm-show").parent().removeClass("mm-active");
            if (_perfectCurrentPage == "MenuList") {
                console.log('insode menu page and clicked menu page');
                if (menuID==0) {
                    console.log('insode menu page and clicked dashboard');
                    window.location.href = '@Url.Action("MenuList", "Home")' + '?m=' + menuID + '';
                    $(ele).addClass("mm-show").parent().addClass("mm-active");
                }
                else {
                    console.log('inside menu page and clicked menu');

                    $menuContainer.load('@Url.Action("LoadMenuListV", "Home")' + '?menuID=' + menuID + '&&SubList=' + menuIDSub);
                    $(ele).addClass("mm-show").parent().addClass("mm-active");
                }

            }
            else {
                console.log('Not in menu page and clicked the menu');


                window.location.href = '@Url.Action("MenuList", "Home")' + '?m=' + menuID + '&&s=' + menuIDSub;
            }
        }
        function Search(ele) {

            let menuName = $("#myInput").val();
            console.log('menuName', menuName)
        if(menuName!='')
        {

        $('#commonsearchContainer').load('@Url.Action("LoadPage", "Home")' + '?menuName=' + menuName);

        $('#commonsearchContainer').closest('ul').removeClass('d-none');
        }

        }


       function   Hide()
        {

        $('#commonsearchContainer').empty();
       $('#commonsearchContainer').closest('ul').addClass('d-none');


        document.getElementById("myDropdown").classList.toggle("hide");
        }
        const $sideMenuOptions = {
            menu: $('#jq-sidemenu'),
            title: $('#jq-sidemenu').find('.jq-sidemenu-title'),
            body: $('#jq-sidemenu').find('.jq-sidemenu-body'),
            open: function () {
                $('#jq-sidemenu').addClass('show');
            },
            close: function () {
                $('#jq-sidemenu').removeClass('show');
            },
        }


        //const $sidemenu = $('#jq-sidemenu');
        //const $sideMenu_title = $sidemenu.find('.sidemenu-title');
        //const $sideMenu_body = $sidemenu.find('.jq-sidemenu-body');;

        $(function () {
            let name = "perf1";

            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.notificationHub;

            //This function receive message from server
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {

                // Add the message to the page.
                //  $('#pft_sideMenu2').append('<div>'+htmlEncode(message)+'</div>');
            };

            $.connection.hub.start().done(function () {
                $('#test').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send(name, $('#test2').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        function test(a) {

            $('.subcat' + a).removeClass('d-none')
        }


    </script>

    <script type="text/javascript">


        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })

    </script>



    <script>
        var arrayhidecolumn = ['SlNo', 'ID_FIELD', 'TotalCount', 'ID_Name']
        var tableCommonOptions = {
            onlyShowColumn: [],
            hideColumn: arrayhidecolumn,
            rowClickAction: fn_common_bind,
            serialNo: false,
        };


        var fnPagemode;
        var $fnthisform;
        var fnele;
        var fncrt1;
        var fncrt2;
        var fncrt3;
        var fncrt4;
        var fncrt5;
        var fntempmodal;
        var bindnam;
        var bindval;
        var fHeadingText;
        let $ftempModel;
        var fclear;
        var fassign = '';
        var fnfunction;
        var criterialist = [];
        var fncheckbox;
        function GetCmnPopUpSearchVal(ele, Pagemode, HeadingText, clr = [], TransModeData = "") {

            //Criterea1 = "FK_Departement", Criterea2 = "0", BindName = "FK_Employee", BindVal = "AssignEmp" , Checkbox="1"(if checkbox is there to show all product)  ,Function="1" (if any fn is call after binding), Input="select"( for criteria is dropdown)
            //Criterea3 and Criterea4 (for string condition)

            fnele = ele;
            let form = $(ele).attr('Form');
            fnPagemode = Pagemode;
            fHeadingText = HeadingText;
            let $cthisForm;
            if (form == undefined) {
                $cthisForm = $(ele).closest('[perfect-class="form"]');
            }
            else {
                $cthisForm = $(ele).closest('[perfect-class="' + form + '"]');

            }
            $fnthisform = $cthisForm;
            criterialist = [];
            let infoname;
            let valid = true;
            let crt1 = 0;
            let crt2 = 0;
            let crt3 = 0;
            let crt4 = 0;
            let crt1nam = $(ele).attr('Criterea1');
            let crt2nam = $(ele).attr('Criterea2');
            let crt3nam = $(ele).attr('Criterea3');
            let crt4nam = $(ele).attr('Criterea4');
            let cbindnam = $(ele).attr('BindName');
            let cbindval = $(ele).attr('BindVal');
            let checkbox = $(ele).attr('Checkbox')
            fncheckbox = checkbox;
            let input = $(ele).attr('Input');
            fnfunction = $(ele).attr('Function');

            bindnam = cbindnam;
            bindval = cbindval;


            //[0.checking validation,1.Validation name ,>2 is clearing]
            let clear = (clr) ? clr : [];
            fclear = clear;
            fassign = '';
            if (clear.length > 0) {

                clear.forEach(function (key, i) {
                    if (i == 0) {

                        if (crt1nam == key || crt2nam == key || crt2nam == key || crt4nam == key) {

                            if (input == 'select') {
                                if ($cthisForm.find('[name=' + key + ']  option:selected').val() == '') { valid = false; }
                            }
                            else {
                                if ($cthisForm.find('[name=' + key + '] ').val() == '') { valid = false; }
                            }
                            //if () { valid = false; }
                        }


                    }
                    else if (i == 1) {
                        console.log("2", key)

                        infoname = key;

                    }

                });
            }

            if (crt1nam == undefined) { }
            else if (crt1nam != 0) {
                if ($cthisForm.find('[name=' + crt1nam + ']').val() != 0) {
                    crt1 = $cthisForm.find('[name=' + crt1nam + ']').val();
                }
            }
            if (crt2nam == undefined) { }
            else if (crt2nam != 0) {
                if ($cthisForm.find('[name=' + crt2nam + ']').val() != 0) {
                    crt2 = $cthisForm.find('[name=' + crt2nam + ']').val();
                }
            }
            if (crt3nam == undefined) { }
            else if (crt3nam != 0) {
                if ($cthisForm.find('[name=' + crt3nam + ']').val() != 0) {
                    crt3 = $cthisForm.find('[name=' + crt3nam + ']').val().toString();
                }
            }
            if (crt4nam == undefined) { }
            else if (crt4nam != 0) {
                if ($cthisForm.find('[name=' + crt4nam + ']').val() != 0) {
                    crt4 = $cthisForm.find('[name=' + crt4nam + ']').val().toString();
                }
            }
            fncrt1 = crt1;
            fncrt2 = crt2;
            fncrt3 = crt3;
            fncrt4 = crt4;
            let $cthisFormtext = $(ele).closest('.testSearchBox');

            let SearchName = $cthisFormtext.find('input').val();
            if (SearchName == undefined) {
                SearchName = '';
            }


            let obj = {
                Pagemode: Pagemode,
                Critrea1: crt1,
                Critrea2: crt2,
                Critrea3: crt3,
                Critrea4: crt4,
                PageSize: 10,
                PageIndex: 0,
                Name: SearchName,
                NameCriteria: '',
                TransMode: TransModeData

            };

            if (valid) {
                /**/
                let pageUrl = '@Url.Action("GetCmnPopList", "CommonPopupSearch")'
        /**/
        $.ajax({
            url: pageUrl,
            type: "POST",
            data: obj,
            dataType: "json",
            contentType: "application/x-www-form-urlencoded; charset=utf-8",
            success: function (ajaxOutput) {

        
                if (ajaxOutput.Process.IsProcess) {

                    let table = JSON.parse(ajaxOutput.Data).dtable;

                    console.log('table', table)
                    for (var property in table[0]) {

                        if (arrayhidecolumn.includes(property)) { }
                        else {
                            if (criterialist.includes(property)) { }
                            else {
                                if (property.includes('1R')) { property = property.replace('1R', ''); }

                                criterialist.push(property);
                            }
                        }

                    }
                    let $tempModel = createSearchModalDOM().modal;
                    $tempModel.find('.modal-title')
                        .addClass('text-primary')
                        .text(HeadingText);

                    $tempModel.show();
                    $ftempModel = $tempModel;
                    $tempModel.find('.modal-body')
                        .addClass('text-black').html(pft_table_createtable(table, tableCommonOptions))




                    let options = '';

                    for (var i = 0; i < criterialist.length; i++) {
                        if (criterialist[i] == 'Name') {

                            options += '<option value=' + criterialist[i] + ' selected="selected">' + pft_camel_case_spaceL(criterialist[i]) + '</option>'
                        }
                        else {
                            options += '<option value="' + criterialist[i] + '">' + pft_camel_case_spaceL(criterialist[i]) + '</option>';
                        }

                    }





                    let $ctempModel = $tempModel.find('.modal-body')
                    if (fncheckbox == 1) {

                        $ctempModel.empty().append('<div class="d-flex justify-content-center mb-2 position absolute"><div class="col-md-7 position-absolute top-3 z-index"> <div class="testSearchBox"><input type="checkbox" id="cmnchck" title="All ' + fHeadingText + '" onclick="Getcheckboxcmn(this)"> &nbsp;&nbsp;&nbsp;<label>All</label></div></div><div class="col-md-4 position-absolute top-2 z-index"> <div class="select-group testSearchBox"><select class="form-control"  id="criteriasel" name="criteriasel" perfect-class="formGroupControl" perfect-ctype="select"   perfect-css="select">' + options + '</select></div></div></div>')

                    }
                    else {

                        $ctempModel.empty().append('<div class="d-flex justify-content-center mb-2 position absolute"><div class="col-md-5 position-absolute top-2 z-index"> <div class="select-group testSearchBox"><select class="form-control"  id="criteriasel" name="criteriasel" perfect-class="formGroupControl" perfect-ctype="select"  perfect-css="select">' + options + '</select></div></div></div>')
                    }

                    $ctempModel.append('<div class="d-flex justify-content-end mb-2 position absolute"><div class="col-md-5 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control" id="Srname" name="SearchName" value="' + SearchName + '"  perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  popuptmode="' + TransModeData +'" onkeypress="javascript: if(event.keyCode == 13) getOnclickDetails(this);"/><div class="input-group-append"> <button id="addcmn-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getOnclickDetails(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(table, tableCommonOptions)))
                    fntempmodal = $tempModel;
                    let $table = $tempModel.find('table');
                    $table.dataTable({
                        "serverSide": true,//no change
                        "processing": true,//-- process text when clicked

                        "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page sizegetBillList
                        "searching": false,//--no change
                        "ordering": false,//--sorting
                        "deferLoading": table[0].TotalCount,//<----to total number of record from db
                        "displayStart": ajaxOutput.PageIndex * ajaxOutput.PageSize,//<----starting record
                        "pageLength": ajaxOutput.PageSize,//<----page size
                        "recordsFiltered": ajaxOutput.PageSize,//<---page size

                        "ajax": returncmnpopupajaxPagination({ apiurl: pageUrl, PageSize: ajaxOutput.PageSize, Critrea1: ajaxOutput.Critrea1, Critrea2: ajaxOutput.Critrea2, Critrea3: ajaxOutput.Critrea3, Critrea4: ajaxOutput.Critrea4, Pagemode: Pagemode, searchkey: SearchName, NameCriteria: '', TransMode: TransModeData }, tableCommonOptions, $table)
                    });



                }

                else {

                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });

                }
            },
            complete: function () {

            }
        });
    }
    else {
        NotificationMessage({ 'message': 'Please Select ' + infoname });
    }
        }




function returncmnpopupajaxPagination(ajaxInfo, tableCommonOptions, tableid) {
    //{ apiurl, PageSize }
    return {
        url: ajaxInfo.apiurl,
        type: "post",
        data: function () {
            var info = tableid.DataTable().page.info();
            console.log('RETURN AJAX', ajaxInfo)
            //return { <antiforgery>:<antiforgery>, length: ajaxInfo.PageSize, page: info.page }
            let input = { PageSize: info.length, PageIndex: info.page, Critrea1: ajaxInfo.Critrea1, Critrea2: ajaxInfo.Critrea2, Critrea3: ajaxInfo.Critrea3, Critrea4: ajaxInfo.Critrea4, Criteria5: ajaxInfo.Critrea5, Pagemode: ajaxInfo.Pagemode, NameCriteria: ajaxInfo.NameCriteria, TransMode: ajaxInfo.TransMode };
            console.log('input', input)
            //if (ajaxInfo.searchkey) {
            input["Name"] = ajaxInfo.searchkey;
            console.log('searchkey', ajaxInfo.searchkey)
            // }
            return input
        },
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
        success: function (dtajaxOutput) {

            let tabled = JSON.parse(dtajaxOutput.Data).dtable;
            let table = tableid.DataTable();
            table.destroy();
            pft_table_newTableBody(tableid, tabled, tableCommonOptions);

            tableid.dataTable({
                "serverSide": true,
                "processing": true,
                //"lengthChange": false,
                "lengthMenu": [10, 15, 20, 25, 50, 100],
                "searching": false,
                "ordering": false,
                "deferLoading": tabled[0].TotalCount,
                "displayStart": dtajaxOutput.PageIndex * dtajaxOutput.PageSize,
                "pageLength": dtajaxOutput.PageSize,
                "recordsFiltered": dtajaxOutput.PageSize,

                "ajax": returncmnpopupajaxPagination(ajaxInfo, tableCommonOptions, tableid)
            })

        },

    }
}


function GetCmnPopUpSearchValAssign(ele, Pagemode, HeadingText, clr = [], assign = [], TransModeData="") {

let onclickcheck= $(ele);
    

    debugger
    fnele = ele;
    criterialist = [];
    fnPagemode = Pagemode;
    fHeadingText = HeadingText;
    let form = $(ele).attr('Form');
    let $cthisForm;
    if (form == undefined) {
        $cthisForm = $(ele).closest('[perfect-class="form"]');
    }
    else {
        $cthisForm = $(ele).closest('[perfect-class="' + form + '"]');

    }
    $fnthisform = $cthisForm;

    let infoname;
    let valid = true;
    let crt1 = 0;
    let crt2 = 0;
    let crt3 = 0;
    let crt4 = 0;
    let crt5 = 0;
    let crt1nam = $(ele).attr('Criterea1');
    let crt2nam = $(ele).attr('Criterea2');
    let crt3nam = $(ele).attr('Criterea3');
    let crt4nam = $(ele).attr('Criterea4');
    let crt5nam = $(ele).attr('Criterea5');
    if (onclickcheck.attr("PERFECT-ONCLICK-CHECK")=="TRUE"){
	crt1nam=$(ele).attr('BindVal');
	}
	
    let cbindnam = $(ele).attr('BindName');
    let cbindval = $(ele).attr('BindVal');
    fnfunction = $(ele).attr('Function');
    let checkbox = $(ele).attr('Checkbox')
    fncheckbox = checkbox;
    let input = $(ele).attr('Input');

    bindnam = cbindnam;
    bindval = cbindval;


    let clear = (clr) ? clr : [];
    let Assign = (assign) ? assign : [];
    fclear = clear;
    fassign = Assign;
    if (clear.length > 0) {

        clear.forEach(function (key, i) {
            
            if (i == 0) {

                if (crt1nam == key || crt2nam == key || crt2nam == key || crt4nam == key || crt5nam == key) {

                    if (input == 'select') {
                        if ($cthisForm.find('[name=' + key + ']  option:selected').val() == '') { valid = false; }
                    }
                    else {
                        if ($cthisForm.find('[name=' + key + '] ').val() == '') { valid = false; }
                    }
                    //if () { valid = false; }
                }


            }
            else if (i == 1) {
                console.log("2", key)

                infoname = key;

            }

        });
    }
    if (crt1nam == undefined) { }
    else if (crt1nam != 0) {
        if ($cthisForm.find('[name=' + crt1nam + ']').val() != 0) {
            crt1 = $cthisForm.find('[name=' + crt1nam + ']').val();
        }
    }
    if (crt2nam == undefined) { }
    else if (crt2nam != 0) {
        if ($cthisForm.find('[name=' + crt2nam + ']').val() != 0) {
            crt2 = $cthisForm.find('[name=' + crt2nam + ']').val();
        }
    }
    if (crt3nam == undefined) { }
    else if (crt3nam != 0) {
        if ($cthisForm.find('[name=' + crt3nam + ']').val() != 0) {

            crt3 = $cthisForm.find('[name=' + crt3nam + ']').val().toString();
        }
    }
    if (crt4nam == undefined) { }
    else if (crt4nam != 0) {
        if ($cthisForm.find('[name=' + crt4nam + ']').val() != 0) {

            crt4 = $cthisForm.find('[name=' + crt4nam + ']').val().toString();
        }
    }
    if (crt5nam == undefined) { }
    else if (crt5nam != 0) {
        if ($cthisForm.find('[name=' + crt5nam + ']').val() != 0) {

            crt5 = $cthisForm.find('[name=' + crt5nam + ']').val();
        }
    }
    fncrt1 = crt1;
    fncrt2 = crt2;
    fncrt3 = crt3;
    fncrt4 = crt4;
    fncrt5 = crt5;

    let $cthisFormtext = $(ele).closest('.testSearchBox');

    let SearchName = $cthisFormtext.find('input').val();
    let crterame = $cthisFormtext.find('select').val();

    if (SearchName == undefined) {
        SearchName = '';
    }


    if (fassign.length > 0) {
        fassign.forEach(function (arrayItem) {
            let FieldNamep = arrayItem;
            if (arrayhidecolumn.includes(FieldNamep)) { }
            else {
                arrayhidecolumn.push(FieldNamep);
            }
        });
        arrayhidecolumn = arrayhidecolumn;

    }

    let obj = {

        Pagemode: Pagemode,
        Critrea1: crt1,
        Critrea2: crt2,
        Critrea3: crt3,
        Critrea4: crt4,
        Criteria5: crt5,
        PageSize: 10,
        PageIndex: 0,
        Name: SearchName,
        NameCriteria: '',
        TransMode: TransModeData
    };

    if (valid) {
        /**/
        let pageUrl = '@Url.Action("GetCmnPopList", "CommonPopupSearch")'
        /**/
        $.ajax({
            url: pageUrl,
            type: "POST",
            data: obj,
            dataType: "json",
            contentType: "application/x-www-form-urlencoded; charset=utf-8",
            success: function (ajaxOutput) {
                if (ajaxOutput.Process.IsProcess) {
                    let table = JSON.parse(ajaxOutput.Data).dtable;

                    for (var property in table[0]) {
                        if (arrayhidecolumn.includes(property)) { }
                        else {
                            if (criterialist.includes(property)) { }
                            else {
                                if (property.includes('1R')) { property = property.replace('1R', ''); }
                                if (property.includes('1D')) { property = property.replace('1D', ''); }
                                criterialist.push(property);
                            }
                        }
                    }
                    let $tempModel = createSearchModalDOM().modal;
                    $tempModel.find('.modal-title')
                        .addClass('text-primary')
                        .text(HeadingText);

                    $tempModel.show();
                    $ftempModel = $tempModel;
                    $tempModel.find('.modal-body')
                        .addClass('text-black').html(pft_table_createtable(table, tableCommonOptions))

                    let options = '';
                    for (var i = 0; i < criterialist.length; i++) {
                        if (criterialist[i] == 'Name' || criterialist[i] == 'Employee') {
                            options += '<option value=' + criterialist[i] + ' selected="selected">' + pft_camel_case_spaceL(criterialist[i]) + '</option>'
                        }
                        else {
                            options += '<option value="' + criterialist[i] + '">' + pft_camel_case_spaceL(criterialist[i]) + '</option>';
                        }

                    }

                    let $ctempModel = $tempModel.find('.modal-body')
                    if (fncheckbox == 1) {

                        $ctempModel.empty().append('<div class="d-flex justify-content-center mb-2 position absolute"><div class="col-md-6 position-absolute top-3 z-index"> <div class="testSearchBox"><input type="checkbox" id="cmnchck" title="All ' + fHeadingText + '" onclick="Getcheckboxcmn(this)"> &nbsp;&nbsp;&nbsp;<label>All</label></div></div><div class="col-md-4 position-absolute top-2 z-index"> <div class="select-group testSearchBox"><select class="form-control"  id="criteriasel" name="criteriasel" perfect-class="formGroupControl" perfect-ctype="select"   perfect-css="select">' + options + '</select></div></div></div>')
                    }
                    else {

                        $ctempModel.empty().append('<div class="d-flex justify-content-center mb-2 position absolute"><div class="col-md-6 position-absolute top-2 z-index"> <div class="select-group testSearchBox"><select class="form-control"  id="criteriasel" name="criteriasel" perfect-class="formGroupControl" perfect-ctype="select"  perfect-css="select">' + options + '</select></div></div></div>')
                    }
                    $ctempModel.append('<div class="d-flex justify-content-end mb-2 position absolute"><div class="col-md-5 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" popuptmode="' + TransModeData +'" onkeypress="javascript: if(event.keyCode == 13) getOnclickDetails(this);"/><div class="input-group-append"> <button title="Search" id="addcmn-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getOnclickDetails(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(table, tableCommonOptions)))
                    fntempmodal = $tempModel;
					
                    //Getcriteria();it
                    let $table = $tempModel.find('table');
                    $table.dataTable({
                        "serverSide": true,
                        "processing": true,
                        "lengthMenu": [10, 15, 20, 25, 50, 100],
                        "searching": false,
                        "ordering": false,
                        "deferLoading": table[0].TotalCount,
                        "displayStart": ajaxOutput.PageIndex * ajaxOutput.PageSize,
                        "pageLength": ajaxOutput.PageSize,
                        "recordsFiltered": ajaxOutput.PageSize,

                        "ajax": returncmnpopupajaxPagination({ apiurl: pageUrl, PageSize: ajaxOutput.PageSize, Critrea1: ajaxOutput.Critrea1, Critrea2: ajaxOutput.Critrea2, Critrea3: ajaxOutput.Critrea3, Critrea4: ajaxOutput.Critrea4, Criteria5: ajaxOutput.Critrea5, Pagemode: Pagemode, searchkey: SearchName, NameCriteria: '', TransMode: TransModeData }, tableCommonOptions, $table)
                    });


      //              if (onclickcheck.attr("PERFECT-ONCLICK-CHECK") == "TRUE") {
      //                  $ctempModel.closest('.modal').addClass('d-none');
						//$ctempModel.closest('.modal').modal('hide');
						//setTimeout(function() {
      //                      $ctempModel.find('tbody').find('tr:first').find('td:first').trigger('click');
      //                      $ctempModel.closest('.modal').removeClass('d-none');
      //                      alert('dfgdfg');
						//}, 100); 
                           
      //                //  onclickcheck.attr("PERFECT-ONCLICK-CHECK","FALSE");
                           
                            
            
      //              }

                    //if (onclickcheck.attr("PERFECT-ONCLICK-CHECK") == "TRUE") {

                    //    $ctempModel.closest('.modal').modal('hide');
                    //    setTimeout(function () {
                    //        $ctempModel.find('tbody').find('tr:first').find('td:first').trigger('click');
                    //    }, 1000);
                    //}
                     if (onclickcheck.attr("PERFECT-ONCLICK-CHECK") === "TRUE") {
                        var $modal = $ctempModel.closest('.modal');
                       // $modal.modal('hide');
						 
                        setTimeout(function () {
                            $ctempModel.find('tbody').find('tr:first').find('td:first').trigger('click');
                        }, 500); 
						$modal.fadeOut();
					    $modal.modal('hide');
                    }
                    

                }


                else {
                    if (Pagemode == 102) {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': "No Employees found in the Department's Marketing and Sales Category."});
                        });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }
            },
            complete: function () {
			
            }
        });
    }
    else {
        NotificationMessage({ 'message': 'Please Select ' + infoname });
    }
        }
      


//  var criteriaele;


//function Getcriteria(ele) {
//    criteriaele = ele;
//    var option = '';
//    option += '<option value="0"> Please select </option>';
//    for (var i = 0; i < criterialist.length; i++) {

//        option += '<option value="' + criterialist[i] + '">' + criterialist[i] + '</option>';
//    }

//    $('#criteriasel')
//        .find('option')
//        .remove()
//        .end()
//        .append(option);


//    //$('#criteriasel').append(option);

//}
var checkboxele;
function Getcheckboxcmn(ele) {
    checkboxele = ele;

    let SearchName = $("#Srname").val();

    console.log("SearchName", SearchName)

    let crterame = $("#criteriasel").val();

    let $chthisFormtext = $(checkboxele).closest('.testSearchBox');
    let checkboxct = $chthisFormtext.find("input[type='checkbox']").is(":checked");
    let checked = '';
    let crtchkcr1;

    if (checkboxct) {
        checked = 'checked';
        crtchkcr1 = 0;
    }
    else {
        checked = '';
        crtchkcr1 = fncrt1;

    }
    if (crterame == undefined) {
        crterame = "Name";
    }
    let obj = {
        Pagemode: fnPagemode,
        Critrea1: checkboxct?1:0,
        Critrea2: fncrt2,
        Critrea3: fncrt3,
        Critrea4: fncrt4,
        PageSize: 10,
        PageIndex: 0,
        Name: '',
        NameCriteria: ''
    };


    let options = '';

    for (var i = 0; i < criterialist.length; i++) {

        if (criterialist[i] == crterame) {

            options += '<option value=' + criterialist[i] + ' selected="selected">' + pft_camel_case_spaceL(criterialist[i]) + '</option>'
        }
        else {
            options += '<option value="' + criterialist[i] + '">' + pft_camel_case_spaceL(criterialist[i]) + '</option>';
        }

    }

    let widthArray = [10, 20, 30, 40];

    let pageUrl = '@Url.Action("GetCmnPopList", "CommonPopupSearch")'

        $.ajax({
            url: pageUrl,
            type: "POST",
            data: obj,
            dataType: "json",
            contentType: "application/x-www-form-urlencoded; charset=utf-8",
            success: function (ajaxOutput) {


                if (ajaxOutput.Process.IsProcess) {
                    let table = JSON.parse(ajaxOutput.Data).dtable;
                    $ftempModel.find('.modal-body')
                        .addClass('text-black').html(pft_table_createtable(table, tableCommonOptions))
                    let $fctempModel = $ftempModel.find('.modal-body')
                    if (fncheckbox == 1) {

                        $fctempModel.empty().append('<div class="d-flex justify-content-center mb-2 position absolute"><div class="col-md-6 position-absolute top-3 z-index"> <div class="testSearchBox"><input type="checkbox" id="cmnchck" title="All ' + fHeadingText + '" onclick="Getcheckboxcmn(this)" ' + checked + '> &nbsp;&nbsp;&nbsp;<label>All</label></div></div><div class="col-md-4 position-absolute top-2 z-index" > <div class="select-group testSearchBox"><select class="form-control"  id="criteriasel" name="criteriasel" perfect-class="formGroupControl" perfect-ctype="select"  perfect-css="select">' + options + '</select></div></div></div>')

                    }
                    else {

                        $fctempModel.empty().append('<div class="d-flex justify-content-center mb-2 position absolute"><div class="col-md-6 position-absolute top-2 z-index"> <div class="select-group testSearchBox"><select class="form-control"  id="criteriasel" name="criteriasel" perfect-class="formGroupControl" perfect-ctype="select"   perfect-css="select">' + options + '</select></div></div></div>')
                    }
                    $fctempModel.append('<div class="d-flex justify-content-end mb-2 position absolute"><div class="col-md-5 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control "  id="Srname" name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  value="' + SearchName + '"  onkeypress="javascript: if(event.keyCode == 13) getOnclickDetails(this);"/><div class="input-group-append"> <button id="addcmn-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getOnclickDetails(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(table, tableCommonOptions)))

                    let $table = $fctempModel.find('table');
                    $table.dataTable({
                        "serverSide": true,//no change
                        "processing": true,//-- process text when clicked
                        //  "lengthChange": false,
                        "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                        "searching": false,//--no change
                        "ordering": false,//--sorting
                        "deferLoading": table[0].TotalCount,//<----to total number of record from db
                        "displayStart": ajaxOutput.PageIndex * ajaxOutput.PageSize,//<----starting record
                        "pageLength": ajaxOutput.PageSize,//<----page size
                        "recordsFiltered": ajaxOutput.PageSize,//<---page size

                        "ajax": returncmnpopupajaxPagination({ apiurl: pageUrl, PageSize: ajaxOutput.PageSize, Critrea1: ajaxOutput.Critrea1, Critrea2: ajaxOutput.Critrea2, Critrea3: ajaxOutput.Critrea3, Critrea4: ajaxOutput.Critrea4, Pagemode: fnPagemode, searchkey: SearchName, NameCriteria: crterame }, tableCommonOptions, $table)
                    });

                }

                else {
                    if (ajaxOutput.Process.Status = "NoData") {

                        let $fctempModel = $ftempModel.find('.modal-body')

                        $fctempModel.empty().append('<div class="d-flex justify-content-end mb-2"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control "  id="Srname" name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onkeypress="javascript: if(event.keyCode == 13) getOnclickDetails(this);"/><div class="input-group-append"><button id="addcmn-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getOnclickDetails(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableCommonOptions)))

                        let $table = $fctempModel.find('table');
                        $table.dataTable({
                            "serverSide": true,//no change
                            "processing": true,//-- process text when clicked
                            //"lengthChange": false,
                            "lengthMenu": [],//---drop down page size
                            "searching": false,//--no change
                            "ordering": false,//--sorting
                            "deferLoading": 0,//<----to total number of record from db
                            "displayStart": ajaxOutput.PageIndex * ajaxOutput.PageSize,//<----starting record
                            "pageLength": ajaxOutput.PageSize,//<----page size
                            "recordsFiltered": ajaxOutput.PageSize,//<---page size
                            "ajax": returncmnpopupajaxPagination({ apiurl: pageUrl, PageSize: ajaxOutput.PageSize, Critrea1: ajaxOutput.Critrea1, Critrea2: ajaxOutput.Critrea2, Critrea3: ajaxOutput.Critrea3, Critrea4: ajaxOutput.Critrea4, Pagemode: fnPagemode, searchkey: SearchName, NameCriteria: '' }, tableCommonOptions, $table)
                        });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }

            },
            complete: function () {

            }
        });
    }



    function fn_common_bind() {

        var $crow = $(this).closest('tr');
        let FSaveddata = $crow.data('pData');
		//console.log($crow,'a');
		//console.log(FSaveddata,'afg');
		//console.log($crow,'modelvalue');
		var fntempmodalValue = $(fntempmodal).val();
   // console.log("fntempmodal value:", fntempmodalValue);
       $(fntempmodal).closest('.modal').modal('hide');
		

        $fnthisform.find('[name=' + bindnam + ']').val(FSaveddata.ID_Name),
            $fnthisform.find('[name=' + bindval + ']').val(FSaveddata.ID_FIELD)
        $fnthisform.data({ popValueData: FSaveddata })

        if (fassign != '') {
            if (fassign.length > 0) {
                fassign.forEach(function (arrayItem) {
                    var FieldName = arrayItem;
                    var fielddate = FieldName;
                    fielddate = fielddate.toUpperCase().toString();

                    if (fielddate.includes("DATE")) {

                        $fnthisform.find('[name=' + FieldName + ']').val(moment(FSaveddata[FieldName]).format('YYYY-MM-DD'))
                    }
                    else {
                        $fnthisform.find('[name=' + FieldName + ']').val(FSaveddata[FieldName]).selectpicker('refresh');
                        $fnthisform.find('[name=' + FieldName + ']').val(FSaveddata[FieldName]);
                    }
                });

            }
        }
        if (fclear.length > 0) {

            fclear.forEach(function (key, i) {
                if (i > 1) {

                    $fnthisform.find('[name=' + key + ']').val('');
                }
            });
        }

        if (fnfunction == 1) {
            getfunction(fnele);
        }
        else if (fnfunction == 2) {
            getfunctionAssign(fnele);
        } else if (fnfunction == 3) {
            SetControl(fnele, FSaveddata);
        }
        else if (fnfunction == 4) {
            getfunctionAssignchnage(fnele);
        }
        else if (fnfunction == 5) {
            getfunctionAssignchnageSet(fnele);
        }
    }
    var pft_camel_case_spaceL = (text) => text.replace(/([A-Z])/g, ' $1').replace(/^./, function (str) { return str.toUpperCase(); })


    function getOnclickDetails(ele) {
        //Criterea1 = "FK_Departement", Criterea2 = "0", BindName = "FK_Employee", BindVal = "AssignEmp"

        let $cthisFormtext = $(ele).closest('.testSearchBox');
        let SearchName = $cthisFormtext.find('input').val();
        let TransModeData = $cthisFormtext.find('input').attr('popuptmode');

        //let $xthisFormtext = $(criteriaele).closest('.testSearchBox');
        //let crterame = $xthisFormtext.find('select').val();
        let crterame = $("#criteriasel").val();

        let $chthisFormtext = $(checkboxele).closest('.testSearchBox');
        let checkboxct = $chthisFormtext.find("input[type='checkbox']").is(":checked");
        let checked = '';
        let crtchkcr1;

        if (checkboxct) {
            checked = 'checked';
            crtchkcr1 = 0;
        }
        else {
            checked = '';

            crtchkcr1 = fncrt1;
        }
        if (crterame == undefined) {
            crterame = "Name";
        }

        let obj = {

            Pagemode: fnPagemode,
            Critrea1: crtchkcr1,
            Critrea2: fncrt2,
            Critrea3: fncrt3,
            Critrea4: fncrt4,
            Criteria5: fncrt5,
            PageSize: 10,
            PageIndex: 0,
            Name: SearchName,
            NameCriteria: crterame,
            TransMode: TransModeData
        };
        let options = '';

        for (var i = 0; i < criterialist.length; i++) {

            if (criterialist[i] == crterame) {

                options += '<option value=' + criterialist[i] + ' selected="selected">' + pft_camel_case_spaceL(criterialist[i]) + '</option>'
            }
            else {
                options += '<option value="' + criterialist[i] + '">' + pft_camel_case_spaceL(criterialist[i]) + '</option>';
            }

        }
        /**/
        let pageUrl = '@Url.Action("GetCmnPopList", "CommonPopupSearch")'
        /**/

        $.ajax({
            url: pageUrl,
            type: "POST",
            data: obj,
            dataType: "json",
            contentType: "application/x-www-form-urlencoded; charset=utf-8",
            success: function (ajaxOutput) {


                if (ajaxOutput.Process.IsProcess) {
                    let table = JSON.parse(ajaxOutput.Data).dtable;
                    $ftempModel.find('.modal-body')
                        .addClass('text-black').html(pft_table_createtable(table, tableCommonOptions))
                    let $fctempModel = $ftempModel.find('.modal-body')

                    if (fncheckbox == 1) {

                        $fctempModel.empty().append('<div class="d-flex justify-content-center mb-2 position absolute"><div class="col-md-6 position-absolute top-3 z-index"> <div class="testSearchBox"><input type="checkbox" id="cmnchck" title="All ' + fHeadingText + '" onclick="Getcheckboxcmn(this)"' + checked + '> &nbsp;&nbsp;&nbsp;<label>All</label></div></div><div class="col-md-4 position-absolute top-2 z-index"> <div class="select-group testSearchBox"><select class="form-control"  id="criteriasel" name="criteriasel" perfect-class="formGroupControl" perfect-ctype="select"   perfect-css="select">' + options + '</select></div></div></div>')

                    }
                    else {

                        $fctempModel.empty().append('<div class="d-flex justify-content-center mb-2 position absolute"><div class="col-md-5 position-absolute top-2 z-index"> <div class="select-group testSearchBox"><select class="form-control"  id="criteriasel" name="criteriasel" perfect-class="formGroupControl" perfect-ctype="select"  perfect-css="select">' + options + '</select></div></div></div>')
                    }
                    //if (fncheckbox == 1) {

                    //    $fctempModel.empty().append('<div class="d-flex justify-content-center mb-2 position absolute"><div class="col-md-7 position-absolute top-3 z-index"> <div class="select-group testSearchBox"><input type="checkbox" id="cmnchck" title="All ' + fHeadingText + '" onclick="Getcheckboxcmn(this)"' + checked + '> &nbsp;&nbsp;&nbsp;<label>All</label></div></div><div class="col-md-4 position-absolute top-2 z-index"> <div class="select-group testSearchBox"><select class="form-control"  id="criteriasel" name="criteriasel" perfect-class="formGroupControl" perfect-ctype="select"   perfect-css="select">' + options +'</select></div></div></div>')

                    //}
                    //else {

                    //    $fctempModel.empty().append('<div class="d-flex justify-content-center mb-2 position absolute"><div class="col-md-5 position-absolute top-2 z-index"> <div class="select-group testSearchBox"><select class="form-control"  id="criteriasel" name="criteriasel" perfect-class="formGroupControl" perfect-ctype="select"   perfect-css="select">' + options+'</select></div></div></div>')
                    //}
                    $fctempModel.append('<div class="d-flex justify-content-end mb-2 position absolute"><div class="col-md-5 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control "  id="Srname" name="SearchName" value="' + SearchName + '"  perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  popuptmode="' + TransModeData +'" onkeypress="javascript: if(event.keyCode == 13) getOnclickDetails(this);"/><div class="input-group-append"> <button id="addcmn-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="getOnclickDetails(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(table, tableCommonOptions)))

                    let $table = $fctempModel.find('table');
                    $table.dataTable({
                        "serverSide": true,//no change
                        "processing": true,//-- process text when clicked
                        //  "lengthChange": false,
                        "lengthMenu": [10, 15, 20, 25, 50, 100],//---drop down page size
                        "searching": false,//--no change
                        "ordering": false,//--sorting
                        "deferLoading": table[0].TotalCount,//<----to total number of record from db
                        "displayStart": ajaxOutput.PageIndex * ajaxOutput.PageSize,//<----starting record
                        "pageLength": ajaxOutput.PageSize,//<----page size
                        "recordsFiltered": ajaxOutput.PageSize,//<---page size

                        "ajax": returncmnpopupajaxPagination({ apiurl: pageUrl, PageSize: ajaxOutput.PageSize, Critrea1: ajaxOutput.Critrea1, Critrea2: ajaxOutput.Critrea2, Critrea3: ajaxOutput.Critrea3, Critrea4: ajaxOutput.Critrea4, Pagemode: fnPagemode, searchkey: SearchName, NameCriteria: crterame, TransMode: TransModeData}, tableCommonOptions, $table)
                    });

                }

                else {
                    if (ajaxOutput.Process.Status = "NoData") {

                        let $fctempModel = $ftempModel.find('.modal-body')

                        $fctempModel.empty().append('<div class="d-flex justify-content-end mb-2"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control "  id="Srname" name="SearchName"   perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" popuptmode="' + TransModeData +'"  onkeypress="javascript: if(event.keyCode == 13) getOnclickDetails(this);"/><div class="input-group-append"><button id="addcmn-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button"  onclick="getOnclickDetails(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableCommonOptions)))
                        // $sidemenu.find('table').dataTable({ paging: true });


                        let $table = $fctempModel.find('table');
                        $table.dataTable({
                            "language": { "emptyTable": "No data found to display."},
                            "serverSide": true,//no change
                            "processing": true,//-- process text when clicked
                            //"lengthChange": false,
                            "lengthMenu": [],//---drop down page size
                            "searching": false,//--no change
                            "ordering": false,//--sorting
                            "deferLoading": 0,//<----to total number of record from db
                            "displayStart": ajaxOutput.PageIndex * ajaxOutput.PageSize,//<----starting record
                            "pageLength": ajaxOutput.PageSize,//<----page size
                            "recordsFiltered": ajaxOutput.PageSize,//<---page size
                            "ajax": returncmnpopupajaxPagination({ apiurl: pageUrl, PageSize: ajaxOutput.PageSize, Critrea1: ajaxOutput.Critrea1, Critrea2: ajaxOutput.Critrea2, Critrea3: ajaxOutput.Critrea3, Critrea4: ajaxOutput.Critrea4, Pagemode: fnPagemode, searchkey: SearchName, NameCriteria: '', TransMode: TransModeData }, tableCommonOptions, $table)
                        });
                    }
                    else {
                        $.each(ajaxOutput.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                        });
                    }
                }

            },
            complete: function () {

            }
        });
    }















































    function AddCountry(ele) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability

        console.log('> Add country form IS valid', $thisForm.valid())
        if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

            $(ele).prop('disabled', true);


            var inputData = {//<---- Input Json : this is the variable we pass to controller

                CountryName: $thisForm.find('[name="CountryName"]').val().trim(),
                CountryCode: $thisForm.find('[name="CountryCode"]').val().trim(),
                CountryShortName: $thisForm.find('[name="CountryShortName"]').val().trim(),
                TransMode: localStorage.getItem("FRM_TRANSMODE"),
                Sort: $thisForm.find('[name=Sort]').val().trim()
            };


            console.log('> Add country ajax input', inputData);

            $.ajax({
                /**/
                url: '@Url.Action("AddNewCountryDetails", "Country")',
        /**/

        type: "POST",
        // headers: { "token_key": "1234" },
        data: JSON.stringify(inputData),//<---- Input json : data passed to controller
        dataType: "json",
        contentType: "application/json",
        success: function (data) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

            if (data.Process.IsProcess) {

                $.each(data.Process.Message, function (key, value) {
                    //toastr.success(value, "Success");
                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                });
            }
            else {
                $.each(data.Process.Message, function (key, value) {
                    //toastr.warning(value, "Error");
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                });
            }




            // $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
            $thisForm.find('[perfect-ctype="input"]').val('');
            $thisForm.find('[perfect-ctype="digit"]').val('');
            // $thisForm.find('[perfect-ctype="date"]').val('');


            let onSuccess = $thisForm.attr('perfect-onFormSuccess')

            if (onSuccess) {
                window[onSuccess]($thisForm);
            }

            //---------- Do stuff if success

            console.log('> Add new country success data', data);

        },
        complete: function () {
            $(ele).prop('disabled', false);
        }

    });

}

}


//FUNCTION ADD STATE
function AddState(ele) {


let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability


//$(ele).find('i').removeClass();

console.log('> Add State form IS valid', $thisForm.valid())
if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

    $(ele).prop('disabled', true); // avoiding form submit the double click


    var inputData = {//<---- Input Json : this is the variable we pass to controller
        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
        State: $thisForm.find('[name=State]').val().trim(),
        ShortName: $thisForm.find('[name=ShortName]').val().trim(),
        GSTINCode: $thisForm.find('[name=GSTINCode]').val().trim(),
        CountryID: $thisForm.find('[name=CountryID]').val().trim(),
        TransMode: localStorage.getItem("FRM_TRANSMODE"),
        SortOrder: $thisForm.find('[name=SortOrder]').val().trim()
    };


    console.log('> Add State ajax input', inputData);


    $.ajax({
        /**/
        url: '@Url.Action("AddNewStateDetails", "State")',
        /**/

        type: "POST",

        data: inputData,//<---- Input json : data passed to controller
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
        success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

            if (ajaxOutput.Process.IsProcess) {

                $.each(ajaxOutput.Process.Message, function (key, value) {
                    //toastr.success(value, "Success");
                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                });
                $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                $thisForm.find('[perfect-ctype="input"]').val('');
                $thisForm.find('[perfect-ctype="number"]').val('');



                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                if (onSuccess) {
                    window[onSuccess]($thisForm);
                }

                //---------- Do stuff if success

                console.log('> Add new State success data', ajaxOutput);
            }
            else {
                $.each(ajaxOutput.Process.Message, function (key, value) {
                    //toastr.warning(value, "Error");
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                });
            }
        },
        complete: function () {
            $(ele).prop('disabled', false);
        }

    });

}

}


//FUNCTION ADD DISTRICT

function AddDistrict(ele) {


let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability


//$(ele).find('i').removeClass();

console.log('> Add District form IS valid', $thisForm.valid())
if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

    $(ele).prop('disabled', true); // avoiding form submit the double click


    var inputData = {//<---- Input Json : this is the variable we pass to controller
        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
        ID: 0,
        DistrictName: $thisForm.find('[name=DistrictName]').val().trim(),
        DistrictShortName: $thisForm.find('[name=DistrictShortName]').val().trim(),
        StatesID: $thisForm.find('[name=StatesID]').val().trim(),
        TransMode: localStorage.getItem("FRM_TRANSMODE"),
        SortOrder: $thisForm.find('[name=SortOrder]').val().trim()
    };


    console.log('> Add District ajax input', inputData);

    $.ajax({
        /**/
        url: '@Url.Action("AddNewDistrictDetails", "District")',
        /**/

        type: "POST",

        data: inputData,//<---- Input json : data passed to controller
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
        success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

            if (ajaxOutput.Process.IsProcess) {

                $.each(ajaxOutput.Process.Message, function (key, value) {

                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                });
                $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                $thisForm.find('[perfect-ctype="input"]').val('');
                $thisForm.find('[perfect-ctype="digit"]').val('');



                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                if (onSuccess) {
                    window[onSuccess]($thisForm);
                }

                //---------- Do stuff if success

                console.log('> Add new District success data', ajaxOutput);
            }
            else {
                $.each(ajaxOutput.Process.Message, function (key, value) {
                    //toastr.warning(value, "Error");
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                });
            }
        },
        complete: function () {
            $(ele).prop('disabled', false);
        }

    });

}

}

//ADD Place

/**/
@*function AddPlace(ele) {


            let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability



            console.log('> Add place form IS valid', $thisForm.valid())
            if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

                $(ele).prop('disabled', true);

                var inputData = {//<---- Input Json : this is the variable we pass to controller
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(), //antiForgery
                    Place: $thisForm.find('[name=Place]').val().trim(),
                    DistrictID: $thisForm.find('[name=DistrictID]').val().trim(),
                    ShortName: $thisForm.find('[name=ShortName]').val().trim(),
                    SortOrder: $thisForm.find('[name=SortOrder]').val().trim(),

                };


                //console.log('> Add place ajax input',inputData);

                $.ajax({
                    url:'@Url.Action("AddNewPlace", "Place")',

                    type: "POST",
                    // headers: { "token_key": "1234" },
                    data: inputData,//<---- Input json : data passed to controller
                    dataType: "json",
                    contentType: "application/x-www-form-urlencoded; charset=utf-8",
                    success: function (data) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                        if (data.Process.IsProcess) {

                            $.each(data.Process.Message, function (key, value) {
                                //toastr.success(value, "Success");
                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                            });
                            $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                            $thisForm.find('[perfect-ctype="input"]').val('');
                            $thisForm.find('[perfect-ctype="date"]').val('');


                            let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                            if (onSuccess) {

                                window[onSuccess]($thisForm);

                                //loadPlaceList();

                            }

                            //---------- Do stuff if success

                            console.log('> Add new place success data', data);
                        }
                        else {
                            $.each(data.Process.Message, function (key, value) {
                                //toastr.warning(value, "Error");
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }



                    },
                    complete: function () {
                        $(ele).prop('disabled', false);
                    }

                });

            }

        }*@
        /**/
        //Post
        function AddPost(ele) {

            let $thisForm = $(ele).closest('[perfect-class="form"]');
            console.log('> Add Post form IS valid', $thisForm.valid())

            if ($thisForm.valid()) {

                $(ele).prop('disabled', true);

                var inputData = {

                    PostName: $thisForm.find('[name=PostName]').val().trim(),
                    PostShortName: $thisForm.find('[name=PostShortName]').val().trim(),
                    PostCode: $thisForm.find('[name=PostCode]').val().trim(),
                    SortOrder: $thisForm.find('[name=SortOrder]').val().trim(),
                    TransMode: localStorage.getItem("FRM_TRANSMODE"),
                    AreaID: $thisForm.find('[name=AreaID]').val().trim(),

                }


                $.ajax({
                    /**/
                    url: "@Url.Action("AddPost", "Post")",
        /**/
        type: "POST",

        data: inputData,
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
        success: function (ajaxOutput) {

            if (ajaxOutput.Process.IsProcess) {

                $.each(ajaxOutput.Process.Message, function (key, value) {

                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                });
                $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                $thisForm.find('[perfect-ctype="input"]').val('');
                $thisForm.find('[perfect-ctype="date"]').val('');


                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                if (onSuccess) {
                    window[onSuccess]($thisForm);


                }

                //---------- Do stuff if success
                //loadPostList();
                // console.log('> Add new post success data', data);
            }
            else {
                $.each(ajaxOutput.Process.Message, function (key, value) {
                    //toastr.warning(value, "Error");
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                });
            }
        },
        complete: function () {
            $(ele).prop('disabled', false);
        }

    });



}


}




//ADD DESIGNATION
function fn_DesignationForm_add(ele) {
let $thisForm = $(ele).closest('[perfect-class="form"]');
if ($thisForm.valid()) {


    //disable button to avoid multiple clicks
    $(ele).prop('disabled', true);

    let inputData = {
        'DesignationID': 0,
        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(), //antiForgery

        'Designation': $thisForm.find('[name="Designation"]').val().trim(),
        'ShortName': $thisForm.find('[name="ShortName"]').val().trim(),
        'EmployeeLevelID': $thisForm.find('[name="EmployeeLevelID"]').val().trim(),
        TransMode: localStorage.getItem("FRM_TRANSMODE"),
        'SortOrder': $thisForm.find('[name="SortOrder"]').val().trim(),


    };
    // Console.log(inputData)
    $.ajax({


        /**/
        url: '@Url.Action("AddNewDesignation", "Designation")',
        /**/
        type: "POST",
        data: inputData, //Antiforgery removed stringyfy
        dataType: "json",
        contentType: "application/x-www-form-urlencoded; charset=utf-8", //antiforgery
        success: function (ajaxOutput) {

            if (ajaxOutput.Process.IsProcess) {

                $.each(ajaxOutput.Process.Message, function (key, value) {
                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                });

                $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                $thisForm.find('[perfect-ctype="input"]').val('');
                $thisForm.find('[perfect-ctype="date"]').val('');

                // Get the value set in form's perfect-onFormSuccess attribute
                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                if (onSuccess) {
                    window[onSuccess]($thisForm);
                }
            }
            else {
                $.each(ajaxOutput.Process.Message, function (key, value) {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                });
            }
        },
        complete: function () {
            $(ele).prop('disabled', false);
        }

    });
}
}

//ADD DEPARTMENT

function fn_DepartmentForm_add(ele) {
let $thisForm = $(ele).closest('[perfect-class="form"]');
if ($thisForm.valid()) {


    //disable button to avoid multiple clicks
    $(ele).prop('disabled', true);

    let inputData = {
        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
        'DepartmentID': 0,


        'DepartmentName': $thisForm.find('[name="DepartmentName"]').val().trim(),
        'DepartmentShortName': $thisForm.find('[name="DepartmentShortName"]').val().trim(),
        TransMode: localStorage.getItem("FRM_TRANSMODE"),
        'SortOrder': $thisForm.find('[name="SortOrder"]').val().trim(),
        'FK_DeptMode': $thisForm.find('[name="FK_DeptMode"]').val()
    };

    $.ajax({
        /**/
        url: '@Url.Action("AddNewDepartment", "Department")',
        /**/

        type: "POST",
        data: inputData,
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
        success: function (ajaxOutput) {

            if (ajaxOutput.Process.IsProcess) {

                $.each(ajaxOutput.Process.Message, function (key, value) {
                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                });

                $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                $thisForm.find('[perfect-ctype="input"]').val('');
                $thisForm.find('[perfect-ctype="date"]').val('');

                // Get the value set in form's perfect-onFormSuccess attribute
                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                if (onSuccess) {
                    window[onSuccess]($thisForm);
                }
            }
            else {
                $.each(ajaxOutput.Process.Message, function (key, value) {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                });
            }
        },
        complete: function () {
            $(ele).prop('disabled', false);
        }

    });
}
}

function AddCategory(ele) {


let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability


//$(ele).find('i').removeClass();

    if (($thisForm.find('[name="ProdNonStockItem"]').is(':Checked') == true) || ($thisForm.find('[name="ProdSales"]').is(':Checked') == true) || ($thisForm.find('[name="ProdSalesReturn"]').is(':Checked') == true) || ($thisForm.find('[name="ProdPurchase"]').is(':Checked') == true) || ($thisForm.find('[name="ProdPurchaseReturn"]').is(':Checked') == true) || ($thisForm.find('[name="ProdStockTransfer"]').is(':Checked') == true) || ($thisForm.find('[name="ProdProductionIn"]').is(':Checked') == true) || ($thisForm.find('[name="ProdProductionOut"]').is(':Checked') == true) || ($thisForm.find('[name="ProdLead"]').is(':Checked') == true) || ($thisForm.find('[name="ProdProject"]').is(':Checked') == true)) {

            isvalid = true;
        }
        else {
            isvalid = false;
        }

        console.log("is valid", $thisForm.valid());


    if (isvalid) {
      if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

    $(ele).prop('disabled', true); // avoiding form submit the double click


    var inputData = {//<---- Input Json : this is the variable we pass to controller
        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),

        Category: $thisForm.find('[name=CategoryName]').val().trim(),
        ShortName: $thisForm.find('[name=ShortName]').val().trim(),
        Mode: $thisForm.find('[name=ModeID]').val().trim(),
        AccountHeadID: $thisForm.find('[name=AccountHeadID]').val().trim(),
        Project: $thisForm.find('[name="Project"][value=Project]').is(":checked"),
        AccountHeadSubID: $thisForm.find('[name=AccountHeadSubID]').val().trim(),
        TransMode: localStorage.getItem("FRM_TRANSMODE"),
        SortOrder: $thisForm.find('[name=SortOrder]').val().trim(),
        'ProdSales': $thisForm.find('[name="ProdSales"]').is(':Checked'),
        'ProdSalesReturn': $thisForm.find('[name="ProdSalesReturn"]').is(':Checked'),
        'ProdPurchase': $thisForm.find('[name="ProdPurchase"]').is(':Checked'),
        'ProdPurchaseReturn': $thisForm.find('[name="ProdPurchaseReturn"]').is(':Checked'),
        'ProdStockTransfer': $thisForm.find('[name="ProdStockTransfer"]').is(':Checked'),
        'ProdProductionIn': $thisForm.find('[name="ProdProductionIn"]').is(':Checked'),
        'ProdProductionOut': $thisForm.find('[name="ProdProductionOut"]').is(':Checked'),
        'ProdLead': $thisForm.find('[name="ProdLead"]').is(':Checked'),
        'ProdProject': $thisForm.find('[name="ProdProject"]').is(':Checked')

    };


          console.log('savca', inputData);

    $.ajax({
        /**/
        url: '@Url.Action("AddNewCategoryDetails", "Category")',
        /**/

        //  url: "AddNewCategoryDetails", "Category",
        type: "POST",

        data: inputData,//<---- Input json : data passed to controller
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
        success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

            if (ajaxOutput.Process.IsProcess) {

                $.each(ajaxOutput.Process.Message, function (key, value) {
                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                });
                $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                $thisForm.find('[perfect-ctype="input"]').val('');
                $thisForm.find('[perfect-ctype="number"]').val('');



                let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                if (onSuccess) {
                    window[onSuccess]();
                }

                //---------- Do stuff if success

            }
            else {
                $.each(ajaxOutput.Process.Message, function (key, value) {
                    //toastr.warning(value, "Error");
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                });
            }
        },
        complete: function () {
            $(ele).prop('disabled', false);
        }

    });

}


    }

    else {
        NotificationMessage({ 'type': 'Error', 'heading': 'Warning', 'message': 'Please Mark Checked in Module Access Check box' });
    }


}

function fn_UserchangepasswordForm_add(ele) {
let $thisForm = $(ele).closest('[perfect-class="form"]');//<------Form element :  Our Form which contain our input elements ,saved in a variable for reusability


//$(ele).find('i').removeClass();

console.log('> Add User change password form IS valid', $thisForm.valid())
if ($thisForm.valid()) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)

    $(ele).prop('disabled', true); // avoiding form submit the double click


    var inputData = {//<---- Input Json : this is the variable we pass to controller
        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
        UserCode: $thisForm.find('[name=UserCode]').val().trim(),
        PresentPassword: $thisForm.find('[name= PresentPassword]').val().trim(),
        NewPassword: $thisForm.find('[name=NewPassword]').val().trim(),
        ConfirmPassword: $thisForm.find('[name=ConfirmPassword]').val().trim(),
    };


    console.log('> Add User Change password ajax input', inputData);

    $.ajax({
        /**/
        url: "@Url.Action("AddNewUserChangepassword", "UserChangepassword")",
        /**/
        type: "POST",

        data: inputData,//<---- Input json : data passed to controller
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
        success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

            if (ajaxOutput.Process.IsProcess) {

                $.each(ajaxOutput.Process.Message, function (key, value) {

                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });

                    /**/
                    var url = '@Url.Action("LogOut", "Security")';
        /**/
        window.location.href = url;
        // window.location("Security/LogOut");

    });
    $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
    $thisForm.find('[perfect-ctype="input"]').val('');
    $thisForm.find('[perfect-ctype="digit"]').val('');

    let onSuccess = $thisForm.attr('perfect-onFormSuccess')

    if (onSuccess) {

        /**/
@*url: "@Url.Action("LogOut","Security")",*@
        /**/
        window[onSuccess]();
    }

    //---------- Do stuff if success

    console.log('> Add new password success data', ajaxOutput);
}
else {
    $.each(ajaxOutput.Process.Message, function (key, value) {
        //toastr.warning(value, "Error");
        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
    });
}
},
complete: function () {
$(ele).prop('disabled', false);
}

});

}
}






function ResetButtonlogin(ele) {


let $thisForm = $(ele).closest('[perfect-class="form"]');
let pData = $thisForm.data('pData');
if (pData) {

$thisForm.find('[name=UserCode]').val(pData.UserCode),
$thisForm.find('[name=PresentPassword]').val(pData.PresentPassword),
$thisForm.find('[name=NewPassword]').val(pData.NewPassword),

$thisForm.find('[name=ConfirmPassword]').val(pData.ConfirmPassword)

//$thisForm.find('"]').val('');
//$thisForm.find('[perfect-ctype="digit"]').val('');

}
else {
// $thisForm.find('[name=UserCode]').val(UserCode),
$thisForm.find('[name=PresentPassword]').val(""),
$thisForm.find('[name=NewPassword]').val(""),

$thisForm.find('[name=ConfirmPassword]').val("")

}

$thisForm.validate().resetForm();
}

function warrantyimagecon(warimage) {
var inputData = { 'WarProductImage': warimage };
$.ajax({
type: "POST",
/**/
url: "@Url.Action("Imagesession", "CommonPopupSearch")",
        /**/
        data: inputData,
        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
        dataType: "json",
        success: function (response) {

        },
        error: function (response) { }
    });

}
function warrantyProductimagecon(warimage) {
    var inputData = { 'WarrantyProductImage': warimage };
    $.ajax({
        type: "POST",
        /**/
        url: "@Url.Action("Imagesession", "CommonPopupSearch")",
        /**/
        data: inputData,
        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
        dataType: "json",
        success: function (response) {

        },
        error: function (response) { }
    });

}


document.getElementById('jq-sidemenu').onclick = function (e) {

    if (document.getElementById('inner-sidemenu').contains(e.target)) {

        $("#jq-sidemenu").addClass("show");


    } else {

        $("#jq-sidemenu").removeClass("show");

    }
}

function fn_showListView() {
    $("#jq-sidemenu").addClass("show");
}
function fn_showListHide() {
    $("#jq-sidemenu").removeClass("show");
}

function setFrmTransModeData(key, value) {
    $.ajax({
        /**/
        url: "@Url.Action("SetSessionTransModeData", "Home")",
        /**/
        data:
        {
            "key": key,
            "value": value
        },
        type: "POST",
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
        success: function (ajaxOutput) { }
    });
}
function setSessionValue(key, value) {
    $.ajax({
        /**/
        url: "@Url.Action("SetSessionData", "Home")",
        /**/
        data:
        {
            "key": key,
            "value": value
        },
        type: "POST",
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
        success: function (ajaxOutput) { }
    });
}
var getSessionValue = function getSessionValueData(key, callback) {
    $.ajax({
        /**/
        url: "@Url.Action("GetSessionData", "Home")",
        /**/
        data:
        {
            "key": key
        },
        type: "Get",
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
        success: function (ajaxOutput) {
            callback(ajaxOutput);
        }
    });

}
function clearSessionValue(key) {
    $.ajax({
        /**/
        url: "@Url.Action("clearSessionData", "Home")",
        /**/
        data:
        {
            "key": key
        },
        type: "POST",
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
        success: function (ajaxOutput) { }
    });
}
getNotification();
function getNotification() {
    $("#ulNotificationList").empty();
    $.ajax({
        url: "@Url.Action("Notification", "Home")",
        type: "GET",
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
        success: function (ajaxOutput) {
            if (ajaxOutput.Process.IsProcess) {


                $.each(ajaxOutput.ListData, function (key, value) {
                    if (key < 5) {
                        let ImgUrl = '';
                        let ImgWidth = 85;
                        if (value.EmpImgValue.length > 0) {
                            ImgUrl = value.EmpImgValue;
                        }
                        else {
                            ImgUrl = '/Assets/images/profile/17.jpg'
                            ImgWidth = 65;
                        }

                        if (value.Redirect) {
                            $("#ulNotificationList").append(`<li><div class="timeline-panel"><div class="media mr-2"><img alt="image" width="${ImgWidth}" src="${ImgUrl}"></div><div class="media-body"><a title='Click to open page' href="../Home/LoadPages?mid=${value.FK_Master}&tmode=${value.TransMode}"><h6 class="mb-1" style="color: coral;">${value.Title}</h6></a><small class="d-block">${value.SendOn}'</small><small><a href="#" data-id="${value.ID_Notification}" data-msg="${value.Message}" data-title="${value.Title}" onClick="ShowNotification(this)">Read Message</a></small></div></div></li>`);
                        }
                        else {
                            $("#ulNotificationList").append('<li><div class="timeline-panel"><div class="media mr-2"><img alt="image" width="' + ImgWidth + '" src="' + ImgUrl + '"></div><div class="media-body"><h6 class="mb-1">' + value.Title + '</h6><small class="d-block">' + value.SendOn + '</small><small><a href="#" data-id="' + value.ID_Notification + '" data-msg="' + value.Message + '" data-title="' + value.Title + '" onClick="ShowNotification(this)">Read Message</a></small></div></div></li>');
                        }
                    }
                });
                if (ajaxOutput.ListData.length > 5) {
                    $("#ulNotificationList").append('<li><a class="all-notification">You have another ' + (parseInt(ajaxOutput.ListData.length) - parseInt(5)) + ' notification</a></li>');
                }
            }

        }
    });
}
        function ShowNotification(element) {

    $("#NotificationID").val($(element).attr('data-id'));

    var title = $(element).attr('data-title');

    $("#NotificationTitle").val($(element).attr('data-title'));
    $("#PerfectNotificationMsg").val($(element).attr('data-msg'));
    $('#modalNotification').modal('show');

}

        function updateNotification() {


          
    $.ajax({
        /**/
        url: "@Url.Action("NotificationUpdate", "Home")",
        /**/
        data:
        {
            "ID": $("#NotificationID").val()
        },
        type: "POST",
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
        success: function (ajaxOutput) {
            $("#spanNotificationCount").text(ajaxOutput);
            getNotification();
        },
        error: function (textStatus, errorThrown) {
            $("#spanNotificationCount").text("");
            getNotification();
        }

    });
}
  function updateReadDeleteNotification(id, type, callback) {

    let tempUrl = "";
    if (type == "edit") {
        tempUrl = "@Url.Action("NotificationUpdate", "Home")"
    }
    else if (type == "delete") {
        tempUrl = "@Url.Action("NotificationDelete", "Home")"
    }

    $.ajax({
        url: tempUrl,
        data:
        {
            "ID": id
        },
        type: "POST",
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
        success: function (ajaxOutput) {
            $("#spanNotificationCount").text(ajaxOutput);
            getNotification();
            callback(1);
        },
        error: function (textStatus, errorThrown) {
            $("#spanNotificationCount").text("");
            getNotification();
            callback(0);
        }

    });
}
function getNumberGeneration(submodule, mode, $thisForm, $elementName) {
    $.ajax({
        url: "@Url.Action("GetAccountNo", "Home")",
        data:
        {
            "submodule": submodule,
            "type": mode
        },
        type: "POST",
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
        success: function (ajaxOutput) {
            if (ajaxOutput.objInfo.Process.IsProcess) {
                let numberGenData = ajaxOutput.objInfo.Data[0].AccountNo;
                if (numberGenData.length > 0) {
                    $thisForm.find('[name="' + $elementName + '"]').val(numberGenData);
                }
                else {
                    $('#modalNumberGenrationMis').modal('show');
                }
            }
            else {
                $('#modalNumberGenrationMis').modal('show');
            }
        },
        error: function (textStatus, errorThrown) {

        }

    });
}
function fn_getSearchMenuList(element) {

    window.location = $(element).attr('data-Link')

}


function fn_menuListPerfect() {
    $("#ulSearchMenu").empty();
    if ($("#menuSearchPerfect").val().length > 0) {
        $.ajax({
            url: "@Url.Action("LoadPage", "Home")",
        data:
        {
            "menuName": $("#menuSearchPerfect").val()
        },
        type: "GET",
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded;charset=utf-8',
        success: function (ajaxOutput) {

            if (ajaxOutput.ListData.length > 0) {
                $("#ulSearchMenu").empty();
                $.each(ajaxOutput.ListData, function (key, value) {
                    // fn_getSearchMenuList(this)
                    $("#ulSearchMenu").append('<li data-Link="' + value.MenuListLink + '"  onclick="fn_getSearchMenuList(this)"><div class="timeline-panel"><div class="media mr-2 media-perfect"><i class="' + value.MenuIconImage + '"></i></div><div class="media-body"><h6 class="mb-1">' + value.MenuListName + '</h6><small class="d-block">' + value.MenuGroupName + '</small></div></div></li>');
                });
            }
        },
        error: function (textStatus, errorThrown) {

        }

    });
}
}
$('#menuSearchPerfect').keypress(function (e) {
if (e.which == 13) {
    $("#btnmenuSearchPerfect").click()
}
});
function ShowNotificationCreation(element) {
$("#NotificationReciverID").val($(element).attr('data-reciverID'));
$("#NotificationLeadGenerateID").val($(element).attr('data-LeadGenerateID'));
$("#NotificationTmode").val($(element).attr('data-tmode'));
$('#modalNotificationCreation').modal('show');
}

function fn_NotificationCreation() {
if ($("#NotificationTitlemake").val().length > 1 && $("#PerfectNotificationMsgmake").val().length > 1) {
    $.ajax({
        url: "@Url.Action("NotificationCreate", "Home")",
        data:
        {
            "reciverID": $("#NotificationReciverID").val(),
            "leadID": $("#NotificationLeadGenerateID").val(),
            "transMode": $("#NotificationTmode").val(),
            "title": $("#NotificationTitlemake").val(),
            "msg": $("#PerfectNotificationMsgmake").val()
        },
        type: "POST",
        dataType: "json",
        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
        success: function (ajaxOutput) {
            if (ajaxOutput.Process.IsProcess) {
                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Your notification successfully sent' });
                $('#modalNotificationCreation').modal('hide');
                $("#NotificationReciverID").val('');
                $("#NotificationLeadGenerateID").val('');
                $("#NotificationTmode").val('');
                $("#NotificationTitlemake").val('');
                $("#PerfectNotificationMsgmake").val('');
            }
        },
        error: function (textStatus, errorThrown) {

        }

    });
}
else {
    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Please fill notification title and message' });
}
}
//window.setInterval(function () {
//fn_getLatestNotificationCount();
//getNotification();
//}, 5000);
        function fn_getLatestNotificationCount() {
            let _lastCount = parseInt($("#spanNotificationCount").text());
        $.ajax({
            url: "@Url.Action("NotificationCount", "Home")",
                type: "GET",
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                success: function (ajaxOutput) {
                    $("#spanNotificationCount").text(ajaxOutput);
                    if (parseInt(ajaxOutput) > _lastCount) {
                        NotificationMessage({ 'type': '', 'heading': 'Notification', 'message': 'You have one notification', 'position': 'toast-bottom-right' });
                    }
                },
                error: function (textStatus, errorThrown) {

                }

            });
}

        function fn_setExportTableHead(tableid, title, columnIndexs, _orientation,_form) {

          $('#pssExportButtons').empty();
             $.ajax({
              url: '@Url.Action("GetCompanyDetails", "Home")',
              type: "GET",
              dataType: "json",
              contentType: "application/x-www-form-urlencoded;charset=utf-8",
            success: function (ajaxOutput) {
                let buttons = new $.fn.dataTable.Buttons(tableid, {
                    buttons: [
                        {
                            extend: 'pdfHtml5',
                            filename: title,
                            download: 'open',
                            title: ajaxOutput.Company + '\n' + ajaxOutput.Branch + '\n\n' + title,
                            text: '<i class="fa fa-file-pdf-o" title="Export to PDF"></i>',
                            pageSize: 'A4',
                            footer: true,
                            customize: function (doc) {

                                doc.styles.title.fontSize = 10;
                                doc.defaultStyle.fontSize = 10;
                                doc.styles.tableHeader.fontSize = 10;
                                doc.styles.tableFooter.fontSize = 6;
                                var now = new Date();
                                var jsDate = now.getDate() + '-' + (now.getMonth() + 1) + '-' + now.getFullYear();

                                doc['footer'] = (function (page, pages) {
                                    return {
                                        columns: [
                                            {
                                                text: [{ text: ajaxOutput.EntrBy }, '     ', { text: jsDate.toString() }]
                                            },
                                            {
                                                text:''
                                            },
                                            {
                                                text: ['Page ', { text: page.toString() }, ' of ', { text: pages.toString() }],
                                                alignment: 'right'
                                            }
                                        ],
                                        margin: 20
                                    }
                                });
                            },
                            orientation: _orientation
                        },
                        {
                            extend: 'excelHtml5',
                            filename: title,
                            title: ajaxOutput.Company + '\n' + ajaxOutput.Branch + '\n\n' + title,
                            text: '<i class="fa fa-file-excel-o" title="Export to Excel"></i>'
                        }
                    ]
                }).container().appendTo($('#pssExportButtons'));
                },
                complete: function () {
                }
            });

        }
        function fn_ShowTrackInfo(masterID, transmode, track) {
            const $TrackContainer = $('#pssTrackInfo');
            $TrackContainer.load('@Url.Action("LoadTrackInfo", "Home")?masterID=' + masterID + '&tmode=' + transmode, function () {
                $("#headerPssTrackInfo").text(track+" ")
                $('#modalPssTrackInfo').modal('show');
                });
        }
        function fn_ShowLedgerInfo(FK_Customer, FK_OtherCustomer,ID_Bill ,Transmode, Reg_Date) {
            const $LedgerContainer = $('#pssLedgerInfo');
            $LedgerContainer.load('@Url.Action("LoadLedgerInfo", "Home")?FK_Customer=' + FK_Customer + '&FK_OtherCustomer=' + FK_OtherCustomer + '&ID_Bill=' + ID_Bill + '&Transmode=' + Transmode + '&Reg_Date=' + Reg_Date, function () {

                $('#modalPssLedgerInfo').modal('show');
                });
        }



        /* file uploads*/
        function OpenModalForUpload(masterID, transmode, head) {

            $('#divmdlFileUpload').load('@Url.Action("UploadDocs", "Home")?masterID=' + masterID + '&tmode=' + transmode, function () {
                $("#headerFileUpload").text(head+" ")
                $('#modalFileUpload').modal('show');
            });

        }
 /*end*/

        //function pssNumberToWord(element,container) {
        //    debugger;
        //    var bigNumArry = new Array('', ' thousand', ' million', ' billion', ' trillion', ' quadrillion', ' quintillion');

        //    var output = '';
        //    var numString = document.getElementById(element).value;
        //    var finlOutPut = new Array();

        //    if (numString == '0') {
        //        //document.getElementById('container').innerHTML = 'Zero';
        //        return;
        //    }

        //    if (numString == 0) {
        //       // document.getElementById(container).innerHTML = 'messeg tell to enter numbers';
        //        return;
        //    }

        //    var i = numString.length;
        //    i = i - 1;


        //    while (numString.length > 3) {
        //        var triDig = new Array(3);
        //        triDig[2] = numString.charAt(numString.length - 1);
        //        triDig[1] = numString.charAt(numString.length - 2);
        //        triDig[0] = numString.charAt(numString.length - 3);

        //        var varToAdd = triDig[0] + triDig[1] + triDig[2];
        //        finlOutPut.push(varToAdd);
        //        i--;
        //        numString = numString.substring(0, numString.length - 3);
        //    }
        //    finlOutPut.push(numString);
        //    finlOutPut.reverse();


        //    for (j = 0; j < finlOutPut.length; j++) {
        //        finlOutPut[j] = pssTriConvert(parseInt(finlOutPut[j]));
        //    }

        //    var bigScalCntr = 0;

        //    for (b = finlOutPut.length - 1; b >= 0; b--) {
        //        if (finlOutPut[b] != "dontAddBigSufix") {
        //            finlOutPut[b] = finlOutPut[b] + bigNumArry[bigScalCntr] + ' , ';
        //            bigScalCntr++;
        //        }
        //        else {

        //            finlOutPut[b] = ' ';
        //            bigScalCntr++;
        //        }
        //    }


        //    for (n = 0; n < finlOutPut.length; n++) {
        //        output += finlOutPut[n];
        //    }

        //    document.getElementById(container).innerHTML = output;
        //}


        //function pssTriConvert(num) {
        //    var ones = new Array('', ' one', ' two', ' three', ' four', ' five', ' six', ' seven', ' eight', ' nine', ' ten', ' eleven', ' twelve', ' thirteen', ' fourteen', ' fifteen', ' sixteen', ' seventeen', ' eighteen', ' nineteen');
        //    var tens = new Array('', '', ' twenty', ' thirty', ' forty', ' fifty', ' sixty', ' seventy', ' eighty', ' ninety');
        //    var hundred = ' hundred';
        //    var output = '';
        //    var numString = num.toString();

        //    if (num == 0) {
        //        return 'dontAddBigSufix';
        //    }
        //    //the case of 10, 11, 12 ,13, .... 19
        //    if (num < 20) {
        //        output = ones[num];
        //        return output;
        //    }

        //    //100 and more
        //    if (numString.length == 3) {
        //        output = ones[parseInt(numString.charAt(0))] + hundred;
        //        output += tens[parseInt(numString.charAt(1))];
        //        output += ones[parseInt(numString.charAt(2))];
        //        return output;
        //    }

        //    output += tens[parseInt(numString.charAt(0))];
        //    output += ones[parseInt(numString.charAt(1))];

        //    return output;
        //}
          let pssOtherChargeTax = [];
        function fn_showOtherCharges(TransMode, FK_Transaction, ElementID) {
            
            let $ProductHtml3 = '';
            $.ajax({
                url: "@Url.Action("GetOtherCharges", "OtherCharges")",
                type: "Post",
                data: {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    'TransMode': TransMode,
                    'FK_Transaction': FK_Transaction
                },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded;charset=utf-8",
                success: function (ajaxOutput) {
                    if (ajaxOutput.OtherChargeList.Process.IsProcess) {
                    $('#pssBodyOtherCharges').empty();
                        if (ajaxOutput.OtherChargeList.Data != null) {
                            if (ajaxOutput.OtherChargeList.Data.length > 0) {

                                pssOtherChargeTax = [];
                                if (ajaxOutput.OtherChargeTaxList.Data!=null) {
                                    pssOtherChargeTax = ajaxOutput.OtherChargeTaxList.Data;
                                }



                                $.each(ajaxOutput.OtherChargeList.Data, function (i, value) {
                                    let checked = value.OctyIncludeTaxAmount ? "checked" : "";
                                    let OctyTransTypeDataOption = "";
                                    let OctyTransTypeDataAction = "";
                                    let OctyTransTypeCusDebit = "";
                                    let OctyTransTypeCusCredit = ""
                                    let OctyTransTypeNarration = value.OctranRemarks == null ? "" : value.OctranRemarks;

                                    if (value.OctyTransTypeCus == 1) {
                                        OctyTransTypeCusDebit = "selected";
                                    }
                                    else if (value.OctyTransTypeCus == 2) {
                                        OctyTransTypeCusCredit = "selected"
                                    }
                                    switch (value.OctyTransTypeActive) {

                                        case 1:
                                            OctyTransTypeDataOption = `<option value="1">Payment</option>`;//Debit
                                            OctyTransTypeDataAction = "disabled";
                                            break;
                                        case 2:
                                            OctyTransTypeDataOption = `<option value="2">Receipt</option>`;//Credit
                                            OctyTransTypeDataAction = "disabled";
                                            break;


                                        default:
                                            //OctyTransTypeDataOption = `<option value="1" ${OctyTransTypeCusDebit}>Debit</option><option value="2" ${OctyTransTypeCusCredit}>Credit</option>`;
                                            OctyTransTypeDataOption = `<option value="1" ${OctyTransTypeCusDebit}>Payment</option><option value="2" ${OctyTransTypeCusCredit}>Receipt</option>`;
                                            break;
                                    }
                                $ProductHtml3 += `<tr>`;
                                $ProductHtml3 += `<td class='Othercharge_SlNo'>${value.SlNo}</td>`;
                                    $ProductHtml3 += `<td class='Othercharge_ID_OtherChargeType' Style='Display:none'>${value.ID_OtherChargeType}</td>`;
                                $ProductHtml3 += `<td class='Othercharge_OctyName'>${value.OctyName}</td>`;
                                    $ProductHtml3 += `<td class='Othercharge_OctyTransType'><select class="form-control" name="OctyTransType" id="OctyTransType" class='form-control' ${OctyTransTypeDataAction}>
                                                    ${OctyTransTypeDataOption}
                                                    </select></td>`;
                                    $ProductHtml3 += `<td class='Othercharge_Amount'><input id='Othercharge_Amount' onchange="fn_getOtherChargeTaxAmountToOnchange(this);" FK_TaxGroup="${value.FK_TaxGroup}" oninput="decimalpnt(this,'Othercharge_Amount',3)" type='text'  class='form-control text-right' value=${value.OctyAmount} min='0'  maxlength='13' /></td>`;
                                    $ProductHtml3 += `<td class='Othercharge_TaxAmount'> <div class="input-group">
                                                    <input type="text" class="form-control text-right"  placeholder="" id="TaxAmount" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value=${value.OctyTaxAmount} disabled />
                                                    <div class="input-group-append">
                                                        <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="fn_getOtherChargeTaxAmount(this)"></button>
                                                    </div>
                                                </div></td>`;
                                    $ProductHtml3 += `<td style="text-align: center;" class='Othercharge_IncludeTax'><input class="IncludeTax" type="checkbox" name="IncludeTax" id="IncludeTax" onchange="fn_getOtherChargeTaxAmountToOnchange(this);" ${checked}></td>`;
                                    $ProductHtml3 += `<td class='Othercharge_Narration'><input id='Othercharge_Narration'  type='text'  class='form-control' maxlength="250" oninput="removeSpaces(this)" value="${OctyTransTypeNarration}" /></td>`;
                                $ProductHtml3 += `</tr>`;
                                });
                        }
                    }
                    else
                    {
                            $ProductHtml3 += "<tr id='0'><td class='norecord'colspan='4' style'text-align:center'>No Records..</td></tr>";
                    }
                    $('#pssBodyOtherCharges').append($ProductHtml3);
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });

                }
            },
                complete: function () {
                    $('#pssOtherChargesElement').val(ElementID);
                    $('#pssOtherChargesTransMode').val(TransMode);
                    $('#pssOtherChargesFKTransaction').val(FK_Transaction);
                    $('#pssModalOtherCharges').modal({ backdrop: 'static', keyboard: false });
                    $('#pssModalOtherCharges').modal('show');
                }
            });
        }
        function fn_getOtherChargeTaxAmount(ele) {
            debugger
            let $ProductHtmlTax = '';
            $('#pssBodyOtherCharges tr').each(function (index, ele) {
                $(this).removeClass('Active')
            });
            $(ele).closest('tr').addClass('Active');

            $.ajax({
                url: "@Url.Action("GetOtherChargesTax", "OtherCharges")",
                type: "Post",
                data: {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    'Amount': $(ele).closest('tr').find('#Othercharge_Amount').val(),
                    'IncludeTax': $(ele).closest('tr').find('#IncludeTax').is(":checked")?1:0,
                    'FK_TaxGroup': $(ele).closest('tr').find('#Othercharge_Amount').attr("FK_TaxGroup"),
                    'FK_Transaction': $('#pssOtherChargesFKTransaction').val(),
                    'TransMode': $('#pssOtherChargesTransMode').val(),
                    'FK_OtherChargeType': $(ele).closest('tr').find('.Othercharge_ID_OtherChargeType').text(),
                },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded;charset=utf-8",
                success: function (ajaxOutput) {
                    if (ajaxOutput.OtherChargeTaxList.Process.IsProcess) {
                        $('#pssBodyOtherChargesTax').empty();
                        if (ajaxOutput.OtherChargeTaxList.Data != null) {
                            if (ajaxOutput.OtherChargeTaxList.Data.length > 0) {
                                let TaxTotal = 0;
                                let pssOtherChargeTaxTemp = [];
                                pssOtherChargeTaxTemp = pssOtherChargeTax.filter(obj => obj.ID_OtherChargeType == $("#pssBodyOtherCharges .Active").closest('tr').find('.Othercharge_ID_OtherChargeType').text());
                                pssOtherChargeTax = pssOtherChargeTax.filter(obj => obj.ID_OtherChargeType != $("#pssBodyOtherCharges .Active").closest('tr').find('.Othercharge_ID_OtherChargeType').text());
                                $.each(ajaxOutput.OtherChargeTaxList.Data, function (i, value) {
                                    let pssOtherChargeTaxTempVal = pssOtherChargeTaxTemp.filter(obj => obj.ID_OtherChargeType == $("#pssBodyOtherCharges .Active").closest('tr').find('.Othercharge_ID_OtherChargeType').text() && obj.FK_TaxType == value.FK_TaxType);
                                    let taxAmount = value.Amount.toFixed(2);
                                    if (pssOtherChargeTaxTempVal.length > 0) {
                                        if (!isNaN(pssOtherChargeTaxTempVal[0].Amount)) {
                                            if ((parseFloat(pssOtherChargeTaxTempVal[0].Amount) != parseFloat(taxAmount))) {
                                                taxAmount = parseFloat(pssOtherChargeTaxTempVal[0].Amount);
                                            }
                                        }
                                    }

                                    $ProductHtmlTax += `<tr>`;
                                    $ProductHtmlTax += `<td class='Othercharge_SlNo'>${value.SlNo}</td>`;
                                    $ProductHtmlTax += `<td class='OtherchargeTax_ID_TaxSettings' Style='Display:none'>${value.ID_TaxSettings}</td>`;
                                    $ProductHtmlTax += `<td class='OtherchargeTax_FK_TaxTypepe' Style='Display:none'>${value.FK_TaxType}</td>`;
                                    $ProductHtmlTax += `<td class='OtherchargeTax_TaxTyName'>${value.TaxTyName}</td>`;
                                    $ProductHtmlTax += `<td class='OtherchargeTax_Percentage'><input id='OtherchargeTax_Percentage'  onkeypress='return isNumberKey(event)' type='text'  class='form-control text-right' value=${value.TaxPercentage.toFixed(2)} min='0'  maxlength='13' disabled/></td>`;
                                    $ProductHtmlTax += `<td class='OtherchargeTax_Amount'><input id='OtherchargeTax_Amount'  oninput="decimalpnt(this,'OtherchargeTax_Amount',3)" type='text'  class='form-control text-right' value=${taxAmount} min='0'  maxlength='13' /></td>`;
                                    $ProductHtmlTax += `</tr>`;
                                    TaxTotal = TaxTotal + parseFloat(taxAmount);
                                    let pssOtherChargeTaxInfo = {};
                                    pssOtherChargeTaxInfo['ID_OtherChargeType'] = $("#pssBodyOtherCharges .Active").closest('tr').find('.Othercharge_ID_OtherChargeType').text();
                                    pssOtherChargeTaxInfo['ID_TaxSettings'] = value.ID_TaxSettings;
                                    pssOtherChargeTaxInfo['Amount'] = taxAmount;
                                    pssOtherChargeTaxInfo['TaxPercentage'] = value.TaxPercentage;
                                    pssOtherChargeTaxInfo['TaxGrpID'] = $("#pssBodyOtherCharges .Active").closest('tr').find('#Othercharge_Amount').attr("FK_TaxGroup");
                                    pssOtherChargeTaxInfo['FK_TaxType'] = $(this).find('.OtherchargeTax_FK_TaxTypepe').text();
                                    pssOtherChargeTaxInfo['TaxTyName'] = $(this).find('.OtherchargeTax_TaxTyName').text();
                                    pssOtherChargeTax.push(pssOtherChargeTaxInfo);
                                });
                                $(ele).closest('tr').find('#TaxAmount').val(TaxTotal);
                                $('#pssModalOtherChargesTax').modal({ backdrop: 'static', keyboard: false });
                                $('#pssModalOtherChargesTax').modal('show');
                        }
                    }
                    else
                    {
                     $ProductHtmlTax += "<tr id='0'><td class='norecord'colspan='4' style'text-align:center'>No Records..</td></tr>";
                     }

                        $('#pssBodyOtherChargesTax').append($ProductHtmlTax);
                }
                else {
                        $.each(ajaxOutput.OtherChargeTaxList.Process.Message, function (key, value) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Tax group not found !' });

                    });

                }
            },
                complete: function () {

                }
            });
        }
        function fn_getOtherChargeTaxAmountToOnchange(ele) {

            debugger
            $('#pssBodyOtherCharges tr').each(function (index, ele) {
                $(this).removeClass('Active')
            });
            $(ele).closest('tr').addClass('Active');
            $.ajax({
                url: "@Url.Action("GetOtherChargesTax", "OtherCharges")",
                type: "Post",
                data: {
                    __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                    'Amount': $(ele).closest('tr').find('#Othercharge_Amount').val(),
                    'IncludeTax': $(ele).closest('tr').find('#IncludeTax').is(":checked")?1:0,
                    'FK_TaxGroup': $(ele).closest('tr').find('#Othercharge_Amount').attr("FK_TaxGroup"),
                    'FK_Transaction': 0/*$('#pssOtherChargesFKTransaction').val()*/,
                    'TransMode': $('#pssOtherChargesTransMode').val(),
                    'FK_OtherChargeType': $(ele).closest('tr').find('.Othercharge_ID_OtherChargeType').text(),
                },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded;charset=utf-8",
                success: function (ajaxOutput) {

                    if (ajaxOutput.OtherChargeTaxList.Process.IsProcess) {
                        if (ajaxOutput.OtherChargeTaxList.Data != null) {
                            if (ajaxOutput.OtherChargeTaxList.Data.length > 0) {
                                let TaxTotal = 0;
                                pssOtherChargeTax = pssOtherChargeTax.filter(obj => obj.ID_OtherChargeType != $("#pssBodyOtherCharges .Active").closest('tr').find('.Othercharge_ID_OtherChargeType').text());
                                $.each(ajaxOutput.OtherChargeTaxList.Data, function (i, value) {
                                    TaxTotal = TaxTotal + parseFloat(value.Amount.toFixed(2));
                                    let pssOtherChargeTaxInfo = {};
                                    pssOtherChargeTaxInfo['ID_OtherChargeType'] = $("#pssBodyOtherCharges .Active").closest('tr').find('.Othercharge_ID_OtherChargeType').text();
                                    pssOtherChargeTaxInfo['ID_TaxSettings'] = value.ID_TaxSettings;
                                    pssOtherChargeTaxInfo['Amount'] = value.Amount.toFixed(2);
                                    pssOtherChargeTaxInfo['TaxPercentage'] = value.TaxPercentage.toFixed(3);
                                    pssOtherChargeTaxInfo['TaxGrpID'] = $("#pssBodyOtherCharges .Active").closest('tr').find('#Othercharge_Amount').attr("FK_TaxGroup");
                                    pssOtherChargeTaxInfo['FK_TaxType'] = value.FK_TaxType;
                                    pssOtherChargeTaxInfo['TaxTyName'] = value.TaxTyName;
                                    pssOtherChargeTax.push(pssOtherChargeTaxInfo);
                                });
                                $(ele).closest('tr').find('#TaxAmount').val(TaxTotal);
                        }
                    }
                }
                else {
                        $.each(ajaxOutput.OtherChargeTaxList.Process.Message, function (key, value) {

                    });
                }
            },
                complete: function () {

                }
            });
        }
        function fn_UpdateOtherChargesTaxDetails() {
            pssOtherChargeTax = pssOtherChargeTax.filter(obj => obj.ID_OtherChargeType != $("#pssBodyOtherCharges .Active").closest('tr').find('.Othercharge_ID_OtherChargeType').text());
            $("#pssBodyOtherChargesTax").find('tr').each(function () {
                let pssOtherChargeTaxInfo = {};
                pssOtherChargeTaxInfo['ID_OtherChargeType'] = $("#pssBodyOtherCharges .Active").closest('tr').find('.Othercharge_ID_OtherChargeType').text();
                pssOtherChargeTaxInfo['ID_TaxSettings'] = $(this).find('.OtherchargeTax_ID_TaxSettings').text();
                pssOtherChargeTaxInfo['Amount'] = isNaN($(this).find('#OtherchargeTax_Amount').val()) ? 0 : ($(this).find('#OtherchargeTax_Amount').val() == "" ? 0 : $(this).find('#OtherchargeTax_Amount').val());
                pssOtherChargeTaxInfo['TaxPercentage'] = $(this).find('#OtherchargeTax_Percentage').val();
                pssOtherChargeTaxInfo['TaxGrpID'] = $("#pssBodyOtherCharges .Active").closest('tr').find('#Othercharge_Amount').attr("FK_TaxGroup");
                pssOtherChargeTaxInfo['FK_TaxType'] = $(this).find('.OtherchargeTax_FK_TaxTypepe').text();
                pssOtherChargeTaxInfo['TaxTyName'] = $(this).find('.OtherchargeTax_TaxTyName').text();
                pssOtherChargeTax.push(pssOtherChargeTaxInfo);
            });
            console.log("new-pssOtherChargeTax", pssOtherChargeTax)
                    let TaxTotal = 0;
                    $('#pssModalOtherChargesTax tr').each(function (index, ele) {
                        let value = isNaN($(this).find('#OtherchargeTax_Amount').val()) ? 0 : ($(this).find('#OtherchargeTax_Amount').val() == "" ? 0 : $(this).find('#OtherchargeTax_Amount').val());
                        TaxTotal = TaxTotal + parseFloat(value);
            });
            $("#pssBodyOtherCharges .Active").closest('tr').find('.Othercharge_TaxAmount').find('#TaxAmount').val(TaxTotal.toFixed(2));
                    $('#pssModalOtherChargesTax').modal('hide');
        }
        function fn_updateOtherChargeData() {
            debugger
            let pssOtherCharge = [];
            let blnOtherChargeUpdate = true;
            $("#pssBodyOtherCharges").find('tr').each(function () {
                if ($(this).find('#Othercharge_Amount').val() != "" && $(this).find('#Othercharge_Amount').val() != null) {
                    if ($(this).find('.Othercharge_OctyTransType').find('select').val() != 0) {
                        let pssOtherChargeInfo = {};
                        pssOtherChargeInfo['ID_OtherChargeType'] = $(this).find('.Othercharge_ID_OtherChargeType').text();
                        pssOtherChargeInfo['OctyTransType'] = $(this).find('.Othercharge_OctyTransType').find('select').val();
                        pssOtherChargeInfo['FK_TaxGroup'] = $(this).find('#Othercharge_Amount').attr("FK_TaxGroup");
                        pssOtherChargeInfo['OctyAmount'] = isNaN($(this).find('#Othercharge_Amount').val()) ? 0 : ($(this).find('#Othercharge_Amount').val() == "" ? 0 : $(this).find('#Othercharge_Amount').val());
                        pssOtherChargeInfo['OctyTaxAmount'] = isNaN($(this).find('#TaxAmount').val()) ? 0 : ($(this).find('#TaxAmount').val() == "" ? 0 : $(this).find('#TaxAmount').val());
                        pssOtherChargeInfo['OctyIncludeTaxAmount'] = $(this).find('#IncludeTax').is(":checked");
                        pssOtherChargeInfo['OctranRemarks'] = $(this).find('#Othercharge_Narration').val() == null ? "" : $(this).find('#Othercharge_Narration').val();
                        pssOtherCharge.push(pssOtherChargeInfo);
                    }
                    else {
                        blnOtherChargeUpdate = false;
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': "Please select Transaction Type" });
                        return false;
                    }
                }
            });
            if (blnOtherChargeUpdate) {
                $.ajax({
                    url: "@Url.Action("UpdateOtherCharges", "OtherCharges")",
                    type: "Post",
                    data: {
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        'TransMode': $('#pssOtherChargesTransMode').val(),
                        'OtherChargeList': pssOtherCharge,
                        'OtherChargeTaxList': pssOtherChargeTax
                    },
                    dataType: "json",
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (ajaxOutput) {

                    },
                    complete: function () {
                        let TaxTotal = 0;
                        let Octcalculate = 0;
                        $('#pssBodyOtherCharges tr').each(function (index, ele) {
                            if ($('#pssOtherChargesTransMode').val() == 'INSL' || $('#pssOtherChargesTransMode').val() == 'PRSV' || $('#pssOtherChargesTransMode').val() == 'PRPB') {
                                if ($(this).find('#OctyTransType').val() == 1){
                                    Octcalculate = -1;
                                }
                                else {
                                    Octcalculate = 1;
                                }

                            }
                            else
                            {

                                if ($(this).find('#OctyTransType').val() == 1)
                                {
                                        Octcalculate = 1;
                                    }
                                    else {
                                        Octcalculate = -1;
                                    }

                            }

                            let Amountvalue = isNaN($(this).find('#Othercharge_Amount').val()) ? 0 : ($(this).find('#Othercharge_Amount').val() == "" ? 0 : $(this).find('#Othercharge_Amount').val());
                            let TaxAmountvalue = isNaN($(this).find('#TaxAmount').val()) ? 0 : ($(this).find('#TaxAmount').val() == "" ? 0 : $(this).find('#TaxAmount').val());
                            if ($(this).find('#IncludeTax').is(":checked")) {
                                TaxTotal = TaxTotal + (parseFloat(Amountvalue) * Octcalculate);
                            }
                            else {
                                TaxTotal = TaxTotal +((parseFloat(Amountvalue) + parseFloat(TaxAmountvalue)) * Octcalculate);
                            }
                        });
                        $(`#${$('#pssOtherChargesElement').val()}`).val(Number(TaxTotal).toFixed(2));
                        if ($('#pssOtherChargesElement').val() == "OtherChargeProjectTransaction") {
                            $(`#${$('#pssOtherChargesElement').val()}`).trigger('change');
                        }

                        $('#pssModalOtherCharges').modal('hide');

                    }
                });
            }
        }

        function removeSpaces(input) {
            // Remove spaces at the beginning and end
            input.value = input.value.replace(/^\s+/, '');
            input.value = input.value.replace(/[|*;?<>:!#^~_`$="'{}&]/g, '');
        }
        //Amount in to Words
        function AmountInWords(a, b) {
            const lt20Words = [
                "",
                "One",
                "Two",
                "Three",
                "Four",
                "Five",
                "Six",
                "Seven",
                "Eight",
                "Nine",
                "Ten",
                "Eleven",
                "Twelve",
                "Thirteen",
                "Fourteen",
                "Fifteen",
                "Sixteen",
                "Seventeen",
                "Eighteen",
                "Nineteen",
            ];
            const get20Words = [
                "",
                "",
                "Twenty",
                "Thirty",
                "Forty",
                "Fifty",
                "Sixty",
                "Seventy",
                "Eighty",
                "Ninety",
            ];

            const getFirst99Words = (n) => {
                const isLt20 = n < 20;
                const tensPlace = Math.floor(n / 10);
                const onesPlace = n % 10;
                if (isLt20) return lt20Words[n];
                if (onesPlace) return get20Words[tensPlace] + " " + lt20Words[onesPlace];
                else return get20Words[tensPlace];
            };

            const numberToWords = (input) => {
                const number = typeof input === "string" ? parseInt(input) : input;
                if (isNaN(number)) return "NaN";
                if (number === 0) return "Zero";

                const numStr = number.toString();
                if (numStr.length > 9) {
                    return "Overflow"; // Does not support converting more than 9 digits yet
                }

                const numPadStr = numStr.padStart(9, "000000000");
                const n1 = Number(numPadStr.slice(-2));
                const n2 = Number(numPadStr.slice(-3, -2));
                const n3 = Number(numPadStr.slice(-5, -3));
                const n4 = Number(numPadStr.slice(-7, -5));
                const n5 = Number(numPadStr.slice(-9, -7));
                // console.log({ n5, n4, n3, n2, n1, numPadStr });

                let amountInWords = "";
                amountInWords += n5 !== 0 ? getFirst99Words(n5) + " Crore " : "";
                amountInWords += n4 !== 0 ? getFirst99Words(n4) + " Lakh " : "";
                amountInWords += n3 !== 0 ? getFirst99Words(n3) + " Thousand " : "";
                amountInWords += n2 !== 0 ? getFirst99Words(n2) + " Hundred " : "";
                amountInWords += n1 !== 0 ? getFirst99Words(n1) : "";

                return amountInWords.trim();
            };


            const amountToWords = (input, decimalPlaces) => {
                const float = typeof input === "string" ? parseFloat(input) : input;
                let [number, decimal] = float.toFixed(decimalPlaces).split(".");
                const numberInWords = numberToWords(number);
                const decimalInWords = numberToWords(decimal);
                // console.log({ numberInWords, decimalInWords, number, decimal });
                return { numberInWords, decimalInWords };
            };

            return amountToWords(a, b)

        }

        function decimalpnt(ele, id, range) {
            debugger
            let input = $('#' + id);

            ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
            let t = ele.value;
            ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;

            $(document).on('keydown', '#' + id, function (event) {

                if (ele.value.includes('.')) {

                }
                else if (ele.value === '.' && (event.key === '.' || event.keyCode === 190)) {
                    ele.value = '0.00'; // Change the value to '0.00' if only a dot is entered
                    // Prevent the dot from being entered in the input field
                }
                var key = event.keyCode || event.charCode;
                if (key == 8 || key == 46) { }
                else {
                    if (ele.value.indexOf('.') < 0 && ele.value.indexOf('.') !== 9 && ele.value.length > 8) {
                        ele.value = ele.value + '.';
                    }
                }

            });

        }


        //Function to automatically generate short name based on name in master pages. 
        function generateShortNameFromFullName(fullName) {
            var words = fullName.split(' ');
            // Check if there is only one word
            if (words.length === 1) {
                // If one word, use the first three characters
                return fullName.substring(0, 3).toUpperCase();
            } else {
                // If multiple words, take the first character of each word (uppercase)
                var shortName = '';
                for (var i = 0; i < words.length; i++) {
                    if (words[i].length > 0) {
                        shortName += words[i][0].toUpperCase();
                    }
                }
                // Ensure the short name has a maximum length of 10 characters
                return shortName.substring(0, 10);
            }
        }



    </script>
</body>
</html>





