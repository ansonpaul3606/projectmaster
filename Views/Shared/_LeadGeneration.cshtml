

@model PerfectWebERP.Models.LeadGenerateModel.LeadGenerateViewList

<style>
    [perfect-tempTable-th-name=ID_Product] {
        display: none
    }

    [perfect-tempTable-td-name=ID_Product] {
        display: none
    }




    .accordion__header1 {
        background-color: white;
        border: 1px solid rgb(255 255 255 / 70%) !important;
        padding: 0rem;
    }


    .btn-danger {
        color: #fff;
        background-color: #e94560;
        border-color: #e94560;
    }

        .btn-danger:hover {
            color: #fff;
            background-color: #e94560;
            border-color: #e94560;
        }

    .toggle-switch.text-right {
        padding-left: 0;
        padding-right: 0px;
    }
</style>

<div class="card ">
    <div class="card-header">
        <h4 class="card-title col-12">@ViewBag.PageTitle <span style="color:black;" id="spanLeadNo"></span></h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Enquiry Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">

                                <input type="hidden" name="LeadGenerateID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                <input type="hidden" name="Lead_No" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                <input type="date" id="RegDate" class="form-control perfectValidate_date" name="RegDate" onchange="datecheck(this)" perfect-class="formGroupControl" perfect-ctype="date" max="2050-01-01" perfect-css="date" />
                                <div class="invalid-errors animated fadeInUp limit-check" style="display: block;"></div>
                            </div>
                        </div>
                    </div>


                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Referred By</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">

                                    @if (!(Model.EmployeeInfoList is null))
                                    {
                                        foreach (var EmployeeInfo in Model.EmployeeInfoList)
                                        {
                                            <input type="text" class="form-control" value="@EmployeeInfo.EmpFName" placeholder="" name="LgCollectedBy" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                        }
                                    }
                                    <input type="hidden" name="FK_LgCollectedBy" value="@Model.FK_Employee" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        <button id="addEmployee-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,69,'Employee Details',[],['Branchs','BranchTypeID','FK_Branch','FK_Departement','Department','BranchType','SLNo'])" Criterea2="0" BindName="LgCollectedBy" BindVal="FK_LgCollectedBy"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Lead Source</span>

                            </label>
                            <div class="col-sm-8">
                                <select id="LFrom" class="form-control" name="ID_LeadFrom" perfect-class="formGroupControl" onchange="GetName(this)" perfect-ctype="select" perfect-css="select" data-live-search="true">
                                    <option value="0">Please select</option>
                                    @if (!(Model.LeadFromList is null))
                                    {
                                        foreach (var LeadFrom in Model.LeadFromList)
                                        {
                                            <option value="@LeadFrom.ID_LeadFrom">@LeadFrom.LeadFromName</option>
                                        }
                                    }
                                </select>

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 ">
                        <div class="form-group row DivLeadFrom" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel" id="SelctName" name="SltName">Lead From</span>

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="hidden" id="Usercode" name="EntryBy" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <input type="text" class="form-control" placeholder="" name="LeadBy" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                    <div class="input-group-append">
                                        <button id="addLeadBy-jq-searchButton3" name="btnLeadBy" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetLeadBy(this)" Function="2" Criterea1="ID_LeadFrom" Criterea3="EntryBy"></button>
                                    </div>
                                    <input type="hidden" name="FK_LeadBy" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />

                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6 DivSubMedia"></div>
                    <div class="col-sm-6 DivSubMedia">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Sub Media</span>

                            </label>
                            <div class="col-sm-8">
                                <select id="SubMedia" class="form-control" name="SubMedia" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true"></select>

                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Mobile No</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text fa fa-phone bg-primary text-white"></span>
                                    </div>
                                    <input type="text" autocomplete="off" class="form-control perfectValidate_mobile_nm" placeholder="" name="CusMobile" onchange="GetCustDtlByMobile(this)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value="@ViewBag.Mobile" maxlength="15" />
                                    <input type="hidden" name="FK_Customer" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <input type="hidden" name="FK_CustomerOthers" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">WhatsApp No</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text fa fa-whatsapp  bg-primary text-white"></span>
                                    </div>
                                    <input type="text" class="form-control perfectValidate_mobile_nm" autocomplete="off" placeholder="" name="CusMobileAlternate" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="15" />
                                </div>
                            </div>
                            @*<div class="col-sm-1">
                         <div class="input-group-append">
                         </div>
                        </div>*@
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Customer Name</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <select id="" class="form-control col-sm-4" autocomplete="off" name="CusNameTitle" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                        @if (!(Model.Title is null))
                                        {
                                            foreach (var _title in Model.Title)
                                            {
                                                <option value="@_title.ID_Mode">@_title.ModeName</option>
                                            }
                                        }
                                    </select>

                                    <input type="text" class="form-control perfectValidate_specialCharName psscapitalize" placeholder="" name="CusName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="150" value="@ViewBag.WalkCustomer" />
                                </div>

                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Company/Contact Person</span>

                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_string_nm " autocomplete="off" placeholder="" name="Company" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="150" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Contact Email</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text fa fa-envelope bg-primary text-white"></span>
                                    </div>
                                    <input type="text" class="form-control perfectValidate_email_nm " autocomplete="off" placeholder="" name="CusEmail" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" value="@ViewBag.CusEmail" />
                                </div>
                            </div>
                        </div>
                    </div>
                    @*<div class="col-sm-6">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Address 1</span>
                        </label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control perfectValidate_string_nm psscapitalize" autocomplete="off" placeholder="Enter Address" name="CusAddress" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="150" />

                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Address 2</span>
                        </label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control perfectValidate_string_nm psscapitalize" autocomplete="off" placeholder="Enter Address 2" name="CusAddress2" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="150" />

                        </div>
                    </div>
                </div>*@
                    @*<div class="col-sm-6">
                    <div class="form-group row" perfect-class="formGroup">
                        <label class="col-sm-4 col-form-label">
                            <span perfect-class="formGroupLabel">Address 3</span>
                        </label>
                        <div class="col-sm-8">
                            <div class="input-group">
                                <input type="text" class="form-control " autocomplete="off" placeholder="Enter Address 3" name="Area" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="150" readonly />
                                <input type="hidden" name="AreaID" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                <div class="input-group-append">
                                    <button id="addarea-jq-searchButton3" name="areas" class="btn btn-primary fa fa-search mr-1" type="button" perfect-css="button" form="form" onclick="GetCmnPopUpSearchVal(this,14,'Area List',[])" criterea1="DistrictID" criterea2="0" bindname="Area" bindval="AreaID"></button>
                                </div>
                                <div class="input-group-prepend">
                                    <span class="input-group-text fa fa-info  bg-primary text-white" title="Add More Communication Info" onclick="GetCommunication(this)"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>*@


                    @*NEW  CHANGE*@
                    <div class="col-sm-12">

                        <div id="accordion-Two" class="accordion accordion-active-header">

                            <div class="accordion__item">
                                <div class="accordion__header collapsed" id="communication" data-target="#active-header_collapsethree">
                                    <span class="accordion__header--icon"></span>
                                    <span class="accordion__header--text">Communication Details</span>

                                </div>
                                <div id="active-header_collapsethree" class="collapse accordion__body" data-parent="#accordion-three">
                                    <div class="accordion__body--text">
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <div class="row">
                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">House Name</span>
                                                            </label>
                                                            <div class="col-sm-8">
                                                                <input type="text" class="form-control perfectValidate_string_nm psscapitalize" autocomplete="off" placeholder="Enter House Name" name="CusAddress" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="150" />
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">Place</span>
                                                            </label>
                                                            <div class="col-sm-8">
                                                                <input type="text" class="form-control perfectValidate_string_nm psscapitalize" autocomplete="off" placeholder="Enter Place" name="CusAddress2" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="150" />
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">PinCode</span>
                                                            </label>
                                                            <div class="col-sm-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control perfectValidate_numeric_nm" perfect-tempTable-Info="PinCode" name="PinCode" placeholder="Type here and search" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="ResetCommunication(this)" maxlength="10" />
                                                                    <div class="input-group-append">
                                                                        <button id="addpincode-jq-searchButton3" name="pincd" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="searchbtn(this)"></button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">Country</span>

                                                            </label>
                                                            <div class="col-sm-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control " name="Country" perfect-tempTable-Info="Country" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                                    <input type="hidden" name="CountryID" class="perfectValidate_numeric_nm" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                    <div class="input-group-append">
                                                                        <button id="addcountry-jq-searchButton3" name="cntry" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,9,'Country List',['','','States','StatesID','DistrictID','District','AreaID','Area','Post','PostID','PinCode'])" Criterea1="0" Criterea2="0" BindName="Country" BindVal="CountryID"></button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">State</span>

                                                            </label>
                                                            <div class="col-sm-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control " name="States" perfect-tempTable-Info="States" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                                    <input type="hidden" name="StatesID" class="perfectValidate_numeric_nm" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                    <div class="input-group-append">
                                                                        <button id="addstates-jq-searchButton3" name="state" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,10,'State List',['CountryID','Country','DistrictID','District','AreaID','Area','Post','PostID','PinCode'])" Criterea1="CountryID" Criterea2="0" BindName="States" BindVal="StatesID"></button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">District</span>

                                                            </label>
                                                            <div class="col-sm-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control " name="District" perfect-tempTable-Info="District" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                                    <input type="hidden" name="DistrictID" class="perfectValidate_numeric_nm" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                    <div class="input-group-append">
                                                                        <button id="adddistrict-jq-searchButton3" name="distct" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,11,'District List',['StatesID','State','AreaID','Area','Post','PostID','PinCode'])" Criterea1="StatesID" Criterea2="0" BindName="District" BindVal="DistrictID"></button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">Area</span>
                                                            </label>
                                                            <div class="col-sm-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control " autocomplete="off" name="Area" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="150" readonly />
                                                                    <input type="hidden" name="AreaID" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                    <div class="input-group-append">
                                                                        <button id="addarea-jq-searchButton3" name="areas" class="btn btn-primary fa fa-search" type="button" perfect-css="button" form="form" onclick="GetCmnPopUpSearchVal(this,14,'Area List',['DistrictID','District','Post','PostID','PinCode'])" criterea1="DistrictID" criterea2="0" bindname="Area" bindval="AreaID"></button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">Post</span>

                                                            </label>
                                                            <div class="col-sm-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control " name="Post" perfect-tempTable-Info="Post" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                                    <input type="hidden" name="PostID" class="perfectValidate_numeric_nm" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                    <div class="input-group-append">
                                                                        <button id="addpincode-jq-searchButton3" name="pst" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,13,'Post List',['AreaID','Area','PinCode'])" Criterea1="AreaID" Criterea2="0" BindName="Post" BindVal="PostID"function="4"></button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*NEW  CHANGE*@

                    <div class="col-sm-12">

                        <div id="accordion-Two" class="accordion accordion-active-header">

                            <div class="accordion__item">
                                <div class="accordion__header collapsed" id="MasterProjectDetails" data-target="#active-header_collapseTwo">
                                    <span class="accordion__header--icon"></span>
                                    <span class="accordion__header--text">Project/Product Details</span>

                                </div>
                                <div id="active-header_collapseTwo" class="collapse accordion__body" data-parent="#accordion-Two">
                                    <div class="accordion__body--text">
                                        <div class="row">
                                            <div class="col-sm-12 " perfect-class="TempTableProduct">
                                                <br />
                                                <div class="row">
                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">Category</span>  <span class="text-danger">*</span>
                                                            </label>
                                                            <div class="col-sm-8 PerError">
                                                                <select class="form-control" name="FK_Category" perfect-class="formGroupControl" onchange="GetProName(this)" perfect-ctype="select" perfect-css="select" perfect-tempTable-ProductType="Category">

                                                                    <option value="0">Please Select</option>
                                                                    @if (!(Model.CategoryList is null))
                                                                    {
                                                                        foreach (var category in Model.CategoryList)
                                                                        {
                                                                            if (category.Project)
                                                                            {

                                                                                string cat = category.CatgName.ToString() + " -Project";
                                                                                <option value="@category.ID_Catg" Project="@category.Project.ToString()" style="color:#b73c50">@cat</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="@category.ID_Catg" Project="@category.Project.ToString()">@category.CatgName</option>
                                                                            }
                                                                        }
                                                                    }
                                                                </select>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-4 PerError">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel" name="lblProName">Product</span>
                                                            </label>

                                                            <div class="col-sm-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control" name="ProdName" id="IdProdName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" perfect-tempTable-ProductType="Name" autocomplete="off" value="@ViewBag.Walkprodname" />
                                                                    <input type="hidden" name="ID_Product" id="IdProduct" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-tempTable-ProductType="Product" perfect-css="input" autocomplete="off" value="@ViewBag.Walkproduct" />

                                                                    <div class="input-group-append">
                                                                        <button id="addProduct-jq-searchButton3" class="btn btn-primary fa fa-search" name="ProdBtn" type="button" perfect-css="button" onclick="SearchProduct(this)"></button>
                                                                    </div>
                                                                </div>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">Quantity</span>
                                                                <span class="text-danger"  name="ID_astrQty">*</span>
                                                            </label>
                                                            <div class="col-sm-8">
                                                                <input type="text" class="form-control text-right " perfect-tempTable-ProductType="LgpPQuantity" name="LgpPQuantity" id="LgpPQuantity" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'LgpPQuantity',4)" min="0" maxlength="13" />
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">MRP</span>
                                                            </label>
                                                            <div class="col-sm-8">
                                                                <input type="text" class="form-control text-right " perfect-tempTable-ProductType="LgpMRP" name="LgpMRP" id="LgpMRP" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'LgpMRP',3)" min="0" maxlength="12" readonly />

                                                            </div>
                                                        </div>
                                                    </div> 
                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">Offer Price</span>
                                                            </label>
                                                            <div class="col-sm-8">
                                                                <input type="text" class="form-control text-right " perfect-tempTable-ProductType="LgpSalesPrice" name="LgpSalesPrice" id="LgpSalesPrice" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'LgpSalesPrice',3)" onchange="MRPValidationCheck(this,'ProductType')" min="0" maxlength="12" />
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">Priority</span>
                                                                <span class="text-danger">*</span>
                                                            </label>
                                                            <div class="col-sm-8 ">
                                                                <select class="form-control" name="FK_Priority" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" perfect-tempTable-ProductType="Priority"onchange="validatepriority(this)">
                                                                    <option value="0">Please select</option>
                                                                    <option value="1">Hot</option>
                                                                    <option value="2">Warm</option>
                                                                    <option value="3">Cold</option>

                                                                </select>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">Enquiry Note</span>
                                                                <span class="text-danger">*</span>
                                                            </label>
                                                            <div class="col-sm-8">
                                                                <div class="input-group">
                                                                    <span perfect-class="formGroupLabel"></span>
                                                                    <input type="text" class="form-control" name="LgpDescription" placeholder="Enquiry" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" perfect-tempTable-ProductType="Feedback" maxlength="150"onchange="validateenquiry(this)" />
                                                                </div>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                    <div class="col-sm-4 " style="display:none">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">Status</span>
                                                                <span class="text-danger">*</span>
                                                            </label>
                                                            <div class="col-sm-8 PerError">
                                                                <select class="form-control" name="ActStatus" perfect-tempTable-ProductType="Status" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">

                                                                    <option value="0">Please select</option>
                                                                    @if (!(Model.ActionStatusList is null))
                                                                    {
                                                                        foreach (var ActionStatus in Model.ActionStatusList)
                                                                        {

                                                                            <option value="@ActionStatus.ID_Mode">@ActionStatus.ModeName</option>
                                                                        }
                                                                    }

                                                                </select>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-4">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">Action</span>
                                                                <span class="text-danger">*</span>
                                                            </label>
                                                            <div class="col-sm-8 PerError">
                                                                <select class="form-control" name="FK_NetAction" perfect-class="formGroupControl" onchange="SetFollow(this)" perfect-ctype="select" perfect-css="select" perfect-tempTable-ProductType="FK_NetAction">
                                                                    <option value="0">Please select</option>
                                                                    @if (!(Model.NextActionList is null))
                                                                    {
                                                                        foreach (var NextAction in Model.NextActionList)
                                                                        {
                                                                            <option value="@NextAction.ID_NextAction" Status="@NextAction.NxtActnStage">@NextAction.NxtActnName</option>
                                                                        }
                                                                    }
                                                                </select>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-4 followupid">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">Action Type</span>
                                                                <span class="text-danger">*</span>
                                                            </label>
                                                            <div class="col-sm-8 PerError">
                                                                <select class="form-control" name="FK_ActionType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" perfect-tempTable-ProductType="FK_ActionType"onchange="validateactiontype(this)">
                                                                    <option value="0">Please select</option>
                                                                    @if (!(Model.Actntyplists is null))
                                                                    {
                                                                        foreach (var Action in Model.Actntyplists)
                                                                        {
                                                                            <option value="@Action.ID_ActionType">@Action.ActnTypeName</option>
                                                                        }
                                                                    }
                                                                </select>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-4 followupid">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">Follow up Date</span>
                                                                <span class="text-danger">*</span>
                                                            </label>
                                                            <div class="col-sm-8 PerError">

                                                                <input type="date" class="form-control perfectValidate_date_nm" id="textNextActionDate" name="NextActionDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" perfect-tempTable-ProductType="ActionDate"onchange="validatefollowupdate(this)" />

                                                                <div class="invalid-errors animated fadeInUp limit-check" style="display: block;"></div>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-4 followupid">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">
                                                                <span perfect-class="formGroupLabel">Assigned To</span>
                                                            </label>
                                                            <div class="col-sm-8">
                                                                <div class="input-group">

                                                                    @if (!(Model.EmployeeInfoList is null))
                                                                    {
                                                                        foreach (var EmployeeInfo in Model.EmployeeInfoList)
                                                                        {
                                                                            <input type="text" class="form-control perfectValidate_string_nm " value="@EmployeeInfo.EmpFName" placeholder="" name="AssignEmp" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" perfect-tempTable-ProductType="Employee" disabled />

                                                                        }
                                                                    }
                                                                    <input type="hidden" name="FK_Employee" value="@Model.FK_Employee" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" perfect-tempTable-ProductType="Employee" />
                                                                    <input type="hidden" name="BranchIDs" value='@ViewBag.BranchID' perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                    <input type="hidden" name="FK_Branch" perfect-tempTable-ProductType="BranchID" value="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                    <input type="hidden" name="Department" value='@ViewBag.FK_Departement' perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                                    <div class="input-group-append">
                                                                        @if (ViewBag.PagedAccessRights.UsrrlAdmin)
                                                                        {

                                                                            <button id="addEmployee-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,69,'Employee Details',[],['Branchs','BranchTypeID','FK_Branch','FK_Departement','Department','BranchType','SLNo'])" Function="1" Criterea1="0" Criterea2="0" Criterea3="0" BindName="AssignEmp" BindVal="FK_Employee"></button>
                                                                        }

                                                                        @if (!ViewBag.PagedAccessRights.UsrrlAdmin)
                                                                        {
                                                                            <button id="addEmployee-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,69,'Employee Details',[],['Branchs','BranchTypeID','FK_Branch','FK_Departement','Department','BranchType','SLNo'])" Function="1" Criterea1="0" Criterea2="BranchIDs" Criterea3="0" BindName="AssignEmp" BindVal="FK_Employee"></button>
                                                                        }


                                                                    </div>


                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                        <div class="row followupid">
                                            <div class="col-sm-4" style="display:none">
                                                <div class="form-group row" perfect-class="formGroup">
                                                    <label class="col-sm-4 col-form-label">
                                                        <span perfect-class="formGroupLabel">Branch Type</span>

                                                    </label>

                                                    <div class="col-sm-8">

                                                        <select class="form-control perfectValidate_string_nm" name="BranchTypeID" perfect-tempTable-ProductType="BranchTypeID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" onchange="fn_selectBranch(this)">

                                                            <option value="">Please Select </option>

                                                            @if (!(Model.BranchTypelists is null))
                                                            {
                                                                foreach (var branchtypeList in Model.BranchTypelists)
                                                                {
                                                                    <option value="@branchtypeList.BranchTypeID" BranchMode="@branchtypeList.BranchModeID">@branchtypeList.BranchType</option>
                                                                }

                                                            }

                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-4" style="display:none">
                                                <div class="form-group row" perfect-class="formGroup">
                                                    <label class="col-sm-4 col-form-label">
                                                        <span perfect-class="formGroupLabel">Branch</span>
                                                    </label>
                                                    <div class="col-sm-8">
                                                        <input type="hidden" name="Branchs" />
                                                        <select class="form-control perfectValidate_string_nm" name="BranchID" perfect-tempTable-ProductType="BranchID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" onchange="fnClearEmp(this)">

                                                            <option value="0">Please Select </option>

                                                            @if (!(Model.BranchList is null))
                                                            {
                                                                foreach (var branchList in Model.BranchList)
                                                                {
                                                                    <option value="@branchList.BranchID">@branchList.Branch</option>
                                                                }

                                                            }

                                                        </select>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-sm-4" style="display:none">
                                                <div class="form-group row" perfect-class="formGroup">
                                                    <label class="col-sm-4 col-form-label">
                                                        <span perfect-class="formGroupLabel">Department</span>
                                                    </label>
                                                    <div class="col-sm-8">
                                                        <select class="form-control perfectValidate_string_nm" name="FK_Departement" perfect-class="formGroupControl" perfect-ctype="select" onchange="fnClearEmp(this)" perfect-css="select" perfect-tempTable-ProductType="FK_Departement" data-live-search="true">
                                                            <option value="0">Please select</option>
                                                            @if (!(Model.DepartementList is null))
                                                            {
                                                                foreach (var Departement in Model.DepartementList)
                                                                {
                                                                    <option value="@Departement.ID_Department">@Departement.DeptName</option>
                                                                }
                                                            }
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-10">

                                            </div>
                                            <div class="col-sm-2 text-right">


                                                <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add more products" onclick="createatable(this,'ProductType',['Product'])"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                <button class="btn btn-light1" type="button" title="Clear Product Details" onclick="productclear(this, 'ProductType')"><i class="fa fa-refresh" aria-hidden="true"></i></button>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>






                <div class="col-sm-12 DivProduct">


                    <div class="table-responsive" perfect-tempTable="ProductType" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                    @*<div class="table-responsive" perfect-ProductType="ProductType"></div>*@

                </div>

            </div>
            <div class="row">
                @*File Upload*@
                <div class="col-sm-6">

                    <div class="form-group row" perfect-class="formGroup">
                        <div class="col-sm-8">
                            <div id="prdimg" class="tab-pane active" style="padding-left:12px">
                                <div class="row">
                                    <div class="col-sm-10">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <div class="upload-btnup-wrapper">
                                                <button type="button" id="btndocsUpload" class="btnup btn"><span class="accordion__header--text">Upload Documents</span></button>

                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @* End File Upload*@

            </div>
            <div class="card-footer text-right" perfect-class="formFooter">
                <button id="updateleadgeneration" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_LeadGenerateForm_update(this,'update')"><i class="fa fa-refresh fa-spin loaderClass"></i>Update</button>
                <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_LeadGenerateForm_update(this,'new')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
            </div>
        </form>
    </div>
</div>
<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>
<script>


    var PssfupDocsList = [];
    //function decimalpnt(ele, id, range) {

    //    let input = $('#' + id);
    //    ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
    //    let t = ele.value;
    //    ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
    //    input.on('keydown', function () {
    //        if (ele.value.includes('.')) {

    //        }
    //        var key = event.keyCode || event.charCode;
    //        if (key == 8 || key == 46) { }
    //        else {
    //            if (ele.value.length == 9) {
    //                ele.value = ele.value + '.';
    //            }
    //        }

    //    });

    //}
    function decimalpnt(ele, id, range) {
        debugger
        let input = $('#' + id);

        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;

        $(document).on('keydown', '#' + id, function (event) {

            if (ele.value.includes('.')) {

            }
            else if (ele.value === '.' && (event.key === '.' || event.keyCode === 190)) {
                ele.value = '0.00'; // Change the value to '0.00' if only a dot is entered
                // Prevent the dot from being entered in the input field
            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.indexOf('.') < 0 && ele.value.indexOf('.') !== 9 && ele.value.length > 8) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }


    function getfunction(ele) {

        debugger
        let $thisForm = $('[perfect-class="form"]');
        if ($thisForm.data('popValueData')) {
            let $tempArr = $thisForm.data('popValueData');
            $thisForm.find('[name=Branch]').text($tempArr.Branch);
            $thisForm.find('[name=Department]').text($tempArr.Department);

            $('input[name="BranchID"]').val($tempArr.BranchID)
            $('input[name="FK_Departement"]').val($tempArr.FK_Departement)
        }
        let branchtypeid = { BranchTypeID: $thisForm.find('[name=BranchTypeID]').val() }
        let BranchID = $thisForm.find('[name=Branchs]').val();
        // let branchid = { BranchID: $thisForm.find('[name=BranchID]').val() }
        // let deptid = { FK_Departement: $thisForm.find('[name=FK_Departement]').val() }
        //// let FK_Departement =$thisForm.find('[name=Depts]').val();

        // perfect - tempTable - ProductType="BranchID"
        // $thisForm.find('[name="BranchID"]').val();
        let brnch_id = $thisForm.find('[name="FK_Branch"]').val();
        $thisForm.find('[perfect-temptable-ProductType = "BranchID"]').val(brnch_id);
        getbranchlist(branchtypeid, brnch_id, $thisForm)


    }
    (function () {
        //jQuery('form').validate();//<-----  Validate/initialize our form on page load

    })();
 //on load functions
    $(document).ready(function ()
    {
      
        document.getElementById("Usercode").value = EntryBy;
        GetMRP();  
  

    @*$('[name="ID_LeadFrom"]').val('@ViewBag.LeadSource').selectpicker('refresh');
    $('[name="ID_LeadFrom"]').trigger('change');*@
    $('[name="FK_Category"]').val('@ViewBag.Walkcategory').selectpicker('refresh');
     initFunctions('form');
     $('#MasterProjectDetails').removeClass('collapsed');
     $('#active-header_collapseTwo').addClass('collapse');
     $('#active-header_collapseTwo').addClass('show');
     $('#MasterProjectDetails').attr('aria-expanded', "true");

     $('#communication').removeClass('collapsed');
     $('#active-header_collapsethree').addClass('collapse');
     $('#active-header_collapsethree').addClass('show');
     $('#communication').attr('aria-expanded', "true");

     let $thisform = $('[perfect-class="form"]');

    

     if ($thisform.find('[name="add"]').is(":visible")) {
         $thisform.find('[name="CountryID"]').val('@ViewBag.ID_Country');
         $thisform.find('[name="Country"]').val('@ViewBag.CountryName');
         $thisform.find('[name="DistrictID"]').val('@ViewBag.ID_District');
         $thisform.find('[name="District"]').val('@ViewBag.DistrictName');
         $thisform.find('[name="StatesID"]').val('@ViewBag.ID_State');
         $thisform.find('[name="States"]').val('@ViewBag.StateName');
     }
     
 });
    function productclear(ele, tablekey) {

        let $thisform = $(ele).closest('[perfect-class="form"]');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="input"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="date"]').val('');
        $thisform.find('[perfect-temptable-' + tablekey + ']').closest('[perfect-ctype="hidden"]').val('');
        let $tblcontainer = $thisform.find('[perfect-tempTable="' + tablekey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);
        if (tablekey == 'ProductType') {

            $('.followupid').hide();
            Getproductrefresh();
        }


    }
    function GetCommunication() {
        $('#formGroupModalcommun').modal('show');
    }
    function GetLeadFromdefault() {
        $('.DivSubMedia').hide();
         let $thisForm = $('[perfect-class="form"]');
                $.ajax({
                url: '@Url.Action("GetEmployeeLeadDefault", "LeadGeneration")',
                type: "Get",
                dataType: "json",
                contentType: "application/json",
                success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                 if (ajaxOutput.Process.IsProcess) {
                     $.each(ajaxOutput.Data, function (key, value) {

                          console.log('>_ Search button > list click', value);
                        
                         $thisForm.find('[name=FK_LeadBy]').val(0);
                         $thisForm.find('[name=BranchTypeID]').val(value.ID_BranchType).selectpicker('refresh');
                         $thisForm.find('[name=BranchID]').val(value.ID_Branch).selectpicker('refresh');
                         $thisForm.find('[name=FK_Departement]').val(value.FK_Department).selectpicker('refresh');
                         $thisForm.find('[name=BranchModeID]').val(value.ID_BranchMode).selectpicker('refresh');
                         $thisForm.find('[name= LgCollectedBy]').val(value.EmpFName);
                         $thisForm.find('[name= FK_LgCollectedBy]').val(value.ID_Employee);
                         $thisForm.find('[name= AssignEmp]').val(value.EmpFName).selectpicker('refresh');
                         $thisForm.find('[name= FK_Employee]').val(value.ID_Employee).selectpicker('refresh');

                         $thisForm.find('[name="RegDate"]').val(moment().format('YYYY-MM-DD'));

                         let branchmodeid = { BranchModeID: $thisForm.find('[name=BranchModeID]').val() }
                        let branchtypeid = { BranchTypeID: $thisForm.find('[name=BranchTypeID]').val() }
                         let masterid = ajaxOutput.Data[0].ID_Branch;
                         getbranchlist(branchtypeid, masterid, $thisForm);
                         let name = $thisForm.find('[name="ID_LeadFrom"] option:selected').text();
                         if (value.ID_BranchMode == 2) {
                             $thisForm.find('[name="SltName"]').text(name + ' Name');
                         }
                         else {
                            // GetName($thisForm.find('[name=ID_LeadFrom]').val(0));
                             GetName($thisForm.find('[name=ID_LeadFrom]').val());
                         }




                     });
                 }
                 else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                         NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                     });
                 }

             },


         });


     }
     function GetLeadFromdefaultprodustdetails() {
       
         let $thisForm = $('[perfect-class="form"]');
                $.ajax({
                url: '@Url.Action("GetEmployeeLeadDefault", "LeadGeneration")',
                type: "Get",
                dataType: "json",
                contentType: "application/json",
                success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                 if (ajaxOutput.Process.IsProcess) {
                     $.each(ajaxOutput.Data, function (key, value) {

                          console.log('>_ Search button > list click', value);
                        
                        
                         $thisForm.find('[name= AssignEmp]').val(value.EmpFName).selectpicker('refresh');
                         $thisForm.find('[name= FK_Employee]').val(value.ID_Employee).selectpicker('refresh');

                         $thisForm.find('[name=BranchTypeID]').val(value.ID_BranchType).selectpicker('refresh');
                         $thisForm.find('[name=FK_Departement]').val(value.FK_Department).selectpicker('refresh');
                         $thisForm.find('[name=FK_Branch]').val(value.ID_Branch).selectpicker('refresh');
                         debugger
                         getfunction(1);




                     });
                 }
                 else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                         NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                     });
                 }

             },


         });


     }
    function fn_LeadGenerateIndex_loadLeadGenUpdateForm() {
        $('.DivSubMedia').hide();
            let $thisRow = $(this).closest('tr');
        let saveddata = $thisRow.data('pData');


        $('.dataTable tr').removeClass("SelectForDelete");
        $(this).closest('tr').addClass('SelectForDelete');

            let inputData = {
                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                LeadGenerateID: saveddata.LeadGenerateID
            };

            $.ajax({
                url: "@Url.Action("GetLeadGenInfo", "LeadGeneration")",
                type: "POST",
                // headers: { "token_key": "1234" },
                data: inputData,
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (ajaxOutput) {

                    $formContainer.load('@Url.Action("LoadLeadGenerateForm", "LeadGeneration")?mtd=@ViewBag.mtd', function () {
                        let $thisForm = $(this).find('[perfect-class="form"]');
                        $thisForm.validate({ messages: validationMessage });
                        if (ajaxOutput.prInfo.Process.IsProcess) {
                            //process is success
                            initFunctions($thisForm);
                            //console.log('sss', $thisForm)
                            $('.followupid').hide();
                          
                            
                            $thisForm.data({ pData: ajaxOutput.prInfo.Data[0] });
                            // Fill fields
                            if (saveddata.LeadNo.length > 0) {
                                $("#spanLeadNo").text(" : " + saveddata.LeadNo);
                            }

                            $thisForm.find('[name="LeadGenerateID"]').val(ajaxOutput.prInfo.Data[0]['LeadGenerateID']);
                            console.log('dateslead', ajaxOutput.prInfo.Data[0]);
                            $thisForm.find('[name="RegDate"]').val(moment(ajaxOutput.prInfo.Data[0]['LeadDate']).format('YYYY-MM-DD'));
                            $thisForm.find('[name="RegDate"]').attr('readonly', true);
                            $thisForm.find('[name="ID_LeadFrom"]').val(ajaxOutput.prInfo.Data[0]['LeadFrom']).selectpicker('refresh');


                            GetName($thisForm.find('[name="ID_LeadFrom"]'));

                        if (ajaxOutput.prInfo.Data[0]['ID_Customer'] != 0) {
                            $thisForm.find('[name="FK_Customer"]').val(ajaxOutput.prInfo.Data[0]['ID_Customer']);

                        } else {
                            $thisForm.find('[name="FK_CustomerOthers"]').val(ajaxOutput.prInfo.Data[0]['FK_CustomerOthers']);
                        }

                        $thisForm.find('[name="CusName"]').val(ajaxOutput.prInfo.Data[0]['CusName']);
                            $thisForm.find('[name="CusAddress"]').val(ajaxOutput.prInfo.Data[0]['CusAddress']);
                            $thisForm.find('[name="CusAddress2"]').val(ajaxOutput.prInfo.Data[0]['CusAddress2']);
                            console.log('ADDRESS2', ajaxOutput.prInfo.Data[0]['CusAddress2'])
                        $thisForm.find('[name="CusMobile"]').val(ajaxOutput.prInfo.Data[0]['CusMobile']);
                        $thisForm.find('[name="CusEmail"]').val(ajaxOutput.prInfo.Data[0]['CusEmail']);
                            $thisForm.find('[name="LeadBy"]').val(ajaxOutput.prInfo.Data[0]['LeadByName']);
                            console.log('STATE NAME>>>>>>>>>>>', ajaxOutput.prInfo.Data[0]['StName']);
                        $thisForm.find('[name="FK_LeadBy"]').val(ajaxOutput.prInfo.Data[0]['LeadBy'])
                        $thisForm.find('[name="Company"]').val(ajaxOutput.prInfo.Data[0]['Company']);
                        $thisForm.find('[name="CusPhnNo"]').val(ajaxOutput.prInfo.Data[0]['CusPhnNo']);
                        $thisForm.find('[name="CusNameTitle"]').val(ajaxOutput.prInfo.Data[0]['CusNameTitle']).selectpicker('refresh');
                        $thisForm.find('[name="CusMobileAlternate"]').val(ajaxOutput.prInfo.Data[0]['CusMobileAlternate']);
                        $thisForm.find('[name="CountryID"]').val(ajaxOutput.prInfo.Data[0]['CountryID']);
                        $thisForm.find('[name="PinCode"]').val(ajaxOutput.prInfo.Data[0]['PinCode']);
                           // $thisForm.find('[name="SubMedia"]').val(ajaxOutput.prInfo.Data[0]['SubMedia']).selectpicker('refresh');;
                        $thisForm.find('[name="StatesID"]').val(ajaxOutput.prInfo.Data[0]['StatesID']);
                        $thisForm.find('[name="DistrictID"]').val(ajaxOutput.prInfo.Data[0]['DistrictID']);
                        $thisForm.find('[name="PostID"]').val(ajaxOutput.prInfo.Data[0]['PostID']);
                        $thisForm.find('[name="Country"]').val(ajaxOutput.prInfo.Data[0]['CntryName']);
                        $thisForm.find('[name="States"]').val(ajaxOutput.prInfo.Data[0]['StName']);
                        $thisForm.find('[name="District"]').val(ajaxOutput.prInfo.Data[0]['DtName']);
                        $thisForm.find('[name="Post"]').val(ajaxOutput.prInfo.Data[0]['PostName']);
                            $thisForm.find('[name="Area"]').val(ajaxOutput.prInfo.Data[0]['Area']);
                            $thisForm.find('[name="AreaID"]').val(ajaxOutput.prInfo.Data[0]['AreaID']);
                        $thisForm.find('[name="ID_MediaMaster"]').val(ajaxOutput.prInfo.Data[0]['ID_MediaMaster']).selectpicker('refresh');
                        $thisForm.find('[name="AssignEmp"]').val('');
                        $thisForm.find('[name="FK_Employee"]').val(0);
                            $thisForm.find('[name="FK_LgCollectedBy"]').val(ajaxOutput.prInfo.Data[0]['CollectedBy']);

                            $thisForm.find('[name="LgCollectedBy"]').val(ajaxOutput.prInfo.Data[0]['CollectedByName']);

                            $thisForm.find('[name="FK_Quotation"]').val(ajaxOutput.prInfo.Data[0]['FK_Quotation']);
                            if (ajaxOutput.prInfo.Data[0]['FK_Quotation'] != 0) {
                                $('#btnProductgridadd').hide();
                                $('#btnProductgridclear').hide();
                                
                            }
                            if (ajaxOutput.prInfo.Data[0]['ID_Customer'] != 0) {
                                $thisForm.find('[name="CusEmail"]').attr('readonly', true);
                                //$thisForm.find('[name="PinCode"]').attr('readonly', true);
                                //$thisForm.find('[name="Company"]').attr('readonly', true);
                                $thisForm.find('[name="CusAddress"]').attr('readonly', true);
                                $thisForm.find('[name="CusAddress2"]').attr('readonly', true);
                                $thisForm.find('[name="Area"]').attr('readonly', true);
                                $thisForm.find('[name="CusName"]').attr('readonly', true);
                                $thisForm.find('[name="CusMobileAlternate"]').attr('readonly', true);
                                $thisForm.find('[name=pincd]').attr("disabled", "disabled")
                                $thisForm.find('[name=cntry]').attr("disabled", "disabled")
                                $thisForm.find('[name=state]').attr("disabled", "disabled")
                                $thisForm.find('[name=distct]').attr("disabled", "disabled")
                                $thisForm.find('[name=areas]').attr("disabled", "disabled")
                                $thisForm.find('[name=pst]').attr("disabled", "disabled")

                            }
                            GetSubMedia(this, ajaxOutput.prInfo.Data[0]['SubMedia']);
                    }

                        console.log('ssse455', ajaxOutput.subproduct);
                    if (ajaxOutput.subproduct.Process.IsProcess) {
                        $thisForm.data({ cData: ajaxOutput.subproduct.Data });
                        //process is success

                        console.log('sss', ajaxOutput.subproduct.Data);


                            //console.log('sss', $thisForm)

                            console.log('sss4', ajaxOutput.subproduct.Data[0],1);
                        if (ajaxOutput.prInfo.Data[0]['FK_Quotation'] != 0) {
                            fillTable($thisForm, 'ProductType', ajaxOutput.subproduct.Data, tableOptionsTempOutviewQuotation)
                        }
                        else {
                            fillTable($thisForm, 'ProductType', ajaxOutput.subproduct.Data, tableOptionsTempOut)
                        }
                       


                         }
                         $sideMenuOptions.close();//<---  Close side menu
                         $thisForm.find('button[name=add]').addClass('d-none');//<--- hide add cunsomer button
                         $thisForm.find('button[name=update]').removeClass('d-none');//<--- show update cunsomer button

                        $thisForm.attr('perfect-onFormSuccess', 'fn_LeadGenerateIndex_initialLoad');
                    });

                }
            });
    };

    function Getproductrefresh() {

         let $thisForm = $('[perfect-class="form"]');
                $.ajax({
                url: '@Url.Action("GetEmployeeLeadDefault", "LeadGeneration")',
                type: "Get",
                dataType: "json",
                contentType: "application/json",
                success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                 if (ajaxOutput.Process.IsProcess) {
                     $.each(ajaxOutput.Data, function (key, value) {

                          console.log('>_ Search button > list click', value);

                         $thisForm.find('[name=BranchTypeID]').val(value.ID_BranchType).selectpicker('refresh');
                         $thisForm.find('[name=BranchID]').val(value.ID_Branch).selectpicker('refresh');
                         $thisForm.find('[name=FK_Departement]').val(value.FK_Department).selectpicker('refresh');
                         $thisForm.find('[name=BranchModeID]').val(value.ID_BranchMode).selectpicker('refresh');
                         $thisForm.find('[name= LgCollectedBy]').val(value.EmpFName);
                         $thisForm.find('[name= FK_LgCollectedBy]').val(value.ID_Employee);
                         $thisForm.find('[name= AssignEmp]').val(value.EmpFName).selectpicker('refresh');
                         $thisForm.find('[name= FK_Employee]').val(value.ID_Employee).selectpicker('refresh');

                         $thisForm.find('[name="RegDate"]').val(moment().format('YYYY-MM-DD'));

                         let branchmodeid = { BranchModeID: $thisForm.find('[name=BranchModeID]').val() }
                        let branchtypeid = { BranchTypeID: $thisForm.find('[name=BranchTypeID]').val() }
                         let masterid = ajaxOutput.Data[0].ID_Branch;
                         getbranchlist(branchtypeid, masterid, $thisForm);





                     });
                 }
                 else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                         NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                     });
                 }

             },


         });


     }

    function getbranchlist(branchtypeid, masterid, $thisForm) {

        $.ajax({
            url: "@Url.Action("GetBranchList", "Users")",
            type: "POST",
            data: branchtypeid,
            dataType: "json",
            contentType: "application/x-www-form-urlencoded;charset=utf-8",
            success: function (ajaxOutput) {
                console.log('DETAILS OF AJXOUT', ajaxOutput)
                let $branchDropdown = $thisForm.find('[name=BranchID]');//<--- Will give place select html element
                $branchDropdown.empty().selectpicker('refresh');
                $branchDropdown.append($('<option/>', { "value": "" }).text("Please Select")).selectpicker('refresh')
                if (ajaxOutput.Process.IsProcess) {
                    $.each(ajaxOutput.Data, function (key, value) {
                        $branchDropdown.append($('<option/>', { "value": value.BranchID }).text(value.Branch)).selectpicker('refresh')
                        $branchDropdown.val(masterid).selectpicker('refresh');
                    });
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                             //toastr.warning(value, "Error");
                        //NotificationMessage({ 'type': 'warning', 'heading': 'warning', 'message': value });
                    });
                }
            }
        });
    }


    function GetName(ele)
    {
        debugger
      $('.DivSubMedia').hide();
        
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[name=LeadBy]').val('');
        $thisForm.find('[name=FK_LeadBy]').val('');
        let name = $thisForm.find('[name="ID_LeadFrom"] option:selected').text();
        if (name != 'Please select') {
            $thisForm.find('[name="SltName"]').text(name + ' Name');
            let selectedID = parseInt($thisForm.find('[name="ID_LeadFrom"]').val());
            $thisForm.find('[name="btnLeadBy"]').show();
            $thisForm.find('[name="LeadBy"]').attr('readonly', true);
            switch (selectedID) {
                case 8:
                    $('.DivLeadFrom').show();
                    $thisForm.find('[name="btnLeadBy"]').hide();
                    $thisForm.find('[name="LeadBy"]').attr('readonly', false);
                    $thisForm.find('[name="FK_LeadBy"]').val(0);
                    break;
                case 10:
                case 11:
                    $('.DivLeadFrom').hide();
                    $thisForm.find('[name="btnLeadBy"]').hide();
                    $thisForm.find('[name="LeadBy"]').attr('readonly', false);
                    $thisForm.find('[name="FK_LeadBy"]').val(0);
                    break;
                case 12:
                    $('.DivLeadFrom').show();
                    $thisForm.find('[name="btnLeadBy"]').hide();
                    $thisForm.find('[name="LeadBy"]').attr('readonly', false);
                    $thisForm.find('[name="FK_LeadBy"]').val(0);
                    break;
                default:
                    $('.DivLeadFrom').show();
                    break;

            }
            //if ($thisForm.find('[name="ID_LeadFrom"]').val() == 7) {
            //    GetCmnPopUpSearchValAssign(ele, 7, 'Customer Details', [], ['ID_Customer', 'CustomeName', 'MobileNo', 'Address'], '');
            //}

        }
        else {
            $thisForm.find('[name="SltName"]').text(' Lead From');
        }
       
    }


    function fnClearEmp(ele)
    {

        let $thisForm = $(ele).closest('[perfect-class="form"]');

            $thisForm.find('[name="AssignEmp"]').val('');
            $thisForm.find('[name="FK_Employee"]').val(0);
    }



        function SetFollow(ele)
        {
            let $thisForm = $(ele).closest('[perfect-class="form"]');

            let name = $thisForm.find('[name="FK_NetAction"]').children(":selected").attr('Status');

            $thisForm.find('[name="ActStatus"]').val(name).selectpicker('refresh');

            if (name == 1)
            {
                $('.followupid').show();
            }
             else
            {
                $('.followupid').hide();
            }
            let errorClass = '.temptableError';
            
            let action = $thisForm.find('[name=FK_NetAction]').val();
            if (action > 0) {
                $thisForm.find('[perfect-tempTable-' + 'ProductType' + '="FK_NetAction"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');

            }
            else {
                $thisForm.find('[perfect-tempTable-' + 'ProductType' + '="FK_NetAction"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Action');
            }


        }
             function checkbox()
             {

                 if ($("#customSwitch12").is(':checked'))
                 {
                     document.getElementById("needtotransfr").style.display = '';
                 }
                 else
                 {
                     document.getElementById("needtotransfr").style.display = 'none';
                 }
             }

    function GetProName(ele)

    {

                 let $thisForm = $(ele).closest('[perfect-class="form"]');
                  $thisForm.find('[name="ProdName"]').val('');
                  $thisForm.find('[name="LgpMRP"]').val(0);
                 $thisForm.find('[name="LgpPQuantity"]').val(0);
                 $thisForm.find('[name="LgpDescription"]').val('');
                  $thisForm.find('[name="FK_Priority"]').val('').selectpicker('refresh');
                 $thisForm.find('[name="FK_NetAction"]').val('').selectpicker('refresh');
                 $thisForm.find('[name="LgpSalesPrice"]').val(0);
                

                 let sel = $thisForm.find('[name=FK_Category] option:selected').text();

                 let name = $thisForm.find('[name="FK_Category"]').children(":selected").attr('Project')

      
        if (name == 'False' && sel != 'Please select') {
            $thisForm.find('[name="ProdBtn"]').show();
            $thisForm.find('[name="lblProName"]').text('Product');
        }
        else if (sel == 'Please Select') {
            $thisForm.find('[name="ProdBtn"]').show();
            $thisForm.find('[name="lblProName"]').text('Product');
        }

        else {
            $thisForm.find('[name="ProdBtn"]').hide();
            $thisForm.find('[name="lblProName"]').text('Model');
        }

        GetMRP();
        let errorClass = '.temptableError';
       let category =$thisForm.find('[name=FK_Category]').val();
        if (category > 0) {
            $thisForm.find('[perfect-tempTable-' + 'ProductType' + '="Category"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');

        }
        else {
            $thisForm.find('[perfect-tempTable-' + 'ProductType' + '="Category"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Category');
        }
       
             }

             
    function GetLeadBy(ele)
    {
      
        debugger;
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let ID_LeadFrom = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            ID_LeadFrom: $thisForm.find('[name="ID_LeadFrom"]').val()
        };
        let name = $thisForm.find('[name="ID_LeadFrom"] option:selected').text();
        let selectedID = parseInt($thisForm.find('[name="ID_LeadFrom"]').val());

        if (selectedID >0) {

           

            switch (selectedID) {
                case 7:
                    GetCmnPopUpSearchValAssign(ele, 7, 'Customer Details', [], ['ID_Customer', 'CustomeName', 'MobileNo', 'Address','State'], '');
                    break;
                case 2:
                    //GetCmnPopUpSearchVal(ele, 93, 'Dealer List', [], []);
                    GetCmnPopUpSearchValAssign(ele, 177, 'Dealer Details', [], [ 'MobileNo'], '');
                    break;
                case 3:
                    GetCmnPopUpSearchValAssign(ele, 177, 'Franchise Details', [], ['MobileNo'], '');
                    break;
                case  4:
                    GetCmnPopUpSearchValAssign(ele, 177, 'Extension Counter', [], ['MobileNo'], '');
                    break;
                case  5:
                    GetCmnPopUpSearchValAssign(ele, 177, 'Freelancer Details', [], ['MobileNo'], '');
                    break;
                case 8:
                    GetCmnPopUpSearchValAssign(ele, 8, 'Other Customer Details', [], ['MobileNo'], '');
                    break;
                
                case 9:
                    
                    GetCmnPopUpSearchValAssign(ele, 178, 'Media', [], ['HasSub'], '');
                    GetSubMedia(ele, 0, 0);
                    break;
                case 11:
                    $('.DivLeadFrom').hide();
                    $thisForm.find('[name="btnLeadBy"]').hide();
                    $thisForm.find('[name="LeadBy"]').attr('readonly', false);
                    $thisForm.find('[name="FK_LeadBy"]').val(0);
                    break;
                case 12:
                    $('.DivLeadFrom').show();
                    $thisForm.find('[name="btnLeadBy"]').hide();
                    $thisForm.find('[name="LeadBy"]').attr('readonly', false);
                    $thisForm.find('[name="FK_LeadBy"]').val(0);
                    break;
                case 14:
                    GetCmnPopUpSearchValAssign(ele, 177, 'Freelancer Details', [], ['MobileNo'], '');
                    break;
                default:
                    $('.DivLeadFrom').show();
                    break;

            }
          
        }
        @*$.ajax({
            url: '@Url.Action("GetLeadFromList", "LeadGeneration")',
            type: "POST",
            data: ID_LeadFrom,
            dataType: "json",
            contentType: "application/x-www-form-urlencoded;charset=utf-8",
            success: function (ajaxOutput) {
                //<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                if (ajaxOutput.Process.IsProcess) {
                    let table = JSON.parse(ajaxOutput.Data);
                    // var stateModel = createSelectList({ data: ajaxOutput.Data, hideColumn: ['ID_FIELD'] });
                    let name = $thisForm.find('[name="ID_LeadFrom"] option:selected').text();
                    var stateModel = createSelectList({ data: table.dtable, hideColumn: ['ID_FIELD', 'HasSub'], headingText: name + ' Details' });
                    stateModel.then(function (ret) {
                        if (ret) {
                            console.log('>_ Search button > list click', ret);
                            $thisForm.find('[name=FK_LeadBy]').val(ret.ID_FIELD);
                            $thisForm.find('[name=LeadBy]').val(ret.Name);
                            if ($thisForm.find('[name="ID_LeadFrom"]').val() == 9) {
                                GetSubMedia(ele, 0, 0);
                            }
                        }
                        else {
                            console.log(ret);
                        }
                    });
                }
                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }
            },
        });*@
    }

    function GetSubMedia(ele, subid, formid) {
        debugger;
        let $thisForm = "";
        if (formid == 0) {
             $thisForm = $(ele).closest('[perfect-class="form"]');
        }
        else {
            $thisForm = $(ele).find('[perfect-class="form"]');
        }
        let FK_Media = {
                     FK_Media: $thisForm.find('[name="FK_LeadBy"]').val()
        };
        console.log('FK_Media',$thisForm.find('[name="FK_LeadBy"]').val())

                $.ajax({
                    url: "@Url.Action("GetSubMediaList", "LeadGeneration")",
                    type: "POST",
                    data: FK_Media,
                                dataType: "json",
                                contentType: "application/x-www-form-urlencoded;charset=utf-8",
                                success: function (ajaxOutput) {
                                 console.log(ajaxOutput)
                                    let $mediaDropdown = $thisForm.find('[name=SubMedia]');//<--- Will give place select html element

                                    $mediaDropdown.empty().selectpicker('refresh');
                                    $mediaDropdown.append($('<option/>', { "value": "0" }).text("Please Select")).selectpicker('refresh')


                                 if (ajaxOutput.Process.IsProcess) {
                                     $('.DivSubMedia').show();
                                     $.each(ajaxOutput.Data, function (key, value) {

                                        $mediaDropdown.append($('<option/>', { "value": value.SubmediaID }).text(value.Submedia)).selectpicker('refresh')
                                         if (subid != 0) {
                                             $mediaDropdown.val(subid).selectpicker('refresh');
                                         }

                                        });

                                     }
                                 else {
                                     $('.DivSubMedia').hide();
                                     $.each(ajaxOutput.Process.Message, function (key, value) {
                                             //toastr.warning(value, "Error");
                                      //   NotificationMessage({ 'type': 'warning', 'heading': 'warning', 'message': value });
                                         });
                                     }
                                     }

                         });

    }


    function GetCustDtlByMobile(ele)
    {
        
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        //$thisForm.find('[name=CusName]').val('');
        $thisForm.find('[name=FK_Customer]').val('');
        $thisForm.find('[name=CusAddress]').val('');
        $thisForm.find('[name=CusAddress2]').val('');
        $thisForm.find('[name=CusEmail]').val('');
        $thisForm.find('[name=FK_CustomerOthers]').val('');
        $thisForm.find('[name="Company"]').val('');
        $thisForm.find('[name="CusPhnNo"]').val('');
        //$thisForm.find('[name="CountryID"]').val('');
        //$thisForm.find('[name="StatesID"]').val('');
        //$thisForm.find('[name="DistrictID"]').val('');
        $thisForm.find('[name="CountryID"]').val('@ViewBag.ID_Country');
        $thisForm.find('[name="Country"]').val('@ViewBag.CountryName');
        $thisForm.find('[name="DistrictID"]').val('@ViewBag.ID_District');
        $thisForm.find('[name="District"]').val('@ViewBag.DistrictName');
        $thisForm.find('[name="StatesID"]').val('@ViewBag.ID_State');
        $thisForm.find('[name="States"]').val('@ViewBag.StateName');
        $thisForm.find('[name="AreaID"]').val('');
        $thisForm.find('[name="Area"]').val('');
        $thisForm.find('[name="PostID"]').val('');
        $thisForm.find('[name="Post"]').val('');
        $thisForm.find('[name="PinCode"]').val('');
        $thisForm.find('[name="CusMobileAlternate"]').val('');
        let CusMobile = {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            CusMobile: $thisForm.find('[name="CusMobile"]').val()
        };

        $.ajax({
            url: '@Url.Action("GetCusDtlByMob", "LeadGeneration")',
            type: "POST",
            data: CusMobile,
            dataType: "json",
            contentType: "application/x-www-form-urlencoded;charset=utf-8",
            success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                                                    // $thisForm.find('[name=CusName]').val(ajaxOutput.Data[0]["CusName"]);
                console.log(ajaxOutput);
                if (ajaxOutput.Data != null) {
                    if (ajaxOutput.Data.length > 1) {
                        console.log('len', ajaxOutput.Data.length);
                        var stateModel = createSelectList({
                            data: ajaxOutput.Data,
                            renameHeader: { "CusAddress1": "Address", "CusEmail": "Email", "CusName": "Name", "CntryName": "Country" },
                            hideColumn: ['ID_Customer', 'CountryID', 'StatesID', 'DistrictID', 'PostID', 'Company', 'CusPhnNo', 'StName', 'DtName', 'PostName', 'AreaID', 'PinCode','CusAddress2'], headingText: 'Customer Details'
                        });
                        stateModel.then(function (ret) {
                            if (ret) {
                                $thisForm.find('[name=CusName]').val('');
                                console.log('>_ Search button > list click', ret);
                                $thisForm.find('[name=CusName]').val(ret.CusName);
                                $thisForm.find('[name=FK_Customer]').val(ret.ID_Customer);
                                $thisForm.find('[name=CusAddress]').val(ret.CusAddress1);
                                $thisForm.find('[name=CusAddress2]').val(ret.CusAddress2);
                                $thisForm.find('[name=CusEmail]').val(ret.CusEmail);
                                $thisForm.find('[name="Company"]').val(ret.Company);
                                $thisForm.find('[name="CusPhnNo"]').val(ret.CusPhnNo);
                                $thisForm.find('[name="CountryID"]').val(ret.CountryID);
                                $thisForm.find('[name="Country"]').val(ret.CntryName);
                                $thisForm.find('[name="StatesID"]').val(ret.StatesID);
                                $thisForm.find('[name="States"]').val(ret.StName);
                                $thisForm.find('[name="DistrictID"]').val(ret.DistrictID);
                                $thisForm.find('[name="District"]').val(ret.DtName);
                                $thisForm.find('[name="AreaID"]').val(ret.AreaID);
                                $thisForm.find('[name="Area"]').val(ret.Area);
                                $thisForm.find('[name="PostID"]').val(ret.PostID);
                                $thisForm.find('[name="Post"]').val(ret.PostName);
                                $thisForm.find('[name="PinCode"]').val(ret.PinCode);
                                $thisForm.find('[name="CusMobileAlternate"]').val(ret.CusMobileAlternate);
                            }
                        });
                    }
                    else {
                         //FOR only one row is there no need to show pop up
                        $thisForm.find('[name=CusName]').val('');
                        $thisForm.find('[name=CusName]').val(ajaxOutput.Data[0].CusName);
                        $thisForm.find('[name=FK_Customer]').val(ajaxOutput.Data[0].ID_Customer);
                        $thisForm.find('[name=CusAddress]').val(ajaxOutput.Data[0].CusAddress1);
                        $thisForm.find('[name=CusAddress2]').val(ajaxOutput.Data[0].CusAddress2);
                        $thisForm.find('[name=CusEmail]').val(ajaxOutput.Data[0].CusEmail);
                        $thisForm.find('[name="Company"]').val(ajaxOutput.Data[0].Company);
                        $thisForm.find('[name="CusPhnNo"]').val(ajaxOutput.Data[0].CusPhnNo);
                        $thisForm.find('[name="CountryID"]').val(ajaxOutput.Data[0].CountryID);
                        $thisForm.find('[name="StatesID"]').val(ajaxOutput.Data[0].StatesID);
                        $thisForm.find('[name="DistrictID"]').val(ajaxOutput.Data[0].DistrictID);
                        $thisForm.find('[name="AreaID"]').val(ajaxOutput.Data[0].AreaID);
                        $thisForm.find('[name="PostID"]').val(ajaxOutput.Data[0].PostID);
                        $thisForm.find('[name="Country"]').val(ajaxOutput.Data[0]['CntryName']);
                        $thisForm.find('[name="States"]').val(ajaxOutput.Data[0]['StName']);
                        $thisForm.find('[name="District"]').val(ajaxOutput.Data[0]['DtName']);
                        $thisForm.find('[name="Post"]').val(ajaxOutput.Data[0]['PostName']);
                        $thisForm.find('[name="Area"]').val(ajaxOutput.Data[0]['Area']);
                        $thisForm.find('[name="PinCode"]').val(ajaxOutput.Data[0]['PinCode']);
                        $thisForm.find('[name="CusMobileAlternate"]').val(ajaxOutput.Data[0]['CusMobileAlternate']);

                    }

                    $thisForm.find('[name="CusEmail"]').attr('readonly', true);
                    //$thisForm.find('[name="Company"]').attr('readonly', true);
                    $thisForm.find('[name="CusAddress"]').attr('readonly', true);
                    $thisForm.find('[name="CusAddress2"]').attr('readonly', true);
                    $thisForm.find('[name="CusName"]').attr('readonly', true);
                    //$thisForm.find('[name="CusMobileAlternate"]').attr('readonly', true);
                    $thisForm.find('[name=pincd]').attr("disabled", "disabled")
                    $thisForm.find('[name=cntry]').attr("disabled", "disabled")
                    $thisForm.find('[name=state]').attr("disabled", "disabled")
                    $thisForm.find('[name=distct]').attr("disabled", "disabled")
                    $thisForm.find('[name=areas]').attr("disabled", "disabled")
                    $thisForm.find('[name=pst]').attr("disabled", "disabled")
                }
                else
                {
                    $.ajax({
                        url: '@Url.Action("GetCusOthrDtlByMob", "LeadGeneration")',
                        type: "POST",
                        data: CusMobile,
                        dataType: "json",
                        contentType: "application/x-www-form-urlencoded;charset=utf-8",
                        success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {
                                                    // $thisForm.find('[name=CusName]').val(ajaxOutput.Data[0]["CusName"]);
                            console.log(ajaxOutput);
                            console.log('lendt', ajaxOutput.Data);
                            if (ajaxOutput.Data != null) {
                                if (ajaxOutput.Data.length > 1) {
                                    console.log('len', ajaxOutput.Data.length);
                                    var stateModel = createSelectList({
                                        data: ajaxOutput.Data,
                                        renameHeader: { "CusAddress1": "Address", "CusEmail": "Email", "CusName": "Name", "CntryName": "Country" },
                                        hideColumn: ['ID_CustomerOthers', 'CountryID', 'StatesID', 'DistrictID', 'PostID', 'Company', 'CusPhnNo', 'StName', 'DtName', 'PostName','CusAddress2' , 'AreaID', 'PinCode'], headingText: 'Customer Details'
                                    });
                                    stateModel.then(function (ret) {
                                        if (ret) {
                                            $thisForm.find('[name=CusName]').val('');
                                            $thisForm.find('[name=CusName]').val(ret.CusName);
                                            $thisForm.find('[name=FK_CustomerOthers]').val(ret.ID_CustomerOthers);
                                            $thisForm.find('[name=CusAddress]').val(ret.CusAddress1);
                                            $thisForm.find('[name=CusAddress2]').val(ret.CusAddress2);
                                            $thisForm.find('[name=CusEmail]').val(ret.CusEmail);
                                            $thisForm.find('[name="Company"]').val(ret.Company);
                                            $thisForm.find('[name="CusPhnNo"]').val(ret.CusPhnNo);
                                            $thisForm.find('[name="CountryID"]').val(ret.CountryID);
                                            $thisForm.find('[name="StatesID"]').val(ret.StatesID);
                                            $thisForm.find('[name="DistrictID"]').val(ret.DistrictID);
                                            $thisForm.find('[name="AreaID"]').val(ret.AreaID);
                                            $thisForm.find('[name="Area"]').val(ret.Area);
                                            $thisForm.find('[name="PostID"]').val(ret.PostID);
                                            $thisForm.find('[name="Country"]').val(ret.CntryName);
                                            $thisForm.find('[name="States"]').val(ret.StName);
                                            $thisForm.find('[name="District"]').val(ret.DtName);
                                            $thisForm.find('[name="Post"]').val(ret.PostName);
                                            $thisForm.find('[name="PinCode"]').val(ret.PinCode);
                                            $thisForm.find('[name="CusMobileAlternate"]').val(ret.CusMobileAlternate);
                                        }
                                    });
                                }
                                else{
                                //FOR only one row is there no need to show pop up
                                    $thisForm.find('[name=CusName]').val('');
                                    $thisForm.find('[name=CusName]').val(ajaxOutput.Data[0].CusName);
                                    $thisForm.find('[name=FK_CustomerOthers]').val(ajaxOutput.Data[0].ID_CustomerOthers);
                                    $thisForm.find('[name=CusAddress]').val(ajaxOutput.Data[0].CusAddress1);
                                    $thisForm.find('[name=CusAddress2]').val(ajaxOutput.Data[0].CusAddress2);
                                    $thisForm.find('[name=CusEmail]').val(ajaxOutput.Data[0].CusEmail);
                                    $thisForm.find('[name="Company"]').val(ajaxOutput.Data[0].Company);
                                    $thisForm.find('[name="CusPhnNo"]').val(ajaxOutput.Data[0].CusPhnNo);
                                    $thisForm.find('[name="CountryID"]').val(ajaxOutput.Data[0].CountryID);
                                    $thisForm.find('[name="StatesID"]').val(ajaxOutput.Data[0].StatesID);
                                    $thisForm.find('[name="DistrictID"]').val(ajaxOutput.Data[0].DistrictID);
                                    $thisForm.find('[name="AreaID"]').val(ajaxOutput.Data[0].AreaID);
                                    $thisForm.find('[name="Area"]').val(ajaxOutput.Data[0].Area);
                                    $thisForm.find('[name="PostID"]').val(ajaxOutput.Data[0].PostID);
                                    $thisForm.find('[name="Country"]').val(ajaxOutput.Data[0]['CntryName']);
                                    $thisForm.find('[name="States"]').val(ajaxOutput.Data[0]['StName']);
                                    $thisForm.find('[name="District"]').val(ajaxOutput.Data[0]['DtName']);
                                    $thisForm.find('[name="Post"]').val(ajaxOutput.Data[0]['PostName']);
                                    $thisForm.find('[name="PinCode"]').val(ajaxOutput.Data[0]['PinCode']);
                                    $thisForm.find('[name="CusMobileAlternate"]').val(ajaxOutput.Data[0]['CusMobileAlternate']);
                                }
                                $thisForm.find('[name="CusEmail"]').attr('readonly', true);
                                //$thisForm.find('[name="Company"]').attr('readonly', true);
                                $thisForm.find('[name="CusAddress"]').attr('readonly', true);
                                $thisForm.find('[name="CusName"]').attr('readonly', true);
                                //$thisForm.find('[name="CusMobileAlternate"]').attr('readonly', true);
                                $thisForm.find('[name=pincd]').attr("disabled", "disabled")
                                $thisForm.find('[name=cntry]').attr("disabled", "disabled")
                                $thisForm.find('[name=state]').attr("disabled", "disabled")
                                $thisForm.find('[name=distct]').attr("disabled", "disabled")
                                $thisForm.find('[name=areas]').attr("disabled", "disabled")
                                $thisForm.find('[name=pst]').attr("disabled", "disabled")
                            }
                            else {
                                $thisForm.find('[name="CusEmail"]').removeAttr('readonly', true);
                                $thisForm.find('[name="Company"]').removeAttr('readonly', true);
                                $thisForm.find('[name="CusAddress"]').removeAttr('readonly', true);
                                $thisForm.find('[name="CusName"]').removeAttr('readonly', true);
                                $thisForm.find('[name="CusMobileAlternate"]').removeAttr('readonly', true);
                                $thisForm.find('[name=pincd]').removeAttr("disabled", "disabled")
                                $thisForm.find('[name=cntry]').removeAttr("disabled", "disabled")
                                $thisForm.find('[name=state]').removeAttr("disabled", "disabled")
                                $thisForm.find('[name=distct]').removeAttr("disabled", "disabled")
                                $thisForm.find('[name=areas]').removeAttr("disabled", "disabled")
                                $thisForm.find('[name=pst]').removeAttr("disabled", "disabled")
                            }
                        },
                    });
                }
            },
        });
    }





    //paging in popup

/////













    function SearchProduct(ele) {
        debugger
        console.log('Search function run')
        
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let $this = $(ele).closest('[perfect-class="formGroup"]');
        let FK_Category = { FK_Category: $thisForm.find('[name=FK_Category]').val() }

            var obj = {
                ProdName: $thisForm.find('[name=ProdName]').val(),
                FK_Category: $thisForm.find('[name=FK_Category]').val()

            }


           if ($thisForm.find('[name=FK_Category]').val() != '')
            {
                  $.ajax({
                    url: '@Url.Action("GetProductSearch", "LeadGeneration")',
                    type: "Get",
                    headers: { "token_key": "123456" },
                    data: obj,
                    dataType: "json",
                    contentType: "application/json",
                    success: function (successData) {
                        console.log('> Search button click success', successData);

                        if (successData.Process.IsProcess) {
                            if (successData.Data.length > 1) {
                                var sss = createSelectList({
                                    data: successData.Data, hideColumn: ['ID_Product', 'SodMRP','SodSalPrice'], headingText: 'Product Details',

                                    renameHeader: { "ProdName": "Name", "ProdShortName": "Short Name", "ProdHSNCode": "HSN Code", "SodMRP": "MRP", "SodSalPrice":"SalePrice" },

                                });

                                sss.then(function (ret) {
                                    debugger
                                    if (ret) {
                                        console.log('>_ Search button > list click', ret);
                                        $this.find('[name=ID_Product]').val(ret.ID_Product);
                                        
                                        $this.find('[name=ProdName]').focus().val(ret.ProdName);
                                        $thisForm.find('[name=LgpMRP]').val(Number(ret.SodMRP).toFixed(2));
                                        GetMRP();



                                        $thisForm.find('[name=LgpSalesPrice]').val(Number(ret.SodSalPrice).toFixed(2));
                                        $this.find('table').append($('<tr>').append($('<td/>').text(ret.ProdName)).append($('<td/>').html('&times;').click(function () { $(this).closest('tr').remove() })))
                                    }
                                    else {
                                        console.log(ret);
                                    }
                                 
                                }); 
                            }
                            else
                            {
                                $this.find('[name=ID_Product]').val(successData.Data[0].ID_Product);
                                $thisForm.find('[name=ProdName]').val(successData.Data[0].ProdName);
                                $thisForm.find('[name=LgpMRP]').val(Number(successData.Data[0].SodMRP).toFixed(2));
                                $thisForm.find('[name=LgpSalesPrice]').val(Number(successData.Data[0].SodSalPrice).toFixed(2));
                            }

                        }
                        else {
                            $.each(successData.Process.Message, function (key, value) {
                                //toastr.warning(value, "Error");
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }

                    },
                    complete: function () {

                        //a.find('.dataTables_wrapper').css('width', '100%');
                    }
                });
            }


        else
        {
            NotificationMessage({  'message': 'Please Select Category' });
        }

    }


    function MRPValidationCheck(ele, tableKey) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        let MRP = $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpMRP"]').val() == "" ? 0 : $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpMRP"]').val();
        let SalePrice = $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpSalesPrice"]').val() == "" ? 0 : $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpSalesPrice"]').val();
        let errorClass = '.temptableError';
        let valid = true;

        if ((parseFloat(MRP)>0) && (parseFloat(MRP) < parseFloat(SalePrice))) {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpSalesPrice"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Offer Price Should be less than or Equal to MRP');
            valid = false;
        }
        else if (parseFloat(MRP) == 0 || parseFloat(MRP) == 0 && parseFloat(SalePrice) == 0) {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpSalesPrice"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            valid = true;
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpSalesPrice"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            valid = true;
        }       
        return valid
    }

    function datecheck(ele) {
        let $thisForm = "";

        $thisForm = $(ele).closest('[perfect-class="form"]');

        //invalid-feedback
        let RegDate = $thisForm.find('[name="RegDate"]').val();

        RegDate = new Date(RegDate);
        RegDate.setHours(0, 0, 0, 0)


        let today = new Date();
        today.setHours(0, 0, 0, 0);
        console.log('RegDate', RegDate)
        console.log('today', today)
        if (RegDate > today) {

            $thisForm.find('[name="RegDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Enquiry date should be lessthan or equal to Todays date')
            return false;
        }
        else {

            $thisForm.find('[name="RegDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
            return true;
        }

    }

    function datecheck1(ele)
    {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
            //invalid-feedback
       let upperlimit = $thisForm.find('[name="RegDate"]').val();
        let lowerlimit = $thisForm.find('[name="NextActionDate"]').val();
        var enqDate = new Date(upperlimit);
        var nxtDate = new Date(lowerlimit);
        var today = new Date();

        if (enqDate.getTime() > nxtDate.getTime())
        {

                console.log('inside limit check if')
                $thisForm.find('[name="NextActionDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Follow up date should be greater than or equal to Enquiry date')
            }
            else {
                console.log('inside limit check else')
                $thisForm.find('[name="NextActionDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
            }
        if (enqDate.getTime() > today.getTime())
        {

            console.log('inside limit check if')
            $thisForm.find('[name="RegDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Enquiry date should be less than or equal to Todays date')
        }
        else {
            console.log('inside limit check else')
            $thisForm.find('[name="RegDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
        }


    }
    function createItems(ele, callback) {
        if (createatable(ele, 'ProductType', [])) {
            callback(1);
        }
        else {
            callback(0);
        }
    }
 // Function to Update LeadGenerate
    function fn_LeadGenerateForm_update(ele, actionType) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if (datecheck(ele)) {
            if ($thisForm.valid()) {
                let savedData = $thisForm.data('pData');
                let _ActionUrl = "";
                let LeadGenerateID = 0;
                if (actionType === "new") {
                    LeadGenerateID = 0;
                    _ActionUrl = "@Url.Action("AddNewLeadGenerate", "LeadGeneration")";
                }
                else if (actionType === "update") {

                    LeadGenerateID = $thisForm.find('[name="LeadGenerateID"]').val();
                    _ActionUrl = "@Url.Action("UpdateLeadGenerate", "LeadGeneration")";
                }
                let IncProData = [];
                let $tblcontainer = $thisForm.find('[perfect-tempTable="ProductType"]');
                $thisForm.find('[perfect-tempTable="ProductType"]').find('tbody').find('tr').each(function () {
                    IncProData.push($(this).data('pData'));
                })

                if (($tblcontainer.attr('perfect-tempTable-action'))!=0 && IncProData.length == 1) { IncProData = []; }


                if (IncProData.length <= 0) {
                    //  createatable(ele, 'ProductType', ['Name']);
                    createItems(ele, function (result) {
                        if (result == 1) {
                            $thisForm.find('[perfect-tempTable="ProductType"]').find('tbody').find('tr').each(function () {
                                IncProData.push($(this).data('pData'));
                            })
                        }


                    })

                }


                if (IncProData.length > 0) {

                    $(ele).prop('disabled', true);
                    let inputData = {
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        'LeadGenerateID': LeadGenerateID,
                        'LastID': LastID_Lead,
                        'TransMode': LeadTransMode,
                        'LeadDate': $thisForm.find('[name="RegDate"]').val().trim(),
                        'ID_Customer': $thisForm.find('[name=FK_Customer]').val(),
                        'FK_CustomerOthers': $thisForm.find('[name=FK_CustomerOthers]').val(),
                        'CusName': $thisForm.find('[name="CusName"]').val().trim(),
                        'CusNameTitle': $thisForm.find('[name="CusNameTitle"]').val(),
                        'CusAddress': $thisForm.find('[name="CusAddress"]').val().trim(),
                        'CusAddress2': $thisForm.find('[name="CusAddress2"]').val(),
                        'CusMobile': $thisForm.find('[name="CusMobile"]').val(),
                        'CusEmail': $thisForm.find('[name="CusEmail"]').val(),
                        'LeadFrom': $thisForm.find('[name="ID_LeadFrom"]').val(),
                        'CountryID': $thisForm.find('[name="CountryID"]').val(),
                        'StatesID': $thisForm.find('[name="StatesID"]').val(),
                        'DistrictID': $thisForm.find('[name="DistrictID"]').val(),
                        'AreaID': $thisForm.find('[name="AreaID"]').val(),
                        'PostID': $thisForm.find('[name="PostID"]').val(),
                        'Company': $thisForm.find('[name="Company"]').val().trim(),
                        'CusPhnNo': $thisForm.find('[name="CusPhnNo"]').val(),
                        'LeadBy': $thisForm.find('[name="FK_LeadBy"]').val(),
                        'CollectedBy': $thisForm.find('[name="FK_LgCollectedBy"]').val(),
                        'LeadByName': $thisForm.find('[name="LeadBy"]').val(),
                        'CusMobileAlternate': $thisForm.find('[name="CusMobileAlternate"]').val(),
                        'SubMedia': $thisForm.find('[name="SubMedia"]').val(),
                        'ProductDetails': IncProData,
                        'FK_CustomerAssignment': '@ViewBag.ID_CustomerAssignment',
                        'ImageList': PssfupDocsList,
                    };
                    console.log('inputData', inputData)
                    clearSessionValue(LastIDSessionKey);
                    $.ajax({
                        url: _ActionUrl,
                        type: "POST",
                        data: inputData,
                        dataType: "json",
                        contentType: "application/x-www-form-urlencoded; charset=utf-8",
                        success: function (ajaxOutput) {

                            if (ajaxOutput.Process.IsProcess) {

                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                });

                                // Get the value set in form's perfect-onFormSuccess attribute
                                let onSuccess = $thisForm.attr('perfect-onFormSuccess');

                                if (onSuccess) {
                                    $('.dataTable tr').removeClass("SelectForDelete");
                                    fn_LeadGenerateIndex_initialLoad();
                                }
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                    $(ele).prop('disabled', false);
                                });
                            }
                        },
                        complete: function () {
                            $(ele).prop('disabled', false);
                        }

                    });

                }

            }
        }
    }
    var tableOptionsTempOut = {
        iconButton: {
            buttons: [

                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        //index attribute name in table row
                        let indexname = tableKey + 'index';
                        //index number in table row
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        console.log('Editclick', savedData);
                        //filling data in available inputs
                        let masterid = "";
                        let branchtypeid = "";
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let category = $thisForm.find('[name="FK_Category"]').children(":selected").attr('Project')
                            let pf_name = $thisNode.attr('name');
                            if (pf_name == 'BranchTypeID') {

                                branchtypeid = { BranchTypeID: savedData[pf_name] }

                            }
                            if (pf_name == 'BranchID') {
                                 masterid = savedData[pf_name];
                            }
                            if (masterid != "" && branchtypeid!="" ) {
                                getbranchlist(branchtypeid, masterid, $thisForm);
                            }
                            if ($thisForm.find('[name="ID_Product"]').val() == 0 && category=='True') {
                                $thisForm.find('[name="ProdBtn"]').hide();
                                $thisForm.find('[name="lblProName"]').text('Model');
                            }
                            else {
                                $thisForm.find('[name="ProdBtn"]').show();
                                $thisForm.find('[name="lblProName"]').text('Product Name');
                            }
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                                //if ($thisForm.find('[name="ActStatus"]').val() == 1)
                                if ($thisForm.find('[name="FK_NetAction"]').children(":selected").attr('Status') == 1) {
                                    $('.followupid').show();
                                }
                                else {
                                    $('.followupid').hide();
                                }
                            }


                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if (inputType == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }

                                else if (inputType == 'hidden') {

                                    // tableOptionsTemp.hideColumn.push(pf_name);
                                    $thisNode.val(savedData[pf_name]);
                                }
                                else if (inputType == 'date') {

                                    console.log('datess', moment(savedData[pf_name]).format('YYYY-MM-DD'))

                                    $thisNode.val(moment(savedData[pf_name]).format('YYYY-MM-DD'));


                                    //$thisNode.val(savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);

                                }

                            }
                            else {

                                $thisNode.val(savedData[pf_name]);
                            }


                        });



                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            //  $thistbl.dataTable({ paging: false });
                        }
                        else {
                            $thistbl.remove();
                        }

                    }
                },
            ]
        },
        onlyShowColumn: ["ProdName", "FK_Priority_d", "FK_NetAction_d", "FK_ActionType_d", "NextActionDate", "FK_Category_d"],
        hideColumn: [],
        serialNo: true,
        renameHeader: { "FK_NetAction": "Action", "FK_ActionType": "Action Type", "LgpPQuantity": "Qty", "NextActionDate": "Follow Up Date", "ProdName": "Product", "FK_Category": "Category" },
        rowAttribute: [],
        isCheckType: [],
        isDateType: ["NextActionDate"]
    };

    function createatable(ele, tkey, uniq) {

       
       
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';
       
        //make index
      

        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;
        if (thisactionIndex > 0) {
            //means update
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            //insert
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }
        //
        debugger
        let valid = true;
        valid = MRPValidationCheck(ele, tableKey);
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Feedback"]').val() == '' || $thisForm.find('[perfect-tempTable-' + tableKey + '="Feedback"]').val() == null) {
            isValid = false;
            console.log('false');
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Feedback"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Enquiry Note');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Feedback"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Category"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Category"]').val() == null) {

            isValid = false;
            console.log('false');
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Category"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Category');
        }
        else
        {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Category"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Priority"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="Priority"]').val()==null) {

            isValid = false;
            console.log('false');
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Priority"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Priority');
        }
        else
        {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="Priority"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
       
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="FK_NetAction"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_NetAction"]').val() == null) {

            isValid = false;           
            $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_NetAction"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Action');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_NetAction"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        //if ($thisForm.find('[perfect-tempTable-' + tableKey + '="Name"]').val() != '' && $thisForm.find('[perfect-tempTable-' + tableKey + '="Name"]').val() != null && $thisForm.find('[perfect-tempTable-' + tableKey + '="Name"]').val() != "" && $thisForm.find('[perfect-tempTable-' + tableKey + '="Name"]').val() != 0) {

        //    if ($thisForm.find('[perfect-tempTable-' + tableKey + '="LgpPQuantity"]').val() <= 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpPQuantity"]').val() == '' || $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpPQuantity"]').val() == null) {

        //        isValid = false;

        //        $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpPQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter a value greater than 0');
        //    }
        //    else {

        //        $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpPQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        //    }
        //}
        var ProductId = $('[name="ID_Product"]').val();
        $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpPQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        if (ProductId.length > 0 && ProductId != 0) {

            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="LgpPQuantity"]').val() <= 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpPQuantity"]').val() == '' || $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpPQuantity"]').val() == null) {
                debugger;
                isValid = false;

                $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpPQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter a value greater than 0');
            }
            else {

                $thisForm.find('[perfect-tempTable-' + tableKey + '="LgpPQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
        }
        if ($thisForm.find('[name="FK_NetAction"]').children(":selected").attr('Status') == 1)
        {
           
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="FK_ActionType"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_ActionType"]').val() == null) {

                isValid = false;              
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_ActionType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Follow up type');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_ActionType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="FK_NetAction"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_NetAction"]').val() ==null) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_NetAction"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Follow up action');
            }
            else {
               // alert($thisForm.find('[perfect-tempTable-' + tableKey + '="Action"]').val());
                $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_NetAction"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ActionDate"]').val() == 0) {

                isValid = false;
                console.log('false');
                $thisForm.find('[perfect-tempTable-' + tableKey + '="ActionDate"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Follow up date');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="ActionDate"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ActionDate"]').valid()) { } else { isValid = false; }

            let RegDate = $thisForm.find('[name="RegDate"]').val();
            let NextActionDate = $thisForm.find('[name="NextActionDate"]').val();

            RegDate = new Date(RegDate);
            RegDate.setHours(0, 0, 0, 0)

            NextActionDate = new Date(NextActionDate);
            NextActionDate.setHours(0, 0, 0, 0)
            let today = new Date();
            today.setHours(0, 0, 0, 0);

            if (NextActionDate >= RegDate) {
                $thisForm.find('[name="NextActionDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')

            }
            else {

                isValid = false;
                $thisForm.find('[name="NextActionDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Follow up date should be greater than or equal to Enquiry date')


            }
        }






        if (unique.length > 0) {
            //getting previous data
            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }

                }

            })
            

            unique.forEach(function (key, i) {
              
               
                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                let headerEleName = $thisForm.find('[name="lblProName"]').text();
                let atname = $thisEle.attr('name');
                let cvalue;
                let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                $errorElement.text("");
                //console.log('len')
                if ($thisEle.length != 0) {
                    console.log('len', $thisEle)
                     let errmessage = headerEleName + " Already exits"

                    //getting current value in cval
                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();
                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else { cvalue = $thisEle.val(); }

                    // console.log('cvalue ->' + cvalue);

                    //searching in previous data
                    if (prevData.find(a => a[atname] == cvalue)) {
                        // console.log('Search =>' + cvalue + '| attr :' + atname)
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
                
               
            });

        }

   

        if (isValid && valid) {

          
            let stsval = 0;
           // stsval = $thisForm.find('[name="ActStatus"]').val();
            stsval = $thisForm.find('[name="FK_NetAction"]').children(":selected").attr('Status');
            // this section make table column data
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('nameAttr', nameAttr);

                if (stsval != 1) {

                    //if (nameAttr == 'FK_NetAction') { $this.val('').selectpicker('refresh'); }
                    //else
                    if (nameAttr == 'FK_ActionType') { $this.val('').selectpicker('refresh'); }
                    else if (nameAttr == 'NextActionDate') { $this.val('')}

                }
                if ($this.is('select')) {
                    switch (headerName) {
                        case "FK_NetAction":
                            headerName = "Action";
                            break;
                        case "FK_ActionType":
                            headerName = "Action Type";
                            break;                            
                        default:
                            headerName = headerName;
                            break;
                    }
                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    //displat text of select
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    //tableOptionsTemp.onlyShowColumn.push(nameAttr + '_d')

                        insertData[nameAttr] = $this.val();
                    $this.val(0).selectpicker('refresh');



                    if (stsval == 1) {

                        //if (nameAttr == 'FK_NetAction') { 
                        //else 
                        if (nameAttr == 'FK_ActionType') { }
                        else if (nameAttr == 'ActStatus') { }
                        else if (nameAttr == 'BranchTypeID') { }
                        else if (nameAttr == 'BranchID') { }
                        else if (nameAttr == 'FK_Departement') { }
                        else { $this.val(0).selectpicker('refresh'); }
                    }
                    else {
                        if (nameAttr == 'BranchTypeID') { }
                        else if (nameAttr == 'BranchID') { }
                        else if (nameAttr == 'FK_Departement') { }
                        else { $this.val(0).selectpicker('refresh'); }

                    }
                    
                }
                else if ($this.is('input')) {

                    let inputType = $this.attr('type').toLocaleLowerCase();
                   
                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp.isCheckType.push(nameAttr)
                        //clear field
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {

                        tableOptionsTemp.hideColumn.push(nameAttr)
                        insertData[nameAttr] = $this.val();

                        if ($thisForm.find('[name="FK_Employee"]').val() == $this.val()) { }

                        else { $this.val(''); }

                        //clear field

                    }
                    //else if (inputType == 'date') {


                    //    if ($this.val() == '') {

                    //        insertData[nameAttr] =null;
                    //    }
                    //    else {

                    //        insertData[nameAttr] = $this.val();
                    //    }

                    //    //clear field
                    //   // $this.val('');
                    //}
                   else if (inputType == 'date') {
                     
                        if ($this.val() == '') {
                        
                            insertData[nameAttr] = '';
                             
                        }
                        else {
                            
                            insertData[nameAttr] = moment($this.val()).format('YYYY-MM-DD');
                            $this.val(moment().format('YYYY-MM-DD'));
                          
                        }

                    }      
                    else {
                        insertData[nameAttr] = $this.val();
                        $this.val('');
                        //$this.val() == "" ? "''" : $this.val();
                        //clear field

                        //if ($thisForm.find('[name="AssignEmp"]').val() ==  $this.val())
                        //{

                        //}
                        //else { $this.val(''); }
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();
                    $this.val('');
                    //if ($thisForm.find('[name="AssignEmp"]').val() == $this.val()) { }
                    //else { $this.val(''); }
                }

                


            });
           
            if (isNew) {
              
                //this section nake table.table row
                if ($tblcontainer.find('table').length == 0) {
                   
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                  //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false });
                }
                else {
                  
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);


                  //  $tblcontainer.find('table').dataTable({ paging: false, ordering: false});
                    //   $tblcontainer.DataTable().draw();
                    //  table.ajax.reload();
                }
                GetLeadFromdefaultprodustdetails();
                //GetLeadFromdefault();
            }
            else {
               
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
               
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
                GetLeadFromdefaultprodustdetails();
                //GetLeadFromdefault();
               // $tblcontainer.find('table').dataTable({ paging: false,ordering:false });
            }

          
            //alert(1);
            // resetting the edit value
            $tblcontainer.attr('perfect-tempTable-action', 0);
        }
        //GetLeadFromdefault();
        return isValid;
       
    }
    function ResetButton(ele) {
        $('.dataTable tr').removeClass("SelectForDelete");
        fn_LeadGenIndex_loadLeadGenAddForm();
    }




    function fillTable(ele, tkey, data, tableOptionsTempOut) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableOptionsTemp = tableOptionsTempOut;
        let insertData = []
        let tableKey = tkey;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $.each(data, function (keyOne, valOne) {

            let pData = {};

            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])
            //---

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                //console.log('tfhyrtname', nameAttr)
                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {
                        switch (headerName) {
                            case "FK_NetAction":
                                headerName = "Action";
                                break;
                            case "FK_ActionType":
                                headerName = "Action Type";
                                break;                         
                            default:
                                headerName = headerName;
                                break;
                        }
                        tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTemp.hideColumn.push(nameAttr);
                        //displat text of select
                        pData[nameAttr + '_d'] = $this.find('[value="' + valOne[nameAttr] + '"]').text();
                        pData[nameAttr] = valOne[nameAttr].toString();
                        if ($this.find('[value="' + valOne[nameAttr] + '"]').text() == "Please select") {
                            pData[nameAttr + '_d'] = "";
                        }
                        //console.log('select ID DATA', $this.find('[value="' + valOne[nameAttr] + '"]').text());
                        //console.log('select DATA', $this.find('options[value="' + valOne[nameAttr] + '"]').text());

                    }
                    else if ($this.is('input')) {

                        let inputType = $this.attr('type').toLocaleLowerCase();
                        console.log(inputType)
                        if (inputType == 'checkbox') {

                            pData[nameAttr] = valOne[nameAttr];

                            tableOptionsTemp.isCheckType.push(nameAttr);

                            console.log('checkbox', nameAttr)


                        }
                        else if (inputType == 'hidden') {

                            tableOptionsTemp.hideColumn.push(nameAttr);
                            pData[nameAttr] = valOne[nameAttr];


                        }
                        else if (inputType == 'date') {

                            if (valOne[nameAttr] == null) {
                                pData[nameAttr] = valOne[nameAttr];
                            }
                            else {
                                pData[nameAttr] = moment(valOne[nameAttr]).format('YYYY-MM-DD');
                            }


                        }
                        
                        else {
                            pData[nameAttr] = valOne[nameAttr].toString();


                        }
                    }
                    else {

                        pData[nameAttr] = valOne[nameAttr].toString();


                    }
                }



            });

            insertData.push(pData);

            console.log('insertData', insertData)
            //----

        });
        $tblcontainer.empty();
        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTemp));
        // $tblcontainer.find('table').dataTable({ paging: true });

    }

    function fn_selectBranch(ele)
    {
       // var BranchTypeModeID = $(ele).val();

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let branchmodeid = { BranchModeID: $thisForm.find('[name=BranchModeID]').val() }
        let branchtypeid = { BranchTypeID: $thisForm.find('[name=BranchTypeID]').val() }

//let branchmodeid1 = $thisForm.find('[name="BranchTypeID"]').children(":selected").attr('BranchMode')


         $.ajax({
                 url: "@Url.Action("GetBranchList", "Users")",
                type: "POST",
                data: branchtypeid,
                dataType: "json",
                contentType: "application/x-www-form-urlencoded;charset=utf-8",
                success: function (ajaxOutput) {

                     let $branchDropdown = $thisForm.find('[name=BranchID]');//<--- Will give place select html element

                 $branchDropdown.empty().selectpicker('refresh');
                 $branchDropdown.append($('<option/>', { "value": "0" }).text("Please Select")).selectpicker('refresh')
                //   $thisForm.find('[name=FK_Departement]').empty().selectpicker('refresh');
                    $thisForm.find('[name="AssignEmp"]').val('');
                    $thisForm.find('[name="FK_Employee"]').val(0);
                 if (ajaxOutput.Process.IsProcess) {




                             $.each(ajaxOutput.Data, function (key, value) {
                             $branchDropdown.append($('<option/>', {"value":value.BranchID}).text(value.Branch)).selectpicker('refresh')
                                 });


                     if ($branchDropdown.attr('perfect-onSelectLoad')) {
                         $branchDropdown.val($branchDropdown.attr('perfect-onSelectLoad')).selectpicker('refresh');
                         $branchDropdown.attr('perfect-onSelectLoad', '');
                     }

                     }
                     else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                        // NotificationMessage({ 'type': 'warning', 'heading': 'warning', 'message': value });
                         });
                     }
                     }

         });


    }

     function searchbtn(ele) {
       debugger
         let $thisForm = $(ele).closest('[perfect-class="form"]');
         let searchPin = {
             Pincode: $thisForm.find('[name="PinCode"]').val()
         };
         if ($thisForm.find('[name="PinCode"]').val() != "") {

             $.ajax({

                 url: '@Url.Action("GetPinCodedetails", "Organization")',
                 type: "POST",
                 data: searchPin,//<---- Input json : data passed to controller
                 dataType: "json",
                 contentType: 'application/x-www-form-urlencoded;charset=utf-8',
                 success: function (ajaxOutput) {
                     console.log('> Search button click success', ajaxOutput);
                     if (ajaxOutput.Process.IsProcess) {
                         //$.each(successData.Process.Message, function (key, value) {
                         //    toastr.success(value, "Success");
                         //});
                         //var sss = createSelectList({ data: JSON.parse(data), hideColumn: ['id'] });
                         //var sss = createSelectList({ data: successData.Data, hideColumn: ['DistrictID'], settings: { size: 'modal-sm'} });
                         var sss = createSelectList({ data: ajaxOutput.Data, hideColumn: ["StatesID", "DistrictID", "CountryID", "PostID", "AreaID"], settings: { size: "modal-sm" }, headingText: 'Pincode List' });
                         sss.then(function (ret) {
                             if (ret) {
                                 $thisForm.find('[name="CountryID"]').val(ret['CountryID']);
                                 $thisForm.find('[name="Country"]').val(ret['Country']);
                                 $thisForm.find('[name="StatesID"]').val(ret['StatesID']);
                                 $thisForm.find('[name="States"]').val(ret['States']);
                                 $thisForm.find('[name="DistrictID"]').val(ret['DistrictID']);
                                 $thisForm.find('[name="District"]').val(ret['District']);
                                 $thisForm.find('[name="AreaID"]').val(ret['AreaID']);
                                 $thisForm.find('[name="Area"]').val(ret['Area']);
                                 $thisForm.find('[name="PostID"]').val(ret['PostID']);
                                 $thisForm.find('[name="Post"]').val(ret['Post'])
                             }
                             else {
                                 console.log(ret);
                             }
                         });
                     }
                     else {
                         $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                         });
                     }
                 },
                 complete: function () {
                     //a.find('.dataTables_wrapper').css('width', '100%');
                 }
             });
         }
         else {
             GetCmnPopUpSearchValAssign(ele, 76, 'Post List', [], ['PinCode','StatesID','States','CountryID','Country','DistrictID','District','AreaID','Area','PostID','Post',]);
         }
    }
    function ResetCommunication(ele) {
        let $thisform = $(ele).closest('[perfect-class="form"]');

        $thisform.find('[name="CountryID"]').val('@ViewBag.ID_Country');
        $thisform.find('[name="Country"]').val('@ViewBag.CountryName');
        $thisform.find('[name="DistrictID"]').val('@ViewBag.ID_District');
        $thisform.find('[name="District"]').val('@ViewBag.DistrictName');
        $thisform.find('[name="StatesID"]').val('@ViewBag.ID_State');
        $thisform.find('[name="States"]').val('@ViewBag.StateName');
        $thisform.find('[name="AreaID"]').val(0);
        $thisform.find('[name="Area"]').val('');
        $thisform.find('[name="PostID"]').val(0);
        $thisform.find('[name="Post"]').val('');
    }
  
    function GetMRP() {
        debugger
           
         let $thisForm = $('[perfect-class="form"]');
                $.ajax({
                url: '@Url.Action("GetMRPEdit","LeadGeneration")',
                type: "Get",
                dataType: "json",
                contentType: "application/json",
                success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                 if (ajaxOutput.Process.IsProcess) {
                     $.each(ajaxOutput.Data, function (key, value) {
                         var val =parseFloat( $thisForm.find('[name="LgpMRP"]').val() == "" ? "0" : $thisForm.find('[name="LgpMRP"]').val());
                         //console.log('gavalue',value.GsValue);
                         if (value.GsValue == true && val<= 0) {
                            
                           
                             $thisForm.find('[name="LgpMRP"]').prop('readonly', false);
                         }
                         else if (value.GsValue == true && val >= 0){
                            
                             $thisForm.find('[name="LgpMRP"]').prop('readonly', true);
                         }
                        
                     });
                 } 
                 else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                         NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                     });
                 }

             },


         });


     }
    $("#btndocsUpload").click(function () {
        let $thisForm = $(this).closest('[perfect-class="form"]');
        let MasterId = $thisForm.find('[name="LeadGenerateID"]').val() == "" ? "0" : $thisForm.find('[name="LeadGenerateID"]').val();
        let header = "Documents";
        OpenModalForUpload(MasterId, LeadTransMode, header);
    })
    function getfunctionAssign(ele) {
    
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $tempArr = $thisForm.data('popValueData');
        let row = $(ele).closest("tr").index();
        $thisForm.find('[name="FK_LeadBy"]').val($tempArr.ID_FIELD);
        $thisForm.find('[name="LeadBy"]').val($tempArr.Name);  
    }

    function getfunctionAssignchnage(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $tempArr = $thisForm.data('popValueData');
        let row = $(ele).closest("tr").index();
        $thisForm.find('[name="PinCode"]').val($tempArr.Pincode);

    }
    function validatepriority(ele) {
        debugger

        let errorClass = '.temptableError';
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let priority = $thisForm.find('[name=FK_Priority]').val();
        if (priority > 0) {
            $thisForm.find('[perfect-tempTable-' + 'ProductType' + '="Priority"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');

        }
        else {
            $thisForm.find('[perfect-tempTable-' + 'ProductType' + '="Priority"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Priority');
        }
    }

    function validateenquiry(ele) {
        let errorClass = '.temptableError';
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let enquiry = $thisForm.find('[name=LgpDescription]').val();
        if (enquiry == '') {
          
            $thisForm.find('[perfect-tempTable-' + 'ProductType' + '="Feedback"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Enquiry Note');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + 'ProductType' + '="Feedback"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
           
        }
    }
    function validateactiontype(ele) {
        let errorClass = '.temptableError';
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let actiontype = $thisForm.find('[name=FK_ActionType]').val();
        if ($thisForm.find('[name="FK_NetAction"]').children(":selected").attr('Status') == 1) {
            if (actiontype > 0) {
                $thisForm.find('[perfect-tempTable-' + 'ProductType' + '="FK_ActionType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');

            }
            else {
                $thisForm.find('[perfect-tempTable-' + 'ProductType' + '="FK_ActionType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Follow up type');
            }
        }
    }

    function validatefollowupdate(ele) {
        let errorClass = '.temptableError';
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let nextdate = $thisForm.find('[name=NextActionDate]').val();

        if (nextdate == 0) {



            $thisForm.find('[perfect-tempTable-' + 'ProductType' + '="ActionDate"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Select Follow up date');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + 'ProductType' + '="ActionDate"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        let RegDate = $thisForm.find('[name="RegDate"]').val();
        let NextActionDate = $thisForm.find('[name="NextActionDate"]').val();

        RegDate = new Date(RegDate);
        RegDate.setHours(0, 0, 0, 0)

        NextActionDate = new Date(NextActionDate);
        NextActionDate.setHours(0, 0, 0, 0)
        let today = new Date();
        today.setHours(0, 0, 0, 0);

        if (NextActionDate >= RegDate) {
            $thisForm.find('[name="NextActionDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')

        }
        else {

           
            $thisForm.find('[name="NextActionDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Follow up date should be greater than or equal to Enquiry date')


        }
    
    }
</script>