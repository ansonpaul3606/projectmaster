@model PerfectWebERP.Models.PayrollModel.SalaryProcessNew
<style>
    .tableFixHead {
        overflow: auto;
        height: 500px;
    }

        .tableFixHead thead tr {
            position: sticky;
            top: 0;
            z-index: 1;
        }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 8px 16px;
    }

    th {
        background: var(--perfect-primary);
    }
</style>
<div class="card ">
    <div class="card-header">
        <h4 class="card-title col-12">Salary Process</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-5 col-form-label">
                                <span perfect-class="formGroupLabel">Process Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-7">
                                <input type="date" class="form-control perfectValidate_date" id="ProcessDate" name="ProcessDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" readonly />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-5 col-form-label">
                                <span perfect-class="formGroupLabel">Branch</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-7">
                                <select class="form-control perfectValidate_string" id="FK_Branch" name="FK_Branch" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="0">All</option>
                                    @if (!(Model.Branch is null))
                                    {
                                        foreach (var Module in Model.Branch)
                                        {
                                            <option value="@Module.BranchID">@Module.Branch</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-5 col-form-label">
                                <span perfect-class="formGroupLabel">Department</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-7">
                                <select class="form-control perfectValidate_string" id="FK_Department" name="FK_Department" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="0">All</option>
                                    @if (!(Model.Department is null))
                                    {
                                        foreach (var Module in Model.Department)
                                        {
                                            <option value="@Module.DepartmentID">@Module.Department</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                &nbsp;&nbsp;&nbsp;
                                <span perfect-class="formGroupLabel">Employee</span>
                                @*<span class="text-danger">*</span>*@

                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control" name="EmployeeName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden"  name="FK_Employee" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">

                                        <button id="addemployeestockto-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,37,'Employee List',[], ['FK_Branch','FK_Department'])"  Criterea1="FK_Department" Criterea2="FK_Branch" BindName="EmployeeName" BindVal="FK_Employee"></button>

                                    </div>
                                </div>

                            </div>

                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-5 col-form-label">
                                <span perfect-class="formGroupLabel">Salary From</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-7">
                                <input type="date" class="form-control perfectValidate_date" id="FromDate" name="FromDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" onchange="checkLimit(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-5 col-form-label">
                                <span perfect-class="formGroupLabel">Salary To</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-7">
                                <input type="date" class="form-control perfectValidate_date" id="ToDate" name="ToDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" onchange="checkLimit(this)" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <div class="col-sm-12">
                                <button type="button" name="Process" class="btn btn-primary" onclick="fn_salaryProcess(this,0);">Process</button>
                                <button id="" type="button" class="btn btn-light d-none" name="ClearProcess" perfect-css="button" onclick="ResetSalaryProcessPage(this)"><i class="fa fa-refresh fa-spin  loaderClass"></i>Clear</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal fade" perfect-class="formGroupModalSalary" id="formGroupModalSalary" data-backdrop="static" data-keyboard="false">
                    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                        <div class="modal-content">
                            <div class="modal-header border-0">
                                <h5 class="modal-title">Payroll Details</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body" perfect-class="formGroup" style="max-height: calc(100vh - 200px); overflow-y: auto;padding: 1rem;">
                                <br />
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-5 col-form-label">
                                                <span perfect-class="formGroupLabel" name="lblProName">Employee Code</span>
                                            </label>
                                            <div class="col-sm-7">
                                                <div class="input-group">

                                                    <input type="hidden" class="form-control" perfect-tempTable-SalaryProcess="FK_EmployeeType" name="FK_EmployeeType" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="hidden" class="form-control" perfect-tempTable-SalaryProcess="FK_Employee" name="FK_Employee" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="hidden" class="form-control" perfect-tempTable-SalaryProcess="ID_SalaryProcess" name="ID_SalaryProcess" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="text" class="form-control" perfect-tempTable-SalaryProcess="EmpCode" name="EmpCode" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                    <input type="hidden" class="form-control" perfect-tempTable-SalaryProcess="FK_Branch" name="FK_Branch" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="hidden" class="form-control " perfect-tempTable-SalaryProcess="FK_Department" name="FK_Department" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="date" class="form-control " perfect-tempTable-SalaryProcess="FromDate" name="FromDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" hidden />
                                                    <input type="date" class="form-control " perfect-tempTable-SalaryProcess="ToDate" name="ToDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" hidden />
                                                    <input type="date" class="form-control " perfect-tempTable-SalaryProcess="ProcessDate" name="ProcessDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" hidden />
                                                    <input type="date" class="form-control " perfect-tempTable-SalaryProcess="TransDate" name="TransDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" hidden />
                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-5 col-form-label">
                                                <span perfect-class="formGroupLabel" name="lblProName">Employee Name</span>
                                            </label>
                                            <div class="col-sm-7">
                                                <div class="input-group">
                                                    <input type="hidden" class="form-control" name="ID_PaySlipTrans" perfect-tempTable-SalaryProcess="ID_PaySlipTrans" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="text" class="form-control " perfect-tempTable-SalaryProcess="Empname" name="Empname" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                                    <input type="hidden" class="form-control " perfect-tempTable-SalaryProcess="FK_Employee" id="FK_Employee" name="FK_Employee" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="hidden" class="form-control " perfect-tempTable-SalaryProcess="GroupID" id="GroupID" name="GroupID" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="hidden" class="form-control" perfect-tempTable-SalaryProcess="NetAmount" name="NetAmount" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="divSalaryProcessDtls">

                                </div>
                                <div class="card-footer text-right" perfect-class="formFooter">
                                </div>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-5 col-form-label">
                                                <span perfect-class="formGroupLabel" name="lblProName">Gross Pay</span>
                                            </label>
                                            <div class="col-sm-7">
                                                <div class="input-group">
                                                    <input type="text" class="form-control " perfect-tempTable-SalaryProcess="GrossPay" id="grosspaycal" name="GrossPay" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" style="text-align:right" />
                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-5 col-form-label">
                                                <span perfect-class="formGroupLabel" name="lblProName">Total Deductions</span>
                                            </label>
                                            <div class="col-sm-7">
                                                <div class="input-group">
                                                    <input type="text" class="form-control " perfect-tempTable-SalaryProcess="TotalDeductions" id="TotalDeductionscal" name="TotalDeductions" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" style="text-align:right" />
                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="card-footer text-right" perfect-class="formFooter">
                                </div>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-5 col-form-label">
                                                <span perfect-class="formGroupLabel" name="lblProName">Net Amount</span>
                                            </label>
                                            <div class="col-sm-7">
                                                <div class="input-group">
                                                    <input type="text" class="form-control " perfect-tempTable-SalaryProcess="NetAmount" id="NetAmountcal" name="NetAmounttt" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" style="text-align:right" />
                                                </div>
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-footer text-right" perfect-class="formFooter">
                                    <button type="button" name="UpdateProcess" id="UpdateSalary" class="btn btn-primary light " onclick="UpdateSalaryData(this),CalculateSalaryData(this)">Update</button>@*,CalculateSalaryData(this)*@
                                    <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" data-dismiss="modal">Close</button>
                                </div>

                            </div>
                            </div>

                    </div>
                </div>
                <div class="modal fade" id="modalAttendancemark" data-backdrop="static" data-keyboard="false" tabindex="1000">
                    <div class="modal-dialog modal-dialog-centered modal-md" role="dialog">
                        <div class="modal-content">
                            <div class="modal-header border-0">
                                <h5 class="modal-title">Alert</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body text-black">
                                <span id="AttendanceId"></span>

                            </div>
                            <div class="modal-footer">
                                <button type="button" id="ClearTableBtn" class="btn btn-primary" data-dismiss="modal">
                                    OK
                                </button>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12" style="padding-right:25px;padding-left:25px;">
                    <div class="form-group row" perfect-class="formGroup">
                        <div class="table-responsive tableFixHead" perfect-tempTable="SalaryProcess" id="SalaryProcessItemHead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                    </div>

                </div>
            </div>
            <div class="card-footer text-right" perfect-class="formFooter">
                <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="Save" perfect-css="button" onclick="SaveSalaryProcess(this)"><i class="fa fa-refresh fa-spin  loaderClass"></i>Save</button>
                <button id="" type="button" class="btn btn-light d-none" name="Clear" perfect-css="button" onclick="ResetSalaryProcessPage(this)"><i class="fa fa-refresh fa-spin  loaderClass"></i>Clear</button>
            </div>
        </form>
    </div>
</div>
<script>
    (function () {
        jQuery('select').selectpicker();
    })();


    var SalaryDetails = [];

 
  
     function fn_salaryProcess(ele, Mode) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
         let inputData =
             {
                 __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                 'ProcessDate': $thisForm.find('[name=ProcessDate]').val(),
            
            'FK_Branch': $thisForm.find('[name=FK_Branch]').val(),
            'FK_Department': $thisForm.find('[name=FK_Department]').val(),
            'FromDate': $thisForm.find('[name=FromDate]').val(),
            'ToDate': $thisForm.find('[name=ToDate]').val(),
            'Delete': Mode,
            'FK_Employee': $thisForm.find('[name=FK_Employee]').val(),
         };
        $("#SalaryProcessItemHead").empty();
        $thisForm.find('button[name=Save]').addClass('d-none');
        $thisForm.find('button[name=Clear]').addClass('d-none');

        if (checkLimit(ele)) {
            if ($thisForm.valid()) {
                $.ajax({
                    url: "@Url.Action("GetSalaryInfo", "Payroll")",
                    type: "POST",
                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                    success: function (ajaxOutput) {

                        if (ajaxOutput.SalaryData.Process.IsProcess) {
                             if (ajaxOutput.SalaryData.Data.length > 0) {
                                $("#SalaryProcessItemHead").empty();
                                if (ajaxOutput.SalaryData.Data[0].ErrCode == -3) {
                                    SalaryDetails = [];
                                    $('#modalAttendancemark').modal('show');
                                    $('#AttendanceId').text(ajaxOutput.SalaryData.Data[0].ErrrMsg);
                                }
                                else if (ajaxOutput.SalaryData.Data[0].FK_Employee == 0) {
                                    $('#modalAttendancemark').modal('show');
                                    $('#AttendanceId').css('text-align', 'left');
                                    $('#AttendanceId').text("Salary already processed in this period");
                                    return false;
                                }
                                else {
                                    SalaryDetails = [];
                                    fn_fillAcquaintanceProcessData($thisForm, 'SalaryProcess', ajaxOutput.SalaryData.Data, tableOptionsAcquaintance)
                                    $thisForm.find('[perfect-tempTable="SalaryProcess"]').find('table').dataTable({ searching: false, paging: false, ordering: false, info: false });
                                    //Pushing SubTable salary data to array//
                                    let netamount;
                                    debugger
                                    $('#SalaryProcessItemHead').find('tbody tr').each(function (index, ele) {
                                        netamount = isNaN(parseFloat($(ele).find('.NetAmount').text())) ? "" : parseFloat($(ele).find('.NetAmount').text());

                                        if (netamount == "" || netamount == null) {
                                            $thisForm.find('button[name=Save]').addClass('d-none');
                                            $thisForm.find('button[name=Clear]').addClass('d-none');
                                            $('#modalAttendancemark').modal('show');
                                            $('#AttendanceId').css('text-align', 'left');
                                            $('#AttendanceId').text("Allowance/Recovery Settings Missing. Please Check");
                                            return false;
                                        }
                              
                                    });
                                    if (netamount == "") {
                                
                                        $thisForm.find('button[name=Save]').addClass('d-none');
                                        $thisForm.find('button[name=Clear]').addClass('d-none');
                                    }
                                    else {
                                        $thisForm.find('button[name=Save]').removeClass('d-none');
                                        $thisForm.find('button[name=Clear]').removeClass('d-none');
                                    }
                                    SalaryDetails = ajaxOutput.SalaryDataDetails.Data;
                                    $('#modalAttendancemark').modal('hide');
                                }

                            }

                        }
                        else {
                            $.each(ajaxOutput.SalaryData.Data, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                            if (ajaxOutput.SalaryData.Data == null) {
                                $("#SalaryProcessItemHead").empty();

                                checkLimit(ele);
                                fn_fillAcquaintanceProcessData($thisForm, 'SalaryProcess', ajaxOutput.SalaryData.Data, tableOptionsAcquaintance)
                                $thisForm.find('[perfect-tempTable="SalaryProcess"]').find('table').dataTable({ searching: false, paging: false, ordering: false, info: false });
                            }
                            
                        }
                    },
                    complete: function () {
                        $(ele).prop('disabled', false);
                    }
                });
            }
        }
    }

    //function ClearSalaryTable() {
    //    debugger
    //    $(document).on("click", "#ClearTableBtn", function () {
    //        $("#SalaryProcessItemHead tbody").empty();
    //    });
    //}

    function checkLimit(ele) {
        let $thisForm = $('[perfect-class="form"]');
        let Fromdate = $thisForm.find('[name="FromDate"]').val();
        let Todate = $thisForm.find('[name="ToDate"]').val();

        Fromdate = new Date(Fromdate);
        Fromdate.setHours(0, 0, 0, 0)

        Todate = new Date(Todate);
        Todate.setHours(0, 0, 0, 0)

        if (Todate < Fromdate) {
            $thisForm.find('[name="FromDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('From Date should be less than To Date');
            $('.limit-check').css('display', 'block');
            return false;
        }
        else {
            $thisForm.find('[name="FromDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('');
            $('.limit-check').css('display', 'block');
            return true;
        }

    }

    var tableOptionsAcquaintance = {

        onlyShowColumn: ['Empname', 'EmpCode', 'NetAmount'],
        serialNo: true,
        renameHeader: { "Empname": "Employee Name", "EmpCode": "Employee Code", "NetAmount": "NetAmount1R" },
        rowClickAction: fn_showSalaryData,
        hideColumn: ['ID_PaySlipTrans', 'ID_SalaryProcess', 'FK_Employee', 'FK_Department', 'FK_Branch', 'FK_EmployeeType', 'FromDate', 'ToDate', 'TransDate', 'GroupID','ProcessDate'],
        rowAttribute: ['ID_PaySlipTrans', 'FK_Employee', 'FK_Department', 'FK_Branch', 'FK_EmployeeType', 'FromDate', 'ToDate', 'TransDate', 'GroupID','ProcessDate'],
        isCheckType: []
    };
    var temprow;

    function fn_showSalaryData() {
        debugger
        temprow = $(this).closest('tr');
        let savedData = $(this).closest('tr').data('pData');
        let $thisForm = $(this).closest('[perfect-class="form"]');
        $thisForm.find('[name=ID_SalaryProcess]').val(savedData.ID_SalaryProcess);
        $thisForm.find('[name=EmpCode]').val(savedData.EmpCode);
        $thisForm.find('[name=Empname]').val(savedData.Empname);
        $("#FK_Employee").val(savedData.FK_Employee);
        var Singlesalaryobject = [];
        if (SalaryDetails != null) {
            Singlesalaryobject = SalaryDetails.filter(obj => obj.FK_Employee.toString() === (savedData.FK_Employee).toString());
        }

        $("#divSalaryProcessDtls").empty();
        let tempDiv = ""; var closediv1 = false; var closediv2 = false;
        $.each(Singlesalaryobject, function (key, value) {


            if (value.ALWMode == 1 && !closediv1) {
                tempDiv = tempDiv+ "<div class='col-sm-6'>"; closediv1 = true;
            }
            else if(value.ALWMode == 2 && !closediv2) {
                if (tempDiv != "") {
                    tempDiv = tempDiv+ "</div><div class='col-sm-6'>"; closediv2 = true;
                }
            }
            tempDiv = tempDiv+ ` <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-5 col-form-label">
                                                <span perfect-class="formGroupLabel" name="lblProName">${value.TypeName}</span>
                                            </label>
                                            <div class="col-sm-7">
                                                <div class="input-group">

                                                    <input type="text" class="form-control text-right EmployeeSalaryDetails" name="${value.TypeName}" TypeName="${value.TypeName}"
                                                     ID_PaySlipTransSub="${value.ID_PaySlipTransSub}" FK_ID_PaySlipTrans="${value.FK_ID_PaySlipTrans}"  FK_AllowanceType="${value.FK_AllowanceType}" ShortName="${value.ShortName}"
                                                     FK_Employee="${value.FK_Employee}" ALWMode="${value.ALWMode}" ALWType="${value.ALWType}"  perfect - class="formGroupControl"
                                                     perfect-ctype="input" perfect-css="input"  maxlength="12" onkeypress='return isNumberKey(event)'  value="${Number(value.AlsDetAmount).toFixed(2)}"  onchange="grosspaycalculate(this);totaldeductioncalculate(this);calculateNetAmount(this)" />
                                                </div>
                                            </div>
                                        </div>
                                    `;




        });
        if (closediv2) {
            tempDiv = tempDiv + "</div>";
        }
        $("#divSalaryProcessDtls").html(tempDiv);

        $('#formGroupModalSalary').modal('show');
        grosspaycalculate();
        totaldeductioncalculate();
        calculateNetAmount();
    } 

    function grosspaycalculate() {
        debugger
       
            let sumOfALWTypes = 0;
            document.querySelectorAll(".EmployeeSalaryDetails").forEach(function (element) {
                const inputValue = parseFloat(element.value);
                const ALWMode = parseFloat(element.getAttribute("ALWMode"));
                if (!isNaN(inputValue) && ALWMode === 1) {

                    sumOfALWTypes += inputValue;
                }
            });
        // document.getElementById("grosspaycal").value = sumOfALWTypes;
        document.getElementById("grosspaycal").value = sumOfALWTypes.toFixed(2);
    }

    function totaldeductioncalculate() {
        debugger

        let sumOfALWTypes = 0;
        document.querySelectorAll(".EmployeeSalaryDetails").forEach(function (element) {
            const inputValue = parseFloat(element.value);
            const ALWMode = parseFloat(element.getAttribute("ALWMode"));
            if (!isNaN(inputValue) && ALWMode === 2) {

                sumOfALWTypes += inputValue;
            }
        });
        // document.getElementById("grosspaycal").value = sumOfALWTypes;
        document.getElementById("TotalDeductionscal").value = sumOfALWTypes.toFixed(2);
    }
    function calculateNetAmount() {
        debugger
        const grosspay = parseFloat(document.getElementById("grosspaycal").value) || 0;
        const totaldeductions = parseFloat(document.getElementById("TotalDeductionscal").value) || 0;

        const netAmount = grosspay - totaldeductions;
       
        document.getElementById("NetAmountcal").value = netAmount.toFixed(2);
    }

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 46 || charCode === 47 || charCode > 57)) {
            return false;
        }
        return true;
    }
    function fn_fillAcquaintanceProcessData(ele, tkey, data, tableOptionsTempOut) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableOptionsTemp = tableOptionsTempOut;
        let insertData = []
        let tableKey = tkey;

        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);

        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $.each(data, function (keyOne, valOne) {

            let pData = {};

            pData[indexname] = keyOne + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', pData[indexname])

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                if (typeof valOne[nameAttr] !== undefined) {

                    if ($this.is('select')) {
                        tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                        tableOptionsTemp.hideColumn.push(nameAttr);
                        pData[nameAttr + '_d'] = $this.find('[value="' + valOne[nameAttr] + '"]').text();
                        pData[nameAttr] = valOne[nameAttr];
                    }
                    else if ($this.is('input')) {
                        let inputType = $this.attr('type').toLocaleLowerCase();
                        if (inputType == 'checkbox') {
                            pData[nameAttr] = valOne[nameAttr];
                            tableOptionsTemp.isCheckType.push(nameAttr);
                        }
                        else if (inputType == 'hidden') {
                            tableOptionsTemp.hideColumn.push(nameAttr);
                            pData[nameAttr] = valOne[nameAttr];
                        }
                        else if (inputType == 'date') {
                            pData[nameAttr] = moment(valOne[nameAttr]).format('DD-MM-YYYY');
                        }
                        else {
                            pData[nameAttr] = valOne[nameAttr];
                        }
                    }
                    else {
                        pData[nameAttr] = valOne[nameAttr];
                    }
                }
            });

            insertData.push(pData);
        });

        $tblcontainer.append(pft_table_createtable(insertData, tableOptionsTemp));


    }

    function CalculateSalaryData(ele) {
        debugger
        let $thisForm = $('[perfect-class="form"]');
        let Allowance = 0;
        let Recovery = 0;
        let NetAmount = 0;

        $.each($("#divSalaryProcessDtls").find(".EmployeeSalaryDetails"), function (index, ele) {
            var val = $.trim($(this).val());
            if (val) {
                val = parseFloat(val.replace(/^\$/, ""));
                if ($(this).attr('alwmode') == 1) {
                    Allowance += !isNaN(val) ? val : 0;
                }
                if ($(this).attr('alwmode') == 2) {
                    Recovery += !isNaN(val) ? val : 0;
                }
            }
            NetAmount = (Allowance - Recovery);
        });
        temprow.find('.NetAmount').text(Number(NetAmount).toFixed(2));
    }

    function UpdateSalaryData(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        if (SalaryDetails != null) {
            SalaryDetails = SalaryDetails.filter(obj => obj.FK_Employee.toString() != ($("#FK_Employee").val()) .toString());
        }

        $.each($("#divSalaryProcessDtls").find(".EmployeeSalaryDetails"), function (index, ele) {

            let Salaryinfo = {};
            Salaryinfo['ID_PaySlipTransSub'] = $(this).attr('id_paysliptranssub');
            Salaryinfo['FK_ID_PaySlipTrans'] = $(this).attr('fk_id_paysliptrans');
            Salaryinfo['FK_AllowanceType'] = $(this).attr('fk_allowancetype');
            Salaryinfo['TypeName'] = $(this).attr('typename');
            Salaryinfo['ShortName'] = $(this).attr('shortname');
            Salaryinfo['ALWMode'] = $(this).attr('alwmode');
            Salaryinfo['ALWType'] = $(this).attr('alwtype');
            Salaryinfo['FK_Employee'] = $(this).attr('fk_employee');
            Salaryinfo['AlsDetAmount'] = $(this).val();
            SalaryDetails.push(Salaryinfo);
        });
       
        $('#formGroupModalSalary').modal('hide');
    }

    function SaveSalaryProcess(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let SalaryProcessDetails = [];
        //$thisForm.find('[perfect-tempTable="SalaryProcess"]').find('tbody').find('tr').each(function () {
        //    SalaryProcessDetails.push($(this).data('pData'));
        //})
        var GroupId = [];
        $('#SalaryProcessItemHead').find('tbody tr').each(function (index, ele) {
            let SalarySubInfo = {};
            GroupId = $(ele).attr('groupid');
            SalarySubInfo['ID_PaySlipTrans'] = $(ele).attr('id_paysliptrans');
            SalarySubInfo['ProcessDate'] = $thisForm.find('[name=ProcessDate]').val();//$(ele).attr('processdate');
            SalarySubInfo['EmpCode'] = $(ele).find('.EmpCode').text();
            SalarySubInfo['Empname'] = $(ele).find('.Empname').text();
            SalarySubInfo['FK_Employee'] = $(ele).attr('fk_employee');
            SalarySubInfo['FK_Branch'] = $(ele).attr('fk_branch');
            SalarySubInfo['FK_Department'] = $(ele).attr('fk_department');
            SalarySubInfo['FK_EmployeeType'] = $(ele).attr('fk_employeetype');
            SalarySubInfo['FromDate'] = $(ele).attr('fromdate');
            SalarySubInfo['ToDate'] = $(ele).attr('todate');
            SalarySubInfo['TransDate'] = $(ele).attr('transdate');
            SalarySubInfo['GroupID'] = $(ele).attr('groupid');
            SalarySubInfo['NetAmount'] = $(ele).find('.NetAmount').text();
            SalaryProcessDetails.push(SalarySubInfo);
        });



        let inputData =
        {
            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
            'SalaryProcessDetails': SalaryProcessDetails,
            'SalarySubdetails': SalaryDetails,
            'UserAction':1,
            'GroupID': GroupId,
            'FK_Department': $("#FK_Department").val(),
            'FK_Employee': $("#FK_Employee").val(),
            'FK_Branch': $("#FK_Branch").val(),
            'FromDate': $("#FromDate").val(),
            'ToDate': $("#ToDate").val(),
            'ProcessDate': $("#ProcessDate").val(),

        };
        if (checkLimit(ele)) {
            if ($thisForm.valid()) {

                $.ajax({
                    url: "@Url.Action("UpdateSalaryInfo", "Payroll")",
                    type: "POST",
                    data: inputData,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                    success: function (ajaxOutput) {

                        if (ajaxOutput.Process.IsProcess) {
                            SalaryDetails = [];
                            temprow = '';
                            $("#SalaryProcessItemHead").empty();
                            $("#divSalaryProcessDtls").empty();
                            $thisForm.find('button[name=Save]').addClass('d-none');
                            $thisForm.find('button[name=Clear]').addClass('d-none');

                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                            });
                            AcquaintanceProcessInitialLoad();
                        }

                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }
                    },
                    complete: function () {
                        $(ele).prop('disabled', false);
                    }

                });
            }
        }
    }
    function ResetSalaryProcessPage(ele) {
        AcquaintanceProcessInitialLoad();
    }
</script>
