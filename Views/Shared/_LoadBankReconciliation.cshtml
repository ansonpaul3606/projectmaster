@model PerfectWebERP.Models.BankReconciliationModel.BankReconciliationNew
<style>
    .tableFixHead {
        overflow: auto;
        height: 450px;
    }

        .tableFixHead thead tr {
            position: sticky;
            top: 0;
            z-index: 1;
        }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 8px 16px;
    }

    th {
        background: var(--perfect-primary);
    }
</style>
<div class="card ">
    <div class="card-header">
        <h4 class="card-title col-12">Bank Reconciliation</h4>
        @*<span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>*@
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Account Head</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control" name="AccountHead" perfect-tempTable-Account="AccountHead" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="FK_AccountHead" id="FK_AccountHead"class="form-control perfectValidate_numeric" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" value="" />

                                    <div class="input-group-append">
                                        <button id="addaccounthead-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,16,'Account Head List',['','','FK_AccountHeadSub','AccountSubHead','AhstParty'],[])" Criterea1="0" Criterea2="0" BindName="AccountHead" BindVal="FK_AccountHead"></button>
                                    </div>
                                    <div class="text-danger temptableError"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4 DivFromDate">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">From Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control ActionDate" id="FromDate" data-id="FromDate-error" name="FromDate" perfect-class="formGroupControl" max="2050-01-01" perfect-ctype="date" perfect-css="date" onchange="checkLimit(this)">
                                @*<div id="FromDate-error" class="Custominvalid animated fadeInUp producterror" style="display: none;">Please Select From Date</div>*@
                                <div class="text-danger temptableError"></div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4 DivToDate">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">To Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control ActionDate" id="ToDate" data-id="ToDate-error" name="ToDate" perfect-class="formGroupControl" max="2050-01-01" perfect-ctype="date" perfect-css="date" onchange="checkLimit(this)">
                                <div class="text-danger temptableError"></div>
                                @*<div id="ToDate-error" class="Custominvalid animated fadeInUp producterror" style="display: none;">Please Select To Date</div>*@
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Branch</span>                              
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string_nm" id="FK_Branch" name="FK_Branch" perfect-selectButton="Branch" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true">
                                    <option value="0">Please Select</option>
                                    @if (!(Model.Branch is null))
                                    {
                                        foreach (var branchList in Model.Branch)
                                        {
                                            <option value="@branchList.BranchID">@branchList.Branch</option>
                                        }
                                    }

                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-check form-check-inline" perfect-class="formCheck">
                            <label class="form-check-label" perfect-class="formCheckLabel">
                                <input type="checkbox" class="form-check-input" id="cbMode" name="cbMode" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox"  onchange="fn_checkReconciliation(this)"><span perfect-class="formCheckInputText"> Reconciled</span>
                            </label>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="To Bank Reconciliation" onclick="GetReconciliationDetails(this)">Process</button>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="table-responsive-lg tableFixHead">
                                    <table class="table table-hover table-responsive-lg table-striped  text-black" id="tblBankReconciliation">
                                        <thead class="bg-primary text-white">
                                            <tr>
                                                <th>SL No</th>
                                                <th style="display:none">ID_AccountHeadSubTransaction</th>
                                                <th>Date</th>
                                                <th>Party</th>
                                                <th>Amount</th>
                                                <th>Type</th>
                                                <th>Narration</th>
                                                <th>Reconciled</th>
                                                <th>Remarks</th>
                                            </tr>
                                        </thead>
                                        <tbody id="BankReconciliationTbody"></tbody>
                                    </table>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="card-footer text-right" perfect-class="formFooter">              
                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addReconciliation" type="button" class="btn btn-primary mr-3 d-none"  name="add" perfect-css="button" onclick="fn_UpdateReconciliation(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                <button type="button" class="btn btn-light d-none" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
            </div>
        </form>
    </div>
</div>
<script>
    (function () {
        jQuery('select').selectpicker();
    })();

    //function checkLimit(element) {
    //    let $thisForm = $(element).closest('[perfect-class="form"]');
    //    //invalid-feedback
    //    let Fromdate = $thisForm.find('[name="FromDate"]').val();
    //    let Todate = $thisForm.find('[name="ToDate"]').val();
    //    let mindate = "1899/12/31";
    //    mindate = new Date(mindate);
    //    mindate.setHours(0, 0, 0, 0)

    //    Fromdate = new Date(Fromdate);
    //    Fromdate.setHours(0, 0, 0, 0)

    //    Todate = new Date(Todate);
    //    Todate.setHours(0, 0, 0, 0)
    //    debugger
    //    if (Todate < Fromdate) {

    //        console.log('inside limit check if')
    //        $thisForm.find('[name="ToDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('To Date should be greater than  From Date');
    //        return false;
    //    }
    //    else if (Todate < mindate) {
    //        $thisForm.find('[name="ToDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Enter a Valid Date');
    //        return false;
    //    }
    //    else if (Fromdate < mindate) {
    //        $thisForm.find('[name="FromDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Enter a Valid Date');
    //        return false;
    //    }
    //    else {

    //        console.log('inside limit check else')
    //        $thisForm.find('[name="ToDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
    //        $thisForm.find('[name="FromDate"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('');
    //        return true;
    //    }


    //}
    function checkLimit(element) {
        
        let $thisForm = $(element).closest('[perfect-class="form"]');

        let Fromdate = $thisForm.find('[name="FromDate"]').val();
        let Todate = $thisForm.find('[name="ToDate"]').val();

        Fromdate = new Date(Fromdate);
        Fromdate.setHours(0, 0, 0, 0)

        Todate = new Date(Todate);
        Todate.setHours(0, 0, 0, 0)
        debugger
        let errorClass = '.temptableError';
        let valid = true;
        if (Todate < Fromdate) {

            $thisForm.find('[name="ToDate"]').closest('[perfect-class="formGroup"]').find(errorClass).text('To Date should be greater than From Date')
            valid = false;
        }
        else {
            console.log('inside limit check else')
            $thisForm.find('[name="ToDate"]').closest('[perfect-class="formGroup"]').find(errorClass).text('')
            valid = true
        }
        return valid;
    }
   

    function ResetButton(ele) {       
       bankReconciliationInitialLoad();
    }

    function fn_checkReconciliation(ele) {
        if ($("#cbMode").is(":checked")) {           
            $("#addReconciliation").hide();
        }
        else {
            $("#addReconciliation").show();
        }     
        GetReconciliationDetails(ele)
    }

    function GetReconciliationDetails(ele) {
        $('#BankReconciliationTbody').empty();
        var $thisForm = $(ele).closest('[perfect-class="form"]');
      
        blnActive = true;
        if ($thisForm.find('[name="FK_AccountHead"]').val() == "") {
            $thisForm.find('[name="FK_AccountHead"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Please Enter Account Head');
            blnActive = false;
        }
        else {
            $thisForm.find('[name="FK_AccountHead"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('')
            blnActive = true;
        }
        if ($thisForm.find('[name="FromDate"]').val() == "" && blnActive) {
            $thisForm.find('[name="FromDate"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Please Enter From Date');
            blnActive = false;
        }
        else {
            $thisForm.find('[name="FromDate"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('')
            blnActive = true;
        }
        if ($thisForm.find('[name="ToDate"]').val() == "" && blnActive) {
            $thisForm.find('[name="ToDate"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('Please Enter To Date');
            blnActive = false;
        }
        else {
            $thisForm.find('[name="ToDate"]').closest('[perfect-class="formGroup"]').find('.temptableError').text('')
            blnActive = true;
        }
        
        $thisForm.find('button[name=add]').addClass('d-none');
        $thisForm.find('button[name=reset]').addClass('d-none');
        if (blnActive) {
            if (checkLimit(ele)) {
                var InputData = {
                    'FK_AccountHead': $thisForm.find('[name="FK_AccountHead"]').val(),
                    'FK_Branch': $thisForm.find('[name="FK_Branch"]').val(),
                    'FromDate': $thisForm.find('[name="FromDate"]').val(),
                    'ToDate': $thisForm.find('[name="ToDate"]').val(),
                    'Mode': $("#cbMode").is(":checked") ? 1 : 0
                }
                $.ajax({
                    url: "@Url.Action("GetAccountReconcilData", "BankReconciliation")",
                    type: "Get",
                    data: InputData,
                    dataType: "json",
                    contentType: "application/json",
                    success: function (ajaxOutput) {
                        if (ajaxOutput != null) {
                            bindajaxout = ajaxOutput;
                            var $ProductHtml = '';

                            if (ajaxOutput.Lits.Data != null) {
                                $('#BankReconciliationTbody').empty();
                                if (ajaxOutput.Lits.Data.length > 0) {
                                    $.each(ajaxOutput.Lits.Data, function (i, value) {
                                        let rowCount = (i + 1);

                                        $ProductHtml += "<tr id=" + rowCount + ">";
                                        $ProductHtml += "<td>" + value.SLNo + "</td>";
                                        $ProductHtml += "<td class='jq_ID_AccountHeadSubTransaction' Style='Display:none'>" + value.ID_AccountHeadSubTransaction + "</td>";
                                        $ProductHtml += "<td>" + value.TransDate + "</td>";
                                        $ProductHtml += "<td>" + value.AhstParty + "</td>";
                                        $ProductHtml += "<td style='text-align:right;'>" + value.Amount + "</td>";
                                        $ProductHtml += "<td>" + value.TransType + "</td>";
                                        $ProductHtml += "<td>" + value.Remarks + "</td>";
                                        $ProductHtml += "<td class='jq_AhstReconciledChk' style='width: 150px;'><input  id='chk1' type='checkbox' " + (value.AhstReconciled ? "checked" : "") + "/></td>"
                                        $ProductHtml += "<td class='jq_AhstReconciledtxt'><input type='text' class='form-control perfectValidate_string_nm' perfect-class='formGroupControl' perfect-ctype='input' perfect-css='input' maxlength='250' oninput='this.value = this.value.replace(/\|/g, '')' value='" + value.ReconcilRemarks + "'></td>";
                                        $ProductHtml += "</tr>";
                                    });
                                }

                                $thisForm.find('button[name=add]').removeClass('d-none');
                                $thisForm.find('button[name=reset]').removeClass('d-none');
                            }
                            else {
                                $('#BankReconciliationTbody').empty();
                                $ProductHtml += "<tr id='0'><td colspan='8' style'text-align:center'>No Records..</td></tr>";
                            }


                            $('#BankReconciliationTbody').append($ProductHtml);

                        }
                    }
                });
            }
        }
      
    }
 
    function fn_UpdateReconciliation(element)
    {
        debugger

        let $thisForm = $(element).closest('[perfect-class="form"]');





       
        if ($thisForm.valid()) { 
            var datval = true;

            datval = checkLimit(element);
            console.log('DATE', datval);
           

            if (datval) {

                var tableReconciliationDetailsrws = $("#BankReconciliationTbody tr");
                let ReconciliationDetails = [];
                if (tableReconciliationDetailsrws.length > 0) {
                    $('#BankReconciliationTbody tr').each(function (index, ele) {
                        if ($(this).find('.jq_AhstReconciledChk').find('[type="checkbox"]').is(':checked') == true) {
                            let ReconDetinfo = {};
                            ReconDetinfo['ID_AccountHeadSubTransaction'] = $(this).find('.jq_ID_AccountHeadSubTransaction').text();
                            ReconDetinfo['AhstReconciled'] = $(this).find('.jq_AhstReconciledChk').find('[type="checkbox"]').is(':checked');
                            ReconDetinfo['ReconcilRemarks'] = $(this).find('.jq_AhstReconciledtxt').find('[type="text"]').val();
                            ReconciliationDetails.push(ReconDetinfo);
                        }

                      
                    });
                }
                $(element).prop('disabled', true);
                if (ReconciliationDetails != '') {
                    let inputData =
                    {
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        'ReconciliationDtls': ReconciliationDetails
                    };
                    $.ajax({
                        url: "@Url.Action("UpdateAccountReconcilData", "BankReconciliation")",
                        type: "POST",
                        data: inputData,
                        dataType: "json",
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        success: function (ajaxOutput) {
                            if (ajaxOutput.Process.IsProcess) {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Saved Successfully' });
                                    $(element).prop('disabled', false);
                                });
                            }
                            else {
                                $.each(ajaxOutput.Process.Message, function (key, value) {
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                    $(element).prop('disabled', false);
                                });
                            }

                            loadBankReconciliationAddForm();
                        },
                        complete: function () {
                            $(element).prop('disabled', false);
                        }
                    });
                }
                else {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'No Checkbox Marked ' });
                    $(element).prop('disabled', false);
                }
            }
                else {
                    $(element).prop('disabled', false);
                }
        }

        
        }
       
        

</script>