@model PerfectWebERP.Models.ProductNumberingModel.ProductNumbering


<style>
    input[type="number"]::-webkit-inner-spin-button,
    input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
</style>
<div class="card">
    <div class="card-header">
        <h4 class="card-title col-12">Product Numbering</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Import From</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="hidden" name="ProdNumGroupID" />
                                    <select class="form-control perfectValidate_string" name="ProdNumModule" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                        <option value="">Please Select </option>
                                        @if (!(Model.ImportFromList is null))
                                        {
                                            foreach (var importList in Model.ImportFromList)
                                            {
                                                <option value="@importList.ID_Mode">@importList.ModeName</option>
                                            }

                                        }
                                    </select>

                                    <input type="hidden" name="FK_Master" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        <button id="importbutton" data-toggle="tooltip" data-placement="top" data-html="true" title="Import from Purchase or Production" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="fn_showProductNumberImportList(this)" Function="1"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel"> Reference No</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="hidden" name="FK_Master" />
                                <input type="text" class="form-control" name="ReferenceNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Invoice Date</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control" name="ReferenceDate" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                            </div>
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="col-sm-12">
                        <div class="daccordion__header">
                            <span class="accordion__header--text">Product Numbering Details</span>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 " perfect-class="TempTableServiceSettings">
                                <br />

                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Product</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="text" class="form-control " name="Product" perfect-tempTable-ProductNumbering="Product" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                                    <input type="hidden" name="FK_Product" perfect-tempTable-ProductNumbering="FK_Product" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                                    <input type="hidden" name="FK_Stock" perfect-tempTable-ProductNumbering="FK_Stock" class="" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />

                                                    <div class="input-group-append">
                                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchValAssign(this,98,'Product List',[],['FK_Stock','ProdNumNoOfItems'])" Criterea1="FK_Master" Criterea2="0" BindName="Product" BindVal="FK_Product" Function="2"></button>
                                                    </div>
                                                </div>
                                                <span class="temptableError"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel"> Batch No</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control" name="BatchNo" perfect-tempTable-ProductNumbering="BatchNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="9" onkeypress="return /[A-Za-z0-9]/i.test(event.key)" onpaste="return false" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">No.of Items/Total No.of Items</span>
                                                <span class="text-danger">*</span>
                                            </label>

                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="number" onpaste="return false" class="form-control text-right" id="ProItem" perfect-tempTable-ProductNumbering="ProdNumItems" name="ProdNumItems" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" maxlength="10" onkeydown="if(event.key==='.' || event.key==='+' || event.key==='-' || event.key==='e'|| event.key==='E'){event.preventDefault();}if(this.value<0){this.value= this.value * -1}" onchange="fn_changeItem(this)" />
                                                    <input type="number" readonly onpaste="return false" class="form-control text-right" id="ProItem2" perfect-tempTable-ProductNumbering="ProdNumNoOfItems" name="ProdNumNoOfItems" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" maxlength="10" onkeydown="if(event.key==='.' || event.key==='+' || event.key==='-' || event.key==='e'|| event.key==='E'){event.preventDefault();}if(this.value<0){this.value= this.value * -1}" />
                                                </div>
                                                <span class="temptableError"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Prefix</span>

                                            </label>

                                            <div class="col-sm-8">
                                                <input type="text" class="form-control" placeholder="" perfect-tempTable-ProductNumbering="ProdNumPrefix" name="ProdNumPrefix" id="ProdNumPrefix" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="9" onkeypress="return /[A-Za-z0-9]/i.test(event.key)" onpaste="return false" />

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Number From/To</span>
                                                <span class="text-danger">*</span>
                                            </label>

                                            <div class="col-sm-8">
                                                <div class="input-group">
                                                    <input type="text" class="form-control text-right" perfect-tempTable-ProductNumbering="ProdNumFromNo" name="ProdNumFromNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onchange="fn_caluclateNumberofSerial(this)" onkeypress="return /[0-9]/i.test(event.key)" onpaste="return false" maxlength="9" />
                                                    <input type="number" min="1" readonly class="form-control text-right" perfect-tempTable-ProductNumbering="ProdNumToNo" name="ProdNumToNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" maxlength="20" onkeydown="if(event.key==='+' || event.key==='-' || event.key==='e'|| event.key==='E'){event.preventDefault();}if(this.value<0){this.value= this.value * -1}" />
                                                </div>
                                                <span class="temptableError"></span>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Suffix</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control" placeholder="" perfect-tempTable-ProductNumbering="ProdNumSuffix" name="ProdNumSuffix" id="ProdNumSuffix" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="9" onkeypress="return /[A-Za-z0-9]/i.test(event.key)" onpaste="return false" />

                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-sm-8">

                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">

                                            <div class="col-sm-8">

                                            </div>
                                            <div class="col-sm-4">
                                                <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Product" onclick="fn_createProductNumberingTable(this,'ProductNumbering',['ProdNumSuffix','ProdNumPrefix'])"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                <button class="btn btn-light1" id="refresh" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="clearSettings(this,'ProductNumbering')"><i class="fa fa-refresh" aria-hidden="true"></i></button>

                                            </div>
                                        </div>
                                    </div>

                                </div>

                                <div class="card-footer text-right" perfect-class="formFooter">

                                </div>
                                <div class="row">
                                    <div class="col-sm-12" style="padding-right:25px;padding-left:25px;">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <div class="table-responsive" perfect-tempTable="ProductNumbering" id="ProductNumberingItemHead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

            <div class="card-footer text-right" perfect-class="formFooter">

                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_UpdateProductNumbering(this,'new')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                <button type="button" class="btn btn-light" perfect-css="button" onclick="fn_resetProductNumbering()" name="reset">Clear</button>
            </div>
        </form>
    </div>
</div>
<script>

    function getfunctionAssign(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[name="ProdNumItems"]').val("");
        $thisForm.find('[name="ProdNumPrefix"]').val("");
        $thisForm.find('[name="ProdNumSuffix"]').val("");
        $thisForm.find('[name="ProdNumFromNo"]').val("");
        $thisForm.find('[name="BatchNo"]').val("");

        fn_caluclateNumberofSerial(ele);
    }
    function clearSettings(ele, tableKey) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');

        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);
    }
    function decimalpnt(ele, name, range) {

        let input = $('#' + name);
        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
        input.on('keydown', function () {
            if (ele.value.includes('.')) {

            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.length == 9) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }
    function fn_clearProduct(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[name=FK_Product]').val(0);
        $thisForm.find('[name=ProductName]').val('');
    }
    var tableOptionsTempOut = {
        iconButton: {
            buttons: [

                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        let indexname = tableKey + 'index';
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {

                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            $thistbl.dataTable({ paging: true });
                        }
                        else {
                            $thistbl.remove();
                        } $("#refresh").click();
                    }
                },
            ]
        },
        onlyShowColumn: [],
        hideColumn: ['FK_Product','FK_Stock'],
        serialNo: true,
        renameHeader: { "ProdNumNoOfItems": "Total No.of Items1R" ,"ProdNumItems": "No.of Items1R", "ProdNumPrefix": "Prefix", "ProdNumFromNo": "Number From1R", "ProdNumToNo": "Number To1R", "ProdNumSuffix": "Suffix"},
        rowAttribute: [],
        isCheckType: []



    };
    function fn_createProductNumberingTable(element, tkey, uniq = []) {
        let $thisForm = $(element).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';


        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }


        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Product"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Product"]').val().length == null) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Product"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select product');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Product"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProdNumNoOfItems"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdNumNoOfItems"]').val().length == null) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdProdNumNoOfItemsuct"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Invalid No. of items');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdNumNoOfItems"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProdNumNoOfItems"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdNumNoOfItems"]').val().length == null) {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdProdNumNoOfItemsuct"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Invalid No. of items');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdNumNoOfItems"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProdNumItems"]').val() == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdNumItems"]').val().length == null) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdNumItems"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Enter No.of Items greater than 0. ');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdNumNoOfItems"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProdNumFromNo"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdNumFromNo"]').val().length == null) {
            isValid = false;
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdNumFromNo"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter from number');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdNumFromNo"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        let prevData = [];
        $tblcontainer.find('table > tbody').find('tr').each(function () {
            if (isNew) {
                prevData.push($(this).data('pData'));
            }
            else {
                if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                    prevData.push($(this).data('pData'));
                }
            }

        })



        if (prevData.find(a => a['FK_Product'] == $('[name="FK_Product"]').val())) {
            let sumData = parseFloat($('[name="ProdNumItems"]').val());
            let totalNo = parseFloat($('[name="ProdNumNoOfItems"]').val());
            if (isNew) {
                $thisForm.find('[perfect-tempTable="ProductNumbering"]').find('tbody').find('tr').each(function () {
                    if ($(this).data('pData').FK_Product == $('[name="FK_Product"]').val()) {
                        sumData = sumData + parseFloat($(this).data('pData').ProdNumItems)
                    }
                });
            }
            else {
                $thisForm.find('[perfect-tempTable="ProductNumbering"]').find('tbody').find('tr').each(function (key, value) {

                    if ($(this).data('pData').FK_Product == $('[name="FK_Product"]').val() && (key+1) != thisactionIndex) {
                        sumData = sumData + parseFloat($(this).data('pData').ProdNumItems)
                    }
                });
            }
            if (totalNo < sumData) {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'No. of item should be less than or equal to Total no.of item.' });
                isValid = false;
            }

        }



        if (isNew) {

            $thisForm.find('[perfect-tempTable="ProductNumbering"]').find('tbody').find('tr').each(function () {
                if ($(this).data('pData').FK_Product == $('[name="FK_Product"]').val() && $(this).data('pData').ProdNumPrefix == $('[name="ProdNumPrefix"]').val() && $(this).data('pData').ProdNumSuffix == $('[name="ProdNumSuffix"]').val()) {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': ' Already Exists' });
                    isValid = false;
                }
            });

        }
        else {

            $thisForm.find('[perfect-tempTable="ProductNumbering"]').find('tbody').find('tr').each(function (key, value) {

                if ($(this).data('pData').FK_Product == $('[name="FK_Product"]').val() && $(this).data('pData').ProdNumPrefix == $('[name="ProdNumPrefix"]').val() && $(this).data('pData').ProdNumSuffix == $('[name="ProdNumSuffix"]').val() && (key + 1) != thisactionIndex) {
                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': ' Already Exists' });
                    isValid = false;
                }
            });
        }
       



        if (isValid) {
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                if ($this.is('select')) {
                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    insertData[nameAttr] = $this.val();

                    $this.val('').selectpicker('refresh');
                }
                else if ($this.is('input')) {

                    let inputType = $this.attr('type').toLocaleLowerCase();

                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp.isCheckType.push(nameAttr)
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {
                        insertData[nameAttr] = $this.val();
                        $this.val('');

                    }

                    else {
                        insertData[nameAttr] = $this.val();

                        $this.val('');
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();

                    $this.val('');
                }
            });

            if (isNew) {
                if ($tblcontainer.find('table').length == 0) {
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                }
                else {
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                }
            }
            else {
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
            }

            $tblcontainer.attr('perfect-tempTable-action', 0);

        }
    }
    function fn_UpdateProductNumbering(element, actionType) {
     let $thisForm = $(element).closest('[perfect-class="form"]');
        if ($thisForm.valid())
        {
            let $errorMsg = '';
            let $blnSuccess = false;
                    $(element).prop('disabled', true);

            let productNumberingItems = [];
            $thisForm.find('[perfect-tempTable="ProductNumbering"]').find('tbody').find('tr').each(function () {
                productNumberingItems.push($(this).data('pData'));
            })



            if (productNumberingItems.length <= 0) {
                $blnSuccess = false;
                $errorMsg = 'Please Fill Details';
            }
            else {
                $blnSuccess = true;
            }


            let _ID_ProductNumbering = 0;
                    let _ActionUrl = "";

                    if (actionType === "new") {
                        _ID_ProductNumbering = 0;
                        _ActionUrl = "@Url.Action("AddProductNumbering", "ProductNumbering")";
                    }


                    let inputData = {
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        'ID_ProductNumbering': _ID_ProductNumbering,
                        'TransMode': '@ViewBag.TransMode',
                        'ProdNumModule': $thisForm.find('[name="ProdNumModule"]').val(),
                        'FK_Master': $thisForm.find('[name="FK_Master"]').val(),
                        'ProductNumberingDetails': productNumberingItems
            };

            if ($blnSuccess)
                            {
                               $.ajax({
                                         url: _ActionUrl,
                                         type: "POST",
                                         data: inputData,
                                         dataType: "json",
                                         contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                         success: function (ajaxOutput) {
                                             if (ajaxOutput.Process.IsProcess) {
                                                 $.each(ajaxOutput.Process.Message, function (key, value) {
                                                     NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                                     $(element).prop('disabled', false);
                                                     loadProductNumberingList(this);
                                                     ProductNumberingInitialLoad();
                                                 });
                                             }
                                             else {
                                                 $.each(ajaxOutput.Process.Message, function (key, value) {
                                                     NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                     $(element).prop('disabled', false);

                                                 });
                                             }

                                             $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                             $thisForm.find('[perfect-ctype="input"]').val('');
                                             $thisForm.find('[perfect-ctype="date"]').val('');
                                             let onSuccess = $thisForm.attr('perfect-onFormSuccess')
                                             if (onSuccess) {
                                                 window[onSuccess]();

                                             }
                                         },
                                         complete: function ()
                                         {
                                                $(element).prop('disabled', false);
                                         }
                                    });
                            }
                            else
                            {
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': $errorMsg });
                        $(element).prop('disabled', false);
                            }
                     }
    }
    function fn_resetProductNumbering() {
        ProductNumberingInitialLoad();
    }
    function fn_showProductNumberImportList(element) {

        let $thisForm = $(element).closest('[perfect-class="form"]');
        switch (parseInt($thisForm.find('[name="ProdNumModule"]').val())) {
            case 1:
                GetCmnPopUpSearchValAssign(element, 97, 'Purchase List', [], ['FK_Master', 'ReferenceNo']);
                clearSettings(element, 'ProductNumbering');
                break;
            case 2:
                GetCmnPopUpSearchValAssign(element, 97, 'Production List', [], ['FK_Master', 'ReferenceNo']);
                clearSettings(element, 'ProductNumbering');
                break;
            default:
                NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': 'Please Select Import From' });
                break;
        }
    }
    function getfunction(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $tempArr = $thisForm.data('popValueData');
        $thisForm.find('[name="ReferenceDate"]').val($tempArr.InvoiceDate)

    }
    function fn_caluclateNumberofSerial(element) {
        debugger
        let $thisForm = $(element).closest('[perfect-class="form"]');
        let $NoOfItemFrom = isNaN($thisForm.find('[name="ProdNumFromNo"]').val()) ? 0 : parseInt($thisForm.find('[name="ProdNumFromNo"]').val());
        //let $NoOfItem = $thisForm.find('[name="ProdNumNoOfItems"]').val();
        let $NoOfItem = $thisForm.find('[name="ProdNumItems"]').val();
        if (!isNaN($thisForm.find('[name="ProdNumItems"]').val())) {
            $thisForm.find('[name="ProdNumToNo"]').val(parseInt($NoOfItemFrom) + parseInt($NoOfItem)-1);
        }
    }

    var sumdata = 0;
    function fn_changeItem(ele) {
        $thisForm = $(ele).closest('[perfect-class="form"]');

        fk_product = $('[name="FK_Product"]').val();

        var item = parseInt($('#ProItem').val());   // Parse values as integers
        var itemdata = parseInt($('#ProItem2').val());

        if (item <= itemdata) {
            sumdata = itemdata - item;
        } else {
            NotificationMessage({
                'type': 'info',
                'heading': 'info',
                'message': 'Please enter item less than or equal to Total no.of item. '
            });
            $('#ProItem').val(0);
        }

        if (sumdata <= itemdata) {
            $thisForm.find('[name="ProdNumNoOfItems"]').val();  // Set value to sumdata
        }
    }

</script>