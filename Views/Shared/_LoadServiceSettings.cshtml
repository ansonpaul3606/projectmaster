@model PerfectWebERP.Models.ServiceSettingsModel.ServiceSettings
<div class="card">
    <div class="card-header">
        <h4 class="card-title col-12">Service Settings</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel"> Effect Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date" name="EffectDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" />
                                <input type="hidden" name="ID_PeriodicServiceSettings" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Category</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <select class="form-control perfectValidate_numeric" name="FK_Category" id="FK_Category" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" data-live-search="true" onchange="fn_clearProduct(this)">

                                        <option value="">Please Select </option>

                                        @if (!(Model.CategoryLists is null))
                                        {
                                            foreach (var categorylist in Model.CategoryLists)
                                            {
                                                <option value="@categorylist.CategoryID">@categorylist.CategoryName</option>
                                            }

                                        }

                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4" id="noncomp">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Product</span>
                            </label>
                            <div class="col-sm-8 ">
                                <div class="input-group">
                                    <input type="text" class="form-control product" name="ProductName" id="ProductName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" disabled />
                                    <input type="hidden" name="FK_Product" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        <button id="addCustomer-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this, 96, 'Product List', ['Category','Complaint Category'])" BindName="ProductName" BindVal="FK_Product" Function="1" Checkbox="1" Criterea1="ID_FIELD" Criterea2="FK_Category"></button>
                                    </div>
                                    <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12">
                        <div class="daccordion__header">
                            <span class="accordion__header--text">Settings Details</span>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 " perfect-class="TempTableServiceSettings">
                                <br />

                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Service</span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-8">
                                                <select class="form-control" name="FK_Service" perfect-tempTable-ServiceSettings="FK_Service" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" perfect-tempTable-cstatus="ServiceID">
                                                    <option value="">Please Select </option>
                                                    @if (!(Model.ServiceList is null))
                                                    {
                                                        foreach (var services in Model.ServiceList)
                                                        {
                                                            <option value="@services.ServiceID">@services.ServiceList</option>
                                                        }
                                                    }
                                                </select>
                                                <span class="temptableError"></span>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Period</span>
                                                <span class="text-danger">*</span>
                                            </label>

                                            <div class="col-sm-8">                                               
                                                <div class="input-group">
                                                    <select class="form-control" perfect-tempTable-ServiceSettings="PssdPeriodType" name="PssdPeriodType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                                        <option value="">Please Select </option>
                                                        @if (!(Model.PeriodTypes is null))
                                                        {
                                                            foreach (var temp in Model.PeriodTypes)
                                                            {
                                                                <option value="@temp.ID_Mode">@temp.ModeName</option>
                                                            }
                                                        }
                                                    </select>
                                                    <input type="number" onpaste="return false" min="1" class="form-control text-right" perfect-tempTable-ServiceSettings="PssdPeriod" name="PssdPeriod" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" maxlength="20" onkeydown="if(event.key==='.' ||event.key==='+' || event.key==='-' || event.key==='e'|| event.key==='E'){event.preventDefault();}if(this.value<0){this.value= this.value * -1}" />
                                                </div>
                                                <span class="temptableError"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Service Cost</span>
                                            </label>

                                            <div class="col-sm-8">
                                                <input type="text" class="form-control text-right" placeholder="" perfect-tempTable-ServiceSettings="PssdServiceCost" name="PssdServiceCost" id="PssdServiceCost" oninput="decimalpnt(this,'PssdServiceCost',3)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="13" onkeyup = "price_in_words('PssdServiceCost','containerPssdServiceCost');"/>
                                                <span id="containerPssdServiceCost"></span>
                                                <span class="temptableError"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4">
                                     
                                    </div>
                                    <div class="col-sm-4">
                                       
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <label class="col-sm-4 col-form-label">
                                                <span perfect-class="formGroupLabel">Ticket generate before day(s) </span>
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-4">
                                                <input type="number" onpaste="return false" class="form-control text-right" perfect-tempTable-ServiceSettings="PssdGeneratebefore" name="PssdGeneratebefore" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" maxlength="10" onkeydown="if(event.key==='.' || event.key==='+' || event.key==='-' || event.key==='e'|| event.key==='E'){event.preventDefault();}if(this.value<0){this.value= this.value * -1}" />
                                                <div class="text-danger temptableError"></div>
                                            </div>
                                            <div class="col-sm-4">
                                                <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add New Product" onclick="fn_createServiceSettingsTable(this,'ServiceSettings',[])"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                 <button class="btn btn-light1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" onclick="clearSettings(this,'ServiceSettings')"><i class="fa fa-refresh" aria-hidden="true"></i></button>

                                            </div>
                                        </div>
                                    </div>

                                </div>


                                <div class="card-footer text-right" perfect-class="formFooter">

                                </div>
                                <div class="row">
                                    <div class="col-sm-12" style="padding-right:25px;padding-left:25px;">
                                        <div class="form-group row" perfect-class="formGroup">
                                            <div class="table-responsive" perfect-tempTable="ServiceSettings" id="ServiceSettingsItemHead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

            <div class="card-footer text-right" perfect-class="formFooter">
               
                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_UpdateServiceSettings(this,'new')"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                <button type="button" class="btn btn-light" perfect-css="button" onclick="fn_resetServiceSettings()" name="reset">Clear</button>
            </div>
        </form>
    </div>
</div>
<script>
    function clearSettings(ele, tableKey) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="input"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="select"]').val('').selectpicker('refresh');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="text"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="date"]').val('');
        $thisForm.find('[perfect-tempTable-' + tableKey + ']').closest('[perfect-ctype="hidden"]').val('');

        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');
        $tblcontainer.attr('perfect-tempTable-action', 0);
    }
    function decimalpnt(ele, name, range) {

        let input = $('#' + name);
        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;
        input.on('keydown', function () {
            if (ele.value.includes('.')) {

            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.length == 9) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }
    function fn_clearProduct(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        $thisForm.find('[name=FK_Product]').val(0);
        $thisForm.find('[name=ProductName]').val('');       
    }
    var tableOptionsTempOut = {
        iconButton: {
            buttons: [

                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')
                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');
                        let indexname = tableKey + 'index';
                        let rindex = $(this).closest('tr').attr(indexname);
                        $tablecontainer.attr('perfect-tempTable-action', rindex);
                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {
                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');
                            }
                            else if ($thisNode.is('input')) {

                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                            $thistbl.dataTable({ paging: true });
                        }
                        else {
                            $thistbl.remove();
                        }
                    }
                },
            ]
        },
        onlyShowColumn: [],
        hideColumn: [],
        serialNo: true,
        renameHeader: { "PssdPeriod": "Period1R", "PssdServiceCost": "Service Cost1R", "PssdGeneratebefore": "Ticket generate before day(s)1R"},
        rowAttribute: [],
        isCheckType: []



    };
    function fn_createServiceSettingsTable(element, tkey, uniq = []) {
        let $thisForm = $(element).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsTempOut;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';


        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }
        

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Service"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Service"]').val().length == null) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Service"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select service');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_Service"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        debugger;
        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PssdPeriodType"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="PssdPeriodType"]').val().length == null ) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="PssdPeriodType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select period');
        }
        else {
            if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PssdPeriod"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="PssdPeriod"]').val().length == null) {
                isValid = false;

                $thisForm.find('[perfect-tempTable-' + tableKey + '="PssdPeriod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter period');
            }
            else {
                $thisForm.find('[perfect-tempTable-' + tableKey + '="PssdPeriod"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
            }           
        }

        

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="PssdGeneratebefore"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="PssdGeneratebefore"]').val().length == null) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="PssdGeneratebefore"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter a value');
        }
        else {
            //let date_1 = new Date(moment($('[name=EffectDate]').val()).format('YYYY-MM-DD'));
            //let date_2 = new Date();

            //const days = (date_1, date_2) => {
            //    let difference = date_1.getTime() - date_2.getTime();
            //    let TotalDays = Math.ceil(difference / (1000 * 3600 * 24));
            //    return TotalDays;
            //}
            $thisForm.find('[perfect-tempTable-' + tableKey + '="PssdGeneratebefore"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }
        
        let prevData = [];
        $tblcontainer.find('table > tbody').find('tr').each(function () {
            if (isNew) {
                prevData.push($(this).data('pData'));
            }
            else {
                if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                    prevData.push($(this).data('pData'));
                }
            }

        })
      
        if (prevData.find(a => a['FK_Service'] == $('[name=FK_Service]').val() && a['PssdPeriod'] == $('[name=PssdPeriod]').val() && a['PssdPeriodType'] == $('[name=PssdPeriodType]').val())) {
            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Already Exists' });
                        isValid = false;
                    }
        

        if (isValid) {
            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                if ($this.is('select')) {
                    switch (headerName) {
                        case "FK_Service":
                            headerName = "Service";
                            break;
                        case "PssdPeriodType":
                            headerName = "Period Type";
                            break;                       
                        default:
                            break
                    }
                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    insertData[nameAttr] = $this.val();

                    $this.val('').selectpicker('refresh');
                }
                else if ($this.is('input')) {

                    let inputType = $this.attr('type').toLocaleLowerCase();

                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp.isCheckType.push(nameAttr)
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {
                        insertData[nameAttr] = $this.val();
                        $this.val('');

                    }

                    else {
                        insertData[nameAttr] = $this.val();

                        $this.val('');
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();

                    $this.val('');
                }
            });

            if (isNew) {
                if ($tblcontainer.find('table').length == 0) {
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsTemp));
                }
                else {
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsTemp);
                }
            }
            else {
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsTemp);
            }

            $tblcontainer.attr('perfect-tempTable-action', 0);
           
        }
    }
    function fn_UpdateServiceSettings(element, actionType) {
     let $thisForm = $(element).closest('[perfect-class="form"]');
        if ($thisForm.valid())
        {
            let $errorMsg = '';
            let $blnSuccess = false;
                    $(element).prop('disabled', true);
          
            let serviceSettingsItems = [];
            $thisForm.find('[perfect-tempTable="ServiceSettings"]').find('tbody').find('tr').each(function () {
                serviceSettingsItems.push($(this).data('pData'));
            })

          
          
            if (serviceSettingsItems.length <= 0) {
                $blnSuccess = false;
                $errorMsg = 'Please Fill Service Settings Details';
            }           
            else {
                $blnSuccess = true;
            }

           
            let _ID_PeriodicServiceSettings = 0;
                    let _ActionUrl = "";

                    if (actionType === "new") {
                        _ID_PeriodicServiceSettings = 0;
                        _ActionUrl = "@Url.Action("AddServiceSettings", "ServiceSettings")";
                    }
                  
          
                    let inputData = {
                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                        'ID_PeriodicServiceSettings': _ID_PeriodicServiceSettings,                       
                        'EffectDate': $thisForm.find('[name="EffectDate"]').val(),                        
                        'FK_Category': $thisForm.find('[name="FK_Category"]').val(),
                        'FK_Product': $thisForm.find('[name="FK_Product"]').val(),
                        'PeriodicServiceSettingsDetails': serviceSettingsItems                        
            };
         
            if ($blnSuccess)
                            {
                               $.ajax({
                                         url: _ActionUrl,
                                         type: "POST",
                                         data: inputData,
                                         dataType: "json",
                                         contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                         success: function (ajaxOutput) {
                                             if (ajaxOutput.Process.IsProcess) {
                                                 $.each(ajaxOutput.Process.Message, function (key, value) {
                                                     NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                                     $(element).prop('disabled', false);
                                                     loadServiceSettingsList(this);
                                                     serviceSettingsInitialLoad();
                                                 });
                                             }
                                             else {
                                                 $.each(ajaxOutput.Process.Message, function (key, value) {
                                                     NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                     $(element).prop('disabled', false);
                                                     
                                                 });
                                             }

                                             $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                             $thisForm.find('[perfect-ctype="input"]').val('');
                                             $thisForm.find('[perfect-ctype="date"]').val('');
                                             let onSuccess = $thisForm.attr('perfect-onFormSuccess')
                                             if (onSuccess) {
                                                 window[onSuccess]();
                                                
                                             }
                                         },
                                         complete: function ()
                                         {
                                                $(element).prop('disabled', false);
                                         }
                                    });
                            }
                            else
                            {                              
                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': $errorMsg });
                        $(element).prop('disabled', false);
                            }
                     }
    }
    function fn_resetServiceSettings() {
        serviceSettingsInitialLoad();
    }
</script>