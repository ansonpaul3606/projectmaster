@*----------------------------------------------------------------------
    Created By	: Aiswarya
    Created On	: 15/01/2022
    Purpose		: Product
    -------------------------------------------------------------------------
    Modification
    On			By					OMID/Remarks
    -------------------------------------------------------------------------
    -------------------------------------------------------------------------*@
@model PerfectWebERP.Models.ProductModel.DropDownListModel
<style>
    [perfect-tempTable-th-name=ID_TaxType] {
        display: none
    }

    [perfect-tempTable-td-name=ID_TaxType] {
        display: none
    }
</style>

<div class="card ">

    <div class="card-header">
        <h4 class="card-title col-12">Product</h4>
        <span title="To View List" onclick="fn_showListView();"><svg id="Layer_1" class="layer" stroke="currentColor" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 122.88 122.54"><title>To View List</title><path class="viewlst" d="M4.69,0H46.22a4.71,4.71,0,0,1,4.69,4.69V46a4.69,4.69,0,0,1-4.69,4.69H4.69a4.65,4.65,0,0,1-3.31-1.38l-.09-.09A4.67,4.67,0,0,1,0,46V4.69A4.71,4.71,0,0,1,4.69,0ZM89.44,61.94a26.56,26.56,0,0,1,10.18,2l.07,0a26.61,26.61,0,0,1,15.25,32.16,26.18,26.18,0,0,1-2.7,6.11l10.3,11.24a1.27,1.27,0,0,1-.07,1.8l-7.57,6.9a1.27,1.27,0,0,1-1.79-.07l-9.86-10.85a26.36,26.36,0,0,1-6.1,2.74,26.87,26.87,0,0,1-7.71,1.13,26.51,26.51,0,0,1-10.17-2l-.07,0A26.64,26.64,0,0,1,64.85,78.37l0-.07A26.6,26.6,0,0,1,89.44,61.94Zm15,11.59a21.38,21.38,0,0,0-6.89-4.61l-.06,0a21.22,21.22,0,0,0-23.07,4.64l-.07.07a21.25,21.25,0,0,0-4.54,6.83l0,.06a21.32,21.32,0,0,0-1.58,8.06,21.26,21.26,0,0,0,29.35,19.62,21.54,21.54,0,0,0,6.89-4.61l.07-.07a21.09,21.09,0,0,0,4.54-6.83l0-.06a21.35,21.35,0,0,0,0-16.17,21.34,21.34,0,0,0-4.62-6.9ZM4.69,63.2H46.22a4.71,4.71,0,0,1,4.69,4.7v41.34a4.68,4.68,0,0,1-4.69,4.69H4.69A4.69,4.69,0,0,1,0,109.24V67.9a4.71,4.71,0,0,1,4.69-4.7ZM68.78,0h41.53A4.71,4.71,0,0,1,115,4.69V46a4.71,4.71,0,0,1-4.69,4.69H68.78A4.71,4.71,0,0,1,64.09,46V4.69a4.69,4.69,0,0,1,1.37-3.31l.1-.09A4.67,4.67,0,0,1,68.78,0Z"></path></svg></span>
    </div>
    <div class="card-body">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row">




                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">

                            <div class="col-sm-8">

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">

                            <div class="col-sm-8">

                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel"> Name</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_string" placeholder="" name="ProdName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="150" onchange="generateShortName(this)" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel"> Short Name</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control" placeholder="" name="ProdShortName" maxlength="10" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">

                            <div class="col-sm-8">
                                <div class="form-check form-check-inline" perfect-class="formCheck">
                                    <label class="form-check-label" perfect-class="formCheckLabel">
                                        <input type="checkbox" class="form-check-input" name="ProdNonStockItem" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox">Non Stock item
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">

                            <div class="col-sm-8">

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Mode</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="hidden" name="ProductID" />
                                <select class="form-control perfectValidate_string" name="Mode" perfect-selectButtonAction="testing" perfect-class="formGroupControl" perfect-ctype="select" onchange="fn_bindropdown(this)" perfect-css="select">
                                    <option value="">Please Select </option>
                                    @if (!(Model.ModuleTypeList is null))
                                    {
                                        foreach (var Module in Model.ModuleTypeList)
                                        {
                                            <option value="@Module.Mode">@Module.ModuleName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Product Description</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <textarea class="form-control" placeholder="" name="ProdMaterialDetails" rows="3" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="250"></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Category</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" name="CategoryID" perfect-selectButtonAction="testing" perfect-class="formGroupControl" perfect-ctype="select" onchange="fn_selectSubcategory(this)" perfect-css="select">
                                    <option value="">Please Select </option>
                                    @*<option value="1">Inventory</option>*@

                                    @if (!(Model.CategoryList is null))
                                    {
                                        foreach (var cat in Model.CategoryList)
                                        {
                                            <option value="@cat.CategoryID">@cat.CategoryName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Sub Category</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control" name="SubCategotyID" perfect-selectButtonAction="countryadding" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please Select </option>
                                    @*<option value="1">Test</option>*@
                                    @if (!(Model.SubCategoryList is null))
                                    {
                                        foreach (var Subcat in Model.SubCategoryList)
                                        {
                                            <option value="@Subcat.ID_SubCategory">@Subcat.SubCatName</option>
                                        }
                                    }
                                    @*@foreach (var districtList in Model.DistrictList)
                        {
                            <option value="@districtList.ID_District">@districtList.DistrictName</option>
                        }*@

                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Manufacture</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control" name="ManufacturerID" perfect-selectButtonAction="countryadding" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please Select </option>
                                    @*<option value="1">Test</option>*@
                                    @if (!(Model.ManufactureList is null))
                                    {
                                        foreach (var manufacture in Model.ManufactureList)
                                        {
                                            <option value="@manufacture.ID_Manufacturer">@manufacture.ManufName</option>
                                        }
                                    }

                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Tax Group</span>
                                <span class="text-danger">*</span>
                                @*perfect-selectButton="District Name"*@
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" name="TaxGroupID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please Select </option>
                                    @*<option value="1">Test</option>*@
                                    @if (!(Model.TaxgroupList is null))
                                    {
                                        foreach (var unit in Model.TaxgroupList)
                                        {
                                            <option value="@unit.TaxGroupID">@unit.TaxGroupName</option>
                                        }
                                    }

                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 singleunit">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label"  >
                                <span  perfect-class="formGroupLabel " id="lblunit"></span>
                                <span class="text-danger">*</span>
                                @*perfect-selectButton="District Name"*@
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control perfectValidate_string" name="UnitID" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="SearchMultipleUnit(this,0)">
                                    <option value="">Please Select </option>
                                    @*<option value="1">Test</option>*@
                                    @if (!(Model.UnitList is null))
                                    {
                                        foreach (var unit in Model.UnitList)
                                        {
                                            <option value="@unit.ID_Unit">@unit.UnitName</option>
                                        }
                                    }

                                </select>
                            </div>
                        </div>

                        @*start*@

                        @*end*@



                    </div>
                    <div class="col-sm-6 " id="MultipleunitCls" >
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Multiple Units</span>
                             
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group" i>

                                    <select id="mySelect" multiple class="form-control ddlmultiselect" name="FK_Unit" perfect-selectButtonAction="testing" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" onchange="GetUnitWise(this,'')">

                                        @*<option value="">Please Select </option>*@
                                        @if (!(Model.MultipleUnitList is null))
                            {
                                                foreach (var actlist in Model.MultipleUnitList)
                                                {
                                                    <option value="@actlist.FK_Unit">@actlist.UnitName </option>
                                                }
                            }
                                    </select>


                                </div>
                                <div class="invalid-feedback animated" style="display: block;"></div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel"> H S N Code</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_hsncode_nm" placeholder="" name="ProdHSNCode" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel"> Product Code</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_hsncode_nm" placeholder="" name="ProdCode" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />


                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">QR Code</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_hsncode_nm" placeholder="" name="ProdQRCode" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel"> Barcode</span>
                                @*<span class="text-danger">*</span>*@
                            </label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control perfectValidate_hsncode_nm" placeholder="" name="ProdBarcode" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Min/Max Price </span>
                            </label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" class="form-control text-right" maxlength="12" placeholder="" name="MinAmount" id="MinAmount" perfect-class="formGroupControl" onchange="CheckAmount(this)" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'MinAmount',3)" />
                                    <input type="text" class="form-control text-right" maxlength="12" placeholder="" name="MaxAmount" id="MaxAmount" perfect-class="formGroupControl" onchange="CheckAmount(this)" perfect-ctype="input" perfect-css="input" oninput="decimalpnt(this,'MaxAmount',3)" />
                                    <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>

            </div>

            <div class="row">

                <div class="col-sm-6">
                    <div class="card">
                        <div class="card-body">
                            <div id="accordion-nine" class="accordion accordion-active-header">
                                <div class="accordion__item">
                                    <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseOne">
                                        <span class="accordion__header--icon"></span>
                                        <span class="accordion__header--text">Module Access</span>
                                        <span class="accordion__header--indicator"></span>
                                    </div>
                                    <div id="active-header_collapseOne" class="collapse accordion__body" data-parent="">
                                        <div class="accordion__body--text">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <div class="card">

                                                        <div class="card-body">
                                                            <div class="row">
                                                                <div class="col-sm-4 AllModule">
                                                                    <div class="form-check form-check-inline" perfect-class="formCheck">
                                                                        <label class="form-check-label" perfect-class="formCheckLabel">
                                                                            <input type="checkbox" class="form-check-input" id="ProdAll" name="ProdAll" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox"><span perfect-class="formCheckInputText">All</span>
                                                                        </label>
                                                                    </div>

                                                                </div>
                                                                <div class="col-sm-4 NonLead">
                                                                    <div class="form-check form-check-inline" perfect-class="formCheck">
                                                                        <label class="form-check-label" perfect-class="formCheckLabel">
                                                                            <input type="checkbox" class="form-check-input" name="ProdSales" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox"><span perfect-class="formCheckInputText">Sales</span>
                                                                        </label>
                                                                    </div>

                                                                </div>
                                                                <div class="col-sm-4 NonLead">
                                                                    <div class="form-check form-check-inline" perfect-class="formCheck">
                                                                        <label class="form-check-label" perfect-class="formCheckLabel">
                                                                            <input type="checkbox" class="form-check-input" name="ProdSalesReturn" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" onclick="checkboxalluncheck(this)"><span perfect-class="formCheckInputText">Sales Return</span>
                                                                        </label>
                                                                    </div>

                                                                </div>
                                                                <div class="col-sm-4 NonLead">
                                                                    <div class="form-check form-check-inline" perfect-class="formCheck">
                                                                        <label class="form-check-label" perfect-class="formCheckLabel">
                                                                            <input type="checkbox" class="form-check-input" name="ProdPurchase" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" onclick="checkboxalluncheck(this)"><span perfect-class="formCheckInputText">Purchase</span>
                                                                        </label>
                                                                    </div>

                                                                </div>
                                                                <div class="col-sm-4 NonLead">
                                                                    <div class="form-check form-check-inline" perfect-class="formCheck">
                                                                        <label class="form-check-label" perfect-class="formCheckLabel">
                                                                            <input type="checkbox" class="form-check-input" name="ProdPurchaseReturn" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" onclick="checkboxalluncheck(this)"><span perfect-class="formCheckInputText">Purchase Return</span>
                                                                        </label>
                                                                    </div>

                                                                </div>

                                                                <div class="col-sm-4 NonLead">
                                                                    <div class="form-check form-check-inline" perfect-class="formCheck">
                                                                        <label class="form-check-label" perfect-class="formCheckLabel">
                                                                            <input type="checkbox" class="form-check-input" name="ProdStockTransfer" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" onclick="checkboxalluncheck(this)"><span perfect-class="formCheckInputText">Stock Transfer</span>
                                                                        </label>
                                                                    </div>

                                                                </div>
                                                                <div class="col-sm-4 NonLead">
                                                                    <div class="form-check form-check-inline" perfect-class="formCheck">
                                                                        <label class="form-check-label" perfect-class="formCheckLabel">
                                                                            <input type="checkbox" class="form-check-input" name="ProdProductionIn" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" onclick="checkboxalluncheck(this)"><span perfect-class="formCheckInputText">Production In</span>
                                                                        </label>
                                                                    </div>

                                                                </div>
                                                                <div class="col-sm-4 NonLead">
                                                                    <div class="form-check form-check-inline" perfect-class="formCheck">
                                                                        <label class="form-check-label" perfect-class="formCheckLabel">
                                                                            <input type="checkbox" class="form-check-input" name="ProdProductionOut" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" onclick="checkboxalluncheck(this)"><span perfect-class="formCheckInputText">Production Out </span>
                                                                        </label>
                                                                    </div>

                                                                </div>
                                                                <div class="col-sm-4 Prodlead">
                                                                    <div class="form-check form-check-inline" perfect-class="formCheck">
                                                                        <label class="form-check-label" perfect-class="formCheckLabel">
                                                                            <input type="checkbox" class="form-check-input" name="ProdLead" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" onclick="checkboxalluncheck(this)"><span perfect-class="formCheckInputText">Lead </span>
                                                                        </label>
                                                                    </div>

                                                                </div>
                                                                <div class="col-sm-4 ProdProject">
                                                                    <div class="form-check form-check-inline" perfect-class="formCheck">
                                                                        <label class="form-check-label" perfect-class="formCheckLabel">
                                                                            <input type="checkbox" class="form-check-input" name="ProdProject" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-css="checkbox" onclick="checkboxalluncheck(this)"><span perfect-class="formCheckInputText">Project </span>
                                                                        </label>
                                                                    </div>

                                                                </div>
                                                            </div>


                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>




                            </div>
                        </div>
                    </div>

                </div>

                <div class="col-sm-6">
                    <div class="card">
                        <div class="card-body">
                            <div id="accordion-nine" class="accordion accordion-active-header">
                                <div class="accordion__item">
                                    <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseTen">
                                        <span class="accordion__header--icon"></span>
                                        <span class="accordion__header--text">Sub Product Details</span>
                                        <span class="accordion__header--indicator"></span>
                                    </div>
                                    <div id="active-header_collapseTen" class="collapse accordion__body" data-parent="">
                                        <dv class="accordion__body--text">
                                            <div class="col-sm-12" perfect-class="TempTableProduct">
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div class="row">
                                                            <div class="col-sm-5">
                                                                <div class="form-group row" perfect-class="formGroup">
                                                                    <label class="col-sm-5 col-form-label">
                                                                        <span perfect-class="formGroupLabel" name="lblProName">Product</span>
                                                                        <input type="hidden" name="ID_Product" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-ProductType-ProductType="ID_Product" perfect-css="input" />
                                                                    </label>
                                                                </div>
                                                            </div>
                                                            <div class="col-sm-7 PerError">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control" name="SubProdName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" perfect-ProductType-ProductType="SubProduct" />

                                                                    <div class="input-group-append">

                                                                        <button id="addproduct-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="GetCmnPopUpSearchVal(this,18,'Product List',[])" Criterea1="0" Criterea2="0" BindName="SubProdName" BindVal="ID_Product"></button>
                                                                    </div>
                                                                    <div class="text-danger temptableError"></div>
                                                                </div>

                                                            </div>

                                                        </div>
                                                    </div>

                                                    <div class="col-sm-12">
                                                        <div class="row">
                                                            <div class="col-sm-5">
                                                                <div class="form-group row" perfect-class="formGroup">
                                                                    <label class="col-sm-5 col-form-label">
                                                                        <span perfect-class="formGroupLabel ">Quantity</span>
                                                                    </label>
                                                                </div>
                                                            </div>
                                                            <div class="col-sm-7 PerError">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control text-right" min="0" placeholder="" id="Quantity" name="Quantity" perfect-class="formGroupControl" oninput="decimalpnt(this,'Quantity',4)" perfect-ctype="input" perfect-css="input" perfect-ProductType-ProductType="Amount" maxlength="10" />
                                                                    <span class="text-danger temptableError"></span>
                                                                </div>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div class="row">
                                                            <div class="col-sm-3">
                                                                <div class="col-sm-10">
                                                                    <input type="checkbox" class="form-check-input" id="SprodSubProduct" name="SprodSubProduct" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-ProductType-ProductType="SprodSubProduct" perfect-css="checkbox" onclick="fn_SubProductOnly(this)"><span perfect-class="formCheckInputText">SubProduct</span>
                                                                </div>

                                                            </div>
                                                            <div class="col-sm-3">
                                                                <div class="col-sm-10">
                                                                    <input type="checkbox" class="form-check-input" id="Fixed" name="Fixed" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-ProductType-ProductType="Fixed" perfect-css="checkbox"><span perfect-class="formCheckInputText">Fixed</span>
                                                                </div>

                                                            </div>
                                                            <div class="col-sm-3">
                                                                <div class="col-sm-10">
                                                                    <input type="checkbox" class="form-check-input" id="PrintView" name="PrintView" perfect-class="formCheckInput" perfect-ctype="checkbox" perfect-ProductType-ProductType="PrintView" perfect-css="checkbox"><span perfect-class="formCheckInputText">Show In Print</span>
                                                                </div>
                                                            </div>
                                                            <div class="col-sm-1">

                                                            </div>
                                                            <div class="col-sm-2">
                                                                <button class="btn btn-primary1 float-right" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add Sub Product" onclick="addIncProduct(this,'ProductType')"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>&nbsp;&nbsp;
                                            <div class="table-responsive" perfect-ProductType="ProductType"></div>
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="card">
                        <div class="card-body">
                            <div id="accordion-nine" class="accordion accordion-active-header">
                                <div class="accordion__item">
                                    <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapsefive">
                                        <span class="accordion__header--icon"></span>
                                        <span class="accordion__header--text">Levels</span>
                                        <span class="accordion__header--indicator"></span>
                                    </div>
                                    <div id="active-header_collapsefive" class="collapse accordion__body" data-parent="">
                                        <div class="accordion__body--text">
                                            <div class="col-sm-12">
                                                <div class="form-group row" perfect-class="formGroup">
                                                    <label class="col-sm-4 col-form-label">
                                                        <span perfect-class="formGroupLabel"> Min Level</span>
                                                    </label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control text-right" id="idprodminlevl" placeholder="" name="ProdMinLevel" oninput="decimalpnt(this,'idprodminlevl',4)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="10" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-12">
                                                <div class="form-group row" perfect-class="formGroup">
                                                    <label class="col-sm-4 col-form-label">
                                                        <span perfect-class="formGroupLabel"> Max Level</span>
                                                    </label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control  text-right" id="idpromaxlevel" placeholder="" name="ProdMaxLevel" oninput="decimalpnt(this,'idpromaxlevel',4)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="10" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-12">
                                                <div class="form-group row" perfect-class="formGroup">
                                                    <label class="col-sm-4 col-form-label">
                                                        <span perfect-class="formGroupLabel"> Reorder Level</span>
                                                        @*<span class="text-danger">*</span>*@
                                                    </label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control text-right" id="proreorderlevel" placeholder="" name="ProdReorderLevel" oninput="decimalpnt(this,'proreorderlevel',4)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="10" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-12">
                                                <div class="form-group row" perfect-class="formGroup">
                                                    <label class="col-sm-4 col-form-label">
                                                        <span perfect-class="formGroupLabel"> Reorder Quantity</span>
                                                        @*<span class="text-danger">*</span>*@
                                                    </label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control text-right" id="proreorderqnty" placeholder="" name="ProdReorderQuantity" oninput="decimalpnt(this,'proreorderqnty',4)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="10" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="card">
                        <div class="card-body">
                            <div id="accordion-nine" class="accordion accordion-active-header">
                                <div class="accordion__item">
                                    <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseWarranty">
                                        <span class="accordion__header--icon"></span>
                                        <span class="accordion__header--text">Warranty Details</span>
                                        <span class="accordion__header--indicator"></span>
                                    </div>
                                    <div id="active-header_collapseWarranty" class="collapse accordion__body" data-parent="">
                                        <dv class="accordion__body--text">
                                            <div class="col-sm-12" perfect-class="TempTableWarranty">
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">Warranty Type</label>
                                                            <div class="col-sm-8">
                                                                <select class="form-control" name="FK_WarrantyType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" perfect-tempTable-Warranty="FK_WarrantyType">
                                                                    <option value="">Please select</option>
                                                                    @if (!(Model.Warrantytype is null))
                                                                    {
                                                                        foreach (var Module in Model.Warrantytype)
                                                                        {
                                                                            <option value="@Module.WarrantyTypeID">@Module.WarrantyName</option>
                                                                        }
                                                                    }
                                                                </select>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>


                                                        </div>

                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">Replacement Period</label>
                                                            <div class="col-sm-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control text-right" name="ProdWtyRepDurPrdU" id="ProdWtyRepDurPrdU" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" oninput="this.value = this.value.replace(/[^0-9]/g, '').replace(/(\..*)\./g, '$1');" maxlength="8" perfect-tempTable-Warranty="ProdWtyRepDurPrdU" />
                                                                    <select class="form-control" name="ProdWtyRepDurType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" perfect-tempTable-Warranty="ProdWtyRepDurType">
                                                                        <option value="">Please select</option>
                                                                        @if (!(Model.warrlist is null))
                                                                        {
                                                                            foreach (var ModelList in Model.warrlist)
                                                                            {
                                                                                <option value="@ModelList.ID_WarrantyTypeSetting">@ModelList.WarrantyTypeSetting</option>
                                                                            }
                                                                        }
                                                                    </select>
                                                                </div>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-4 col-form-label">Service Period</label>
                                                            <div class="col-sm-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control text-right" name="ProdWtySerDurPrd" id="ProdWtySerDurPrd" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" oninput="this.value = this.value.replace(/[^0-9]/g, '').replace(/(\..*)\./g, '$1');" maxlength="8" perfect-tempTable-Warranty="ProdWtySerDurPrd" />
                                                                    <select class="form-control" name="ProdWtySerDurType" perfect-class="formGroupControl" perfect-ctype="select" perfect-css="select" perfect-tempTable-Warranty="ProdWtySerDurType">
                                                                        <option value="">Please select</option>
                                                                        @if (!(Model.warrlist is null))
                                                                        {
                                                                            foreach (var ModelList in Model.warrlist)
                                                                            {
                                                                                <option value="@ModelList.ID_WarrantyTypeSetting">@ModelList.WarrantyTypeSetting</option>
                                                                            }
                                                                        }
                                                                    </select>
                                                                </div>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>


                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <div class="col-sm-10">

                                                            </div>
                                                            <div class="col-sm-2">
                                                                <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add Warranty Details" onclick="fn_createWarrantyTable(this,'Warranty',['FK_WarrantyType'])"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="row">
                                                <div class="col-sm-12" style="padding-right:25px;padding-left:25px;">
                                                    <div class="form-group row" perfect-class="formGroup">
                                                        <div class="table-responsive" perfect-tempTable="Warranty" id="WarrantyItemHead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                                    </div>
                                                </div>
                                            </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>



                <div class="col-sm-12">
                    <div class="card">
                        <div class="card-body">
                            <div id="accordion-nine" class="accordion accordion-active-header">
                                <div class="accordion__item">
                                    <div class="accordion__header collapsed" data-toggle="collapse" data-target="#active-header_collapseOpeningstock">
                                        <span class="accordion__header--icon"></span>
                                        <span class="accordion__header--text">Opening Stock Entry</span>
                                        <span class="accordion__header--indicator"></span>
                                    </div>
                                    <div id="active-header_collapseOpeningstock" class="collapse accordion__body" data-parent="">
                                        <dv class="accordion__body--text">
                                            <div class="col-sm-12" perfect-class="TempTableOpeningStock">
                                                <div class="row">
                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">

                                                                <span perfect-class="formGroupLabel">Branch</span>
                                                                @*<span class="text-danger">*</span>*@
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <select class="form-control" name="BranchID" id="branchid" perfect-class="formGroupControl" perfect-ctype="select" perfect-tempTable-OpeningStock="BranchID" perfect-css="select" data-live-search="true" onchange="departmentclearto(this)">


                                                                    <option value="0">Please Select </option>
                                                                    @if (!(Model.BranchListTo is null))
                                                                    {
                                                                        foreach (var branchListto in Model.BranchListTo)
                                                                        {
                                                                            <option value="@branchListto.BranchIDTo">@branchListto.BranchNameTo</option>
                                                                        }

                                                                    }

                                                                </select>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                    @*</div>
                                                        <div class="row">*@
                                                    <div class="col-sm-6">

                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Department</span>
                                                                @*<span class="text-danger">*</span>*@
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <select class="form-control" name="DepartmentID" id="departmentid" perfect-class="formGroupControl" perfect-tempTable-OpeningStock="DepartmentID" perfect-ctype="select" perfect-css="select" data-live-search="true">

                                                                    <option value="0">Please Select </option>

                                                                    @if (!(Model.DepartmentListTo is null))
                                                                    {
                                                                        foreach (var departmentListto in Model.DepartmentListTo)
                                                                        {
                                                                            <option value="@departmentListto.DepartmentIDTo">@departmentListto.DepartmentNameTo</option>
                                                                        }

                                                                    }

                                                                </select>
                                                                <div class="text-danger temptableError"></div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                    @*</div>

                                                        <div class="row">*@

                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel" name="lblProName">MRP</span>
                                                            </label>

                                                            <div class="col-sm-7 PerError">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control text-right" name="MRP" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" perfect-tempTable-OpeningStock="MRP" id="MRP" oninput="decimalpnt(this,'MRP',3)" maxlength="13" min="0" onchange="checkmrpsalesrate(this,'OpeningStock')" />
                                                                    <div class="text-danger temptableError"></div>
                                                                </div>

                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Sales Price</span>

                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="text" class="form-control text-right" perfect-tempTable-OpeningStock="SalPrice" placeholder="" id="SalPrice" name="SalPrice" oninput="decimalpnt(this,'SalPrice',3)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" onchange="checkmrpsalesrate(this,'OpeningStock')" />
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Product Cost</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="text" class="form-control text-right" perfect-tempTable-OpeningStock="ProductionCost" placeholder="" name="ProductionCost" id="ProductionCost" oninput="decimalpnt(this,'ProductionCost',3)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" />

                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Purchase Rate</span>

                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="text" class="form-control text-right" perfect-tempTable-OpeningStock="PurRate" placeholder="" name="PurRate" id="PurRate" oninput="decimalpnt(this,'PurRate',3)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" min="0" />
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Opening Quantity</span>

                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="text" class="form-control text-right" perfect-tempTable-OpeningStock="OpeningQuantity" placeholder="" name="OpeningQuantity" id="OpeningQuantity" oninput="decimalpnt(this,'OpeningQuantity',3)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="13" min="0" onchange="fn_bindDepBranch(this,'OpeningStock')" />
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Stand By Quantity</span>

                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="text" class="form-control text-right" perfect-tempTable-OpeningStock="OpeningStbyQuantity" placeholder="" name="OpeningStbyQuantity" id="OpeningStbyQuantity" oninput="decimalpnt(this,'OpeningStbyQuantity',3)" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="13" min="0" onchange="fn_bindDepBranch(this,'OpeningStock')" />
                                                            </div>
                                                        </div>
                                                    </div>


                                                    @*</div>
                                                        <div class="row">*@



                                                    @*<div class="col-sm-6">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-5 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Q R Code</span>

                                                                </label>
                                                                <div class="col-sm-7">
                                                                    <input type="text" class="form-control perfectValidate_specialcode_nm" perfect-tempTable-OpeningStock="QRCode" placeholder="" name="QRCode" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="15" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <label class="col-sm-5 col-form-label">
                                                                    <span perfect-class="formGroupLabel">Bar Code</span>

                                                                </label>
                                                                <div class="col-sm-7">
                                                                    <input type="text" class="form-control perfectValidate_specialcode_nm " perfect-tempTable-OpeningStock="BarCode" name="BarCode" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" onkeypress="return blockSpecialChars(event)" maxlength="15" />
                                                                </div>
                                                            </div>
                                                        </div>*@

                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Batch No</span>

                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="text" class="form-control perfectValidate_specialcode_nm" perfect-tempTable-OpeningStock="BatchNo" name="BatchNo" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" maxlength="15" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <label class="col-sm-5 col-form-label">
                                                                <span perfect-class="formGroupLabel">Expiry date</span>

                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="date" class="form-control" perfect-tempTable-Opening="ExpiryDate" name="ExpiryDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" />
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>



                                                @*<div class="row">
                                                        <div class="col-sm-12">
                                                            <div class="form-group row" perfect-class="formGroup">
                                                                <div class="col-sm-10">

                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <button class="btn btn-primary1" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="Add Opening Stock Entry" onclick="fn_createOpeningStockTable(this,'OpeningStock',['DepartmentID'])"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>*@

                                            </div>
                                            @*<div class="row">
                                                    <div class="col-sm-12" style="padding-right:25px;padding-left:25px;">
                                                        <div class="form-group row" perfect-class="formGroup">
                                                            <div class="table-responsive" perfect-tempTable="OpeningStock" id="OpeningStockItemHead" perfect-tempTable-lastindex="0" perfect-tempTable-action="0"></div>
                                                        </div>
                                                    </div>
                                                </div>*@
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>

            </div>
            <div class="card-footer text-right" perfect-class="formFooter">
                @if (ViewBag.PagedAccessRights.UsrrlMsEdt)
                {
                    <button id="" type="button" class="btn btn-primary mr-3 addcompany-jq-addnewuserUpdate d-none" name="update" perfect-css="button" onclick="fn_ProductForm_update(this)"><i class="fa fa-refresh fa-spin  loaderClass"></i>Update</button>
                }
                @if (ViewBag.PagedAccessRights.UsrrlMsAdd)
                {
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="fn_ProductForm_add(this)"><i class="fa fa-refresh fa-spin loaderClass "></i>Save</button>
                }
                <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this)" name="reset">Clear</button>
            </div>
        </form>

    </div>
</div>



<script>

    function decimalpnt(ele, id, range) {
        debugger
        let input = $('#' + id);

        ele.value = ele.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        let t = ele.value;
        ele.value = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), range)) : t;

        $(document).on('keydown', '#' + id, function (event) {

            if (ele.value.includes('.')) {

            }
            else if (ele.value === '.' && (event.key === '.' || event.keyCode === 190)) {
                ele.value = '0.00'; // Change the value to '0.00' if only a dot is entered
                // Prevent the dot from being entered in the input field
            }
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) { }
            else {
                if (ele.value.indexOf('.') < 0 && ele.value.indexOf('.') !== 9 && ele.value.length > 8) {
                    ele.value = ele.value + '.';
                }
            }

        });

    }

    function fn_SubProductOnly(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        if ($($thisForm.find('[name=SprodSubProduct]')).is(":checked") == true) {
            $('#PrintView').prop('disabled', false);
            $('#Fixed').prop('disabled', false);
        }
        else {
            $('#PrintView').prop('checked', false);
            $('#Fixed').prop('checked', false);
            $('#PrintView').prop('disabled', true);
            $('#Fixed').prop('disabled', true);
        }
    }
    (function () {
       // jQuery('form').validate();//<-----  Validate/initialize our form on page load
        jQuery('select').selectpicker();
    })();
    $(document).ready(function () {
      
        $('#MultipleunitCls').hide();
        initFunctions('form');
            debugger;
        let $thisForm = $(this).find('[perfect-class="form"]');

        let ClientType = '@System.Configuration.ConfigurationManager.AppSettings["Lead"]';
        if (ClientType == "1") {
            $(".Prodlead").hide();
            $(".ProdProject").hide();
            $(".AllModule").show();
            $(".NonLead").hide();  
            $('#ProdAll').prop('checked', true);
            $('[name="ProdSales"]').prop('checked', true);
            $('[name="ProdSalesReturn"]').prop('checked', true);
            $('[name="ProdPurchase"]').prop('checked', true);
            $('[name="ProdPurchaseReturn"]').prop('checked', true);
            $('[name="ProdStockTransfer"]').prop('checked', true);
            $('[name="ProdProductionIn"]').prop('checked', true);
            $('[name="ProdProductionOut"]').prop('checked', true);
            $('[name="ProdProject"]').prop('checked', true);
            $('[name="ProdLead"]').prop('checked', true);
        }
        else {
            $(".Prodlead").hide();
            $(".ProdProject").hide();
            $(".AllModule").show();
            $(".NonLead").show();              
        }

        if (@ViewBag.Companycategory == "1" && ClientType!="1") {
            $(".Prodlead").show();
            $(".ProdProject").show();
        }
        else {
            $(".Prodlead").hide();
            $(".ProdProject").hide();
            }
            fn_SubProductOnly(this);
           
        debugger;
        if ('@ViewBag.Multiunitsettings' == "True") {

            $('#lblunit').text('Master Unit');
            $('#MultipleunitCls').show();
            
        }
        else {
            $('#lblunit').text('Unit');
            $('#MultipleunitCls').hide();
        }
       
            //ViewBag.unitset
            
            //var today = new Date();
            //var day = today.getDate() > 9 ? today.getDate() : "0" + today.getDate(); // format should be "DD" not "D" e.g 09
            //var month = (today.getMonth() + 1) > 9 ? (today.getMonth() + 1) : "0" + (today.getMonth() + 1);
            //var year = today.getFullYear();

            //$thisForm.find('[name="ExpiryDate"]').attr('min', year + "-" + month + "-" + day);
        console.log('ViewMultiUnitItem>', ViewMultiUnitItem);
        var MenuArr = ViewMultiUnitItem;
    });

    function fn_selectSubcategory(ele) {



        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let $placeDropdown = $thisForm.find('[name=SubCategotyID]');//<--- Will give place select html element
        $placeDropdown.empty();
        $placeDropdown.append($('<option/>', { value: '' }).text('Please select')).selectpicker('refresh');

        let CategoryID = $(ele).val();
         let Mode =$thisForm.find('[name=Mode]').val();

        // let ModeDropdown = $thisForm.find('[name=Mode]')
         //if ($thisForm.find('[name=Mode]').val() == "") {
         //    $thisForm.find('[name=Mode]').val(0);
         //}
         //alert($thisForm.find('[name=Mode]').val())
         $.ajax({
                 url: "@Url.Action("GetSubcategory", "Product")",
                type: "POST",

             data: JSON.stringify({ CategoryID: CategoryID, Mode: Mode}),
                dataType: "json",
                contentType: "application/json",
             success: function (ajaxOutput) {



                 if (ajaxOutput.Process.IsProcess) {

                             $.each(ajaxOutput.Data, function (key, value) {
                                 $placeDropdown.append($('<option/>', { "value": value.ID_SubCategory }).text(value.SubCatName)).selectpicker('refresh')
                                 });


                     }
                     else {
                     $.each(ajaxOutput.Process.Message, function (key, value) {
                             //toastr.warning(value, "Error");
                             //NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': value });
                         });
                     }
                     }

                 });


    }
    function Subcategory(ele) {

    }




    function fn_bindropdown(ele) {

        let ID_ModuleType = $(ele).val();
        let Mode = $(ele).val();

        let $thisForm = $(ele).closest('[perfect-class="form"]');



         $.ajax({
                 url: "@Url.Action("GetBindata", "Product")",
                type: "POST",

             data: JSON.stringify({ Mode: Mode }),
                dataType: "json",
                contentType: "application/json",
             success: function (ajaxOutput) {
                 console.log('values',ajaxOutput)
                 let $ManuDropdown = $thisForm.find('[name=ManufacturerID]');
                //let $UnitDropdown = $thisForm.find('[name=UnitID]');
                 let $CatDropdown = $thisForm.find('[name=CategoryID]');

                 let $SubCatDropdown = $thisForm.find('[name=SubCategotyID]');
                 let $TaxgroupDropdown = $thisForm.find('[name=TaxgroupID]');

                 $ManuDropdown.empty().selectpicker('refresh');
                 //$UnitDropdown.empty().selectpicker('refresh');
                 $CatDropdown.empty().selectpicker('refresh');
                 $SubCatDropdown.empty().selectpicker('refresh');
                 $TaxgroupDropdown.empty().selectpicker('refresh');

                 $ManuDropdown.append($('<option/>', { "value": "" }).text('Please Select')).selectpicker('refresh')
                 //$UnitDropdown.append($('<option/>', { "value": "" }).text('Please Select')).selectpicker('refresh')
                 $CatDropdown.append($('<option/>', { "value": "" }).text('Please Select')).selectpicker('refresh')
                 $SubCatDropdown.append($('<option/>', { "value": "" }).text('Please Select')).selectpicker('refresh')
                 $TaxgroupDropdown.append($('<option/>', { "value": "" }).text('Please Select')).selectpicker('refresh')

                 if (ajaxOutput) {
                     $.each(ajaxOutput.ManufactureList, function (key, value) {
                         $ManuDropdown.append($('<option/>', { "value": value.ID_Manufacturer }).text(value.ManufName)).selectpicker('refresh')
                     });
                     $.each(ajaxOutput.CategoryList, function (key, value) {
                         $CatDropdown.append($('<option/>', { "value": value.CategoryID }).text(value.CategoryName)).selectpicker('refresh')
                     });
                     //$.each(ajaxOutput.UnitList, function (key, value) {
                     //    $UnitDropdown.append($('<option/>', { "value": value.ID_Unit }).text(value.UnitName)).selectpicker('refresh')
                     //});
                     $.each(ajaxOutput.TaxgroupList, function (key, value) {
                         $TaxgroupDropdown.append($('<option/>', { "value": value.TaxGroupID }).text(value.TaxGroupName)).selectpicker('refresh')
                     });
                     $.each(ajaxOutput.SubCategoryList, function (key, value) {
                         $SubCatDropdown.append($('<option/>', { "value": value.ID_SubCategory }).text(value.SubCatName)).selectpicker('refresh')
                     });

                 }
                 else {

                         NotificationMessage({ 'type': 'info', 'heading': 'info', 'message': 'No Data Found' });

                 }

                     }

                 });


    }





    function SearchProduct(ele) {

        console.log('Search function run')
        let $this = $(ele).closest('[perfect-class="formGroup"]');

        $.ajax({
            url: '@Url.Action("GetProduct", "Product")',
            type: "Get",
            headers: { "token_key": "1234" },
            //data: { branchID: id },
            dataType: "json",
            contentType: "application/json",
            success: function (successData) {
                console.log('> Search button click success', successData);

                if (successData.Process.IsProcess) {

                    //$.each(successData.Process.Message, function (key, value) {
                    //    toastr.success(value, "Success");
                    //});
                   ///var sss = createSelectList({ data: JSON.parse(data), hideColumn: ['id'] });
                    //var sss = createSelectList({ data: successData.Data, hideColumn: ['DistrictID'], settings: { size: 'modal-xl'} });
                    var sss = createSelectList({
                        data: successData.Data, hideColumn: ['ID_Product', 'Quantity', 'Fixed','PrintView'], renameHeader: { ProdName: "Name"}});
                    sss.then(function (ret) {
                        if (ret) {
                            console.log('>_ Search button > list click', ret);
                            $this.find('[name=ID_Product]').val(ret.ID_Product);
                            $this.find('[name=SubProdName]').focus().val(ret.ProdName);
                            $this.find('table').append($('<tr>').append($('<td/>').text(ret.ProdName)).append($('<td/>').html('&times;').click(function () { $(this).closest('tr').remove() })))
                        }
                        else {
                            console.log(ret);
                        }
                    });

                }
                else {
                    $.each(successData.Process.Message, function (key, value) {
                        //toastr.warning(value, "Error");
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                    });
                }




            },
            complete: function () {

                //a.find('.dataTables_wrapper').css('width', '100%');
            }
        });

    }
    function fn_ProductForm_add(ele) {

        debugger

        let $thisForm = $(ele).closest('[perfect-class="form"]');

        if ($thisForm.find('[name="ProdNonStockItem"]').is(':Checked') == true) {

            $thisForm.find('[name="Mode"]').removeClass('perfectValidate_string')
            $thisForm.find('[name="CategoryID"]').removeClass('perfectValidate_string')
            $thisForm.find('[name="UnitID"]').removeClass('perfectValidate_string')
            $thisForm.find('[name="TaxGroupID"]').removeClass('perfectValidate_string')

            $thisForm.find('[name="Mode"]').val('');
            $thisForm.find('[name="CategoryID"]').val('');
            $thisForm.find('[name="UnitID"]').val('');
            $thisForm.find('[name="TaxGroupID"]').val('');
        }
        else {
            $thisForm.find('[name="Mode"]').addClass('perfectValidate_string')
            $thisForm.find('[name="CategoryID"]').addClass('perfectValidate_string')
            $thisForm.find('[name="UnitID"]').addClass('perfectValidate_string')
            $thisForm.find('[name="TaxGroupID"]').addClass('perfectValidate_string')

        }


        if (($thisForm.find('[name="ProdNonStockItem"]').is(':Checked') == true) || ($thisForm.find('[name="ProdSales"]').is(':Checked') == true) || ($thisForm.find('[name="ProdSalesReturn"]').is(':Checked') == true) || ($thisForm.find('[name="ProdPurchase"]').is(':Checked') == true) || ($thisForm.find('[name="ProdPurchaseReturn"]').is(':Checked') == true) || ($thisForm.find('[name="ProdStockTransfer"]').is(':Checked') == true) || ($thisForm.find('[name="ProdProductionIn"]').is(':Checked') == true) || ($thisForm.find('[name="ProdProductionOut"]').is(':Checked') == true) || ($thisForm.find('[name="ProdLead"]').is(':Checked') == true) || ($thisForm.find('[name="ProdProject"]').is(':Checked') == true)) {

            isvalid = true;
        }
        else {
            isvalid = false;
            NotificationMessage({ 'type': 'Error', 'heading': 'Warning', 'message': 'Please Mark Checked in Module Access Check box' });
        }
        let MultipleUnits = [];
        $thisForm.find('[name="FK_Unit[]"]').each(function () {
            MultipleUnits.push({ "FK_Unit": $(this).val() });
            console.log('MultipleUnits', MultipleUnits);
        });


        if (isvalid) {
            if ($thisForm.valid() && ($thisForm.find('[name="MinAmount"]').val() != null || $thisForm.find('[name="MaxAmount"]').val() != null)) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                if (fn_bindDepBranch(ele,'OpeningStock')) {

                    let upperlimit = $thisForm.find('[name="MaxAmount"]').val();
                    let lowerlimit = $thisForm.find('[name="MinAmount"]').val();
                    if (parseFloat(upperlimit) < parseFloat(lowerlimit)) {
                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Min Price should be less than Max Price' });
                    }
                    else {
                        $(ele).prop('disabled', true);

                        let savedData = [];
                        $thisForm.find('[perfect-tempTable="taxType"]').find('tbody').find('tr').each(function () {
                            savedData.push($(this).data('pData'));
                        })
                        let IncProData = [];
                        $thisForm.find('[perfect-ProductType="ProductType"]').find('tbody').find('tr').each(function () {
                            IncProData.push($(this).data('pData'));
                        })

                        let WarrantyDtls = [];
                        $thisForm.find('[perfect-tempTable="Warranty"]').find('tbody').find('tr').each(function () {
                            WarrantyDtls.push($(this).data('pData'));
                        })

                       

                        //let OpeningStockData = [];
                        //$thisForm.find('[perfect-tempTable="OpeningStock"]').find('tbody').find('tr').each(function () {
                        //    OpeningStockData.push($(this).data('pData'));
                        //})

                        let inputData = {

                            __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                            'ProductID': 0,

                            'Mode': $thisForm.find('[name="Mode"]').val(),
                            'ProdName': $thisForm.find('[name="ProdName"]').val().trim(),
                            'ProdShortName': $thisForm.find('[name="ProdShortName"]').val().trim(),
                            'ProdHSNCode': $thisForm.find('[name="ProdHSNCode"]').val(),
                            'ProdMinLevel': $thisForm.find('[name="ProdMinLevel"]').val(),
                            'ProdMaxLevel': $thisForm.find('[name="ProdMaxLevel"]').val(),
                            'ProdReorderLevel': $thisForm.find('[name="ProdReorderLevel"]').val(),
                            'ProdReorderQuantity': $thisForm.find('[name="ProdReorderQuantity"]').val(),
                            'ProdMaterialDetails': $thisForm.find('[name="ProdMaterialDetails"]').val(),
                            'ProdSales': $thisForm.find('[name="ProdSales"]').is(':Checked'),
                            'ProdSalesReturn': $thisForm.find('[name="ProdSalesReturn"]').is(':Checked'),
                            'ProdPurchase': $thisForm.find('[name="ProdPurchase"]').is(':Checked'),
                            'ProdPurchaseReturn': $thisForm.find('[name="ProdPurchaseReturn"]').is(':Checked'),
                            'ProdStockTransfer': $thisForm.find('[name="ProdStockTransfer"]').is(':Checked'),
                            'ProdProductionIn': $thisForm.find('[name="ProdProductionIn"]').is(':Checked'),
                            'ProdProductionOut': $thisForm.find('[name="ProdProductionOut"]').is(':Checked'),
                            'ProdQRCode': $thisForm.find('[name="ProdQRCode"]').val(),
                            'ProdBarcode': $thisForm.find('[name="ProdBarcode"]').val(),
                            'CategoryID': $thisForm.find('[name="CategoryID"]').val(),
                            'ManufacturerID': $thisForm.find('[name="ManufacturerID"]').val(),
                            'SubCategotyID': $thisForm.find('[name="SubCategotyID"]').val(),
                            'UnitID': $thisForm.find('[name="UnitID"]').val(),
                            'ProdCode': $thisForm.find('[name="ProdCode"]').val(),
                            TransMode: localStorage.getItem("FRM_TRANSMODE"),
                            'ProdNonStockItem': $thisForm.find('[name="ProdNonStockItem"]').is(':Checked'),
                            'TaxGroupID': $thisForm.find('[name="TaxGroupID"]').val(),
                            //'TaxTypeDetails': savedData,
                            'SubProductDetails': IncProData,
                            'WarrantyDetails': WarrantyDtls,
                            'ProdLead': $thisForm.find('[name="ProdLead"]').is(':Checked'),
                            'ProdProject': $thisForm.find('[name="ProdProject"]').is(':Checked'),
                            'MaxAmount': $thisForm.find('[name="MaxAmount"]').val(),
                            'MinAmount': $thisForm.find('[name="MinAmount"]').val(),
                            //'OpeningStockDetails': OpeningStockData
                            'BranchID': $thisForm.find('[name="BranchID"]').val(),
                            'DepartmentID': $thisForm.find('[name="DepartmentID"]').val(),
                            'MRP': $thisForm.find('[name="MRP"]').val(),
                            'SalPrice': $thisForm.find('[name="SalPrice"]').val(),
                            'ProductionCost': $thisForm.find('[name="ProductionCost"]').val(),
                            'PurRate': $thisForm.find('[name="PurRate"]').val(),
                            'OpeningQuantity': $thisForm.find('[name="OpeningQuantity"]').val(),
                            'OpeningStbyQuantity': $thisForm.find('[name="OpeningStbyQuantity"]').val(),
                            //'QRCode': $thisForm.find('[name="QRCode"]').val(),
                            //'BarCode': $thisForm.find('[name="BarCode"]').val(),
                            'BatchNo': $thisForm.find('[name="BatchNo"]').val(),
                            'ExpiryDate': $thisForm.find('[name="ExpiryDate"]').val(),
                            'MultipleUnits': $thisForm.find('[name="FK_Unit"]').val()
                        };
                        //console.log('inputData', inputData);

                        $.ajax({
                            url: "@Url.Action("AddNewProduct", "Product")",
                            type: "POST",
                            data: inputData,
                            dataType: "json",
                            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                            success: function (ajaxOutput) {

                                if (ajaxOutput.Process.IsProcess) {

                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                    });

                                    $thisForm.find('[perfect-ctype="select"]').val('').selectpicker('refresh');
                                    $thisForm.find('[perfect-ctype="input"]').val('');
                                    $thisForm.find('[perfect-ctype="date"]').val('');

                                    // Get the value set in form's perfect-onFormSuccess attribute
                                    let onSuccess = $thisForm.attr('perfect-onFormSuccess')

                                    if (onSuccess) {
                                        window[onSuccess]();
                                    }
                                }
                                else {
                                    $.each(ajaxOutput.Process.Message, function (key, value) {
                                        NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                    });
                                }
                            },
                            complete: function () {
                                $(ele).prop('disabled', false);
                            }

                        });
                    }
                }
                else {

                }
            }
            else {
                //NotificationMessage({ 'type': 'Error', 'heading': 'Warning', 'message': 'Please Mark Checked in Module Access Check box' });
            }
        }

    }
    function fn_ProductForm_update(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');

        if ($thisForm.find('[name="ProdNonStockItem"]').is(':Checked') == true) {

            $thisForm.find('[name="Mode"]').removeClass('perfectValidate_string')
            $thisForm.find('[name="CategoryID"]').removeClass('perfectValidate_string')
            $thisForm.find('[name="UnitID"]').removeClass('perfectValidate_string')
            $thisForm.find('[name="TaxGroupID"]').removeClass('perfectValidate_string')
        }

        if (($thisForm.find('[name="ProdNonStockItem"]').is(':Checked') == true) || ($thisForm.find('[name="ProdSales"]').is(':Checked') == true) || ($thisForm.find('[name="ProdSalesReturn"]').is(':Checked') == true) || ($thisForm.find('[name="ProdPurchase"]').is(':Checked') == true) || ($thisForm.find('[name="ProdPurchaseReturn"]').is(':Checked') == true) || ($thisForm.find('[name="ProdStockTransfer"]').is(':Checked') == true) || ($thisForm.find('[name="ProdProductionIn"]').is(':Checked') == true) || ($thisForm.find('[name="ProdProductionOut"]').is(':Checked') == true) || ($thisForm.find('[name="ProdLead"]').is(':Checked') == true) || ($thisForm.find('[name="ProdProject"]').is(':Checked') == true)) {

            isvalid = true;
        }
        else {
            isvalid = false;
            NotificationMessage({ 'type': 'Error', 'heading': 'Warning', 'message': 'Please Mark Checked in Module Access Check box' });
        }
        let MultipleUnits = [];
        $thisForm.find('[name="FK_Unit[]"]').each(function () {
            MultipleUnits.push({ "FK_Unit": $(this).val() });
            console.log('MultipleUnits', MultipleUnits);
        });

            if (isvalid) {
                if ($thisForm.valid() && ($thisForm.find('[name="MinAmount"]').val() != null || $thisForm.find('[name="MaxAmount"]').val() != null)) {//<---------Validation :  To Check whether the form is vaild(ie; values in the form contrls are valid)
                    if (fn_bindDepBranch(ele, 'OpeningStock')) {
                        let upperlimit = $thisForm.find('[name="MaxAmount"]').val();
                        let lowerlimit = $thisForm.find('[name="MinAmount"]').val();
                        if (parseFloat(upperlimit) < parseFloat(lowerlimit)) {
                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': 'Min Price should be less than Max Price' });
                        }
                        else {
                            $(ele).prop('disabled', true);
                            // $(ele).prop('disab
                            //disable button to avoid multiple clicks
                            $(ele).prop('disabled', true);
                            let savedPData = $thisForm.data('pData');
                            console.log('saveUp4545', savedPData)
                            let TempdData = [];
                            $thisForm.find('[perfect-tempTable="taxType"]').find('tbody').find('tr').each(function () {
                                TempdData.push($(this).data('pData'));
                            })

                            let IncProData = [];
                            $thisForm.find('[perfect-ProductType="ProductType"]').find('tbody').find('tr').each(function () {
                                IncProData.push($(this).data('pData'));
                            })
                            let WarrantyDtls = [];
                            $thisForm.find('[perfect-tempTable="Warranty"]').find('tbody').find('tr').each(function () {
                                WarrantyDtls.push($(this).data('pData'));
                            })

                            $(ele).prop('disabled', true);
                            let inputData = {

                                __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(),
                                // 'ProductID': savedPData.ProductID,
                                'ProductID': $thisForm.find('[name="ProductID"]').val(),
                                'Mode': $thisForm.find('[name="Mode"]').val(),
                                'ProdName': $thisForm.find('[name="ProdName"]').val().trim(),
                                'ProdShortName': $thisForm.find('[name="ProdShortName"]').val().trim(),
                                'ProdHSNCode': $thisForm.find('[name="ProdHSNCode"]').val(),
                                'ProdMinLevel': $thisForm.find('[name="ProdMinLevel"]').val(),
                                'ProdMaxLevel': $thisForm.find('[name="ProdMaxLevel"]').val(),
                                'ProdReorderLevel': $thisForm.find('[name="ProdReorderLevel"]').val(),
                                'ProdReorderQuantity': $thisForm.find('[name="ProdReorderQuantity"]').val(),
                                'ProdMaterialDetails': $thisForm.find('[name="ProdMaterialDetails"]').val(),
                                'ProdSales': $thisForm.find('[name="ProdSales"]').is(':Checked'),
                                'ProdSalesReturn': $thisForm.find('[name="ProdSalesReturn"]').is(':Checked'),
                                'ProdPurchase': $thisForm.find('[name="ProdPurchase"]').is(':Checked'),
                                'ProdPurchaseReturn': $thisForm.find('[name="ProdPurchaseReturn"]').is(':Checked'),
                                'ProdStockTransfer': $thisForm.find('[name="ProdStockTransfer"]').is(':Checked'),
                                'ProdProductionIn': $thisForm.find('[name="ProdProductionIn"]').is(':Checked'),
                                'ProdProductionOut': $thisForm.find('[name="ProdProductionOut"]').is(':Checked'),
                                'ProdQRCode': $thisForm.find('[name="ProdQRCode"]').val(),
                                'ProdBarcode': $thisForm.find('[name="ProdBarcode"]').val(),
                                'CategoryID': $thisForm.find('[name="CategoryID"]').val(),
                                'ManufacturerID': $thisForm.find('[name="ManufacturerID"]').val(),
                                'SubCategotyID': $thisForm.find('[name="SubCategotyID"]').val(),
                                'UnitID': $thisForm.find('[name="UnitID"]').val(),
                                'ProdCode': $thisForm.find('[name="ProdCode"]').val(),
                                'ProdNonStockItem': $thisForm.find('[name="ProdNonStockItem"]').is(':Checked'),
                                'TaxGroupID': $thisForm.find('[name="TaxGroupID"]').val(),
                                //'TaxTypeDetails': TempdData,
                                TransMode: localStorage.getItem("FRM_TRANSMODE"),
                                'SubProductDetails': IncProData,
                                'WarrantyDetails': WarrantyDtls,
                                'ProdLead': $thisForm.find('[name="ProdLead"]').is(':Checked'),
                                'ProdProject': $thisForm.find('[name="ProdProject"]').is(':Checked'),
                                'MaxAmount': $thisForm.find('[name="MaxAmount"]').val(),
                                'MinAmount': $thisForm.find('[name="MinAmount"]').val(),
                                'BranchID': $thisForm.find('[name="BranchID"]').val(),
                                'DepartmentID': $thisForm.find('[name="DepartmentID"]').val(),
                                'MRP': $thisForm.find('[name="MRP"]').val(),
                                'SalPrice': $thisForm.find('[name="SalPrice"]').val(),
                                'ProductionCost': $thisForm.find('[name="ProductionCost"]').val(),
                                'PurRate': $thisForm.find('[name="PurRate"]').val(),
                                'OpeningQuantity': $thisForm.find('[name="OpeningQuantity"]').val(),
                                'OpeningStbyQuantity': $thisForm.find('[name="OpeningStbyQuantity"]').val(),
                                //'QRCode': $thisForm.find('[name="QRCode"]').val(),
                                //'BarCode': $thisForm.find('[name="BarCode"]').val(),
                                'BatchNo': $thisForm.find('[name="BatchNo"]').val(),
                                'ExpiryDate': $thisForm.find('[name="ExpiryDate"]').val(),
                                'MultipleUnits': $thisForm.find('[name="FK_Unit"]').val()
                            };
                            //console.log('inputData', inputData)

                            $.ajax({
                                url: "@Url.Action("UpdateProduct", "Product")",
                                type: "POST",
                                data: inputData,
                                dataType: "json",
                                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                                success: function (ajaxOutput) {

                                    if (ajaxOutput.Process.IsProcess) {

                                        $.each(ajaxOutput.Process.Message, function (key, value) {
                                            NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                        });

                                        // Get the value set in form's perfect-onFormSuccess attribute
                                        let onSuccess = $thisForm.attr('perfect-onFormSuccess');

                                        if (onSuccess) {
                                            window[onSuccess]();
                                        }
                                    }
                                    else {
                                        $.each(ajaxOutput.Process.Message, function (key, value) {
                                            NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                        });
                                    }
                                },
                                complete: function () {
                                    $(ele).prop('disabled', false);
                                }

                            });


                        }
                    }
                    else {

                    }

            }
            else {
               // NotificationMessage({ 'type': 'Error', 'heading': 'Warning', 'message': 'Please Mark Checked in Module Access Check box' });
            }
        }



    }



    function addIncProduct(ele, val) {

        let hide = ["ID_Product"];
        let uniqID = ["ID_Product"];
        let errorClass = '.temptableError';

        let $container = $(ele).closest('[perfect-class="form"]')
        //.find('[perfect-tempTable="' + val + '"]');
        let isvalid = true;
        let $tbl = $container.find('[perfect-ProductType="' + val + '"]');
        console.log('INC'+$tbl)
        let savedData = [];
        $container.find('[perfect-ProductType="' + val + '"]').find('tbody').find('tr').each(function () {
            savedData.push($(this).data('pData'));
           // console.log('INC2' + 'pData')
        })
        //validate
        $container.find('[perfect-ProductType-' + val + ']').each(function () {
            let $this = $(this);


            if ($this.val().trim().length == 0) {

                $this.closest('.PerError').find(errorClass).text('Please Enter' +" "+ $this.attr('perfect-ProductType-' + val));
              //  $this.siblings(errorClass).text($this.attr('perfect-ProductType-' + val) + ' Field required');
                isvalid = false;
            }
            else {
                $this.closest('.PerError').find(errorClass).text('');
               // $this.siblings(errorClass).text('');
            }


            if (uniqID.length > 0) {

                uniqID.forEach(function (key, value) {
                   // console.log('uniq' + key + '|' + value);
                    let cvalue = $container.find('[perfect-ProductType-' + val + '="' + key + '"]').val();
                   // console.log(cvalue)
                   // console.log(savedData)
                    if (savedData.find(a => a[key] == cvalue)) {
                        $this.closest('.PerError').find(errorClass).text('Already Exist');
                        isvalid = false;
                    }
                });

            }
        });

        if (isvalid) {
            let rhead = $('<tr/>', { class: "btn-reveal-trigger" });
            let rbody = $('<tr/>', { class: "btn-reveal-trigger" });
            let tempSave = {};
            if ($tbl.find('table').length == 0) {
                let $table = $('<table/>', { class: "table mb-0  table-striped  text-black" });
                let $thead = $('<thead/>', { class: "bg-primary text-white" })
                let $tbody = $('<tbody/>');

                $container.find('[perfect-ProductType-' + val + ']').each(function () {
                    let $this = $(this);
                    if (!hide.includes($this.attr('perfect-ProductType-' + val))) {
                        let _head = $this.attr('perfect-ProductType-' + val);
                        switch (_head) {
                            case "SprodSubProduct":
                                _head = "Sub Product";
                                break;
                            case "SubProduct":
                                _head = "Product";
                                break;
                            case "Amount":
                                _head = "Quantity";
                                break;
                            default:
                                break;
                        };
                        //rhead.append($('<th/>').text($this.attr('perfect-ProductType-' + val)))
                        rhead.append($('<th/>').text(_head))

                        if ($this.attr('type') == 'checkbox') {
                            rbody.append($('<td/>', { 'perfect-ProductType-td-name': $this.attr('name') }).html($('<i/>', { class: ($this.is(':checked') ? "fa fa-check text-success" : "fa fa-times text-danger") })))
                        }
                        else {
                            rbody.append($('<td/>', { 'perfect-ProductType-td-name': $this.attr('name') }).text($this.val()))
                        }

                    }
                    if ($this.attr('type') == 'checkbox') {
                        tempSave[$this.attr('name')] = $this.is(':checked');
                    } else {
                        tempSave[$this.attr('name')] = $this.val();
                    }
                });
                //console.log('create', tempSave);
                rbody.data({ 'pData': tempSave });
                $thead.html(rhead.append('<th/>'));
                $tbody.html(rbody.append($('<td/>', { class: "d-flex" }).append($('<a/>', { class: "btn btnPerfectGrid shadow btn-xs sharp mr-1", href: "#" }).html($('<i/>', { class: 'fa fa-trash btnPerfectGridDelete' }))
                    .click(function () {
                        if ($(this).closest('tbody').find('tr').length == 1) {
                            $(this).closest('[perfect-ProductType="' + val + '"]').empty();
                            $container.find('.PerError').find(errorClass).text('');
                            $container.find('[perfect-ProductType-' + val + '][type=hidden]').val('');
                            $container.find('[perfect-ProductType-' + val + '][type=text]').val('');
                            $container.find('[perfect-ProductType-' + val + '][type=number]').val('');
                            $container.find('[perfect-ProductType-' + val + '][type=checkbox]').prop('checked', false)
                        } else {
                            $(this).closest('tr').remove();
                        }
                    }))));
                $tbl.html($table.append($thead).append($tbody))
                $container.find('[perfect-ProductType-' + val + '][type=hidden]').val('');
                $container.find('[perfect-ProductType-' + val + '][type=text]').val('');
                $container.find('[perfect-ProductType-' + val + '][type=number]').val('');
                $container.find('[perfect-ProductType-' + val + '][type=checkbox]').prop('checked', false)

            }
            else {

                $container.find('[perfect-ProductType-' + val + ']').each(function () {
                    let $this = $(this);
                    if (!hide.includes($this.attr('perfect-ProductType-' + val))) {
                        if ($this.attr('type') == 'checkbox') {
                            rbody.append($('<td/>', { 'perfect-ProductType-td-name': $this.attr('name') }).html($('<i/>', { class: ($this.is(':checked') ? "fa fa-check text-success" : "fa fa-times text-danger") })))
                        }
                        else {
                            rbody.append($('<td/>', { 'perfect-ProductType-td-name': $this.attr('name') }).text($this.val()))
                        }
                    }
                    if ($this.attr('type') == 'checkbox') {
                        tempSave[$this.attr('name')] = $this.is(':checked');
                    } else {
                        tempSave[$this.attr('name')] = $this.val();
                    }
                });
                // console.log('create', tempSave);
                rbody.data({ 'pData': tempSave });
                $tbl.find('tbody').append(rbody.append($('<td/>', { class: "d-flex" }).append($('<a/>', { class: "btn btnPerfectGrid shadow btn-xs sharp mr-1", href: "#" }).html($('<i/>', { class: 'fa fa-trash btnPerfectGridDelete' }))
                    .click(function () {
                       // console.log('len', $(this).closest('tbody').find('tr').length);
                        if ($(this).closest('tbody').find('tr').length == 1) {
                            $(this).closest('[perfect-ProductType="' + val + '"]').empty();
                            $container.find('.PerError').find(errorClass).text('');
                            $container.find('[perfect-ProductType-' + val + '][type=text]').val('');
                            $container.find('[perfect-ProductType-' + val + '][type=number]').val('');
                            $container.find('[perfect-ProductType-' + val + '][type=hidden]').val('');
                            $container.find('[perfect-ProductType-' + val + '][type=checkbox]').prop('checked', false)
                           // console.log('inside ');
                        } else {
                            $(this).closest('tr').remove();
                        }
                    }))));
                $container.find('[perfect-ProductType-' + val + '][type=text]').val('');
                $container.find('[perfect-ProductType-' + val + '][type=number]').val('');
                $container.find('[perfect-ProductType-' + val + '][type=hidden]').val('');
                $container.find('[perfect-ProductType-' + val + '][type=checkbox]').prop('checked', false)
            }
        }
    }

    function addWarrantyDtls(ele, val) {

        let hide = ["ID_Product"];
        let uniqID = ["ID_Product"];
        let errorClass = '.temptableError';

        let $container = $(ele).closest('[perfect-class="form"]')

        let isvalid = true;
        let $tbl = $container.find('[perfect-tempTable-Warranty="' + val + '"]');

        let savedData = [];
        $container.find('[perfect-tempTable-Warranty="' + val + '"]').find('tbody').find('tr').each(function () {
            savedData.push($(this).data('pData'));

        })
        //validate
        $container.find('[perfect-tempTable-Warranty-' + val + ']').each(function () {
            let $this = $(this);


            if ($this.val().trim().length == 0) {

                $this.closest('.PerError').find(errorClass).text('Please Enter' + " " + $this.attr('perfect-ProductType-' + val));
                 isvalid = false;
            }
            else {
                $this.closest('.PerError').find(errorClass).text('');
            }


            if (uniqID.length > 0) {

                uniqID.forEach(function (key, value) {
                    let cvalue = $container.find('[perfect-tempTable-Warranty-' + val + '="' + key + '"]').val();
                    if (savedData.find(a => a[key] == cvalue)) {
                        $this.closest('.PerError').find(errorClass).text('Already Exist');
                        isvalid = false;
                    }
                });

            }
        });

        if (isvalid) {
            let rhead = $('<tr/>', { class: "btn-reveal-trigger" });
            let rbody = $('<tr/>', { class: "btn-reveal-trigger" });
            let tempSave = {};
            if ($tbl.find('table').length == 0) {
                let $table = $('<table/>', { class: "table mb-0  table-striped  text-black" });
                let $thead = $('<thead/>', { class: "bg-primary text-white" })
                let $tbody = $('<tbody/>');

                $container.find('[perfect-tempTable-Warranty-' + val + ']').each(function () {
                    let $this = $(this);
                    if (!hide.includes($this.attr('perfect-tempTable-Warranty-' + val))) {
                        rhead.append($('<th/>').text($this.attr('perfect-tempTable-Warranty-' + val)))

                        if ($this.attr('type') == 'checkbox') {
                            rbody.append($('<td/>', { 'perfect-tempTable-Warranty-td-name': $this.attr('name') }).html($('<i/>', { class: ($this.is(':checked') ? "fa fa-check text-success" : "fa fa-times text-danger") })))
                        }
                        else {
                            rbody.append($('<td/>', { 'perfect-tempTable-Warranty-td-name': $this.attr('name') }).text($this.val()))
                        }

                    }
                    if ($this.attr('type') == 'checkbox') {
                        tempSave[$this.attr('name')] = $this.is(':checked');
                    } else {
                        tempSave[$this.attr('name')] = $this.val();
                    }
                });

                rbody.data({ 'pData': tempSave });
                $thead.html(rhead.append('<th/>'));
                $tbody.html(rbody.append($('<td/>', { class: "d-flex" }).append($('<a/>', { class: "btn btnPerfectGrid shadow btn-xs sharp mr-1", href: "#" }).html($('<i/>', { class: 'fa fa-trash btnPerfectGridDelete' }))
                    .click(function () {
                        if ($(this).closest('tbody').find('tr').length == 1) {
                            $(this).closest('[perfect-tempTable-Warranty="' + val + '"]').empty();
                            $container.find('.PerError').find(errorClass).text('');
                            $container.find('[perfect-tempTable-Warranty-' + val + '][type=hidden]').val('');
                            $container.find('[perfect-tempTable-Warranty-' + val + '][type=text]').val('');
                            $container.find('[perfect-tempTable-Warranty-' + val + '][type=number]').val('');
                            $container.find('[perfect-tempTable-Warranty-' + val + '][type=checkbox]').prop('checked', false)
                        } else {
                            $(this).closest('tr').remove();
                        }
                    }))));
                $tbl.html($table.append($thead).append($tbody))
                $container.find('[perfect-tempTable-Warranty-' + val + '][type=hidden]').val('');
                $container.find('[perfect-tempTable-Warranty-' + val + '][type=text]').val('');
                $container.find('[perfect-tempTable-Warranty-' + val + '][type=number]').val('');
                $container.find('[perfect-tempTable-Warranty-' + val + '][type=checkbox]').prop('checked', false)

            }
            else {

                $container.find('[perfect-tempTable-Warranty-' + val + ']').each(function () {
                    let $this = $(this);
                    if (!hide.includes($this.attr('perfect-tempTable-Warranty-' + val))) {
                        if ($this.attr('type') == 'checkbox') {
                            rbody.append($('<td/>', { 'perfect-tempTable-Warranty-td-name': $this.attr('name') }).html($('<i/>', { class: ($this.is(':checked') ? "fa fa-check text-success" : "fa fa-times text-danger") })))
                        }
                        else {
                            rbody.append($('<td/>', { 'perfect-tempTable-Warranty-td-name': $this.attr('name') }).text($this.val()))
                        }
                    }
                    if ($this.attr('type') == 'checkbox') {
                        tempSave[$this.attr('name')] = $this.is(':checked');
                    } else {
                        tempSave[$this.attr('name')] = $this.val();
                    }
                });
                rbody.data({ 'pData': tempSave });
                $tbl.find('tbody').append(rbody.append($('<td/>', { class: "d-flex" }).append($('<a/>', { class: "btn btnPerfectGrid shadow btn-xs sharp mr-1", href: "#" }).html($('<i/>', { class: 'fa fa-trash btnPerfectGridDelete' }))
                    .click(function () {
                        if ($(this).closest('tbody').find('tr').length == 1) {
                            $(this).closest('[perfect-tempTable-Warranty="' + val + '"]').empty();
                            $container.find('.PerError').find(errorClass).text('');
                            $container.find('[perfect-tempTable-Warranty-' + val + '][type=text]').val('');
                            $container.find('[perfect-tempTable-Warranty-' + val + '][type=number]').val('');
                            $container.find('[perfect-tempTable-Warranty-' + val + '][type=hidden]').val('');
                            $container.find('[perfect-tempTable-Warranty-' + val + '][type=checkbox]').prop('checked', false)
                        } else {
                            $(this).closest('tr').remove();
                        }
                    }))));
                $container.find('[perfect-tempTable-Warranty-' + val + '][type=text]').val('');
                $container.find('[perfect-tempTable-Warranty-' + val + '][type=number]').val('');
                $container.find('[perfect-tempTable-Warranty-' + val + '][type=hidden]').val('');
                $container.find('[perfect-tempTable-Warranty-' + val + '][type=checkbox]').prop('checked', false)
            }
        }
    }
    function fn_createWarrantyTable(element, tkey, uniq) {

        debugger
        let $thisForm = $(element).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsproductWarranty;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';


        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="FK_WarrantyType"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_WarrantyType"]').val().length == null) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_WarrantyType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select the Warranty Type');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="FK_WarrantyType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }


        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProdWtySerDurType"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdWtySerDurType"]').val().length == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdWtySerDurPrd"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdWtySerDurPrd"]').val().length == null ) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdWtySerDurType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select the Service Period and Duration');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdWtySerDurType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }


        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProdWtyRepDurType"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdWtyRepDurType"]').val().length == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdWtyRepDurPrdU"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdWtyRepDurPrdU"]').val().length == null) {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdWtyRepDurType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select the Replacement Period and Duration');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdWtyRepDurType"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }





        //if ($thisForm.find('[perfect-tempTable-' + tableKey + '="ProdName"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdName"]').val().length == null) {
        //    isValid = false;
        //    let errorText = '';
        //    switch ($thisForm.find('[name = "lblProName"]').text()) {
        //        case "Product":
        //            errorText = 'Please select the product';
        //            break;
        //        case "Model":
        //            errorText = 'Please enter model';
        //            break;
        //        default:
        //            errorText = '';
        //            break;
        //    }

        //    $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdName"]').closest('[perfect-class="formGroup"]').find(errorClass).text(errorText);
        //}
        //else {
        //    $thisForm.find('[perfect-tempTable-' + tableKey + '="ProdName"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        //}

        //let prodQty = (isNaN($thisForm.find('[perfect-tempTable-' + tableKey + '="QpdQuantity"]').val()) ? 0 : $thisForm.find('[perfect-tempTable-' + tableKey + '="QpdQuantity"]').val())

        //if (parseFloat(prodQty) <= 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="QpdQuantity"]').val().length == 0) {
        //    isValid = false;
        //    $thisForm.find('[perfect-tempTable-' + tableKey + '="QpdQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter at least one quantity');
        //}
        //else {
        //    $thisForm.find('[perfect-tempTable-' + tableKey + '="QpdQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        //}

        //let prodPrice = (isNaN($thisForm.find('[perfect-tempTable-' + tableKey + '="QpdRate"]').val()) ? 0 : $thisForm.find('[perfect-tempTable-' + tableKey + '="QpdRate"]').val())

        //if (parseFloat(prodPrice) <= 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="QpdRate"]').val().length == 0) {
        //    isValid = false;
        //    $thisForm.find('[perfect-tempTable-' + tableKey + '="QpdRate"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please enter rate');
        //}
        //else {
        //    $thisForm.find('[perfect-tempTable-' + tableKey + '="QpdRate"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        //}

        if (unique.length > 0) {
            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }
                }
            });


            unique.forEach(function (key, i) {
                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                let headerEleName = $thisForm.find('[name="lblProName"]').text();
                let atname = $thisEle.attr('name');
                let cvalue;


                if ($thisEle.length != 0) {
                    let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    let errmessage = "Already exists"

                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();

                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else {
                        cvalue = $thisEle.val();
                    }

                    if (prevData.find(a => a[atname] == cvalue)) {
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });

        }
        if (isValid) {

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                if ($this.is('select')) {
                    switch (headerName) {
                        case "FK_WarrantyType":
                            headerName = "Warranty Type";
                            break;
                        case "ProdWtyRepDurType":
                            headerName = "Rep.Duration Type";
                            break;
                        case "ProdWtySerDurType":
                            headerName = "Ser.Duration Type";
                            break;
                        default:
                            break;
                    }
                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    insertData[nameAttr] = $this.val();

                    $this.val('').selectpicker('refresh');
                }
                else if ($this.is('input')) {

                    let inputType = $this.attr('type').toLocaleLowerCase();

                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp.isCheckType.push(nameAttr)
                        //clear field
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {
                        insertData[nameAttr] = $this.val();
                        $this.val('');

                    }

                    else {
                        insertData[nameAttr] = $this.val();

                        $this.val('');
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();

                    $this.val('');
                }
            });

            if (isNew) {
                if ($tblcontainer.find('table').length == 0) {
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsproductWarranty));
                }
                else {
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsproductWarranty);
                }
            }
            else {
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsproductWarranty);
            }

            $tblcontainer.attr('perfect-tempTable-action', 0);
        }
    }
    var tableOptionsproductWarranty= {
        iconButton: {
            buttons: [
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');

                        let indexname = tableKey + 'index';


                        let rindex = $(this).closest('tr').attr(indexname);

                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');

                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                        }
                        else {
                            $thistbl.remove();
                        }

                    }
                }

            ]
        },

        rowAttribute: [],
        renameHeader: { "FK_WarrantyType": "Warranty Type", "ProdWtyRepDurPrdU": "Replacement Period", "ProdWtyRepDurType_d": "", "ProdWtySerDurPrd": "Service Period", "ProdWtySerDurType_d": "" },
        hideColumn: [],
        serialNo: true,

    };

    function fn_createOpeningStockTable(element, tkey, uniq) {


        debugger
        let $thisForm = $(element).closest('[perfect-class="form"]');
        let tableKey = tkey;
        let $tblcontainer = $thisForm.find('[perfect-tempTable="' + tableKey + '"]');

        let insertData = {};
        let tableOptionsTemp = tableOptionsOpening;

        let unique = (uniq) ? uniq : [];

        let isValid = true;
        let errorClass = '.temptableError';


        let lastIndex = ($tblcontainer.attr('perfect-tempTable-lastindex')) ? parseInt($tblcontainer.attr('perfect-tempTable-lastindex')) : 0;
        let thisactionIndex = ($tblcontainer.attr('perfect-tempTable-action')) ? parseInt($tblcontainer.attr('perfect-tempTable-action')) : 0;
        let indexname = tkey + 'index';
        tableOptionsTemp.rowAttribute.push(indexname);
        tableOptionsTemp.hideColumn.push(indexname);
        let updateCond = '';
        let isNew = true;

        if (thisactionIndex > 0) {
            insertData[indexname] = thisactionIndex;
            updateCond = '[' + indexname + '="' + thisactionIndex + '"]';
            isNew = false;
        }
        else {
            insertData[indexname] = lastIndex + 1;
            $tblcontainer.attr('perfect-tempTable-lastindex', lastIndex + 1);
            isNew = true;
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="OpeningQuantity"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="OpeningQuantity"]').val().length == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="OpeningQuantity"]').val().length == '') {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="OpeningQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Opening Quantity');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="OpeningQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }


        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="OpeningStbyQuantity"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="OpeningStbyQuantity"]').val().length == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="OpeningStbyQuantity"]').val().length == '') {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="OpeningStbyQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please Enter Stand by Quantity');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="OpeningStbyQuantity"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }


        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="BranchID"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="BranchID"]').val().length == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="BranchID"]').val().length == '') {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="BranchID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select Branch');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="BranchID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }

        if ($thisForm.find('[perfect-tempTable-' + tableKey + '="DepartmentID"]').val().length == 0 || $thisForm.find('[perfect-tempTable-' + tableKey + '="DepartmentID"]').val().length == null || $thisForm.find('[perfect-tempTable-' + tableKey + '="DepartmentID"]').val().length == '') {
            isValid = false;

            $thisForm.find('[perfect-tempTable-' + tableKey + '="DepartmentID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('Please select Department');
        }
        else {
            $thisForm.find('[perfect-tempTable-' + tableKey + '="DepartmentID"]').closest('[perfect-class="formGroup"]').find(errorClass).text('');
        }



        if (unique.length > 0) {
            let prevData = [];
            $tblcontainer.find('table > tbody').find('tr').each(function () {
                if (isNew) {
                    prevData.push($(this).data('pData'));
                }
                else {
                    if (parseInt($(this).attr(indexname)) != thisactionIndex) {
                        prevData.push($(this).data('pData'));
                    }
                }
            });


            unique.forEach(function (key, i) {
                let $thisEle = $thisForm.find('[perfect-tempTable-' + tableKey + '="' + key + '"]');
                let headerEleName = $thisForm.find('[name="lblProName"]').text();
                let atname = $thisEle.attr('name');
                let cvalue;


                if ($thisEle.length != 0) {
                    let $errorElement = $thisEle.closest('[perfect-class="formGroup"]').find(errorClass);
                    let errmessage = "Already exists"

                    if ($thisEle.is('select')) {
                        cvalue = $thisEle.val();

                    }
                    else if ($thisEle.is('input')) {

                        let inputEleType = $thisEle.attr('type').toLocaleLowerCase();

                        if (inputEleType == 'checkbox') { cvalue = $thisEle.is(':checked'); }
                        else if (inputEleType == 'hidden') { cvalue = $thisEle.val(); }
                        else { cvalue = $thisEle.val(); }
                    }
                    else {
                        cvalue = $thisEle.val();
                    }

                    if (prevData.find(a => a[atname] == cvalue)) {
                        $errorElement.text(errmessage);
                        isValid = false;
                    }
                }
            });

        }
        if (isValid) {

            $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                let $this = $(this);
                let headerName = $this.attr('perfect-tempTable-' + tableKey);
                let nameAttr = $this.attr('name');
                if ($this.is('select')) {
                    switch (headerName) {
                        case "BranchID":
                            headerName = "Branch";
                            break;
                        case "DepartmentID":
                            headerName = "Department";
                            break;
                        default:
                            break;
                    }
                    tableOptionsTemp.renameHeader[nameAttr + '_d'] = headerName;
                    tableOptionsTemp.hideColumn.push(nameAttr)
                    if ($this.val() != null) {
                        let selectText = ($this.val().length == 0) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    else {
                        let selectText = ($this.val() == null) ? '' : $this.children(":selected").text();
                        insertData[nameAttr + '_d'] = selectText;
                    }
                    insertData[nameAttr] = $this.val();

                    $this.val('').selectpicker('refresh');
                }
                else if ($this.is('input')) {

                    let inputType = $this.attr('type').toLocaleLowerCase();

                    if (inputType == 'checkbox') {

                        insertData[nameAttr] = $this.is(':checked');

                        tableOptionsTemp.isCheckType.push(nameAttr)
                        //clear field
                        $this.prop('checked', false);

                    }
                    else if (inputType == 'hidden') {
                        insertData[nameAttr] = $this.val();
                        $this.val('');

                    }

                    else {
                        insertData[nameAttr] = $this.val();

                        $this.val('');
                    }
                }
                else {
                    insertData[nameAttr] = $this.val();

                    $this.val('');
                }
            });

            if (isNew) {
                if ($tblcontainer.find('table').length == 0) {
                    $tblcontainer.append(pft_table_createtable([insertData], tableOptionsOpening));
                }
                else {
                    let table = $tblcontainer.find('table').DataTable()
                    table.destroy()
                    pft_table_addTableRow($tblcontainer.find('table'), insertData, tableOptionsOpening);
                }
            }
            else {
                let table = $tblcontainer.find('table').DataTable()
                table.destroy()
                pft_table_replaceTableRow($tblcontainer.find('table'), updateCond, insertData, tableOptionsOpening);
            }

            $tblcontainer.attr('perfect-tempTable-action', 0);
        }



    }


    var tableOptionsOpening = {
        iconButton: {
            buttons: [
                {
                    icon: "fa fa-pencil btnPerfectGridEdit",
                    action: function () {
                        let savedData = $(this).closest('tr').data('pData')

                        let $tablecontainer = $(this).closest('[perfect-tempTable]');
                        let tableKey = $tablecontainer.attr('perfect-tempTable');
                        let $thisForm = $tablecontainer.closest('[perfect-class="form"]');

                        let indexname = tableKey + 'index';


                        let rindex = $(this).closest('tr').attr(indexname);

                        $tablecontainer.attr('perfect-tempTable-action', rindex);

                        $thisForm.find('[perfect-tempTable-' + tableKey + ']').each(function () {
                            let $thisNode = $(this);
                            let pf_name = $thisNode.attr('name');
                            if ($thisNode.is('select')) {

                                $thisNode.val(savedData[pf_name]).selectpicker('refresh');

                            }
                            else if ($thisNode.is('input')) {
                                let inputType = $thisNode.attr('type').toLocaleLowerCase();
                                if ($thisNode.attr('type').toLocaleLowerCase() == 'checkbox') {

                                    $thisNode.prop('checked', savedData[pf_name]);
                                }
                                else {
                                    $thisNode.val(savedData[pf_name]);
                                }
                            }
                            else {
                                $thisNode.val(savedData[pf_name]);
                            }
                        });
                    }
                },
                {
                    icon: "fa fa-trash btnPerfectGridDelete",
                    action: function () {
                        let $thistbl = $(this).closest('table');
                        let table = $thistbl.DataTable();
                        table.destroy();
                        if ($(this).closest('tbody').find('tr').length > 1) {
                            $(this).closest('tr').remove();
                            pft_table_slreset($thistbl);
                        }
                        else {
                            $thistbl.remove();
                        }

                    }
                }

            ]
        },

        rowAttribute: [],
        renameHeader: { "OpeningQuantity": "Opening Quantity", "OpeningStbyQuantity": "StandBy Quantity", "BranchID": "Branch", "DepartmentID": "Department"},
        hideColumn: [],
        serialNo: true,

    };


    $("#ProdAll").click(function () {
        debugger
        let $thisForm = $(this).closest('[perfect-class="form"]');
        if ($thisForm.find('[name="ProdAll"]').is(':Checked') == true) {
            $thisForm.find('[name="ProdSales"]').prop('checked', true);
            $thisForm.find('[name="ProdSalesReturn"]').prop('checked', true);
            $thisForm.find('[name="ProdPurchase"]').prop('checked', true);
            $thisForm.find('[name="ProdPurchaseReturn"]').prop('checked', true);
            $thisForm.find('[name="ProdStockTransfer"]').prop('checked', true);
            $thisForm.find('[name="ProdProductionIn"]').prop('checked', true);
            $thisForm.find('[name="ProdProductionOut"]').prop('checked', true);
            $thisForm.find('[name="ProdLead"]').prop('checked', true);
            $thisForm.find('[name="ProdProject"]').prop('checked', true);
        }
        else {
            $thisForm.find('[name="ProdSales"]').prop('checked', false);
            $thisForm.find('[name="ProdSalesReturn"]').prop('checked', false);
            $thisForm.find('[name="ProdPurchase"]').prop('checked', false);
            $thisForm.find('[name="ProdPurchaseReturn"]').prop('checked', false);
            $thisForm.find('[name="ProdStockTransfer"]').prop('checked', false);
            $thisForm.find('[name="ProdProductionIn"]').prop('checked', false);
            $thisForm.find('[name="ProdProductionOut"]').prop('checked', false);
            $thisForm.find('[name="ProdLead"]').prop('checked', false);
            $thisForm.find('[name="ProdProject"]').prop('checked', false);
        }

        //$('.selectall').attr('checked', this.checked);
    });
    function checkboxalluncheck(ele) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        if ($thisForm.find('[name="ProdSales"]').is(':Checked') == false || ($thisForm.find('[name="ProdSalesReturn"]').is(':Checked') == false) || $thisForm.find('[name="ProdPurchase"]').is(':Checked') == false
            || $thisForm.find('[name="ProdPurchaseReturn"]').is(':Checked') == false || $thisForm.find('[name="ProdStockTransfer"]').is(':Checked') == false || $thisForm.find('[name="ProdProductionIn"]').is(':Checked') == false
            || $thisForm.find('[name="ProdProductionOut"]').is(':Checked') == false || $thisForm.find('[name="ProdLead"]').is(':Checked') == false || $thisForm.find('[name="ProdProject"]').is(':Checked') == false) {


            $thisForm.find('[name="ProdAll"]').prop('checked', false);

        }
        else {
            $thisForm.find('[name="ProdAll"]').prop('checked', true);
        }
        }

    function CheckAmount(ele) {
        let $thisForm = $(ele).closest('[perfect-class="form"]');


        let upperlimit = $thisForm.find('[name="MaxAmount"]').val();
        let lowerlimit = $thisForm.find('[name="MinAmount"]').val();

        if (parseFloat(upperlimit) < parseFloat(lowerlimit)) {
            $thisForm.find('[name="MaxAmount"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('Min Price should be less than Max Price')
            return false
        }
        else {
            $thisForm.find('[name="MaxAmount"]').closest('[perfect-class="formGroup"]').find('.limit-check').text('')
            return true
        }


    }


    function departmentclearto(ele) {

        let $container = $(ele).closest('[perfect-class="form"]');
        $container.find('[name=DepartmentIDTo]').val('');
        $container.find('[name=DepartmentIDTo]').val('').selectpicker('refresh');

        $container.find('[name=EmployeeIDTo]').val('0');
        $container.find('[name=EmployeeNameTo]').val('');
    }
    function blockSpecialChars(e) {
        var k;
        document.all ? k = e.keyCode : k = e.which;
        return ((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8 || k == 32 || (k >= 48 && k <= 57) || k >= 96 && k <= 105);
    }
    function checkmrpsalesrate(ele, tkey) {

        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;


        let upperlimit = $thisForm.find('[perfect-tempTable-' + tableKey + '="MRP"]').val();
        let lowerlimit = $thisForm.find('[perfect-tempTable-' + tableKey + '="SalPrice"]').val();

        if (parseFloat(upperlimit) < parseFloat(lowerlimit)) {

            NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Sales Price Should be less than or Equal to MRP' });

            $thisForm.find('[name="SalPrice"]').val("0")

        }
        else {

            console.log('inside limit check else')

        }


    }

    function fn_bindDepBranch(ele, tkey) {
        debugger
        let $thisForm = $(ele).closest('[perfect-class="form"]');
        let tableKey = tkey;

        let opstock = $thisForm.find('[perfect-tempTable-' + tableKey + '="OpeningQuantity"]').val() == "" ? 0 : $thisForm.find('[perfect-tempTable-' + tableKey + '="OpeningQuantity"]').val() ;
        let ststock = $thisForm.find('[perfect-tempTable-' + tableKey + '="OpeningStbyQuantity"]').val() == "" ? 0 : $thisForm.find('[perfect-tempTable-' + tableKey + '="OpeningStbyQuantity"]').val();

        let dep = $thisForm.find('[perfect-tempTable-' + tableKey + '="DepartmentID"]').val();
        let branch = $thisForm.find('[perfect-tempTable-' + tableKey + '="BranchID"]').val();

        if (opstock > 0 || ststock > 0) {
            if (dep == "" || dep == 0) {

                NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Please select Department' });
                return false
            }
            else if (branch == "" || branch == 0) {
                NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Please select Branch' });
                return false
            }
            else {
                return true

            }

        }

        // This code is Commented for indora Release(Do not display mandatory fields and save directly )

       //else if (dep > 0 && branch > 0) {
       //     if (opstock == "" || opstock == 0) {
       //         NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Please Enter Opening Quantity or Stand By Quantity' });
       //         return false
       //     }
       //     else if (ststock == "" || ststock == 0) {
       //         NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Please Enter Stand Opening Quantity or By Quantity' });
       //         return false
       //     }
       //     else {
       //         return true
       //     }
       // }
        else {
            return true
        }
    }

    function generateShortName(ele) {

        let $form = $(ele).closest('[perfect-class="form"]');
        var fullName = $form.find('[name="ProdName"]').val();
        var shortName = generateShortNameFromFullName(fullName);
        $form.find('[name="ProdShortName"]').val(shortName);
    }

     



    function SearchMultipleUnit(ele,datas) {
        debugger
        console.log(datas, 'Munitwww');
        var count = datas.length;
        console.log(count, 'count');
        let $thisForm = $(ele).closest('[perfect-class="form"]');    
      

        let $menuDropdown = $thisForm.find('[name=FK_Unit]');//<--- Will give place select html element

        $menuDropdown.empty();
        //$menuDropdown.append($('<option/>', { "value": "" }).text("Please select")).selectpicker('refresh');

        let ID_Unit = $thisForm.find('[name=UnitID]').val() 
        let inputdata = {
            ID_Unit: ID_Unit
        }
        if (ID_Unit != '' ) {
        $.ajax({
            url: '@Url.Action("GetMultipleUnit", "Product")',
            type: "POST",
            data: { 'ID_Unit': $('[name="UnitID"]').val() },//<---- Input json : data passed to controller
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded;charset=utf-8',
            success: function (ajaxOutput) {
                debugger;

                
                if (ajaxOutput.Process.IsProcess) {
                    console.log(ajaxOutput.Data);

                    $.each(ajaxOutput.Data, function (key, value) {
                        $menuDropdown.append($('<option/>', { "value": value.FK_Unit }).text(value.UnitName)).selectpicker('refresh')
                    });

                    if ($menuDropdown.attr('perfect-onloadSelect')) {
                        $menuDropdown.val($menuDropdown.attr('perfect-onloadSelect')).selectpicker('refresh');
                      
                    }
                   
                }

                else {
                    $.each(ajaxOutput.Process.Message, function (key, value) {

                        NotificationMessage({ 'type': 'warning', 'heading': 'warning', 'message': 'Multiple Unit not found' });
                    });
                }

            },
            complete: function () {

            }
            });

           
        }
        else {
            NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Please Select Master Unit' });
        }

    }
    function GetUnitWise(ele,data) {
        debugger
        if (ele != 1) {
            let $thisForm = $('[perfect-class="form"]');
            let ID_Unit = $thisForm.find('[name=UnitID]').val()
            if (ID_Unit == '' || ID_Unit == '0') {
                NotificationMessage({ 'type': 'error', 'heading': 'info', 'message': 'Please Select Master Unit' });
            }
        }
        
        
    }
</script>
