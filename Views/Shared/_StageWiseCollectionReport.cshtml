@model PerfectWebERP.Models.StageWiseCollectionReportModel.StageWiseCollectionReportView

<style>

    .tableFixHead {
        overflow: auto;
        height: 550px;
    }

        .tableFixHead thead tr {
            position: sticky;
            top: 0;
            z-index: 1;
        }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    .btn-export {
        /*//height:10px;*/
        background-color: #2aa2ad;
        color: white;
    }

    .div-export {
        float: right;
        margin-left: 3px;
        /*background-color:red;*/
        height: 41px;
        /*// width:90px;*/
    }

        .div-export:hover {
            color: white !important;
        }

    .btn-export :hover {
        color: white !important;
    }
</style>

<div class="card ">


    <div class="card-header">
        <div class="col-xl-4">
            <h4 class="card-title col-12">Stage Wise Collection</h4>
        </div>
        <div class="col-xl-4 text-right">
            <button id="refreshLeadMgt" type="button" class="btn  btn-primary btn-sm" name="Search" perfect-css="button" onclick="StageWisereportInitialLoadAddForm()" title="To Refresh"><i class="fa fa-refresh"></i></button>
            <button id="addcompany-jq-addnewuser" type="button" class="btn  btn-primary btn-sm" name="Search" perfect-css="button" onclick="fn_showFilter()" title="To Filter"><i class="fa fa-filter"></i></button>
            <div class="dropdown div-export" id="exppdf" style="display:none">

                <button class="btn  dropdown-toggle btn-sm btn-export" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span><i class="fa fa-file-o" style="font-size:16px"></i> </span>

                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item" href="#" onclick="generatePdf()">PDF</a>
                    <a class="dropdown-item" href="#" onclick="onExell()">EXCEL </a>

                </div>
            </div>
        </div>
    </div>

    <div class="card-body jq_leadgeneration_body " style="min-height:250px">
        <form id="" class="form-valide" perfect-class="form" action="#" method="post" perfect-onFormSuccess="">
            <div class="leadformSesction">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">As On Date</span>
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-8">
                                <input type="date" class="form-control perfectValidate_date" name="AsOnDate" perfect-class="formGroupControl" perfect-ctype="date" perfect-css="date" max="2050-01-01" />
                                <div class="invalid-feedback animated fadeInUp limit-check" style="display: block;"></div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label name="lblProject" class="col-sm-4 col-form-label">Project&nbsp;</label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="date" name="ProjectDate" class="form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" hidden />
                                    <input type="text" class="form-control form-control " name="ProjectName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input" readonly />
                                    <input type="hidden" name="ProjectID" class="form-control form-control" perfect-class="formGroupControl" perfect-ctype="hidden" perfect-css="input" />
                                    <div class="input-group-append">
                                        <button id="addcountry-jq-searchButton3" class="btn btn-primary fa fa-search" type="button" onclick="GetCmnPopUpSearchValAssign(this, 41, 'Project Details',[],['ProjectDate'])" BindName="ProjectName" BindVal="ProjectID" Function="3" perfect-css="button"></button>
                                    </div>
                                </div>
                                <div class="text-danger temptableError"></div>
                            </div>
                        </div>
                    </div>



                    <div class="col-sm-4">
                        <div class="form-group row" perfect-class="formGroup">
                            <label class="col-sm-4 col-form-label">
                                <span perfect-class="formGroupLabel">Category</span>
                            </label>
                            <div class="col-sm-8">
                                <select class="form-control " name="FK_Category" perfect-selectButtonAction="testing" perfect-class="formGroupControl" onchange="Getvalue(this)" perfect-ctype="select" perfect-css="select">
                                    <option value="">Please Select</option>
                                    @*<option value="1">Inventory</option>*@

                                    @if (!(Model.CategoryList is null))
                                    {
                                        foreach (var cat in Model.CategoryList)
                                        {
                                            <option value="@cat.CategoryID">@cat.CategoryName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>




                </div>
                <div class="card-footer text-right" perfect-class="formFooter">
                    <button id="addcompany-jq-addnewuser" type="button" class="btn btn-primary mr-3 " name="add" perfect-css="button" onclick="geteqReport(this) "><i class="fa fa-refresh fa-spin loaderClass "></i>Show</button>
                    <button type="button" class="btn btn-light" perfect-css="button" onclick="ResetButton(this);" name="reset">Clear</button>

                </div>
            </div>

            <div class="">
                <button type="button" class="btn btn-nt" id="exppdf" style="display:none;" float:left; onclick="generatePdf(this)" title="Download PDF"><i class="fa fa-file-pdf-o" aria-hidden="true" style="font-size:28px"></i></button>
            </div>







            <div class="table-responsive tableFixHead">
                <table id="StagewiseList" class="table table-hover table-striped text-black" style="width:100%">
                    <thead class="thead-primary">
                        <tr>
                            <th>Sl No</th>
                            <th>Project</th>
                            <th>Final Amount</th>
                            <th>Current Stage</th>
                            <th>Start Date</th>
                            <th>Due Date</th>
                            <th>Completion Date</th>
                            <th>Target Amount</th>
                            <th>Collection Amount</th>
                            <th>Due Amount</th>
                            <th>Due Days</th>




                        </tr>
                    </thead>

                </table>


            </div>

        </form>
    </div>
</div>

<script src="~/Scripts/exportFile.js"></script>
<script src="~/Scripts/jspdf.min.js"></script>
<script src="~/Scripts/jspdf.plugin.autotable.min.js"></script>
<script src="~/Scripts/xlsx.min.js"></script>



<script src="~/Scripts/jqDOM/searchDOMCreation.js"></script>

<script>

    (function () {

        jQuery('select').selectpicker();
    })();


    $(document).ready(function () {

        initFunctions('form');



    });


     function ResetButton(ele) {
            StageWiseinitialLoad();
        }

    var itemdata = 0;
    var tableData;

   function geteqReport(ele) {



        let $tbody;


        let $thisForm = $(ele).closest('[perfect-class="form"]');

      //  $("#StagewiseList tr").remove();



        if ($thisForm.valid()) {

            var table = $('#StagewiseList').DataTable({ searching: false, destroy: true, paging: false, ordering: false, info: false });
            table.clear().draw();

            //if (datenchecklogdate(ele)) {

                var obj = {
                    //TransMode: EQSTransMode,
                    AsOnDate: $thisForm.find('[name="AsOnDate"]').val(),
                    FK_Project: $thisForm.find('[name="ProjectID"]').val(),
                    FK_Category: $thisForm.find('[name="FK_Category"]').val(),


                }

                $.ajax({
                    url: "@Url.Action("GetStageWiseReportList", "StageWiseCollectionReport")",
                    type: "POST",
                    data: JSON.stringify(obj),
                    dataType: "json",
                    contentType: "application/json",
                    success: function (dataOut) {


                        console.log(dataOut,"--dataOut--")
                        itemdata = dataOut.data.Data;
                        if (itemdata == null || itemdata == "") {

                                let x = document.getElementById("exppdf");
                                x.style.display = "none";



                            } else {

                                let x = document.getElementById("exppdf");
                                x.style.display = "block";
                            }
                       // $("#StagewiseList").empty();

                        if (dataOut.data.Process.IsProcess) {




                            if (itemdata != null) {


                                 tableData = $('#StagewiseList').DataTable({

                                    pagination: "bootstrap",
                                    filter: true,
                                    data: dataOut.data.Data,
                                    destroy: true,
                                    paging: false,
                                    info: false,
                                    searching: false,
                                    "columns": [
                                        { "data": null },
                                        { "data": "ProjectName" },
                                        { "data": "ProjectFinalAmount" },
                                        { "data": "CurrentStage" },
                                        { "data": "ProjectStageStartDate" },
                                        { "data": "ProjectStageDueDate" },
                                        { "data": "ProjectCurrentStageCompleteDate" },
                                        { "data": "ProjectTargetAmount", className: "text-right" },
                                        { "data": "ProjectCollectionAmount", className: "text-right" },
                                        { "data": "ProjectDueAmount", className: "text-right" },
                                        { "data": "DueDays" },



                                    ],
                                      //scrollY: 550,
                                      //scrollX: true,
                                    scrollCollapse: true,
                                    paging: false,
                                    fixedHeader: {
                                        header: true,
                                        //footer: true
                                    },
                                    //"order": [[11, "asc"]],
                                    "columnDefs": [
                                        { "orderable": false, "targets": [0, 1, 2, 3, 4, 5, 6, 7,8,9] }

                                        //{ "visible": false, "targets": 0 }
                                    ],


                                    "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                                        $("td:first", nRow).html(iDisplayIndex + 1);
                                        return nRow;
                                    },


                                });

                            }
                            else {


                                //$('#StagewiseList').dataTable({ searching: false, paging: false, ordering: false, info: false });

                            }

                        }
                        else {

                        }


                    },
                    complete: function () {
                    }
                });
                fn_showFilter();
            //} else {
            //    $(ele).prop('disabled', false);
            //    NotificationMessage({ 'type': 'error', 'heading': 'Warning', 'message': 'To Date should be greater than  From Date '})
            //}
        }
    }
    var selectedValue;
    var selectedCategory
    function Getvalue(ele) {

         selectedValue = $('[name="FK_Category"]').val(); // Get the selected category ID
         selectedCategory = $('[value="' + selectedValue + '"]').text(); // Get the text of the selected option
    }




   function generatePdf(ele) {
        var cdata;
         let $thisForm = $(ele).closest('[perfect-class="form"]');

        let $container = $(ele).closest('[perfect-class="form"]');
        const obj = {


            "As On Date": $('input[name=AsOnDate]').val() === "" ? $('input[name=AsOnDate]').val() : changeDateFormat($('input[name=AsOnDate]').val()),
            "Project Name": $('input[name="ProjectName"]').val(),
            "Category": $('select[name="FK_Category"] option:selected').text(),

        };
        const obj2 = {
            //"From ": $('input[name="FromDate"]').val(),
            //"To": $('input[name="ToDate"]').val()
        }



        console.log(obj, '--obj--');
        console.log(obj2, '--obj2--');


        var str = "";
         var str2 = "";
         var num = 1;

        for (var i in obj) {
            if (obj[i] != "" && obj[i].toUpperCase() != "PLEASE SELECT" && obj[i] != 0) {

                if (num == 1) {
                    str+="Filter By : "
                }
                str = str + i + ' : ' + obj[i] + ' , ';
                num++;
            }

        };
        for (var i in obj2) {
            if (obj2[i] != "" && obj2[i] != undefined) {

                str2 = str2 + i + ' : ' + changeDateFormat(obj2[i]) + ' , ';
            }

        };


        var upperhead = {


            columnStyles: { 0: { halign: 'left', textColor: "black", fontSize: 14, fillColor: false, } },
            columnStyles: { 0: { halign: 'left', textColor: "black", fontSize: 11, fillColor: false, } },

            body: [

                [

                    '  '  + '   ' + str2


                    //'\n' +


                ],
                [
                    str
                ]



            ],
            theme: 'plain',
            styles: {
                // fillColor: '#3366ff',
                color: 'black'
            },
            didDrawCell: function (data) {
                data.cell.styles.lineHeight = 0.8; // Adjust the line height value to your preference
            }


        };




         $.ajax({
              url: '@Url.Action("GetCompanyDetails", "Home")',
              type: "GET",
              dataType: "json",
              contentType: "application/x-www-form-urlencoded;charset=utf-8",
                 success: function (ajaxOutput) {


                     cdata = ajaxOutput;



                     var head = [];
                     var ptableData = {};
                     debugger;
                     console.log(itemdata, '<<itemdata>>')

                     //itemdata.forEach((i) => {

                     //    var a = i.AssignedDate.split('T')[0];

                     //    i['AssignedDate'] = changeDateFormat(a);
                     //})

                     head = [['Sl No', 'Project', 'Final Amount', 'Current Stage', 'Start Date', 'Due Date', 'Complete Date', 'Target Amount', 'Collection Amount', 'Due Amount', 'Due Days']];
                         ptableData = {
                             columns: [
                                 //{ title: "SLNo", dataKey: "SLNo" },
                                 { title: "Project", dataKey: "ProjectName" },
                                 { title: "Final Amount", dataKey: "ProjectFinalAmount" },
                                 { title: "Current Stage", dataKey: "CurrentStage" },
                                 { title: "Start Date", dataKey: "ProjectStageStartDate" },
                                 { title: "Due Date", dataKey: "ProjectStageDueDate" },
                                 { title: "Complete Date", dataKey: "ProjectCurrentStageCompleteDate" },
                                 { title: "Target Amount", dataKey: "ProjectTargetAmount" },
                                 { title: "Collection Amount", dataKey: "ProjectCollectionAmount" },
                                 { title: "Due Amount", dataKey: "ProjectDueAmount" },
                                 { title: "Due Days", dataKey: "DueDays" },

                             ],
                             rows: itemdata

                         };






                     console.log(ptableData, 'ptableData---0))0')

                     exportPdf("Stage Wise Collection Report", head, cdata, upperhead, "", ptableData, "", "", "a4", "", "", "l");

                },
             complete: function () {






                }
         });
    }

     function onExell() {


        var cdata;       
        

        const obj = {



           

            "As On Date": $('input[name=AsOnDate]').val() === "" ? $('input[name=AsOnDate]').val() : changeDateFormat($('input[name=AsOnDate]').val()),
            "Project Name": $('input[name="ProjectName"]').val(),
            "Category": $('select[name="FK_Category"] option:selected').text(),

        };
        const obj2 = {
           
        }



        console.log(obj, '--obj--');
        console.log(obj2, '--obj2--');


        var str = "";
        var str2 = "";
        var num = 1;

        for (var i in obj) {
            if (obj[i] != "" && obj[i].toUpperCase() != "PLEASE SELECT" && obj[i] != 0) {

                if (num == 1) {
                    str += "Filter By : "
                }
                str = str + i + ' : ' + obj[i] + ' , ';
                num++;
            }

        };
        for (var i in obj2) {
            if (obj2[i] != "" && obj2[i] != undefined) {

                str2 = str2 + i + ' : ' + changeDateFormat(obj2[i]) + ' , ';
            }

        };

        $.ajax({
            url: '@Url.Action("GetCompanyDetails", "Home")',
            type: "GET",
            dataType: "json",
            contentType: "application/x-www-form-urlencoded;charset=utf-8",
            success: function (ajaxOutput) {


                cdata = ajaxOutput;

            },
            complete: function () {
                console.log(cdata, "---cdata----");


               
                    head = [['Sl No', 'Project', 'Final Amount', 'Current Stage', 'Start Date', 'Due Date', 'Complete Date', 'Target Amount', 'Collection Amount', 'Due Amount', 'Due Days']];
                    ptableData = {
                        columns: [
                            //{ title: "SLNo", dataKey: "SLNo" },
                            { title: "Project", dataKey: "ProjectName" },
                            { title: "Final Amount", dataKey: "ProjectFinalAmount" },
                            { title: "Current Stage", dataKey: "CurrentStage" },
                            { title: "Start Date", dataKey: "ProjectStageStartDate" },
                            { title: "Due Date", dataKey: "ProjectStageDueDate" },
                            { title: "Complete Date", dataKey: "ProjectCurrentStageCompleteDate" },
                            { title: "Target Amount", dataKey: "ProjectTargetAmount" },
                            { title: "Collection Amount", dataKey: "ProjectCollectionAmount" },
                            { title: "Due Amount", dataKey: "ProjectDueAmount" },
                            { title: "Due Days", dataKey: "DueDays" },

                        ],
                   
                        rows: itemdata

                    };
               
                
              

                ReportName = `${cdata.Company} \n${cdata.Branch} \n Stage Wise Collection Report \n ${str2} \n ${str} `
                generateExell(ReportName, head, ptableData, {}, "", 'str');

            }
        });

    }





    $("#exppdf").tooltip({ trigger: 'hover' });





    function changeDateFormat(date) {
        /*var date = '2023-06-05';*/

        // Split the date into year, month, and day components
        var dateComponents = date.split('-');

        // Rearrange the components to form the desired format
        var formattedDate = dateComponents[2] + '/' + dateComponents[1] + '/' + dateComponents[0];

        console.log(formattedDate); // Output: 05/06/23
        return formattedDate;
    }
    function exportbuttonhide() {
        document.querySelector('#exppdf').style.display = 'none';
        console.log('Input value changed:');
    }

    var inputElements = document.getElementsByClassName('exptbttontoogle');
    for (var i = 0; i < inputElements.length; i++) {
        inputElements[i].addEventListener('change', function (event) {
            // Handle the change event here
            // var inputValue = event.target.value;
            document.querySelector('#exppdf').style.display = 'none';
            console.log('Input value changed:');
        });
    }
    function getfunction() {
        document.querySelector('#exppdf').style.display = 'none';
    }











</script>