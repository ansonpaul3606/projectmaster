
@{
    ViewBag.Title = "Warranty Type";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid">

    <div class="row">
        <div class="col-lg-12" id="Warranty-sample-form">

        </div>
    </div>


</div>
@section scripts{

    <script>
       // const $formContainer = $('#Warranty-sample-form');
        var WarrantyTypeTransMode = "";

        var tableOptions = {
            dropdown: {
                buttons: [

                 @if (ViewBag.PagedAccessRights.UsrrlTyView) {
        <text> {
                        displayName: "View", action: editWarranty },
 </text>
    }

                    { type: "divider" },
     @if (ViewBag.PagedAccessRights.UsrrlTyDel)
             {
                 <text> { displayName: "Delete", action: deleteWarranty },</text>

              }

                    
                ],
                class: "btn btn-success light sharp"
            },
            onlyShowColumn: ["WarrantyName", "ShortName"],
            hideColumn: ['IsExtended'],
            rowClickAction: editWarranty,
            renameHeader: { "SlNo": "Sl No.", "WarrantyName": "Name"},
            serialNo: true,
        };
        var validationMessage = {
            'WarrantyName': {
                'required': 'Please Enter  Name',
                'stringonly': 'Invalid Warranty Name selected',

            },
            'WarrantyShortName': {
                'required': 'Please Enter  Short Name',
                'alphanumeric': 'Invalid Warranty Short Name selected',

            },
        }


        function Innitialwarrantyform() {
            
            getSessionValue("96pTMpE8P4G2Y5G69anO+fXrp0wBcAD1M/Tg8snFaE0=", function (result) {
                WarrantyTypeTransMode = result;

               @if (ViewBag.PagedAccessRights.UsrrlTyView)
              {
                 <text>    LoadWarrantyTypeList(this); </text>
              }
            });
            loadwarrantyTypeForm();
        }



        $(document).ready(function () {
            //fn_warranty_initialLoad();
            Innitialwarrantyform() 

        });

   
        function loadwarrantyTypeForm() {
            $('#Warranty-sample-form').load("@Url.Action("LoadWarrantyForm", "WarrantyType")", function () {
                let $thisForm = $(this).find('[perfect-class="form"]');
                $thisForm.validate({
                    // ...
                    messages: validationMessage
                    // ...
                });
                $thisForm.attr('perfect-onFormSuccess', 'Innitialwarrantyform');
            });
            
  

        }

        function LoadWarrantyTypeList(ele) {
           // debugger;
            let $sidemenu = $sideMenuOptions.body;
            let $thisForm = $(ele).closest('.testSearchBox');
            let SearchName = $thisForm.find('input').val();
            $sideMenuOptions.title.find('h4').text('Warranty Type List');
          
     let pageUrl = '@Url.Action("GetWarrantyList", "WarrantyType")';
            $.ajax({
                url: pageUrl,
                type: "POST",
                data: { pageSize: 15, pageIndex: 0, Name: SearchName, TransMode: WarrantyTypeTransMode },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (ajaxOutput) {


                    if (ajaxOutput.Process.IsProcess) {
                        console.log('WarrantyType', ajaxOutput);
                        $sidemenu.find('.jq_sidemenu_title').text("WarrantyType");

                        $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2 position-relative"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="LoadWarrantyTypeList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))

                        let $table = $sidemenu.find('table');
                        $table.dataTable({
                            "serverSide": true,
                            "processing": true,
                            "lengthMenu": [10, 15, 20, 25, 50, 100],
                            "searching": false,
                            "ordering": false,
                            "deferLoading": ajaxOutput.totalrecord,
                            "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,
                            "pageLength": ajaxOutput.pageSize,
                            "recordsFiltered": ajaxOutput.pageSize,
                            "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize, searchkey: SearchName, TransMode: WarrantyTypeTransMode }, tableOptions, $table)
                        });

                    }
                    else {
                        if (ajaxOutput.Process.Status = "NoData") {

                            $sidemenu.find('.jq_sidemenu_title').text("WarrantyType");

                            $sidemenu.empty().append('<div class="d-flex justify-content-end mb-2"><div class="col-md-6 position-absolute top-1 z-index"> <div class="input-group testSearchBox"><input type="text" class="form-control " name="SearchName" perfect-class="formGroupControl" perfect-ctype="input" perfect-css="input"  /><div class="input-group-append"><button id="addcountry-jq-searchButton6" class="btn btn-primary fa fa-search" type="button" perfect-css="button" onclick="LoadWarrantyTypeList(this)"></button></div></div></div></div>', $('<div/>', { class: "col-md-12 table_temp_class" }).html(pft_table_createtable(ajaxOutput.Data, tableOptions)))

                            let $table = $sidemenu.find('table');
                            $table.dataTable({
                                "serverSide": true,
                                "processing": true,
                                "lengthMenu": [],
                                "searching": false,
                                "ordering": false,
                                "deferLoading": ajaxOutput.totalrecord,
                                "displayStart": ajaxOutput.pageIndex * ajaxOutput.pageSize,
                                "pageLength": ajaxOutput.pageSize,
                                "recordsFiltered": ajaxOutput.pageSize,

                                "ajax": returnajaxPagination({ apiurl: pageUrl, pageSize: ajaxOutput.pageSize }, tableOptions, $table)
                            });
                        }
                        else {
                            $.each(ajaxOutput.Process.Message, function (key, value) {
                                NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                            });
                        }
                    }
                },
                complete: function () {

                }
            });
        }

        function returnajaxPagination(ajaxInfo, tableOptions, tableid) {

            return {
                url: ajaxInfo.apiurl,
                type: "post",
                data: function () {
                    var info = tableid.DataTable().page.info();
                    console.log('RETURN AJAX', info)

                    let input = { pageSize: info.length, pageIndex: info.page, TransMode: WarrantyTypeTransMode };
                    if (ajaxInfo.searchkey) {
                        input["Name"] = ajaxInfo.searchkey;
                    }
                    return input
                },
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (dtajaxOutput) {

                    let table = tableid.DataTable();
                    table.destroy();
                    pft_table_newTableBody(tableid, dtajaxOutput.Data, tableOptions);

                    tableid.dataTable({
                        "serverSide": true,
                        "processing": true,
                        "lengthMenu": [10, 15, 20, 25, 50, 100],
                        "searching": false,
                        "ordering": false,
                        "deferLoading": dtajaxOutput.totalrecord,
                        "displayStart": dtajaxOutput.pageIndex * dtajaxOutput.pageSize,
                        "pageLength": dtajaxOutput.pageSize,
                        "recordsFiltered": dtajaxOutput.pageSize,
                        "ajax": returnajaxPagination(ajaxInfo, tableOptions, tableid)
                    })

                },

            }
        }
         function editWarranty() {
             debugger;
            let $thisUser = $(this).closest('tr');
            console.log($thisUser.data());
             let savedData = $thisUser.data('pData');

             $('.dataTable tr').removeClass("SelectForDelete");
             $(this).closest('tr').addClass('SelectForDelete');

             let inputData = { WarrantyTypeID: savedData.WarrantyTypeID };
            //dbcall
             $('#Warranty-sample-form').empty();
                    $.ajax({
                 url: '@Url.Action("GetWarrantyTypeInfo", "WarrantyType")',//<----- Controller URL : url path in our controller eq: /Home/InsertSampleData or http://localhost:64212/Home/InsertSampleData
                type: "POST",
                 // headers: { "token_key": "1234" },
                 data: JSON.stringify(inputData),//<---- Input json : data passed to controller
                dataType: "json",
                contentType: "application/json",
                        success: function (ajaxOutput) {//<----- if ajax method executed succesfully,  we get the data passed from controller in this variable  => success: function (variable) {

                         


                            $('#Warranty-sample-form').load("@Url.Action("LoadWarrantyForm", "WarrantyType")", function () {
                                $(this).find('[perfect-class=formTitle]').text('update : ' + ajaxOutput.Data[0].WarrantyName)
                                console.log('Inside load');
                                let $thisForm = $(this).find('[perfect-class="form"]');

                                $thisForm.data({ 'pData': ajaxOutput.Data[0] });//setting pdata : which is used to get PostID when updating the  form in partial page
 

                                $thisForm.find('[name=WarrantyName]').val(ajaxOutput.Data[0].WarrantyName),
                                    $thisForm.find('[name=WarrantyShortName]').val(ajaxOutput.Data[0].ShortName),
                                    $thisForm.find('[name=SortOrder]').val(ajaxOutput.Data[0].SortOrder)
                              // $thisForm.find('[name=IsExtended]').val(ajaxOutput.Data[0].IsExtended)
                                if (ajaxOutput.Data[0].IsExtended == true) {
                                    $thisForm.find('[name=IsExtended]').prop("checked", true);
                                }

                                //show update button
                                $thisForm.find('button[name=add]').addClass('d-none');
                                $thisForm.find('button[name=update]').removeClass('d-none');


                                $sideMenuOptions.close();

                            });
                        
                },


            });

        }


        function deleteWarranty() {
            let $row = $(this).closest('tr');

            let Saveddata = $row.data('pData');

            $('.dataTable tr').removeClass("SelectForDelete");
            $(this).closest('tr').addClass('SelectForDelete');

               $.ajax({
                   url: "@Url.Action("GetCustomerReasonList", "Customer")",
                   type: "GET",
                   contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                   success: function (ajaxReasonOutput) {
                       if (ajaxReasonOutput.Process.IsProcess) {

                          //old delete section


                           let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove " + Saveddata.WarrantyName + " ?", cancel: "No", confirm: "Yes", reason: ajaxReasonOutput.Data };
                            var res = ConfirmDialog(confirmationDialogBoxOption);
                            res.then(function (ret) {
                                if (ret) {

                                    let inputData = {
                                        __RequestVerificationToken: $('[name="__RequestVerificationToken"]').val(), //antiforgery token
                                        WarrantyTypeID: Saveddata.WarrantyTypeID,
                                        ReasonID: ret
                                    };

                                    $.ajax({
                                        url: "@Url.Action("DeleteWarrantytype", "WarrantyType")",
                                        type: "POST",
                                        data: inputData, //antiforgery token removed json.stringify
                                        contentType: "application/x-www-form-urlencoded; charset=utf-8",//antiforgery token changed json->x-www-form-urlencode...
                                        success: function (data) {

                                            if (data.Process.IsProcess) {
                                                let table = $row.closest('table').DataTable()
                                                table.row($row).remove().draw();
                                                loadwarrantyTypeForm();
                                                Innitialwarrantyform() 
                                                $.each(data.Process.Message, function (key, value) {
                                                    //toastr.success(value, "Success");
                                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': 'Deleted Successfully' });
                                                });
                                                $('.dataTable tr').removeClass("SelectForDelete");
                                            }
                                            else {
                                                $.each(data.Process.Message, function (key, value) {
                                                    // toastr.warning(value, "Error");
                                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                                    $('.dataTable tr').removeClass("SelectForDelete");
                                                });
                                            }
                                            //row.remove();
                                            //$(row).closest('table').reload()
                                            
                           
                                        }
                                    });
                                }
                                else {
                                    //toastr.warning("Clicked no in comfirmation box", "Confirmation Box in table");
                                    NotificationMessage({ 'message': 'No option selected' });
                                }
                            });

                           //old delete section

                    }
                }

            });




        };













        @*function deleteWarranty() {
            let $row = $(this).closest('tr');

            let Saveddata = $row.data('pData');
          
              let inputData = {
                  WarrantyTypeID: Saveddata.WarrantyTypeID,
                  
                  
            };
            console.log("Saved data", inputData);
              let confirmationDialogBoxOption = { heading: "Are you Sure?", body: "Do you want to remove " + Saveddata.WarrantyName + " ?", cancel: "No", confirm: "Yes" };
            var res = ConfirmDialog(confirmationDialogBoxOption);



           res.then(function (ret) {
                if (ret) {
                   // toastr.success("Clicked yes in the comfirmation box", "Confirmation Box in table");
                
                    $.ajax({
                        url: "@Url.Action("DeleteWarrantytype", "WarrantyType")",
                        type: "POST",
                        // headers: { "token_key": "1234" },
                        data: JSON.stringify(inputData),
                        // dataType: "json",
                        contentType: "application/json",
                        success: function (data) {

                            if (data.Process.IsProcess) {

                                $.each(data.Process.Message, function (key, value) {
                                    //toastr.success(value, "Success");
                                    NotificationMessage({ 'type': 'success', 'heading': 'Success', 'message': value });
                                    loadPostList();
                                    loadwarrantyTypeForm();
                                   
                                    
                                    
         
                                });
                            }
                            else {
                                $.each(data.Process.Message, function (key, value) {
                                   // toastr.warning(value, "Error");
                                    NotificationMessage({ 'type': 'error', 'heading': 'Error', 'message': value });
                                });
                            }
                            //row.remove();
                            //$(row).closest('table').reload()
                            
                        }
                    });


                }
                else {
                    //toastr.warning("Clicked no in comfirmation box", "Confirmation Box in table");
                    NotificationMessage({ 'message': 'No option selected' });
                }

            });
        };*@
        












  
          




    </script>

}